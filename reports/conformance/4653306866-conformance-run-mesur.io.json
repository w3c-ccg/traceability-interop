{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02585321-26cd-4cd1-80f7-c70972748eee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e4df5d39-5a76-4ef0-b5a2-5578a70ff1ef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cc69e11-127d-4acc-9f98-6677f6ab7255",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c47defa-292b-4626-b777-a3e71e1a3690"
                }
              }
            ]
          },
          {
            "id": "7f929e7d-80a1-455e-9487-faebb5ebcb3d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1de5395-87f3-4c0d-9ad9-2d03de26b5b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4cec3151-9bb5-4a71-8289-1dee44f265dd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "91d58437-def9-47aa-b94c-75e6a6fca4cc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "53281d72-0e13-44da-a874-8552af52711e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "635a59d4-4d87-4350-893b-43f898143e2c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95aa5571-9bc3-4dbd-8044-1f2024c2b1d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3c8d307-9488-4fb9-85c4-e1ed480c39d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1acff79-d3ee-4983-898f-2e19f503a49b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53843685-1d47-4ea6-ac83-790eefe50411"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "353142aa-d137-4388-82e2-64a6f623f21d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fcc49294-3365-460e-800d-2aabcb17ea78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e03a5fce-3f92-46da-98e8-b8f3d66bc591",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a07d97ab-e1fb-472a-b888-b68ac3994703"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2deec5e6-1595-418c-aeca-4c710b4948b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b083934a-c10c-4086-af51-f567b1f48e7f"
            }
          }
        ]
      },
      {
        "id": "0a00cc01-337c-44c8-9674-a72921b6bccb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "de9f149a-daff-4913-adaa-586e4c005742",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0df171fe-8271-482b-830f-e55373c63f1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da561b51-ce95-427b-b442-c4850d6fdfd4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451b793-10aa-4b13-89c3-fb3ccddd050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83531dde-5d5f-40d3-8577-e6e44a5998f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22bf356-bd91-46f6-b8e8-7865b324b489",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737aec49-bf31-4e64-a4dd-10f3c09df38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13de75b8-3ee2-4130-9d50-31859b177c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc23675-eca3-4da7-9d73-e3a1b930c6b6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a71eee-da2f-43ac-8088-09ab202178ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2cc38fd-c1fc-4c62-9339-26e53cf32b7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7dcce765-9c34-4f73-83ee-e31c82ed8244",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d60e6d91-a66a-49d2-a0fc-8477436e72e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9bad43-7b4b-4d3e-9b0b-0426ef5a2268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8f092b1-f283-4446-83b1-84a8591a7cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680a3620-3849-40ec-af86-4338ac9180fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0203d9ec-eda2-4dbf-8cec-6e0463877646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd01549-b9f4-4c2d-a306-0c7f2c34ae2f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c7bc2d-9d63-40e8-8a55-1cfdf98c464f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "022207f7-558f-4dfa-b875-dd7c67697510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd3368-2fe2-4de2-b4b7-2f7255712456",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3077cc68-a4af-4b01-ae17-0124e60e5960"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "065bedec-eca4-4d81-9206-8b4950752ffb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6234a4b7-1455-4da2-828c-33043a019410",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f917fca7-4b34-4ca5-b32a-e57cd7187019",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f9587e75-57e8-4c15-9715-b8a690498b0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c509f3-243c-497d-8ae8-ef61e5963916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8996c8b3-b32e-4721-8c63-67e477d30a4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89776deb-2bc4-4ed4-9f0f-128df6698f41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dac7d5f-da30-47f4-b9a7-093ab2bd3eb3"
            }
          }
        ]
      },
      {
        "id": "2c392150-7aa1-4f1c-bbd1-b39f2fd0e5b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8f0e96a6-b3b2-466d-8d7c-0db1558b1be6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e18426db-6515-4e20-9a49-ebe3371e64ee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "62876972-d5a9-4a15-a46c-7ba4d06daaf1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f0aa58-1de1-4478-a717-2db2b56cb62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c99bd8-26c2-44a4-b320-a10068b313b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68d2f2f-8cc0-4ae4-8a92-f87e7cd5b053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c6c06a-80ae-43ed-83cf-20953eae7128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4984f7b5-a8c9-4877-af35-0d440d28a786",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d77428-c445-42f5-8dea-80a1d253a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ac4931-fbb6-4ef4-a26f-eb19a31f2966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd94d3a5-2650-4497-a386-bb2de8e95784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b0d552a-e34c-43d2-bcaf-bbfb3346f6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0e3d84-52bd-43b8-9421-42e31f83b3c7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef42dbfa-34d5-47d5-b886-929d4e20dca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c102930-d50e-484c-afbf-1a3c73173db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9578aa-9a61-4345-9228-976c791a178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4da3994b-9233-4c01-91f4-34217694e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043d8a4f-45c1-4ff2-8940-d878a0af7a2c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022bed0d-60f5-4b48-83f7-73f477eab373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358cfb2e-d12c-45c4-b41e-7ab603bb27cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9e74e-24c2-49f2-8c9a-e055ee086c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9489b4d7-a0aa-41aa-9227-f56840c0e833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645e94f2-fb59-4e1d-a5a1-81ed8d1f8d8d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ddd96e-5c24-434f-8a32-23fa559d2a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4f7338-1a90-4d7b-81ab-315332d9ebd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc10964-abff-4db0-98e0-2e4f2cbd005d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43331f9c-8825-4a4e-86f4-62bfaca35471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad7da85-6bf9-48e5-8322-923ba73cde3c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986fc1ac-e1ac-4e1a-9c17-6861fe0ba125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b1e0a0-c326-47d9-82fa-8bfc2268a314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5810be51-27ff-4147-bad0-f664533bc1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e36e262-ccb9-45f3-bab2-811bca1d6df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf6771d-2b06-48d3-82d4-f909b14cd9bc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a106f8-64ca-489c-a855-9039749fe87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9081c6-f12c-4732-b6b8-66d1ed168a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d130cb04-d57b-4f7f-a39e-be4c7e5cce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94e47372-7d42-40ed-b529-2ddfc4732ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef1dabd-4ed0-4902-9a6f-f94c228c112c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954bf19a-fb8d-4514-b32b-c5c010e5ee17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e39dbcb-e896-4a64-a83c-ffbabf212153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367491b1-f149-48b8-a680-36bea6734891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e8c04f2-d41e-45b5-80f5-88aafc91ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deb3fb2-df12-43f6-a1cd-eac03c00c352",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507573d9-d25a-4999-b061-82a626866e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556a744a-0d4b-4d81-b8c2-edb212447dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec2e160-5640-4c04-b7e0-ecb14a27a556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45f40057-ce7f-471e-9486-5196ffc6f6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b040a16-11ac-4808-b042-b0285460c1ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66812ebd-2e2e-4bfb-ad9d-fb7540d7d004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e5dd72-2f97-410c-8a58-8ba666dc2285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ee807-7aaa-45ce-95ea-71927af7173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26d551fb-ae44-4b74-a8cd-e600b4881fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea277fd-3356-49f0-b938-f75faea20067",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9989af64-7632-4353-ad84-4f608fe4ca4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382fa07d-ec2e-46a0-acc8-c5ea0d3a327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db7337d-e76e-40b0-9a38-1054ee5f82ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "365f7fef-c5a3-40a2-aad6-b378bad100b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a541f97-c559-49a1-a7ac-852dbd712309",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e14c992-14ed-40b9-b14d-21ea6c4d2054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd893436-02ba-4b13-8b4f-3dc632c70581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ad2981-0ccb-4516-a561-271dd5e8a62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ba9ad19-e829-4faf-b48e-20057ba3c20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1644884c-6580-4401-bd90-9d5dc815bcd1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e6d6c2-4cd4-4122-bf39-6d899bd9be6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9accc281-6161-432b-bc13-0e61cae5fa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50994a-2965-4c23-8c22-0c73e19c8f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "032ff591-e790-4fc2-add5-d6d9b3f13f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd388686-8537-4c9e-b344-166848c65df1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be9c198-7725-4b73-8b05-79072ea86590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c64c2c-306d-4c0a-b2ef-60f9e8e5c5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231156ac-7717-487d-abf5-0b73768c20f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15bab8a4-dd95-4b05-9213-28ba63835fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b334cd67-7246-4d8a-929a-80eb94838cc8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06bba62-b031-4461-8c6a-3aacdd580749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a80b2-5e2e-474d-90ae-13855148aa4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560c9339-7c36-415f-85ad-f28c36a78f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31f80fca-b477-415c-a0de-ed1b77b10bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a55670-0e97-4523-bc6c-759f79d29c90",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fc841e-4ab8-4dcc-a052-19cfede9ad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9496394a-7aab-458a-a9bf-ccfba52bd775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e829d-856c-4779-884e-5f051249f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d3a678-b121-4d51-88a4-64ed17a8b779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f897c9-bac5-4078-b06c-e6e946595e74",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a37f1c1-2b25-4698-9958-8326978c714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c118a51-68fe-4a70-9be3-e739eeec2669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b54f8a-f2d4-4f01-bd7c-5268719d337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3bcecf-2fd4-4ef8-a293-07dd06e35e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0864f724-e30d-47d5-8f96-16c075045135",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fc102d-501f-48a6-8038-458389e6e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca4c2e9-c76d-4850-881b-eda441f75369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e288675a-a972-4f2c-b5a7-3ff96df8a21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a7a9c5-f8e1-48ce-86fc-75f4d07863ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a75d2d3-d147-4cae-bd1c-e3449ec67691",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1e11e3-b32a-4c6e-a70f-3bc71d04af4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfeea8d1-30af-49a5-bc35-d014558aea42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c49823-398b-46b7-b0d8-fd08450983a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e4f252-003b-4c40-81ed-73b22cf104d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ee653a-cd43-4544-8b7f-9c1d09f0d532",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e519faa-803c-4790-b430-ece4eb742a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d62915-3ca4-450f-92c6-2fc792acc6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaeb112-257d-4db5-87ae-7f40334dd769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab50f81-8638-4b57-bd8f-1e584ec87213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665b7998-db01-4b89-b78d-e4805da08c5a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3ab75-8b98-4398-9d4e-ad131abde88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68313085-4ca2-499e-a8b8-3149219fe9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f811acb-72c6-4753-a106-8a209938929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e044fdb6-1df4-420c-ac6e-c08efe95ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43506fc-3770-4489-b49d-155f10b087c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ccbec5-ec72-45f9-90b7-9ef8280f0713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b5647f-4166-43aa-b3dc-47203afaea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b78344-04c6-433b-8f2a-ff30ae0dfc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25ef58ee-e840-4581-9da1-49e04c83225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b16a96-92d0-49e8-b964-5cf1ea46d13a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb48cf98-1657-4180-b932-444ea2f7abce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c10a789-47ba-468e-876b-cabc1436c893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e672c-dcbf-4403-b36a-b37e3a1238f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca2e180-288a-45b6-a7b5-75f098dbbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5519774-9aef-41bc-879d-0ce0219e71ef",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9947c807-f171-46e1-bb6e-8edd870287f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f298981c-aaeb-447f-bbc9-f856aa391e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072eee72-323b-4807-8126-3e3de2fd3db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "131a1bec-5eab-44a3-9ada-62034422a1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad08155-dc7b-42ed-889f-8e7c18488235",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c52e6c0-dfc6-4199-96b7-f09c7d82084c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f6cd3-e16f-42c2-b521-f6355814793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ef99fb-755a-4203-9434-1c7022487f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15978570-3ed2-4864-94c7-b22f0d8806bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6022c26e-ff47-4d68-b1b2-79faab45db8b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9753434c-4179-4786-9072-2b8c3046b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fc5a5e-99de-4ed0-8074-92bc6b7ef5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeb776c-8afc-4bfd-b21d-615ef368cc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ad38c-993e-48d2-8824-03ecd51baa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb80846-07b5-46c9-968d-9447e0ac465a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4659634-03aa-44bb-b65b-759fd1bc289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c25b184-6189-4f12-8e16-faad060d40a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3dc8ed-d6aa-4308-96ad-95aa421b5325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbd8e40-1300-423d-b324-f62759638f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2093915b-db43-40ed-979b-b79bfba697da",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504a4d35-8234-4cea-9828-16ba933f9d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e5a3d8-29cd-4453-a22d-2c2c036c9649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb8c836-e29b-4750-bc93-9cdb26223a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb381ef-6d89-4bf3-b7fe-de9f4c058138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff97279f-d1ea-479d-b624-cce828f24193",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5a0517-66e7-46d1-82ce-b18aaf230faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6388f95f-7444-4bf3-80ee-99c587b75910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739eb86f-0cc4-4bf2-aeb8-22c8d9fc04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a29a2bc-9806-4c4b-a04e-fb19031a8684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab39ba1-283b-4e23-9c4c-bb6064a28c26",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b600d1-1db6-47e9-8445-745f38eb3e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2054a790-aaa9-44d4-911b-b2e5bd1ad219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a9a9b-190a-463a-b681-cb5f9fe10d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c743faa0-9792-46cb-9de5-03f405c2abd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c106ec1b-38ed-48db-828b-2c123a988014",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aa20c7-bdad-4e8a-948b-306fa66c4267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74befde0-bc85-4bed-913e-618afb741978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b4a987-75c5-4ba6-b5ee-7199273f1f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6351cc66-491f-4e36-8de5-35ee913c9af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c1068a-65a2-4de7-b769-c32b0fe5b810",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59a155-8f9d-451c-824e-4d403c41bf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865f42f4-9ef4-4334-b2ff-e7f93e53c873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc286430-4d1a-47b6-bb37-62c1889b6aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06bf02fa-5399-4578-8e23-c35440363c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77818376-498e-4569-8ab9-50753c781dab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413b134c-46be-4d35-8f28-dc51f0f2b7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8f6d1a-8e31-43b0-98a4-d917b547ae6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b876e11-2015-4639-8b10-d501c8aeee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e7b07d-9b87-47e6-90fc-a6871a4d80be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c74b01e-e56f-4a06-a545-e32968325855",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ba2e1d-8fdb-492f-bca8-58c4cca45625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8bc558-1035-4cf1-932e-59d5ce6021ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95667a54-6685-49b0-9a19-bf5a85154579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a16b61-e6a1-4b79-a3d3-78c16b11a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81987d68-8b4f-4082-9f0f-0ee70174e28c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bfad88-7fe8-46d8-a937-bf9693d85e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeba5728-be8d-4f3e-89e2-c96c641a7f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a33b70-87e8-4943-8614-f0516b453bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "216e508c-9309-4706-8816-41a49182dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116fe921-4604-4d95-acab-cfaa4453b135",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dfc517-b316-4133-a139-4173e777a29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c033c04-b713-4769-9295-3d059f1adc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b49542-e656-4ab8-bbe4-253e51734c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "347d4d1d-ddd2-420e-b301-8b247c12a7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e9dd6-09f4-49ff-b397-f2a1e3072a92",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e418341-973b-4382-bc03-c6aae7be87bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b7491c-c2e4-40ff-bf4b-c84cf9f33688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc131096-df21-425a-935f-69ff7acce24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4bc038-5d0e-47c0-a5b5-3811893dd72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50edd25-f4db-4525-8232-705bfca7b44e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc493e-ec6e-4065-8864-5ca45aaa8fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2382e424-216e-45b1-a41a-5f5fde4882aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c86a8a-a02e-4658-b368-a759bccadc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39ad4508-81dd-4259-bc44-90546f2915f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad471da0-3904-47c7-8752-58bc7dc45547",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdde599-fd0c-44b7-9653-373abdffb435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93770861-2c70-406f-8816-bf66a1a85755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4734e0f5-cc2e-40ab-ad0d-41110fdd817c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c59973-4bcd-42a6-a3fc-22d5840a08aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84e8aed-0258-479e-b5f9-c4a1a5c2ebe0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c0d0d0-c8fc-405d-8f85-3aced47febd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd96a31-bc4c-46b6-bf33-cf865c7947f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df85d6a-9a53-4eaa-9d2c-2a20865a5390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac9171e-82f4-4cf1-8a6d-6b27f9f91091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc550b8-0e68-46ff-9897-347257d24bb5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7617d6bd-43fd-428b-a847-5ba4827f41e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737c6fa6-811e-4129-a61d-5907131b017d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71714fa-213b-456a-8f8c-ca26ff14a006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34ee923e-5c8e-4ae9-a754-1563efa11a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b34ed-faa8-4aa8-a8bb-e9f26e9d06e9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf5e7b-6aee-48ea-8233-71d4e2c76e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3848b41a-7da2-4d8f-be00-5c124b6104fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc6c79e-640f-480f-9d03-3cf1117aca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd05c41-183a-4cee-bef1-04f79fa29eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ce2d44-979c-4a51-afef-cb52c5e5b9b6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b68505-9dbd-4fa2-8463-8c386ed9fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba96217-293f-481f-8c67-c19ec330b55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e9f708-386a-4dfd-8a0b-17ef98ec7bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17bfbdce-5eb3-46ff-8be8-bc48a4de8548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5001ba1-7d8a-42b8-b6b5-da22154dbccb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ddd3a1-9eab-4fdf-a6d6-e58f1abd1a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044463f9-d2b5-411f-8d61-caf52c6704a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7a1558-5072-44b8-b7d6-53f934f0da14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ded95c-fa1d-472a-9b43-0674cff65ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64045155-0398-4cad-87e6-dd0aa680f183",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe47092a-1eb7-4b47-b1f0-25eec5410a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0250d6d2-400d-4396-aea3-aed4401ff663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664ff02-1464-487c-a785-633de5ae70fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0eba35-be19-4bf1-9313-36c0c7a66235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9f2d70-48fe-462f-bbb8-200acc9f6da8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac322fd5-1afc-407b-8411-b3846c8bcd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a118751-83a9-4526-8ca0-527a3d70e909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a682fc-f787-446a-9ac0-56c2e19c56c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee6468d-d5b1-4097-a400-b56e3d96b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17500ea9-0e5d-4212-bfa5-f59604df57f5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9274a1e-465a-40ab-bd1f-2cb19666709e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6e0ffb-a41a-4da9-8a60-9eede234caf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339199ce-dd8d-4971-8c42-5ea1ce8579fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "270dacfa-4dd8-43a7-9ff8-e8e19a2f2833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7636cc88-8b51-4300-9c85-20ace9fbf1ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c7240b-b59d-4a2f-b94d-1a814567303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f027020-7db6-4e9c-9f73-9f5aad0a64d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef9641f-04a2-4c99-ac62-9be7e2daafed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "845e07bb-1957-44ec-96c3-ebba81b4f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7332ffe2-36ac-42f0-bb02-f504395fb67b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970ee5c1-fac6-4469-824f-9445be6cf766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1af8d5-7098-4391-a68a-a156e0dedf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581f77dd-1aaa-4bbb-9e36-42193978e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b517d20-c206-4edc-b2d4-b959eb3a6301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b2684-177a-450b-b8c7-7e8d906c0590",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8548fa2a-46ec-47a4-aa6a-c30c078916ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef3d4bb-9e77-4ead-97b6-3b0a11e2ce11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99792832-2ebd-43e3-b34a-9887484bc243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef826bc-2053-4db5-b766-09430d028070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a0dbaf-b257-4eff-bcde-14d0b238dd4a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13e4d86-bf7b-4330-b6e0-278b163d6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102517b9-46bb-4f43-abe9-28d34ca1bd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa12af6-4309-4c48-bebf-cff9357c38ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e8ffed-4c0e-4223-b5b7-c06f01e74d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b92832-1c87-4e6e-b85e-615f3e017f4e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a0cd4d-6b9f-4100-83e1-0c72df1145bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eae335e-ce97-42c9-a912-90ced664840d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aed6c7-219a-40ec-bd18-5333ba200f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa8b8ac-cb9f-468b-80c8-ca88eb09540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1117e3c-9512-4e7f-9ff0-b0273cb43f2b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3a3f14-54f8-4ea2-af08-6d27a9162b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13fceae-96b7-466e-bb88-31480aa5c946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda662d2-ec33-4eba-ac31-50fe7ca76d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b392b-c059-4c6d-b3ca-37eb53299a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8e6bb1-e824-456f-8241-af0f9d2dbbf4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b230bd7-4f89-4d56-8115-be2367131c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbd2452-9247-489f-9923-52ca942252ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18407bf2-ae5e-4bd2-995a-400391eb0e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78226d3-d701-4a76-a529-4a460c38d3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12718ce1-3faa-4791-ba4d-2f308531ec5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f70461-c1a6-44d1-bc42-a6bec59578bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d05ca6-e315-4edb-97fc-b2365fdc6f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205fa953-94b9-47f4-828e-613fda8a9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f409114-dd44-4095-8969-2394d24299cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8a0353-ac72-407f-ba55-d07937069056",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b841383e-2048-4aaf-86b6-8769e2a9339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ed06e6-63a4-4cff-a13e-b1dcb26b2933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36e121-2777-4e28-9b3a-cd94c81db400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dd3e81-84f0-4017-87d2-a99ea8f6b752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea816e6-1351-4ed5-b265-0ce1f653133a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c75f57-f8c6-44f8-8dd2-0eb92db64ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523e46d8-bcc4-41af-af99-551c1e625180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7177ec-c383-41b8-bda5-293a242870e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdc88c9-fb4b-4df6-bffe-c59413137cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1899b497-7fb9-43f6-93bd-af43f2b5ba29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b50c55-c8d3-4d2a-9b06-efccf355c03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450939c2-3277-4967-bf8c-60ea5101d149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9090f6-90c9-47fc-bc7e-f618622deaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e755ebeb-12b9-46a7-aa8f-f3292e87343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e00e8-9783-4ebf-8bbf-4ca0579d27c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa64791-80ef-495a-8f13-6bbcef0d6463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e4fc5b-64e6-464c-ab4b-fbf5ade82a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59b4cdc-2ddb-49c3-b56c-d2239899e052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b83c4b-f3b3-442b-a623-8951ff3ea6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f823f9-6a32-47ae-b0a7-95e792d55d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28eab28-5478-4fad-b53e-607e254cb0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c907622-f4a4-4870-bef0-a21bc5534032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53c4ffd-8cf4-485c-b5c4-2502f5962505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae975dc-0cf0-4b38-9957-f5995153bb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e611d320-65ef-4a0c-9ac9-b6f3b24afee3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeef59f-44dc-41c1-bca0-950fdc7890a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc21296-50da-4a59-b646-844aecb6d6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1378b71-2f78-4a84-9969-bcbc4b227e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17fa40bb-552c-4b2c-8dac-e87a09c40192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd48a40-ed70-4952-875a-6b78e8555d02",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332186e8-8a3b-480d-a50d-0f4daa17a6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1c7521-fd80-4a2d-87c8-bbca20f54eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3946d081-54b7-450b-a709-e1f71d76ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "378acdd6-d3ee-4126-b879-9bef7dd3419e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dc1bb6-4b1b-442a-a7a7-127e6c6a65ee",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f7623c-9d05-42fe-a0f6-d569ded963c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ba7ab5-76e0-488f-b757-bd38c669a068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e153c9d7-28dc-410a-b391-e313aa853e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1e0243-5dc2-4957-935a-a7e188e52b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac8312-08c6-47bb-b2f5-6ce8c1e3e5eb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0660881-f696-4b92-998a-ad35b896911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c534e361-50dc-408a-ba96-0e56b2738847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52bcfb1-1ad9-4302-aabe-7d11d161daf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7657fe-3c0e-42fb-8d6b-25729f9ca7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83de31d2-a529-4aae-8812-1cdb542905f4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470310f7-8f68-498f-863f-684072773cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01002e5c-28fd-4483-9e74-b821d13a9c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae5360-c289-4106-a325-cf488683b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f7bbd5-1f86-48cb-a925-9aa08ce64a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cba2a6-c3bc-4446-8100-68dea6fde4c9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df91596-9602-4612-bf80-94bbc2f4fde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f876446-d751-49a2-ae8b-00bb971cc202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52efb92b-2bf7-4354-a412-66cfd8ebedbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db08122-d4f2-40ef-bf91-6527bf012650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c91b9-1595-431a-a1e1-e2141b812eac",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb317abc-294e-4968-96d3-c0c1017e8f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590abc8e-c197-493e-b87a-4e9b4b90c95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca752be-39ed-4471-98dc-ce6cd6b5802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1921fe2e-d372-4d2e-bad7-038c1e1d8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2a0673-bf0d-4484-827f-c4de47c7be8a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245ff618-8aa6-43d9-b3fe-9c747f5ead56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15893a2-af83-4f33-bc0d-400d7fddc649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e536949a-24f9-4376-9a07-1091b831135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1ec207-4aa7-494f-b835-739ee4981104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f62484-7f72-4729-9a9e-5e8dd9836bc6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7564b01-a82c-447e-88da-850bc16885fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86464bcd-6165-4466-9e07-d8e0c4f62692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af6639-b6ed-4fe1-b50a-ad827d679ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0e74d5-7e45-4027-b0f0-9e236918513b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689e9d83-a31c-49e6-925c-8acd48ce95cd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1016d556-0db0-4f0f-ae70-cad175bd6212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd4775e-8b55-4acb-b5dd-15543d2e19cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d1017-34a7-4110-bb2b-97ae3e989db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a042d0e-cf95-4b06-8c9c-0ff78327210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df59acdf-ecc6-48fd-822f-70afa7892104",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b63e45f-5ae6-498f-a647-60260b12712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc9424b-f7f0-432e-bf67-bc242a293bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb7cd8-640f-4099-931f-d291624426b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12aa2dbb-6a42-42ae-98e6-69887f0e0ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182681c-d116-4a93-9445-904ef5e62e9f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5b1b6e-598b-417d-9ef6-9aa9f2b19100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ad8aeb-34d2-4d7a-85c5-fbc4068543ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131ab802-df07-4316-bf5e-b5e71ecb13ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09692ae-82ff-4c0d-9482-e1436f0d4340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9cd64d-be72-49e8-b5f7-fd17261d9092",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b41679-335a-4084-bcdf-d7f6a63f8b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2701d6-854c-4f58-aaf0-b76f3adcdbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9c4e6b-60be-408f-8e73-afb87ba24452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec021e05-d688-42fc-9edc-5f9d434f0eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf8080-23f2-4fb6-981b-7397d94ad975",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068d4fa9-6762-4650-bae9-ec7e3d74d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523ca17b-30da-4677-ae84-c8ba91b8deed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c444b-2ead-4d00-9480-f8e8caca6b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb61ffb-f907-4a30-9131-76d4263b15f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd05291-8424-4782-a989-d295f809c2f7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfba339-df69-4f11-82c9-252b9c62b0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c200d3-5b27-4c9c-95a8-bfa0691549d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c810ef-8d84-40b2-b533-1719c185c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a66b0d2-170b-4244-a0d7-c8ad85a0a251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabd7e1-8f0c-4360-ab83-9d5ca33c30ed",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9580d70e-6670-4869-8dd3-8c44082dcfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7c85f5-6e7e-45ce-a83d-a22968eb7955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec084ce-0468-42f2-9acb-2c59921f6e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fb057c-e1c1-4b30-855c-7cd485936899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cd0ff-d71d-4d8b-8366-6301775dc2f2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682fe4d-2a6d-475d-a201-8732ddf73276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f9cf21-7f15-44a2-96d7-79eae9b12a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6be3d7-1318-4b51-bd9a-9d0b1ec8c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d08fb26-b6b8-4566-9464-085462262f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e612ff3-ba6b-4c9e-b2c2-8e978cd9c7ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211cb924-c6c2-4d52-8717-d16f54a013f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cff1ef-87d9-48f8-b076-225bcd14635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d78984e-df88-47d0-89e6-49d51c69d041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab749fd8-07c0-4d70-9212-d6e39514e391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cfddfb-8cd5-4411-a60d-1255942736d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37954fab-b280-448c-9e5c-671963120f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9327dcf-a577-442b-a59c-055021116d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067911ec-87a6-4a17-bb1b-abb424527c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d7c116-5020-4fe3-8d99-477800f8cd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16ce378-fb83-4e1b-b1f5-c56d2aaa094d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc464654-6bc1-4aaa-a042-1694bc43a01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aca2779-b631-4703-9165-67b9440c6c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef357330-736e-4ead-beef-249f4ac4fbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05a26ea8-8023-4166-8c42-97744e234b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414c7d6c-4864-46da-8d62-8a77006bad5c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f06d3b4-049d-40d5-add1-2f49ca47b7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ade051a-60b0-44f8-a4c2-af540c972723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e390fdf9-00e1-4add-98e1-d89883083dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53e101a-34fb-4c18-8a08-219db63ee2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3616f7cd-b616-4827-a028-0b27dc780d67",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba4daef-0f02-49ee-ab6e-9a75c6613dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b884fa73-1e74-4d50-b23a-878948638548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a25cd-bab3-47af-bb0c-cbbde0a15829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a802f0-949c-46d0-a3b7-ae1003ee8f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06073a5d-5636-4cfc-9397-4bc9abb203e3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6facdc24-e87c-4f4a-8b0d-3433409300d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a51dec5-9ac1-45c4-b459-3004e9aefd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be23bf3-7841-4042-877c-a218275868a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8304eca3-2d29-404a-9fd3-5a320dc850d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c22e547-aa08-495e-af53-8e8e1cd6b330",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ff6ec-f468-4ad3-b102-3bc243a882e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6f215e-497f-4901-befa-8d8b22ae7de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284c9cb4-cdc3-49fb-95a9-1528d8ea2977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9065cd54-d0c6-4eaf-b418-821c605cc1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321b7b75-b91e-47b4-8090-50b6fb974125",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4c7d53-5f40-4a4b-9bdd-e4bdd8401af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4083f264-3297-4e9b-9f9c-1b92138087d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6f3d6-ec37-4114-9f9c-2c7b2eba9fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "985905d7-3479-41c0-80d2-fea29cba0a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558ce05e-5e3f-473c-9b68-fb945bc2b683",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe8f506-2369-431f-aaa8-2ff425276402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1fecb1-a313-41a1-940b-c91e4ae8fb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8925c867-0f5a-4c62-aa5f-ea0576368502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a079d40-3496-43be-8aa6-28c9c4c332df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23c9329-af00-4cf8-aa55-1a6014d329f5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7c3f55-c3fe-4ee7-aac1-46dfd6a3cd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afdda02-9102-4164-8570-6263bf00e451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d1239e-6ab6-482e-9863-50ca536de1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f30a7420-8c33-43ee-9bdb-05be2b31e606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a77b9e-96a0-4622-ba6a-0606dc198f06",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceb9614-b858-4ae5-8b25-0c317083f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ef81f5-d111-4ce3-86ed-545c1f1b4fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551c4841-4ec1-4f25-b262-d009aaf28872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d828abb-d831-4167-88df-de353fd4afc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52333fc-0412-4999-8c66-73861040522c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c33f90a-7531-48f5-aaec-672a44eaee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6838019b-559a-4a6c-ad4b-15f9b7b13ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c2dfff-84c6-441b-acb0-615afca06570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fed1c3-e817-4c9c-818c-d37087d90dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7744f03c-9a11-40ff-8e27-1fbd1dcb8f8e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e093df0b-92b6-47ef-8176-d4b26b7e9d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd912110-4913-458c-9aa8-d2ff3af003ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e833f4f-a5a4-4f56-b484-f94432b9a335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2744bf56-a89a-4adc-96f7-3c611bfd09c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9f2277-236a-4c7d-bee7-699d3250b4db",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c630dc-be80-44b8-a1a6-59d4f1b96c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fd92ef-b72c-4c57-a9e2-21d39332eb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7da7fd-1423-48d6-baa5-b00ff650b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fd9ed3-a525-418b-9b97-25154584d474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80becedd-bf61-4fe7-9be3-40e8e55a7c1d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212fd0c-65aa-4d54-bfd8-fcec997dc1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f227a7b-dbdd-4606-aa61-0cfa4128670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7a5158-f76c-4e0b-bb3a-8884863ed591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b118275d-ada1-46b3-8bb0-beab1479b1af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d4a5a9b-4eda-4217-b189-7ed9f342675a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78fea02b-2051-46f2-8701-5cb65775894b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7306ab6-8ec9-4423-9731-aa6af5a9ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddf579ff-b944-4d39-895e-dae3060e0f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b8860-7714-446f-acd2-e10ee6f338ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81779c5f-3995-4e24-a03a-83a48a6a2378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9e65ed-1255-4258-806d-26f85f6acf85",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f98212-e13c-490b-9077-ee64c9a54ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c9f72bf-95db-4e44-88c8-b86eb1b44b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe6ed7-368c-40b2-8ea6-e0f947488652",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0916faa2-bb3e-4eea-aa6d-193bfca26320"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98389aed-69d3-40e4-937e-096da7ee0480",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01b7d658-f71b-4a8e-b9d4-ab1022004ddc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83a935cf-a89b-4013-932c-b6f82c396d0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fee442e5-86ec-40b1-8691-3084885ca9b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb18aa6d-397c-42bb-8c66-a992f38d9707",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6562113-010a-46a6-875c-e3735b717cb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c837125e-75bf-4727-8ce3-0570644882e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8233a803-f158-4ecc-a7a7-76dbc11f2554"
                }
              }
            ]
          },
          {
            "id": "7854df1f-a031-4636-9100-3915a08f6154",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0cb0a1ca-9249-4285-a43d-202457d17573",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed6db18d-1308-43e0-8093-542693a6e3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "104da689-d5c2-4985-807c-d21edacb39bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49631103-5cf9-4afe-a04d-bba3fdd10c24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b3bee9d-c29d-4ec1-a02e-5cbc8307a081"
                    }
                  }
                ]
              },
              {
                "id": "aaa2ba94-e5fb-4997-9620-a6f06a23228b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85216240-75f2-4b7e-bacf-f8c2cb792f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d425726c-3220-4fed-8ae6-57af8109e515"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aea70e42-4eb1-484d-9677-112207268b8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb0cf907-4c28-4f36-9001-abfb31a82a2f"
                    }
                  }
                ]
              },
              {
                "id": "95decb87-9f2b-41a4-bef0-d915cd156341",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8670bade-06ce-4b4b-a510-c00418bc748e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6512bf3c-ee9a-4aa9-a69c-6c3b1037a656"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "619599ec-fba0-4966-97c4-840c1c6cfa83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79923180-8b81-4b85-9f73-17b60f03ffe9"
                    }
                  }
                ]
              },
              {
                "id": "c35f5eca-ef6c-4073-8ae1-259071314a45",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bdbd1d3-a683-48db-a1de-5e9f5c2a39ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78585278-161c-4e89-8318-b490b0b9d77b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "554bc338-cccb-4a7c-be1a-446714472f75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f688ace0-61eb-45f3-87f1-c195f3260920"
                    }
                  }
                ]
              },
              {
                "id": "366428ac-130e-4200-bfe0-c0d1753992ab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5890b34e-55ed-4dd1-afb0-d918f9362b9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48c593d4-43dc-47d7-a446-88178ae5ec6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d90509b-86fc-428f-92ba-189179be50a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f97bedf5-d172-49ad-b6e8-7bf5633ced9f"
                    }
                  }
                ]
              },
              {
                "id": "bbac540c-75b3-4c8a-95be-9430421cd0c1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38bf715c-80a9-4777-a109-7eccf3e3789b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecd7fd86-7334-4356-9af0-6051a519f4d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6079ff56-12f3-4a5c-abfa-c796348e8601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e644069-3f5a-4187-a1ca-1c0334781568"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3a90c34-5ab3-4eaf-9f54-6509465aa196",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b61779bf-de49-41c4-9ed6-97a641381ce5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "264ee1ed-0296-4c9f-82b8-afac8fd9c88f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa5c6693-f8f3-4e71-897e-98fa176d76db"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5a0c618-2af9-47fe-b656-dd7aa6b145c2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "548993f8-75ab-4c4b-aded-3c3effded33e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6346abaa-1b18-4cff-90e3-3a318e975001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11628574-18e5-44f3-a854-7d3d8aac1a3b"
            }
          }
        ]
      },
      {
        "id": "ffe0bb5f-1f86-48b2-bab2-de18b6458c0a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9f508a3-8092-4457-a64b-cd3f125dc7b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dced557a-e433-4a47-a511-a6493b29c9e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82319208-61f5-481a-a65f-8d2e3f9f438c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec9cc71-3f0a-4357-ab75-34d3712ddbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5f48a6-16c8-4158-ba28-1b408cd6088b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b5ab50-46c0-4458-8a78-adb899172a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff82fa32-b057-457d-97e8-56ed86cc344a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fe5542-cffe-4526-b118-1acc702669cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1126704a-b2e0-4014-b6c0-7bd4232ee162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94391b98-083b-45b6-9ccd-95b1c87a7448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc33a792-162d-4733-acef-17eb6559addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "925965c8-ca1d-4793-8ac4-7197cc64a024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03143c7-95dc-4dac-810a-df076d452515",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e089f51-8c23-4814-9875-1f13c076bf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4523ad9-9518-4b71-afff-9cf3ed70a08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0677b9bb-f470-4322-b5b7-8cebd7682e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "783a4cbb-7eb2-4846-bfea-bfb4266618d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab00f485-9452-4f78-9fb2-666f7807d7ec",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120cfee2-d6e3-4c6f-b7dc-0100e881ce3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a483c131-6597-40a6-9bf2-cd1379339310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26d60bc-21b9-4f25-ad4f-52bea854abe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c89d39a-b148-4e0f-a698-73df860aa4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce74b60-3c94-451a-91f8-d58f9fc2e1d9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70ee2c4-427c-4597-9bf6-6cf87d929a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a347b27a-9093-466b-aefa-38effa1d1e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f17ed2b-c707-4760-97e7-c44bc899011a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8910bdec-2fc0-442a-82ef-e405cb26f89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da57f4-c6f4-4461-a1b6-a97ba11921e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c14c27-ca4f-43be-ba8b-d6bcdf971f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b03a3c4-2326-46e2-9246-e8e9cd5da1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf2a04e-2dbf-48d7-9141-5908407027ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d9a5c8-5ee6-408c-83a6-3afafdf46cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2ccfed-a2ff-467d-bf5e-c049f36a3b35",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa409e-1190-4726-b4bc-e54eae0e55a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bac089-2700-4a73-aa73-5cabbcdb637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c931fed7-d93b-46d2-9290-75d6d7c7dffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc26d0e-588b-40c9-85c8-739ae88e2a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78757701-f86a-49e6-9def-bffc3136fc3d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937b5779-e328-46f4-847e-e1e2b4c7341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31390a06-faf2-44e7-b8af-69ddd60eaca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2326889a-3922-41d3-95a9-8535c636baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6e28fd-b1fb-4bbd-aa66-e468323078ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530ac67c-4fa5-45a2-81d4-83be81960864",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca08de2-ed13-431c-b28c-01a42f72b7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028e0df7-474c-4883-8832-51c4fd09f04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531005f9-164e-4221-9fbe-2691369616d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e54ae9ed-76a5-4e14-8b12-f8dae314970c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85152dca-2823-4065-9890-dd5ac3237b4d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa65ff10-c174-40fd-82b5-ba0a5f681f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977f4d7a-ed8b-4d74-ade9-ecc1fdf7629f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdaf76f-5a20-4f8b-9abc-aafca85f857f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c46d0a-806a-4103-b2e3-e8b5e511a858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd91b5a4-d3f5-45c0-b74f-73bfcc47e5b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839d0bb3-76d7-45f4-9e12-91674af2d841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038b11db-1010-4ff4-8f31-24990e9a34f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51ae4f-d7e4-497e-ba56-782246023a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb5d451-7c19-4b09-82c8-4290f3436e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ef57b5-4fb6-406d-bc3b-10fb2660357f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d885d7b8-f29e-4167-b057-9032d18d491a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf43b337-ee63-4877-ba95-002ead667951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fbd4b6-9434-4664-8619-95b75918a976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0eca007-5c72-4305-807e-a6f450c04cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d8d92e-c1c2-47d4-98b5-8f2e5cec3ff3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9e3112-c350-469c-810b-8c953433e700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f423d3-9d73-4537-a2f7-38fe309a1663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4598661c-53b5-4533-91c1-dd31dfff16a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95d64a3-301f-4020-8f1a-f46e6bbe882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bb8b4b-41ae-409b-8e2b-11fb8ae38030",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19151ef-d789-438c-adea-9026f7cb2fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de2d7ce-2460-441c-835a-512c18e28bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b16b7-ebcf-4149-8a40-98173b8aefdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e46c0b-3dea-49b8-abac-147eb6cd4040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa11a71-b11d-4707-819f-0b75258e4671",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4a4879-ff4b-43d5-b37f-9bbdcdb7c82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4696dba-6c4b-4469-9453-238d89b66bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d3d6b2-bd50-4b9d-9551-814645d2ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed8f82f-8441-4009-88f1-a57fc5bcedaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61beee4d-b822-4bba-8529-20dc4afd7cdf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc19b108-ee98-4bd2-9468-6930a3a759f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5a3a88-6894-4e9f-b708-522ac3efbcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e47665-eacb-455e-b455-318c5f4f0f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd54e8f-3798-41c8-b77a-b9e06053f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779b071f-4b89-4ae6-9d4d-1db67de0c615",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c52e0e-df99-46d4-9335-d553b6e21e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12447d7e-61a5-43b4-8a86-4bde2ffde328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57778528-a00d-4798-8344-79079dc2bbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef1fe6e-93f8-4442-9272-1e6e1a4bba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119a6f13-11ca-488a-96e7-0dcf68320ad9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03127b01-605b-4fde-8b41-3d1809424914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb34c31-e6c3-4ce0-b03e-bd6c402754b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47112b1c-21ff-4085-8e78-e1f6c39abc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ead727a-910c-4f25-9604-5145c7ccd3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b0a521-dd54-4a26-af7d-3ee0079545e6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc93fc0-4ce3-4290-9a4b-442483aa9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc2dbaf-7230-45e6-8d33-a995fb97ad01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b24d4d-6032-477c-9f0e-b52f36c6c9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc10403-802b-493d-b2d4-34ad4af07db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d11c57-a63e-4866-9fd1-6b210ef9d891",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35b931f-a97d-427a-b8bd-dfee3f90ea15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b24d336-51e4-4196-a6bc-82fc196c7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e74c75-e0bb-4a00-a841-5f206d9ec418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51b9df0-ab06-4244-b093-56484ef3d904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c89231-c5a4-4f78-b151-040ddd7283f3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3261810-83d9-4674-86d8-e3aa366cd975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f176b8a-0768-4f85-a049-3f619dbeca5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf31a2d-08ad-43cc-bd78-78ee443b15ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2bd447-2eff-4ed7-acb3-eb8932fbb082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b7f022-61d6-41e0-868f-973ee24ad9ac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a909b553-f925-42ce-a9b9-33fa0d1d607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f50d21-4b74-47da-b4c5-60d227cd5b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e234fd9-b489-42c9-b379-456ec6eea9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480fb374-cc5d-4cb9-8cad-5e2eb2177cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813d2553-1abf-4c60-819d-3533425db031",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d2000-e075-4ee3-89b9-272efe94b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929348e5-be46-42bb-8920-42f863edbf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c3ca5a-7ed1-4d4a-9b50-193265beb518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afb7af0-20e4-434f-b470-22cd7f78b269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601b7027-6fa2-4bcc-9ef3-d602592767c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d05f1d2-3207-442f-adea-68e66e24cf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41110da-ff54-4069-a7c5-62a30f2a2b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8a1856-b981-4cb1-b346-04764512b630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397b0fa7-0d12-440d-8205-88b043e22b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5199bc-5446-42c1-ad9b-e68031a4c997",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6969bf1-3a94-46bf-875c-7e8699279891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37871d6-1451-4cfd-a673-fa7e47873b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35196d79-9df7-45e8-afc8-a587d4792f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df77fd6-a107-4729-b34b-793dcfb6f586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7062bcd5-9a91-48ed-a896-4f978e747e13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a164c09-fb17-43f9-9f25-2587bccb2693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259e6335-ebab-4f34-af33-a47cc6a857a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba247be0-34e7-4a51-a3ba-541f738d2542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d679094d-0f65-41ed-b1b0-c29da5ebbf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed488875-067e-4e81-a3f0-ad35e85d92e7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5393b6fd-72df-4de2-96ab-86e21e38ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677e7fa4-9950-4867-839e-57cf2e2b8960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8c2ff4-db95-4cb0-88cc-70575a7ba5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc4ba10-ea90-4c20-a177-599fc169a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1009cef-f1f8-45b5-9e4f-0f73783f3298",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdc558d-5dbb-421b-923a-552ea35be9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378b6f95-58ee-4b7a-8710-25a0991e2596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee08e55-cf22-43f4-917f-3bca11954ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "378660ea-6165-495b-9aa5-ac567a8b66f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d057a165-9885-4368-bae2-ab08cbb3dc3e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5127ef-75a0-419d-8942-93fb6661f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba69ce45-10fb-44bf-a773-58394b0926cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4d81e4-742c-477a-bc8f-530d11fca239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f27411-b532-492b-a23a-b84f232dbcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1590f2-1918-46b7-b4bd-74f03251e967",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fc8c8-6801-4191-96a8-f030feaecff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849a440a-4f99-4850-aad7-27a1f5b76d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71227b5c-ace5-4dde-aedc-f9f006837859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e531b4-fb60-449c-aa96-b2af0ef23a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b3a768-f225-43dd-bc11-78347671dd0c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0741427d-23be-4a02-8ffa-6db65fa43985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0636e669-d87c-4ccf-8c4e-7eb5be38882a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8f7d65-a69e-4533-ac41-22efbbbcc3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf842a4-6099-42a7-9b3a-0f0b2ba7c7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cefbd1-877b-418f-ab53-26eb86863a30",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b018961-0178-4efc-82ee-b45b4f2d801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb29aac7-e964-438c-8d37-f580da148ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8baa59-d24c-462c-be96-87ec991ef75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6e3edf-7dff-4c68-bd01-c3c8f6f58f9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4d3e5bd-48b4-4bc4-b0ec-5836f5af2dda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12c9bf68-bc7e-4ea7-be8d-79f9b69308c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f097a6-0a88-4c0b-b5af-420c614ec06b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb8d411-5c50-4600-8d1b-0d0776215c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1a46c-11a2-4efb-9467-bd05ee73db5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "934d862c-21b3-4b2b-b2cf-202c13d5b171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a94de22-8fba-477e-aaca-ae16de49523a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accd36a3-f79b-4232-8d85-0830480e391c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b2675a68-e12b-4b78-8998-54a695fd9cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac4704-1542-4809-b81f-d49e07aa23f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd795699-7e9d-4292-affa-4a95bccc18dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77cacb8b-23b7-4ef0-a633-011c73e20478",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e201c1bd-3379-4d8c-89b2-2373f070a13a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77210acf-885d-4525-b97f-2fe981c0f653",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34473df7-bef1-4430-8db2-3039b8c9e835"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f67d6d94-4776-4df8-b3ce-f21c27972d98",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49796547-e6e9-49b7-ae5a-9daf08f77353"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dbd3f60-a6d5-4810-9790-c41884c756c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7de19e8c-3f81-49f7-bc8d-79b0bb12e60a"
            }
          }
        ]
      },
      {
        "id": "08c7e103-5fd1-4c49-85b0-02e210f9126b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0fe0eb43-cc72-4b18-aedb-1df1e7b09dce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "459a31d2-a804-41cb-8bed-1684d4f204b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "179c9876-2f9c-4410-9855-936355548251",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c102670-6767-4b31-8ce6-e833f11e2112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84409688-e8f1-41d1-a46e-8025ec648d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9135b2-c9f0-4a7c-9b3e-f1dc0209b480",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a429f20-8e0a-49c9-9276-9e0c2777982e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6718b7eb-a6e7-44cf-b5e4-793a31382b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4f2ecd-63d8-41de-a1b4-80a966d6f108",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af33fbef-444d-4cbf-b411-6cef5c3a9aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a101cd7-f226-4499-8aa0-11755e9d715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e081477-e1cf-4383-9b65-04f519a3c01a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61283f20-2c41-47c8-874d-9bea0e37b300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c087e382-4490-4d43-8bc1-0faf52af3011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec0129-e573-46d2-aaa7-3f1be83ce3a3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe05bb1-11f3-469d-9645-801f295eff83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53663816-ae69-40f4-8ca5-62ed10e322dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58afeee1-32ec-4c96-8763-4d1e3ec16554",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f2da27-b4a0-4df2-8ec9-e8b53f787053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f721d5-c615-401c-bb69-f5e27cca4fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3833d215-a885-4963-b4da-cc4563ba681c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac39d7c2-5903-43d9-a3df-6e665417dd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b690400-1e31-4038-917e-d1f63b7def63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4f329-e836-401a-8df5-f3d53802c1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd9ec7-ba59-49ee-9cd8-6df1de06c12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7311d845-43d6-41a3-ad77-645c9ad9fcc1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a344b574-8f94-4bfc-867b-60f247dca47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cfb4dc-281d-4a4d-b430-f207d8a55622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3658fbdb-240b-4ef7-a561-737ebdffea64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36e0a27-04a3-4e71-901f-f48d1725331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305aef6a-767a-46e9-a2cf-dc128c9101dd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74085f8d-433c-4c67-8569-7ea729f691b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e9112c-554c-4c80-8b44-09053b07b6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940caa1b-deb1-4120-a24e-2465beb89fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ebd16d-1da7-4b93-961c-d69bd8e7a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7f2cdc-8ca3-42d5-bbc8-8d8aee9e8e5a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c446d9-546c-4d56-8229-84df72b6ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfcd2a44-8720-4a47-94ee-656f302df434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c87560-5ecf-4f62-861b-6e8af152a865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83500a3b-3edd-4814-960b-abf50e181cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bde9af-321e-4de3-a270-f381ded473f0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d6591d-4ed5-443f-9a9c-5fa8f9957549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bda7f2-d617-4b49-ac7d-b50a0cfe048a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3ec208-a7a2-4971-ae52-a5756a75b398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71affa6e-b004-4134-bdc7-d5a5fdc73adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d816aa68-c2a1-4b69-8cae-df51651e8cee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10ebed-7933-4448-a102-e0e901ad9559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345d4db5-97b7-4028-88d8-f63bb05dbf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e78217-6ebf-4c59-a750-30786165342a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa75303c-4a2c-4071-9a2e-2bd672bc80a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4979528-fd86-4d41-ab59-fbc367a8ceda",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d5bc8-9d12-4547-9566-cb2cc000e1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15370b6f-21c5-4df2-bca1-c2a0871901fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aa7161-050b-4f0c-b8f9-2cfedac07a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685d7deb-7bb0-4fc1-b8f7-497c3cb7ae2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0169c820-6d0c-4b2d-a3a9-9a35fc1f5016",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a1ace0-cac6-4867-92ab-81df7d0184a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fbab1e-d84c-4807-974c-c643964418c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb01bac9-6d84-4cf9-9f5b-583f949b0748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710eafe8-d3e1-4aa0-8957-a9610160ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef20c4b-6dc8-4790-b264-2322bdf60a02",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38369605-dd0b-4f0f-8642-7b0f7dcad511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b4f679-a251-4384-a996-0e0ad8dde485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96a4de2-4ec5-4226-a109-976d314f0a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f96e9d5-8a3f-4ebd-90f4-ab51c07d5cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d68011-aba8-4884-a368-e36026c2723d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f159e3fd-3fa8-48ad-84ca-47a971bb46c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abab5357-c9d4-4438-bdb2-39c93c54428c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a48bc8-7090-4bc2-9128-927755b7bc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd66c9df-8fdc-4b81-ba19-02847b90bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5a9577-39de-4729-88b3-4d28cc57fd8f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3138f90-87b4-4380-9ff3-e446cc9225b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c510c0d-1262-4d7b-8379-b4611bb66247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4652ad71-fa6f-4e1d-bad2-03d88289685b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad7afa3-2b39-40ae-be5b-4fd79ee01f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6726f47-b69f-4f91-a1db-4a80d3d739c9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee59dff-3686-4fbf-a610-1d5141f8e35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06fa3ae-30e5-43fe-99c6-b112a1d6e5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a0cb6-ba3a-4e34-bdff-c6343cabbe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52b2616-56a5-4b5f-b561-d7f888ab1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a57f49-f739-4ebf-aef9-b7dd30717664",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c08402d-660a-48e0-b8c5-8c8ae3398ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636d185c-6d91-4d0f-879b-3e44a2df5b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6460a84b-64d8-40ce-bbc0-d7398a8cb822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79f9830-b0a5-402f-aef0-e5b57d426281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19702500-152f-4178-a0bf-65bad5cf3b28",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcdc919-01c2-4f79-ba72-48f19bfda950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5dbfc8-8102-491e-85ff-8d712057cbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e93304-f8a8-4216-b845-9120741133d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f482dc-05fa-4c2a-bbc0-88c39836bcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4f9d58-ba24-462b-a5bd-5083a13f6954",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ff9c5-56cb-4941-b7e9-9c6ea0e69f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae00d6b5-895a-46ab-875e-fe4151f97f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38257a5e-5451-43e4-8e69-1b3ecb1104b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c04b666-71f0-4cf6-947e-4fab7c0ce48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88eae82-a027-429d-a26e-a3322a4cf497",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58637aa5-f848-40b9-8b2b-dfa9c78dc13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4458820e-2627-44a0-9218-1221945e2a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca41e15-3d80-4b2c-b365-c55225344bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec0bea6-d856-4064-9dbf-61b13e1c72fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f417de-1515-44dd-b385-35b760cc4180",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98439ca-39a4-420d-95c0-789bdada0682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13144cb3-ca94-46c3-b38f-7cca70ac759c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590e0232-9412-47ea-9c64-f8bafebc2c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f57e73f-fa98-4871-b4c1-b21ce8e6435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d9d5de-2245-41ca-a433-37edefdbd5a8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1854805a-24e4-4aad-ad39-5708f82cd5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d49ea6-ecf4-4208-9cfd-fd579e2388ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2567da6-fb59-4e98-8c23-433e5069b6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96d6bf0-6b9c-4b7d-8421-5932a462ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b6b8c4-2cce-4c22-b2d5-c266c7955abb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98020a12-1a53-425e-9420-105424e1f8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf51383-20bb-425a-b8a1-909375ee650b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cc5e04-80c5-4889-9d38-2d5b38ae1da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceb2d50-8e53-4b35-9d71-13f5ffe0a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4570bb2-2670-46b0-876b-be3316d032e9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd450abc-dc76-436f-81a3-5aebc766d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e8393b-0e68-4353-a90f-cec576156804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c0e458-fa7b-4d02-ba3e-53933cfc279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ddf910-8bd2-4966-9ae3-d68f4a73d6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fc35db-02cd-4868-9c21-67b33a67cb88",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc3da9-097b-4945-af8b-1df23d4dddd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577bae8b-7eb0-419b-89e0-1e0ec52fc7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476279f-f327-48af-a232-c517945c094e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0a465d-4ca7-4177-bdd6-5742432a46f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9f7814-dd41-471a-b2fc-fd508e91a33c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7350f01b-90dc-4091-bd49-72071bab3af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582a4c3f-fa13-4c9f-853a-e0fa40d9393a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8070bb86-12c9-4f61-90b6-fcca40fc4b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4065c9df-9bec-4fcd-81b3-03826f5275cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf8ffc-eb97-44b9-927b-83f5e9094abb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c37d3-a67a-4bb8-b3ec-52f6aeef0e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8aea27-ec4b-4077-9bbb-ccc856dda20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16b339a-e8db-4696-bcd8-958061542c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437abeb5-2734-4bbb-9c1d-606551e5da16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da60ba9-6f21-43c8-b970-4f2a4ff8c149",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29605334-3db6-4efd-b7e1-076d055150e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb620f87-7101-4888-a075-a7e4f239fad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bff05e-275e-4aec-8998-05980e83eaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268d3af-9812-425f-afd9-293525c25a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd434c5-3e21-491d-9901-e68b4639a475",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d36fc4-1947-46a6-a44b-6255d4f780ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526ff00e-2ae5-4e04-b71a-244e9e6bd016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474f926b-22af-4a0e-bc13-e3d048d61375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e7d5f0-6aa5-4392-817b-e6f889b82dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cd1121-677f-411c-8ae2-4f110d5037b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1379351-347f-4b29-a1f0-89f9191a5659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffa3d1d-cafc-4a89-8f09-1debb47876df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f5040-ef14-411b-883f-27ef8216c497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e50816-8b0e-4e48-819c-e37345d05f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d8b4f3-9b65-42f9-89f3-9017088fea8d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c4405-a51c-4d2f-be08-584c3bffec3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a9a2c3-ef46-450d-a465-70f64de49e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629543c1-5df7-45a2-9f1a-a63165d945a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fe5189-12cd-499b-9635-b5b6f9a730ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2bd44e-26f4-4758-9995-f298856625e5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4d7723-0fc7-48eb-a413-0b34c1ae15ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50a9506-0bc2-4063-aa70-33919996c7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2313ec2b-844b-4568-9cbe-2e325bc4d318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e84287-a98a-4cf8-9c16-8b6871017da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f311c3-77c9-46b7-8708-d1c10a04a5c2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85536755-e7ef-4c40-a32d-7424d058e1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67dbf57-67b4-4f79-9925-ed02a5bdf948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8568e909-6e07-4851-95bf-1417fd5d19b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edfd27e-9a83-4102-9ceb-83c7c83c891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33224ec-2ade-413e-b93f-d26144878763",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b9372-a726-443a-9304-1f3bc6e0a938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264b8267-f183-4833-ae86-11dc1a863900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cec0429-b49a-4c38-9f76-b8288caa9560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a941775d-1c19-4b89-bd19-29f60e116ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572a162c-1442-4097-b3a1-411afb482ec5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa37ec23-3f69-4b9f-9766-a7613d13e06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3636a18-d925-4512-9c97-145e868c2298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2ce562-999a-4b1a-b8ae-dc6964259558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5add77b7-fc79-4056-bb94-d25913454ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e8688-ec24-4703-9ae5-61fb1bcdd720",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fd3324-a6ff-44b4-9b14-3b271f33b201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8f4dd0-0348-43ae-b70d-6d72292f1321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84ba47-19e8-4fd0-a20c-cd8b60c7fd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3734b043-d39e-434a-a212-56fdbb440430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00334854-df44-4ec7-916d-612523e921a1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22deaffa-7a8f-4b41-a23a-9b2a309a087c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494712b2-3ba4-4980-a64d-796c79974e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfedeed3-4871-4341-b2ea-57a9d1fe7c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda3af9a-bcbb-48f2-a810-f2e39f9552be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e94eaf-b10d-4bb5-8584-4011beb52ce2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8d0773-a140-443d-b308-5c950e3fbb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013d67a9-d70a-4c9d-842a-ee6359d4d6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c06a521-11e4-4a17-b1d1-76802a42d44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec25caf-9fb8-4324-8fe4-8e8de1017fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eed111-f389-48d9-9349-e053eff623c9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69883758-2325-4f4f-b7ca-2a3e0c85b2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e18f9e2-1884-47b2-a66e-14349450098d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bacca4-c26d-4d8d-a5d8-04d036d6c282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f271aa9-d13e-42d8-b575-cb6c5a27d03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b9c51b-8eb4-4301-80f5-e2deb8449abf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ae4088-7b4c-4552-9bc3-2445a8be6076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66290c78-4522-48a9-8468-0fbf34f19c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b434c0b-c3f3-4d63-8432-cf98ebd1fe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca76460-9c45-4b2d-b999-22028971f848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11787193-8936-4251-a9d7-17928591c95a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19928872-1b27-469b-aa46-9766c50e0a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1332b9d3-4adb-4804-b7fe-c5a7c64df367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f605b85-59be-4320-9178-ba0e999dd358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cca238-2b44-4305-b39c-0a2fcee46d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32220b0-0da8-41a8-9baf-2951bc3ca01a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a84009f-fe22-4437-a52d-d56c50341f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e322336-a045-4a04-9ae1-9a25f855097c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d63da-8709-4136-88c0-3ef893d91c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9feb3531-44e6-453d-9956-f819fc8d3469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c031f23-0bcc-426c-8a4c-3b5dd3419801",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f1cd7-19b6-457f-85db-e3def3c27086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad249606-1492-42c0-94b1-b4961c6b5b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc64cd-6675-4bde-a97d-e570eb5c5983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bc081e-36d0-4dbf-bad5-8ab9460c3e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf81422-5b0e-47a8-9c5b-eb45dead2ba8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46668293-c308-4db3-84ca-152d3b1287ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043821b5-d7a3-4359-998d-942eaa13eb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed815dac-1c3e-4145-99c7-3ddbd75f308d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097c9803-3312-46eb-823e-03dd83a817d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e297754f-3a67-4970-83d2-70f03766de98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f668bf0-9b53-454c-8614-0c48b38b570c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5331aa3a-0dea-4a2f-821e-40391cc58e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec7cbf-93ab-4e14-891a-1eadfb36e9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6db90b3-df43-4af7-aa34-a2311dba92f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53e6356-a5ff-4d89-906e-c51068b67625",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714660f7-3d2e-4a8f-8125-b44e9405780b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fbf4ec-822d-4e8d-824a-e1b510e123ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ded4f53-1427-4ef7-a140-34b423e5092f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac6c719-7925-4e25-83a2-5f535373fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405faf0c-1e9b-442d-9352-544d64c47f3e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398dfaaf-e34b-4c02-a98d-908de5d1c837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c0567b-a901-429b-9f68-ddaabf2e75dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af056cbf-c46b-4efc-8720-6d2f3d432280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062016b8-2aa5-448f-b2d2-d18524801947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e8fd3f-b4d4-483d-94d7-38eea0a1a348",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9553e-82b7-41f1-a167-d699100b8f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06820cb7-5cc9-4c30-bb03-bbc19ddfa38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0687c2-805e-4461-8d13-dd0ccd5a5fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554cc156-f8de-4ad4-8195-2a61ecb506fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b2a9a4-fca5-4004-8b65-b973ac2a5ff8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45c518-9140-4844-b5af-8574d52a16d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c73dd25-933e-43df-b4cb-75b5f442c4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1701aee3-a329-46f0-b02a-5880966bb6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6118e9-e36e-4bc8-88d1-851f052e60c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cfb72b-f39d-4c0d-b65b-c345c7763104",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f015d93c-34bd-464e-81bd-a398ada20464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d6ceb8-d6d7-4b9a-80f3-199d630a4224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa74c51a-1f42-4136-8845-983dc1cd7f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a1a2be-8506-42ab-ab05-dcc090fc8924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f459b2-c821-4a2c-aa1d-4a7a7baaa0b2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42082e-bbb6-4059-99b4-910eeb808301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec850b5-b5c8-4ff9-8d0f-11146a533ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317c8518-2bf3-44a0-bb25-f232a2fb3927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfdec47-d259-4fc2-8f1c-55312f665c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54f1c10-a464-4176-aed0-44d8be2e4292",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b371cbb3-ffb0-4a1b-a40f-c1984560a73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15889412-13f5-46d2-9026-5da48a2437bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d289bbe7-7461-4d55-afdf-bc2a25a06612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52c18e3-d9fd-4a9e-b876-da54d7be1a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c033a310-0117-4a04-b650-ecf66d118c28",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81577083-ef7c-40ca-b303-6701bbd27f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a04c5ed-67a6-49b9-b2ad-e5be10993a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d575d1ca-5877-486e-9895-c0cf22162690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c42781-9e87-4f2e-813d-22b32ba474a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c596bf38-b035-4dc4-88bd-10792b13cb3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5696c024-6816-4fe9-8c83-bf8ca51ea868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9ffd1e-f06c-4716-99e4-eb9fb2c88294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a63e57-1d47-45fd-a46f-d96fbe929b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcc9658-fefb-4790-bf0a-ca202e1fed88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ffd471-f917-409d-9333-47295d4770a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a5797-44a8-49ed-aae4-d58d2ae11008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0603cf-c338-4ab9-b3bc-5b681566751a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649059ec-0ac9-4db1-9068-f3eb70eff68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d340440-dde9-4df4-832d-b84b843a7135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78846d49-3165-4483-bb3f-bd2e83c93d52",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319b2c4e-c7ea-473f-8203-c77fe0105b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72587c19-4c19-480d-9a3a-50bba3ab5f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4980c7b-5ba3-421f-8e29-3fd38c9b41bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba3f37c-f86a-4d5c-ac17-8473d829da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116d8efb-7cc9-4c8e-a06d-58f776e77c20",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c310a5f-9dcf-4f8f-83f8-56317d785ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd507fa5-10c4-4413-826f-a7077896cd98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f74a23-9405-42d1-9ed8-d51f88dfda36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd2f942-1f86-4099-b17a-a46bc80583f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b2eddb-3be5-44f5-a9d3-3a0ddd9b7ee7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cc203e-a890-40b1-bf4c-af4e37ae8d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8576db-3a10-4c96-9a8e-2c4214c616c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f284042-cd45-44b5-8d58-b63dc14ddadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa26bc2-5f53-475d-8a81-ada49b72b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ed76dd-36fc-4513-8d9d-1a24a4465ae4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87dc636-59da-4a88-8b04-462e503529a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dfd7f4-d0d1-45ae-811b-ff62c35c7184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de66c5bb-97b9-4d83-aa42-177f70ee42fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc49e8f-0c01-40a8-b082-4163052ce497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd90e7b2-4053-47d7-872c-f5dc50e12007",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5019e3f4-26cd-48ee-be70-15f6f62133cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b73210-1042-4f20-a94e-a8d3483197ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b6b333-aaab-4c62-b0f2-1aafa6d0676d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3a5581-69b3-4053-b13c-ed6c0407af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ac0a61-0178-45e3-83ff-aa89ee32bff6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33784c2b-2d4b-462e-97d9-2aa68f5c8850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e27b398-0ccf-4fb5-af8c-d232151fea98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad43c615-e752-4625-afec-c336dfa6bc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b682af7e-184d-4533-b1dd-25b5ffc50135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52a780b-d46e-4ee0-8030-be1e3f9b1b3d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed905c2-de8f-4ac1-83c3-c81a012f3d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9923d846-f73e-441d-82e3-1f89136fc26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e045c7f3-b012-46a8-a4ad-a47d8abcf280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdc9297-075f-4872-a33d-b7329e35b084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1156db-5926-403e-ba73-1d49768180e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9725a818-f83d-4781-bba6-40964e31e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fee76c7-8333-4a3b-bc9a-e736637fd4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae435400-2a87-4c6c-941c-7d482a0c1670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57c7899-70ee-40c9-b993-e2db0dcbdd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ac765f-632b-4ede-9003-da8734c27d96",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45f65f-01c9-449e-8368-84ae715864cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8ee101-bf86-4636-ab8a-200642dbf139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb2d74-cf44-4383-abbb-79cc0848e210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c47f64-fcac-4f2d-a755-07594d2df2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acbd3a2-920c-486f-b5f0-f26faaba7d9a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bdc799-bbc4-4200-8ef7-e6e720604f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54b459c-6eb5-42c5-b7b6-564a75010318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39377edf-63f1-4840-9e37-2fb140241ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc01458d-fcd7-46e6-929d-8529aa7721a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be327569-0669-4060-b4b2-bc3f9794b643",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e4443b-1d00-4f7f-a3b5-8fcb2bde49e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bea3364-b561-4396-88cc-cfae1234e283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126104f8-549a-46c2-9dc2-c1230317c03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd90d13-466b-4093-b53d-efc7de299897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfbdfd5-9e8a-45bb-9a27-bea5c9cec327",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b3913-aa80-4db0-a8f9-47f6ebce9b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc77a81-090b-4f6a-89a3-f4f12728f299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa22f7-45ac-47bf-b633-6134f24829db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2278e755-4941-4211-8300-a4835e0195c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876b0ade-b4ea-4ba7-bc86-2bf3f63dcab1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2295c03c-f5a1-4ea5-abbe-11e32aa150f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89645d0a-048d-40f5-a6aa-2c51b7f01e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b1f12b-37fa-4331-9f0d-c2b8baef069e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baad678e-447f-491d-b849-9f18d8e2b7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f854d24-ad5b-4251-8f3e-8e9335a82c54",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545d09e9-6904-44a8-9743-e54af134f96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7498a4cd-8bb9-4191-af7d-57fe4606c5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2650e0bd-4b3a-422e-9c71-2323ae020848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc56d37-8da1-483f-9c9a-2c73ef080905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9825358a-a5f1-43a8-90a8-ce8b928ca500",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff68546-496d-4cf8-9142-e510ae48b95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6664c967-7760-4b0c-8534-16f1b11dfde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9633a0c5-f3da-41ba-a625-9fc7c4ad7394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe302410-d79f-4559-94b3-568eb519324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965b9c4-120d-4cc4-9049-c41fc770bfeb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4601cae8-a9c8-43e6-afb8-7be7f733f257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095153ef-1415-431e-9d75-8149a7b9d153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e21dbf9-2f15-4773-9c69-6c169b648916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b95a65e-485f-4810-80e8-5983d9f41a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49df6ae-42ea-465a-932f-faf3335faf7a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8714726b-2e1a-481e-9482-8424a5980708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bcd1d2-7a88-4b8e-adec-7a1fd85037eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702f1e0-838e-46e7-a4b5-df43c2dd8077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7d2a64-8324-48ea-8079-fef5d3f31cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7f2676-441c-40b0-bfd7-30bd6f5316ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9c865e-0d1d-455c-9e68-f7aefb4c0763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53296e32-a699-4793-9dcb-70b95941dd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd8bec5-308e-48fc-b37a-44e4925a444e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9f02e8-ed60-4a0d-b203-2ba667f11c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d6028f-2f38-42a3-943d-d14d3711f83f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccdcf7a-e20f-4576-a128-3a28c45b4140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486294c4-5768-4144-9b75-18cb906332ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55972fd9-913a-40a5-b722-56297ac9f468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9508d07d-c7d1-41d0-993f-e64085f844c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a975368c-10bb-47e4-b67e-e89f6c928818",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28321e97-8a84-4bc7-aeb2-2218fc12529b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5644b4fa-19eb-4895-866d-feb328ba55db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542cec18-21fa-420c-a36c-5686a5a4eb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e41bf7-4236-44e2-a65f-b389b5505845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34ce84-2e85-4053-8185-94951a54e90b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e852246a-8c6c-4962-8cbe-c5e2476812f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532cd9f1-7bf3-4040-a440-e3640bd25e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2400c6e7-5a5e-47b0-b166-66c6a162368f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c2f475-fbd2-4943-bfbe-77953d446fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b3e546-ff37-4598-8555-54cb12cdc930",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eb3101-cb59-4538-8598-939f47e3f94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b213dfc1-10cf-4d01-bed8-90fb3d32a39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7c72eb-eab0-4464-a34e-dd46e9d29002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804b8d7f-2209-4466-8b84-fe66c5c97689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28d98d9-ca03-442b-8c5a-44f32ff42453",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42d6429-f0a0-4d0e-bfc3-9697858d99cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5150eb7-336e-46db-8d2d-85d20551262b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8001876f-1a2d-4f19-92ee-63a306226acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84808656-dd60-43ad-a66b-0ad8381abd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb04070-6ee5-48f3-8c75-7f395241807b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c5b2d7-178c-4698-8b1f-cbef1f29057d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b04b2b5-ed87-457b-8f4f-9e355ab796ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66272a-2857-4b81-8ecd-2743a73e4174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e210c0d7-7c7a-4213-862b-b9df260e7dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3d7b8-7cc4-4aad-b6fd-b51b6d843e0c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a40069-1708-4cef-bf64-5cfcd211d23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b010569f-24ca-42c7-8873-67a6543a748f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657568d3-74b1-482e-99bd-208644429672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb6cc5b-f877-4e72-9e62-1f615e82d78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5a970-4188-4b8a-8d39-6385dff79927",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e611fc-3b2a-4de2-a05a-22fa2f1e7aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11312a31-322f-43ae-ae55-33f2ff6c24ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6040c285-a16f-4490-b124-61b053e93728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac9e0e0-0ef1-48c4-9326-3561f3c3d12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1a1601-0af9-49ad-aaf0-c059f4a56c8c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524b0e49-7331-4f8b-9951-a541009bc5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486186a2-1893-49fc-93bf-e56c92dfe27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2489c159-bb0d-4222-8f65-43d378bcc47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa453eb-a2fa-4ae1-82e0-f3116f6c7ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f45cee-49be-4a26-afdd-32452bf23963",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b58018d-a8a2-4107-b2e6-db1e7f4b5a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92e78a1-1185-4b47-bdf8-80f8e453d373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d82678-4db2-491d-9aa6-2f20abcfdc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60829f3a-6218-44d4-b54a-5c0c24e32510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798eb92b-cdeb-4367-8aa2-b38b3f7867d8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356330b5-dc4a-4051-9dde-44b0556f4678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8a9c3e-892a-4b3d-8b5e-ecba23c94903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19228376-549d-4d9a-aa51-7148e4f57c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48916fa4-92c8-4778-aa32-183993d3bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cde0075-3b50-42fa-9056-911f3e3c2d82",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b51e67f-1f07-48f9-8d95-71b393fdddee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5284f6b0-a6c3-4f34-9e6e-33e8e7543b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac194f7-86a4-4f66-967c-db5364779a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecac892-b780-4bce-84d4-12956637cbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436e581-5758-4081-9d64-a5499c10f992",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae42c75f-86b1-41d8-8853-102fd92d6c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d772447-5007-46fc-b555-57525857b936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f8a25-e6c0-4315-a532-e3dd711b968c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d3dc90-b57c-4312-ab40-64ae3ab27fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9436a8de-09ad-4014-adf8-0ed15dc909a5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010934d7-7511-41e8-95df-13135424aec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea46e6b8-0a1d-4fc1-a3f9-2b9dfca7f62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2132adc2-b8cc-4817-9ab7-1f869bf6fce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5ce52e-cd32-4b74-9d94-f92d8e01c9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb0f8e-23f1-4d25-9ce5-da79c64cbb89",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21521c62-663d-45d7-b3b5-dba5a3776778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5cdc13b-c92f-4e3b-b7b5-ae2593a89715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836fcfd-1247-4371-bbc8-2847c89a8757",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a966dd-486d-4ff9-b0cd-768d8e89d8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1dbb8c-25d5-4ec9-ac99-0d16258195b5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8438d3e1-2f41-40c1-a498-b7b5754e768e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc888a7-e602-4653-b13f-c115b534e537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae62ef8-7d7c-4f99-a755-633b5c2dd4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9783d2-b1c8-487a-89d3-4d456b32abcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354c362-e215-49bb-be49-4c876c625e1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b588861-5ee0-45b0-b6e2-80a3baeb7828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3347b5e-c2af-479a-8770-b464061a8152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e582c-f376-46a6-82df-2ef438e7602d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3976478-72bd-48e6-922d-fbf86e9a0c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daded8b-5114-46be-996b-fe535fa232bc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aee0268-c0a9-4890-bda7-bec97c072f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c026e4-e8a6-42e4-b615-39351316a950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c225502c-9d5d-43e9-a5d7-ac73d0321c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37297f51-b7b3-42dd-b457-e6bd0169752c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5854e6c-e82a-4888-84ff-f36ba98d7c94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a5bcce-390a-42a1-ae50-ebaf0238dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008ff05e-b81d-473b-8f0a-48f749fc819e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328aa3d6-c08e-4926-a167-317207ad6489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a9dc1d-879e-4c08-a015-eaa016d1ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4196fe6c-3a4f-406e-bc03-51b35bde7e5c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9123a-6389-41aa-a895-376ed0bc45b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b674b1c0-f21e-4b0b-b032-46d64451bf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2a260b-7705-4650-ac55-d2129691ae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4b9e6d-651f-4190-bb3a-4c6dacc82d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed0d20-0275-4c6d-9818-a96cf8d12c89",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39264f12-6301-4bdb-9dca-5dee30dc931f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84a4f18-196d-49b6-8185-d913654d9808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7da2f-d859-40a1-924e-fc3a084cfdf9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494f1502-8cd2-430a-8725-a7b28eda5a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a50f43f-a19b-4832-9b5f-e9db27807c50",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018a1e8a-add8-48df-8c32-9432e6212e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658c272f-f3ff-4199-b280-9bd615d7d096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42580dcc-729d-4174-851f-9accef49e297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3cd606-5f3e-48cf-a1a0-273329fa8c51"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8674434-ce77-4f7b-bcfd-de5a6bbfc895",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "425c9174-bb39-4c43-9f8a-10410531a91a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b041cf6-e5f0-487f-8bf1-83e62702edd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e27e146-afc6-492a-b384-288b349e4380"
                    }
                  }
                ]
              },
              {
                "id": "97c976ed-3f67-404e-93b6-916d58d44d7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d0f6563-2e9a-4464-bc78-d1edd2e0fcf6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0252c481-3f82-4046-9d1d-dfbd12d62935",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2e947834-e28a-478b-bdeb-c38b3ee73c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e0219-d7dd-4b64-8222-2e88f6c9dfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc41a1c-2a32-4f26-bf3d-be31dc52d63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cecee4-d33e-4fa0-94b6-4f3785b2a9c6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f35e28-0df4-4d97-abd6-64c9d677be51",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "15e54c75-00a2-4f0a-9932-cf97f2679f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45031301-de03-42ee-96b0-391b802ae5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2748a060-1c08-4bd1-aae8-db87e8f78db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db4cb6fd-5872-4e74-a403-ad727b96906c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07a7543-c80b-4c88-9472-e15cfb2ac938"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "882bb088-10a8-459c-a609-33b85ae92eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cb26cfa-c54d-4e58-be06-5a064a26f23a"
                    }
                  }
                ]
              },
              {
                "id": "27cd3f03-4545-49ab-ad15-fe669959879c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2a6520be-10c0-440f-ad35-e96597345a59",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49528dc-1397-4959-b732-7e995498dda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5010d0a5-8cef-43f7-bdad-d0f1987f3f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f72f26-da82-4657-be9a-d8eceb224061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a384a5-5b00-4913-822c-7f7dbdffa737"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5db86452-a746-4754-981d-653811333c64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b31df3a-93c2-484f-a9f7-e5b2bd88969e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3a71f3e-7083-44da-896c-72840e7e4e2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "27de6ecd-f255-44c1-abea-a980c9031121"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b9f6d36-0d8f-4231-b21e-8863579dda43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c96b01c-a9c2-4d0b-a4f4-b1f75d24dabb"
                    }
                  }
                ]
              },
              {
                "id": "e9d413d7-b5eb-43bc-b5a2-0d71477eb642",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "750b321e-0754-4cb6-ab48-1622dcb348f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5ae5128-adce-443b-92fc-4dcfdc1169a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4504469-def7-4bce-a475-5142df40d94c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1755c91-bd2a-4f0f-bdff-239b9c71dcc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca61fb59-e637-4148-9349-d4925bfc8086",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41326e41-a906-4827-b58b-3725295b9e49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65d3c951-6dcb-4809-8b5a-d56a123154ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18f87c67-125c-418e-ae8f-a1e44118226e"
            }
          }
        ]
      },
      {
        "id": "6d8785f6-3be6-4696-a362-28829064f1e1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d29bc94b-0184-4807-b4e6-0c7cade4558e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bff4a4e7-109e-4ac3-8f17-d4dec585d19a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd905b-7dba-44ce-b147-af254eda972f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2841045c-2aa9-4ae3-9b76-0cbbbababfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9c093c-fa3c-4346-adcf-97a83d914341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e918966c-d612-412e-9443-1af9e80ba6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ba9734-6464-49e0-a1fc-7b36b7b7b612",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dc0126-2e89-48b1-a944-6b4d1decff87",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9c251166-970a-45d0-ab80-9395bb00d723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5711db62-3775-40e0-85c7-15adb18d377a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f91995a-78fc-4d7b-9022-691d3df7d0d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af7a7864-3ff1-482f-b064-0cfd8e3ee0e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b73de023-6560-40e0-a997-704543c57527"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7d46afa-3772-4ebd-a2a7-35132a087dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb2ff3c6-388d-46c4-b73b-218dbf892493"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cad8a9a8-ed52-4542-963c-e7a693f49d63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1024b0ed-4c34-40d4-a536-1275fc58bb32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1453d27d-d8de-46d1-86a4-3d7bad46bc8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffb7acd2-8793-4d0f-a370-43b86a4c7436"
            }
          }
        ]
      },
      {
        "id": "764676c0-07c8-4cd1-bb0c-356680995c52",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b046a596-596f-41d2-b321-26f9e226d26d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91c494a9-b2e2-49e6-a3d2-fb6a8d715a7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80544743-d093-4b3b-bc52-a7114aeec473",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c570cd0-6250-420d-8777-5adf83860421",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a33202f-da37-4466-95f5-aed052cfad7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4573397a-f0c1-434d-a921-6d72f9349647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cf0274b-b4c2-47ae-bbd8-1e9f0f74fbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d31176c-72f2-4f08-ad22-efe56cf554e5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e554dd3-74b8-44b8-ab9f-2345179df165",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61191425-044b-4d40-92e1-c832fe9206ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb7ae91-5c10-4718-af7a-9ad99604c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f7c4ee7-363a-41c5-bf41-b6d564a9f3b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "351c7d3d-39ff-40ce-9550-0622583d8a1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b339e911-4bbe-4155-8fa9-379f6561ba7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "774ff959-97cd-4303-9497-4e4a58e6e647",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5dd270d-89dc-436e-b9d4-eea0d2dc80f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81c58555-c483-4e3e-8901-9381c3da2d3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28ed5306-faae-4610-a9b4-586b5d97f118"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e949927-11ef-4841-a172-30fdae96bcd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1dfed6c-5d5c-403e-bfab-29a6b505a2ee"
            }
          }
        ]
      },
      {
        "id": "4726a693-c706-4e37-a104-c63f93cdc3b1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "97aa856e-f617-49ce-b9c3-4e8245cd7354",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab4f99cc-e6ad-47cc-83ab-83c4f4a7df70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "134c05d3-e329-4f3a-a84d-c1c14126529d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe93841-8080-4beb-a842-db7cc63db85f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea04bf30-d46e-42b9-8657-827f9cb3348c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76305d-6c01-44cd-907a-274d0f6aedee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39f0b29c-5a57-4399-a78e-40e721939480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ea85e3-a6d7-4680-ab31-e2046045a1ae",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc67bb6-d443-4947-add9-56b128280430",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3845b962-05ba-4dcd-8fd7-e7064c0aeca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded5bab8-d0d0-4b48-b4f5-c6108e6834fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff21b6da-42be-4b71-97ae-ea6ab97548bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a7a87a-cc69-4143-9e18-6a6da59554db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17a34990-f92f-4ef3-8dd1-e125d291a3a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb110ee-09b7-4223-a5fd-afbd62824fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adb83432-a70b-48ca-82ed-2ae882b4dd29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd96444e-8dfd-4572-94fa-84499115d1f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6c1a17d-85fd-43c7-b2f2-77830355c31d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2980881-3a42-4c24-a618-a752f3fe3c60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76a7a540-aa88-4f0c-bb42-22ff188bdaa8"
            }
          }
        ]
      },
      {
        "id": "820b2203-3857-4a0f-bf1e-b42541604593",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e4c46ec-125b-4f88-bf83-36400a665e90",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b6054dc-e623-414c-84c8-385eeadb6241",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9d7bc6dd-1ae0-488e-97a8-cf9515191783",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b64a1d0-93bc-4ba8-a954-8c3b9f02365e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d07fc87f-731d-4686-a432-17b679a1fbe7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 78.27692307692307,
      "responseMin": 28,
      "responseMax": 288,
      "responseSd": 27.342841950264788,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681086979698,
      "completed": 1681087013804
    },
    "executions": [
      {
        "id": "e4df5d39-5a76-4ef0-b5a2-5578a70ff1ef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1fbaf256-0ea1-42f1-8fb9-4667caf9e0d2",
          "httpRequestId": "8a7f472a-8f96-4620-8ac9-11bc5c78a0b1"
        },
        "item": {
          "id": "e4df5d39-5a76-4ef0-b5a2-5578a70ff1ef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "957054b2-0c02-49e8-b0ab-ceb5fc0e6c99",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 0
        }
      },
      {
        "id": "7f929e7d-80a1-455e-9487-faebb5ebcb3d",
        "cursor": {
          "ref": "47977299-ab86-41c6-a502-4c27a21a9533",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f2c09c1-dab2-4430-aef9-197c1bb26187"
        },
        "item": {
          "id": "7f929e7d-80a1-455e-9487-faebb5ebcb3d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e191bb5-67d5-4eb3-a765-cffae6547eb5",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 0
        }
      },
      {
        "id": "635a59d4-4d87-4350-893b-43f898143e2c",
        "cursor": {
          "ref": "00295c0b-2e71-466d-b659-c106daa7f00f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "359cf1f5-66fe-4cb0-a476-8ab96c16ef28"
        },
        "item": {
          "id": "635a59d4-4d87-4350-893b-43f898143e2c",
          "name": "did_json"
        },
        "response": {
          "id": "14fdfa6c-dec0-4b74-b3d5-3a0c7563fe9a",
          "status": "OK",
          "code": 200,
          "responseTime": 280,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da561b51-ce95-427b-b442-c4850d6fdfd4",
        "cursor": {
          "ref": "be040b25-3f4f-4254-a262-046ffa3baf51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99ae4c48-9410-4bde-862e-9068028172c2"
        },
        "item": {
          "id": "da561b51-ce95-427b-b442-c4850d6fdfd4",
          "name": "did:invalid"
        },
        "response": {
          "id": "12ed3729-fca1-47a8-9251-631160dc9966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da561b51-ce95-427b-b442-c4850d6fdfd4",
        "cursor": {
          "ref": "be040b25-3f4f-4254-a262-046ffa3baf51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99ae4c48-9410-4bde-862e-9068028172c2"
        },
        "item": {
          "id": "da561b51-ce95-427b-b442-c4850d6fdfd4",
          "name": "did:invalid"
        },
        "response": {
          "id": "12ed3729-fca1-47a8-9251-631160dc9966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22bf356-bd91-46f6-b8e8-7865b324b489",
        "cursor": {
          "ref": "968490de-3491-4528-8fa6-d05abf0c4185",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2e1e433f-1471-408d-85fd-b26af67c7b63"
        },
        "item": {
          "id": "d22bf356-bd91-46f6-b8e8-7865b324b489",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d4c32f54-586a-495d-8fbc-25863da5a303",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc23675-eca3-4da7-9d73-e3a1b930c6b6",
        "cursor": {
          "ref": "72cac808-3390-4bdb-ad0e-16dce0b8066b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1d5562dc-f156-46d5-800e-a7aedad4ee24"
        },
        "item": {
          "id": "bcc23675-eca3-4da7-9d73-e3a1b930c6b6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5cefc010-04a1-49f9-a22f-3b672563b471",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60e6d91-a66a-49d2-a0fc-8477436e72e5",
        "cursor": {
          "ref": "a7238066-89b2-4068-868d-8a9abafd01a0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "39b415d9-4513-4525-a864-dc871f593b5d"
        },
        "item": {
          "id": "d60e6d91-a66a-49d2-a0fc-8477436e72e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e6ec64d3-9316-4ded-bb13-3d08313fbc40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd01549-b9f4-4c2d-a306-0c7f2c34ae2f",
        "cursor": {
          "ref": "67fe26b6-a312-49f6-83cd-b01c1738e666",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ad6cda2-ddcb-4fc3-a73c-181cac2fb8c3"
        },
        "item": {
          "id": "0dd01549-b9f4-4c2d-a306-0c7f2c34ae2f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "14245422-ba4d-409e-9f13-b831ebe4172c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 70,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd01549-b9f4-4c2d-a306-0c7f2c34ae2f",
        "cursor": {
          "ref": "67fe26b6-a312-49f6-83cd-b01c1738e666",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ad6cda2-ddcb-4fc3-a73c-181cac2fb8c3"
        },
        "item": {
          "id": "0dd01549-b9f4-4c2d-a306-0c7f2c34ae2f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "14245422-ba4d-409e-9f13-b831ebe4172c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 70,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234a4b7-1455-4da2-828c-33043a019410",
        "cursor": {
          "ref": "0aea67b8-3fa9-4b1b-b06c-72160e138326",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5398ac71-52f3-4e8d-aaff-d9496c06594b"
        },
        "item": {
          "id": "6234a4b7-1455-4da2-828c-33043a019410",
          "name": "identifiers"
        },
        "response": {
          "id": "839fd64f-85e7-4233-858d-965c308a308e",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62876972-d5a9-4a15-a46c-7ba4d06daaf1",
        "cursor": {
          "ref": "b9dee50c-0569-4699-ba1a-258009d93565",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63d2c714-87ad-406a-bf8d-eae53478e717"
        },
        "item": {
          "id": "62876972-d5a9-4a15-a46c-7ba4d06daaf1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46b44f1e-df04-460a-b0dc-179d8a9d5c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62876972-d5a9-4a15-a46c-7ba4d06daaf1",
        "cursor": {
          "ref": "b9dee50c-0569-4699-ba1a-258009d93565",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63d2c714-87ad-406a-bf8d-eae53478e717"
        },
        "item": {
          "id": "62876972-d5a9-4a15-a46c-7ba4d06daaf1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46b44f1e-df04-460a-b0dc-179d8a9d5c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4984f7b5-a8c9-4877-af35-0d440d28a786",
        "cursor": {
          "ref": "e360bf04-b907-40d5-b0f5-5430c43755cc",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8ddb398f-c1ad-4633-be2d-aa6dcabf9ee4"
        },
        "item": {
          "id": "4984f7b5-a8c9-4877-af35-0d440d28a786",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7413ee42-1d3d-45ba-976f-f6cc036be68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0e3d84-52bd-43b8-9421-42e31f83b3c7",
        "cursor": {
          "ref": "d541fb75-fe23-42e7-aa7f-240e5a114c54",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "30333489-6957-43ac-942f-b25046ce7a96"
        },
        "item": {
          "id": "1f0e3d84-52bd-43b8-9421-42e31f83b3c7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c138716-6e79-484b-8e9e-ada8bb82fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d8a4f-45c1-4ff2-8940-d878a0af7a2c",
        "cursor": {
          "ref": "917d6a6f-5878-4d11-a75e-a0ab003d1adc",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f353881-1f49-46d6-b92b-c3ca69dbe756"
        },
        "item": {
          "id": "043d8a4f-45c1-4ff2-8940-d878a0af7a2c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d1e33a85-7ad0-45af-9843-cfe772beda5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645e94f2-fb59-4e1d-a5a1-81ed8d1f8d8d",
        "cursor": {
          "ref": "85300cc6-4404-4ab5-9282-71ae72ea46d8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "49005d54-ad46-4398-9850-6139db82c8dc"
        },
        "item": {
          "id": "645e94f2-fb59-4e1d-a5a1-81ed8d1f8d8d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3ece961a-85e3-4b4d-b1d8-068e4d63d8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad7da85-6bf9-48e5-8322-923ba73cde3c",
        "cursor": {
          "ref": "0c80c7f7-8d7b-49bd-b729-c512114ef1c5",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5db3d13f-9da6-4710-8958-2faa7dae4bca"
        },
        "item": {
          "id": "dad7da85-6bf9-48e5-8322-923ba73cde3c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dcc60739-d27c-43d2-9a2b-182742cdfc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf6771d-2b06-48d3-82d4-f909b14cd9bc",
        "cursor": {
          "ref": "17455aa7-675c-4708-b9b4-164db591a1e3",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "08518474-d3ce-4823-868d-88464ecccec8"
        },
        "item": {
          "id": "1bf6771d-2b06-48d3-82d4-f909b14cd9bc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4137d0b0-e3b8-40f1-b70f-fc5ef073c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef1dabd-4ed0-4902-9a6f-f94c228c112c",
        "cursor": {
          "ref": "fbebb570-79a6-4163-bd4c-f05d53434189",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f941c7cb-54cb-403e-b8da-b1035f4be5c8"
        },
        "item": {
          "id": "cef1dabd-4ed0-4902-9a6f-f94c228c112c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69fe6957-f4ac-4bba-8fe0-ecc8ff97e6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deb3fb2-df12-43f6-a1cd-eac03c00c352",
        "cursor": {
          "ref": "25a5fea6-d092-4eb8-98e0-ec70a6238c0f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f7c0b35-9990-4115-8f5f-b0f96e4ca29f"
        },
        "item": {
          "id": "1deb3fb2-df12-43f6-a1cd-eac03c00c352",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "16765738-01d5-49d1-966c-fe2e74b84140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b040a16-11ac-4808-b042-b0285460c1ef",
        "cursor": {
          "ref": "60f291bc-dc3d-40ae-8a49-cc4def61b5b0",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3fba99c3-00e5-4054-9e5d-f2717daa51c2"
        },
        "item": {
          "id": "6b040a16-11ac-4808-b042-b0285460c1ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f22eb88c-661f-415d-974f-0ec864147366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea277fd-3356-49f0-b938-f75faea20067",
        "cursor": {
          "ref": "4b45d819-868e-4cfe-9da6-d72f09c39a1b",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b6a54c2-270d-4fa8-9e59-bd3d7e70c03b"
        },
        "item": {
          "id": "9ea277fd-3356-49f0-b938-f75faea20067",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f6822bfd-05b6-4e36-9d3d-232b6e596384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a541f97-c559-49a1-a7ac-852dbd712309",
        "cursor": {
          "ref": "b4a6c718-cd91-45d8-9200-4bc23ca74648",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "733b1593-68f4-4b90-94b0-17aefb1c1057"
        },
        "item": {
          "id": "2a541f97-c559-49a1-a7ac-852dbd712309",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5a037e55-818e-49ae-ac49-a6aacb38ab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1644884c-6580-4401-bd90-9d5dc815bcd1",
        "cursor": {
          "ref": "6a90c3e8-f370-4810-97f0-f945dd91047f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "67ea4ccf-b358-42f7-af54-b5ec4b5e1bf7"
        },
        "item": {
          "id": "1644884c-6580-4401-bd90-9d5dc815bcd1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce175120-bb78-4857-9432-4f9645ff4c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd388686-8537-4c9e-b344-166848c65df1",
        "cursor": {
          "ref": "4fd79f26-725e-4c73-a42a-7e7a0436a36b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55164307-abc4-41bf-9c05-bd5811a08e2a"
        },
        "item": {
          "id": "bd388686-8537-4c9e-b344-166848c65df1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "355f15d2-2e07-4f43-a930-e9216876f3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b334cd67-7246-4d8a-929a-80eb94838cc8",
        "cursor": {
          "ref": "da32757f-401e-4318-8b5d-e6c194ab7489",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9987c221-cef2-4f6a-ac0b-1b9b1d0f6056"
        },
        "item": {
          "id": "b334cd67-7246-4d8a-929a-80eb94838cc8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c991945d-bdf5-4a12-a5d4-21560c1aef16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a55670-0e97-4523-bc6c-759f79d29c90",
        "cursor": {
          "ref": "514391ac-c539-4d53-82f6-073f2bde5250",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5204878-6bfe-48d0-95d1-933368f22e6a"
        },
        "item": {
          "id": "e6a55670-0e97-4523-bc6c-759f79d29c90",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "77a9f400-7f14-4b24-8af7-4adedb0872d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f897c9-bac5-4078-b06c-e6e946595e74",
        "cursor": {
          "ref": "ecee7cb0-849e-4391-81f5-7cbd2d0f9df3",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3e745074-15c4-47f4-ba5b-053daa70f937"
        },
        "item": {
          "id": "50f897c9-bac5-4078-b06c-e6e946595e74",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c11186d2-55ae-47bd-9bc2-b24b75888498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0864f724-e30d-47d5-8f96-16c075045135",
        "cursor": {
          "ref": "a3399d8a-9084-4377-bafc-7a409eefde68",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40a24d17-5035-4a23-9cbb-40eebd1930cc"
        },
        "item": {
          "id": "0864f724-e30d-47d5-8f96-16c075045135",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "643ae1f5-7ad7-476f-a094-8eaffee03d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a75d2d3-d147-4cae-bd1c-e3449ec67691",
        "cursor": {
          "ref": "5913340c-3d35-49b9-8d64-35bd4e639e1b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "30b4e69c-12cb-4d02-8157-444e135307d7"
        },
        "item": {
          "id": "6a75d2d3-d147-4cae-bd1c-e3449ec67691",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "822c8446-3714-464c-ba63-4a7eadf576cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee653a-cd43-4544-8b7f-9c1d09f0d532",
        "cursor": {
          "ref": "cc2bd887-11f5-4e99-a697-7cdf05d8ac5c",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "099931d8-1b32-4827-93b5-6baffcc55889"
        },
        "item": {
          "id": "94ee653a-cd43-4544-8b7f-9c1d09f0d532",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d3fadbf1-ecec-4caf-8c4a-0665c2b57523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665b7998-db01-4b89-b78d-e4805da08c5a",
        "cursor": {
          "ref": "fecbac53-16e8-469f-b3ad-e4da587fe7d3",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6230e669-8fa8-4fc3-86f8-5611affbf264"
        },
        "item": {
          "id": "665b7998-db01-4b89-b78d-e4805da08c5a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d8bc6d58-b7ee-4dc5-aef8-e23fd8150bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43506fc-3770-4489-b49d-155f10b087c2",
        "cursor": {
          "ref": "044236b6-7b76-448f-82d5-438386d35dae",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c56b588a-03d3-43e0-94f6-0e343041e09c"
        },
        "item": {
          "id": "b43506fc-3770-4489-b49d-155f10b087c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c87a3ad8-3724-4c0d-be42-221966275ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b16a96-92d0-49e8-b964-5cf1ea46d13a",
        "cursor": {
          "ref": "9e856d69-9a5f-45a0-aba2-b9f779c6a195",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "62a830a3-4337-4ab4-95df-06c12b988c83"
        },
        "item": {
          "id": "19b16a96-92d0-49e8-b964-5cf1ea46d13a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de9cccc8-5d09-49de-9fd3-f2e3dcbaafc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5519774-9aef-41bc-879d-0ce0219e71ef",
        "cursor": {
          "ref": "16bb38df-c397-4e24-811e-75cf6bf7c31e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f8da2ca8-4d76-4670-8df1-aa427c49f843"
        },
        "item": {
          "id": "b5519774-9aef-41bc-879d-0ce0219e71ef",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90e35d47-1fe3-45f4-ab36-5259f2141468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad08155-dc7b-42ed-889f-8e7c18488235",
        "cursor": {
          "ref": "c69e762f-ba13-49f7-a500-cf609f1831a0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1c7e3769-1999-4f87-a950-27ee5ff2c857"
        },
        "item": {
          "id": "5ad08155-dc7b-42ed-889f-8e7c18488235",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "db6e26f6-f7df-4d01-9dd1-9a55e8a0bfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6022c26e-ff47-4d68-b1b2-79faab45db8b",
        "cursor": {
          "ref": "a7febbe4-8718-47eb-b4de-83fa0cab0370",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c001b7b4-447f-4480-b892-7bdba9fb2ba1"
        },
        "item": {
          "id": "6022c26e-ff47-4d68-b1b2-79faab45db8b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85002589-17db-4fed-b38a-ac194dec5762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb80846-07b5-46c9-968d-9447e0ac465a",
        "cursor": {
          "ref": "4fc09aee-c390-4559-9189-7af49464670d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1051e602-29f1-4ceb-bcfd-1027ce77f8bb"
        },
        "item": {
          "id": "6cb80846-07b5-46c9-968d-9447e0ac465a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b2c51ccf-653b-4503-aca7-66afdc810f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093915b-db43-40ed-979b-b79bfba697da",
        "cursor": {
          "ref": "3be22e08-9bd5-4d6a-ae57-4becfa8dc907",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cbed96e8-c17c-4ecb-976a-f2d7808aaa89"
        },
        "item": {
          "id": "2093915b-db43-40ed-979b-b79bfba697da",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cc93a8f0-56c4-4a1f-a978-8d990e9dd633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff97279f-d1ea-479d-b624-cce828f24193",
        "cursor": {
          "ref": "6d735b56-39a8-430c-8e37-6cbb298af70d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8dd28021-319b-4b84-860d-6392d5c1407c"
        },
        "item": {
          "id": "ff97279f-d1ea-479d-b624-cce828f24193",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "efbc1235-a7f1-4156-b6e0-8022d67212c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab39ba1-283b-4e23-9c4c-bb6064a28c26",
        "cursor": {
          "ref": "7b588bcb-e8a2-497c-a7c6-1ef58a4f5bd3",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "521bf585-91b3-4040-8fc4-b82b13e0017e"
        },
        "item": {
          "id": "9ab39ba1-283b-4e23-9c4c-bb6064a28c26",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d3b00546-6285-4bb0-91c6-ebf1d4e446f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c106ec1b-38ed-48db-828b-2c123a988014",
        "cursor": {
          "ref": "61dcbe45-db04-413c-945d-082e463bd775",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "44fe1325-71c3-4ffb-b8b4-ba11a26946fa"
        },
        "item": {
          "id": "c106ec1b-38ed-48db-828b-2c123a988014",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3411966-2674-40fe-86db-86183965e17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1068a-65a2-4de7-b769-c32b0fe5b810",
        "cursor": {
          "ref": "f0a3b442-5f0d-4733-a50f-a0533dbd4b72",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "346077b4-f67f-44f0-b588-5ed23520ea77"
        },
        "item": {
          "id": "b4c1068a-65a2-4de7-b769-c32b0fe5b810",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2423b45a-c23b-4150-b2fc-ef7e81ed1b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77818376-498e-4569-8ab9-50753c781dab",
        "cursor": {
          "ref": "ea3fe653-f901-484c-9a33-2cd8371fdcee",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8bbd7072-6cc0-41f9-bdb7-58bd75bbc92e"
        },
        "item": {
          "id": "77818376-498e-4569-8ab9-50753c781dab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ccff0bf2-d096-42c8-9215-4d67a6d69084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c74b01e-e56f-4a06-a545-e32968325855",
        "cursor": {
          "ref": "9d6429db-754d-4cef-bc51-605a8ffcdef1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f304b827-4c96-42a1-b48f-c2289394f1e1"
        },
        "item": {
          "id": "2c74b01e-e56f-4a06-a545-e32968325855",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2037fe19-9224-4a55-bb5d-c93fcfac66fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81987d68-8b4f-4082-9f0f-0ee70174e28c",
        "cursor": {
          "ref": "9aeadc4e-800b-4536-bae4-49e78bd15ed5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8a01c492-c422-44a4-ae67-3fab6d102558"
        },
        "item": {
          "id": "81987d68-8b4f-4082-9f0f-0ee70174e28c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f49915ce-4f05-4f25-92f5-07eee7c7fab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fe921-4604-4d95-acab-cfaa4453b135",
        "cursor": {
          "ref": "cb2e5021-2e03-4496-9010-e321dd14eb68",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a6b44983-37c0-4437-afc0-961c3843478f"
        },
        "item": {
          "id": "116fe921-4604-4d95-acab-cfaa4453b135",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fd28f8ca-ba39-449e-90a5-29b03ed5fd13",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e9dd6-09f4-49ff-b397-f2a1e3072a92",
        "cursor": {
          "ref": "006be8ee-7fb8-4797-8eb5-b44ef8b6d9af",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "52829e80-df96-48f5-906a-e4a4b009be5d"
        },
        "item": {
          "id": "989e9dd6-09f4-49ff-b397-f2a1e3072a92",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd5b4a73-aac6-45bd-87b0-38697a5d5892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50edd25-f4db-4525-8232-705bfca7b44e",
        "cursor": {
          "ref": "a89e2b56-b5f8-4e0b-81b5-d6070c673063",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1eeb8cc9-6499-4cc8-be3a-af812cda6369"
        },
        "item": {
          "id": "c50edd25-f4db-4525-8232-705bfca7b44e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff2095f1-f493-4458-898e-7fc85d012031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad471da0-3904-47c7-8752-58bc7dc45547",
        "cursor": {
          "ref": "cf16c0f0-fcbc-4a02-8081-e26f339e89f2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7da3674e-290f-4791-88dd-89a77403b44d"
        },
        "item": {
          "id": "ad471da0-3904-47c7-8752-58bc7dc45547",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d048686e-4bdd-4736-bef5-69993f1ed75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e8aed-0258-479e-b5f9-c4a1a5c2ebe0",
        "cursor": {
          "ref": "3ba52e49-c4d7-4191-9b9b-43b1b876faf5",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7c569b5f-a53e-44f3-b900-3e8d25f5e257"
        },
        "item": {
          "id": "f84e8aed-0258-479e-b5f9-c4a1a5c2ebe0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5690ae07-154c-4c03-8c9b-33e22c355086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc550b8-0e68-46ff-9897-347257d24bb5",
        "cursor": {
          "ref": "71fbc699-9bd5-4418-a570-861de00d181f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d32d59e6-58eb-4e4e-94e3-bd8b55aacf25"
        },
        "item": {
          "id": "8cc550b8-0e68-46ff-9897-347257d24bb5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fe6990ac-1cf6-46bd-a09b-cc3d869acecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b34ed-faa8-4aa8-a8bb-e9f26e9d06e9",
        "cursor": {
          "ref": "d3bec790-4bdd-4210-9ff2-d330fd60b4cb",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6da8474a-dc97-4fad-a6d8-09c79fdd10af"
        },
        "item": {
          "id": "0d0b34ed-faa8-4aa8-a8bb-e9f26e9d06e9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "84b59be9-f39a-4a38-b474-37aed6a5c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ce2d44-979c-4a51-afef-cb52c5e5b9b6",
        "cursor": {
          "ref": "dc19ff49-582e-47a1-b9f3-04a8dda2316e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7dc8d536-f15b-4748-a4e4-6e3d1fe64746"
        },
        "item": {
          "id": "e3ce2d44-979c-4a51-afef-cb52c5e5b9b6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "621b111e-4700-481c-b325-9602103fb479",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5001ba1-7d8a-42b8-b6b5-da22154dbccb",
        "cursor": {
          "ref": "e0ed01a4-dfe3-4851-8af1-38d1d5fab1d7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "53e4c30d-c5af-47f6-9a56-78dc4a5fc757"
        },
        "item": {
          "id": "b5001ba1-7d8a-42b8-b6b5-da22154dbccb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8be8d384-c183-4581-81ea-bb0f7507e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64045155-0398-4cad-87e6-dd0aa680f183",
        "cursor": {
          "ref": "05c5fc95-e790-402c-812c-003abae915bf",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3fe1f529-83e6-469f-bc7c-ca496ccbe570"
        },
        "item": {
          "id": "64045155-0398-4cad-87e6-dd0aa680f183",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3ac81608-0a9b-449c-b606-1b02eb7c3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f2d70-48fe-462f-bbb8-200acc9f6da8",
        "cursor": {
          "ref": "b6247b1c-3d79-43d0-ad08-d3f0785540d1",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6e5981e2-d508-47b3-b7b3-21870b101ebd"
        },
        "item": {
          "id": "1c9f2d70-48fe-462f-bbb8-200acc9f6da8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3628c0b5-6c83-4f38-bd84-abc92535df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17500ea9-0e5d-4212-bfa5-f59604df57f5",
        "cursor": {
          "ref": "7ccf7990-d8a9-4cf9-8df8-dcf40265909f",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c8dd5196-dc72-4357-96c5-c22b7e7288bc"
        },
        "item": {
          "id": "17500ea9-0e5d-4212-bfa5-f59604df57f5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dac70c67-7f1f-40c1-a751-bfdccb605b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7636cc88-8b51-4300-9c85-20ace9fbf1ac",
        "cursor": {
          "ref": "968dab45-e8aa-4abc-8d8c-883f7b6461ee",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2530a79-5610-418b-a1f1-25f51c28c6c5"
        },
        "item": {
          "id": "7636cc88-8b51-4300-9c85-20ace9fbf1ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f2b9ece7-1d48-4ca8-b5fa-113bc7cf967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7332ffe2-36ac-42f0-bb02-f504395fb67b",
        "cursor": {
          "ref": "471e94fa-d35f-4c0c-841d-918de701aed1",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1bad5a99-ac74-4c60-a940-1b2ce23d3b44"
        },
        "item": {
          "id": "7332ffe2-36ac-42f0-bb02-f504395fb67b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c098da9a-589b-4d98-8d93-1f6db6dd93d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b2684-177a-450b-b8c7-7e8d906c0590",
        "cursor": {
          "ref": "d68d4f0d-4dc7-4c56-bda6-4ef94085a747",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8fbe258b-fce5-4e2e-8f48-abcd5fe84123"
        },
        "item": {
          "id": "fd5b2684-177a-450b-b8c7-7e8d906c0590",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "abae0b36-9483-4115-bd60-af8bdc821d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a0dbaf-b257-4eff-bcde-14d0b238dd4a",
        "cursor": {
          "ref": "2daff49c-397c-4ce3-91e6-a2028d6555f6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7a86913c-2b65-421b-a56c-c42756084790"
        },
        "item": {
          "id": "f2a0dbaf-b257-4eff-bcde-14d0b238dd4a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c18c943f-f7f5-4932-accf-ae3e1c3d793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b92832-1c87-4e6e-b85e-615f3e017f4e",
        "cursor": {
          "ref": "f8256809-5f27-409d-b8f9-467980dd439b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bbd8ce0d-8223-4b3a-bcc5-7fc340a2ee81"
        },
        "item": {
          "id": "60b92832-1c87-4e6e-b85e-615f3e017f4e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf26efdc-bd47-4314-83d4-c2bb22a2d8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1117e3c-9512-4e7f-9ff0-b0273cb43f2b",
        "cursor": {
          "ref": "af4ad837-f1aa-4b98-8c6e-e2366032ad09",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0202db0b-80da-4aa2-a697-d3e2e9a2455a"
        },
        "item": {
          "id": "b1117e3c-9512-4e7f-9ff0-b0273cb43f2b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "39f64f04-4295-4af4-91ee-8acd1631313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8e6bb1-e824-456f-8241-af0f9d2dbbf4",
        "cursor": {
          "ref": "ae1f0d8f-1c7c-4b14-8b13-29f016270f06",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "301c753a-e319-471b-ab86-d537e465b09f"
        },
        "item": {
          "id": "4a8e6bb1-e824-456f-8241-af0f9d2dbbf4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bb6c517e-67a1-4071-aa92-bcb1273f0595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12718ce1-3faa-4791-ba4d-2f308531ec5a",
        "cursor": {
          "ref": "cca127ae-b1ca-40fc-bf20-63b18906e0b9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0fbc4d55-8dd2-440a-8893-95161159932b"
        },
        "item": {
          "id": "12718ce1-3faa-4791-ba4d-2f308531ec5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89dbff58-17a9-43f2-baa1-b361776ffb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8a0353-ac72-407f-ba55-d07937069056",
        "cursor": {
          "ref": "3f500d07-69a9-414e-9613-db98920a5ec6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e2a010a7-99c1-4bf9-bda7-90f9934a6d0c"
        },
        "item": {
          "id": "9f8a0353-ac72-407f-ba55-d07937069056",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e33c655b-ba3e-4b70-b24b-458fde54eea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea816e6-1351-4ed5-b265-0ce1f653133a",
        "cursor": {
          "ref": "a18fce0d-081a-49d7-b3eb-720efe15adf7",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99e8f975-15ed-4f2a-a900-8082d3d7c973"
        },
        "item": {
          "id": "2ea816e6-1351-4ed5-b265-0ce1f653133a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2d92e362-19a1-4a2e-9613-b979bc374a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1899b497-7fb9-43f6-93bd-af43f2b5ba29",
        "cursor": {
          "ref": "fe0628b0-71f1-49cf-a2d0-21ffd481cacd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6d9e9063-c4cc-4421-a8d7-3f0a2336772e"
        },
        "item": {
          "id": "1899b497-7fb9-43f6-93bd-af43f2b5ba29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2561c4db-3a02-4348-a8da-99e63b92336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e00e8-9783-4ebf-8bbf-4ca0579d27c1",
        "cursor": {
          "ref": "82dc9473-0dbe-4f46-b0e8-e8b05173ae1f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "50e60813-9451-42a0-8004-75ce18b2ce07"
        },
        "item": {
          "id": "f25e00e8-9783-4ebf-8bbf-4ca0579d27c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ccf3f764-0fd1-415a-9f07-ce9fa842b700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f823f9-6a32-47ae-b0a7-95e792d55d5d",
        "cursor": {
          "ref": "1971de31-d9e7-4898-8cfd-fcf6f31163e2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c3e90285-e451-42f2-8f60-c8e9930f3cd9"
        },
        "item": {
          "id": "97f823f9-6a32-47ae-b0a7-95e792d55d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f05933b3-000b-4d0c-80b4-6394aa8fe7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e611d320-65ef-4a0c-9ac9-b6f3b24afee3",
        "cursor": {
          "ref": "ce131e3e-9a3d-488e-97ed-b828b8f670cf",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "adae4b10-8a85-44a1-8561-92f8203fa9ef"
        },
        "item": {
          "id": "e611d320-65ef-4a0c-9ac9-b6f3b24afee3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "797cc5bb-84eb-401f-bd39-3aa881487fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd48a40-ed70-4952-875a-6b78e8555d02",
        "cursor": {
          "ref": "8d8ded24-6e5b-4dfa-98ed-3129ae0c782b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4511c456-b44b-4d5f-9a91-8af7b26c1ea5"
        },
        "item": {
          "id": "acd48a40-ed70-4952-875a-6b78e8555d02",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b6cc0242-fb79-4130-a1ce-105c6e5511af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dc1bb6-4b1b-442a-a7a7-127e6c6a65ee",
        "cursor": {
          "ref": "76d8db07-5cde-48ad-b7dc-a24f3e209ff6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e5842d28-3e7d-4444-896a-593aa9fe441e"
        },
        "item": {
          "id": "93dc1bb6-4b1b-442a-a7a7-127e6c6a65ee",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "695c57c4-716b-40cd-95d5-be05707237ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac8312-08c6-47bb-b2f5-6ce8c1e3e5eb",
        "cursor": {
          "ref": "a77d3f28-d4b4-42ab-b8e8-54cad5d9083f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f874f8d7-9059-43ed-a09f-1ff687b42636"
        },
        "item": {
          "id": "5eac8312-08c6-47bb-b2f5-6ce8c1e3e5eb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1cb75d67-2e62-4864-a42f-706722723a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83de31d2-a529-4aae-8812-1cdb542905f4",
        "cursor": {
          "ref": "c2086b5e-b6f9-4619-8164-21c57d576ee8",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "de6ada33-2999-49d1-b502-c50dd449ebb9"
        },
        "item": {
          "id": "83de31d2-a529-4aae-8812-1cdb542905f4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48a05689-1d85-4013-85d6-7eca2fd7180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cba2a6-c3bc-4446-8100-68dea6fde4c9",
        "cursor": {
          "ref": "47a76dd6-1eab-4cb3-9384-4339c4ce18c3",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f39c285d-a762-4c7d-a9a7-bc6bfc83eba3"
        },
        "item": {
          "id": "41cba2a6-c3bc-4446-8100-68dea6fde4c9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "375bbb63-0dc5-4f4f-bfe6-1d57440fdc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c91b9-1595-431a-a1e1-e2141b812eac",
        "cursor": {
          "ref": "578dd72d-3cc6-426f-91e2-c2db72eed4ea",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ab6c1f59-d943-43e7-ae66-505f3261b6e9"
        },
        "item": {
          "id": "603c91b9-1595-431a-a1e1-e2141b812eac",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2210dea-ca75-4ef6-9fae-ea90d6e8c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a0673-bf0d-4484-827f-c4de47c7be8a",
        "cursor": {
          "ref": "1e41d5cf-00db-48f1-82e0-28a58e14c145",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8c273ff9-56c7-4eab-8ac1-157276ea8113"
        },
        "item": {
          "id": "ee2a0673-bf0d-4484-827f-c4de47c7be8a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15dfe1d9-54d3-49fc-ba27-409b4ee44dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f62484-7f72-4729-9a9e-5e8dd9836bc6",
        "cursor": {
          "ref": "cd1f522b-4a23-42ec-ad8b-69529c1d5249",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bcb1f933-4f7f-40f5-9b30-d0c02f6da69f"
        },
        "item": {
          "id": "c8f62484-7f72-4729-9a9e-5e8dd9836bc6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "166cdf2d-824a-4124-8e9a-fc359e839421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689e9d83-a31c-49e6-925c-8acd48ce95cd",
        "cursor": {
          "ref": "08676889-0d19-4b6d-8f03-dbbaec30e56c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "25794605-66e0-44ae-8196-979e1e1d632b"
        },
        "item": {
          "id": "689e9d83-a31c-49e6-925c-8acd48ce95cd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb419cde-c222-4e28-881f-0b5559b13f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df59acdf-ecc6-48fd-822f-70afa7892104",
        "cursor": {
          "ref": "7122e77d-0d42-4400-9df7-20b0ade2e211",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "070589f8-0b96-4595-9c3b-112d285a1749"
        },
        "item": {
          "id": "df59acdf-ecc6-48fd-822f-70afa7892104",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f2bb7ca-4ac0-44ea-9bc1-993e34267135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182681c-d116-4a93-9445-904ef5e62e9f",
        "cursor": {
          "ref": "62afae8b-4fed-40b1-97b7-483e42cd5f9d",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "379c667b-f345-48ab-b16a-e8af584becb2"
        },
        "item": {
          "id": "a182681c-d116-4a93-9445-904ef5e62e9f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8d2e2ed0-a440-4d2b-a48d-e18934fc5d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9cd64d-be72-49e8-b5f7-fd17261d9092",
        "cursor": {
          "ref": "0faa1fd1-0862-4418-831c-3ecbd05bfa3f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "890a9d86-8da2-49ae-a738-d5973725fe59"
        },
        "item": {
          "id": "fe9cd64d-be72-49e8-b5f7-fd17261d9092",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bd774c98-c3c1-4100-afe9-8ba9fd3ba075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf8080-23f2-4fb6-981b-7397d94ad975",
        "cursor": {
          "ref": "d12cacd8-f84b-4a58-a431-f880e0da8642",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "35adae14-4941-4266-9ffc-d989ae190d4d"
        },
        "item": {
          "id": "41cf8080-23f2-4fb6-981b-7397d94ad975",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "32d24c36-7cdd-45a2-9a8c-c20d90da5da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd05291-8424-4782-a989-d295f809c2f7",
        "cursor": {
          "ref": "093bf1b1-52fe-4170-b52c-ce2faaeb7332",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "68563c8d-6d16-4e9c-91fd-10c28be2bfa5"
        },
        "item": {
          "id": "9bd05291-8424-4782-a989-d295f809c2f7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94760497-d772-405f-aba9-673e2e1a540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabd7e1-8f0c-4360-ab83-9d5ca33c30ed",
        "cursor": {
          "ref": "a2bfe616-4a49-4b20-9a39-ffa045ab4c66",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1a777f4b-cc1b-44d1-a4e6-98b8820ac17a"
        },
        "item": {
          "id": "aeabd7e1-8f0c-4360-ab83-9d5ca33c30ed",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "964046b9-81dd-4d7d-8424-cbf7393270cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cd0ff-d71d-4d8b-8366-6301775dc2f2",
        "cursor": {
          "ref": "c64f19e7-1dc4-4168-b4c9-2f9fd43b6470",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2eb5a6b1-6156-49c9-b50b-4cb7698fa180"
        },
        "item": {
          "id": "271cd0ff-d71d-4d8b-8366-6301775dc2f2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e0b3dafa-0860-4bc1-90c1-22d1c824df00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e612ff3-ba6b-4c9e-b2c2-8e978cd9c7ee",
        "cursor": {
          "ref": "1a082797-a729-4e99-9c90-519149558e32",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "657102dc-f2af-4e03-9eeb-d3234f9bb0ad"
        },
        "item": {
          "id": "8e612ff3-ba6b-4c9e-b2c2-8e978cd9c7ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "67af3b15-9bdf-452a-b0dc-906a79e9dc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cfddfb-8cd5-4411-a60d-1255942736d2",
        "cursor": {
          "ref": "7a6040e2-1ed3-4c70-9fd8-80337eeccc6b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eeadd1ad-7e2d-4b2d-9191-50856a92b143"
        },
        "item": {
          "id": "91cfddfb-8cd5-4411-a60d-1255942736d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8e79bbca-d17b-46d2-924f-12a24e792076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16ce378-fb83-4e1b-b1f5-c56d2aaa094d",
        "cursor": {
          "ref": "99657c48-8a4e-49d8-8384-d25c9ca6a83b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "67f59804-5916-4ebf-9113-a44052f7d696"
        },
        "item": {
          "id": "d16ce378-fb83-4e1b-b1f5-c56d2aaa094d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7a9f0280-d5fa-4e29-b334-0e1ff91c46e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414c7d6c-4864-46da-8d62-8a77006bad5c",
        "cursor": {
          "ref": "2adf96eb-735f-49a4-8022-7a86006c7cee",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "456edcfe-0b6f-4929-9f12-26dba888711c"
        },
        "item": {
          "id": "414c7d6c-4864-46da-8d62-8a77006bad5c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbc4c2a3-3f4e-4920-b477-8a86d5625f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3616f7cd-b616-4827-a028-0b27dc780d67",
        "cursor": {
          "ref": "4718e0b4-e9d7-4aac-bc21-57b8a8ed2dce",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a903809b-3127-4829-aee1-09c6e7fee440"
        },
        "item": {
          "id": "3616f7cd-b616-4827-a028-0b27dc780d67",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a8a981d0-0423-49c7-ac22-e6bd228d17cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06073a5d-5636-4cfc-9397-4bc9abb203e3",
        "cursor": {
          "ref": "435c05b5-3958-47e9-9109-2bb73bad2861",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a1a1b930-c0a8-4108-99a3-81d65d2cf353"
        },
        "item": {
          "id": "06073a5d-5636-4cfc-9397-4bc9abb203e3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dc87120e-6c4d-4aef-ba7a-ae1a43097529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c22e547-aa08-495e-af53-8e8e1cd6b330",
        "cursor": {
          "ref": "0a9065a6-ec96-4044-aba7-8d2a817c9418",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5aa140e3-7075-46c8-90cf-2a36454d568b"
        },
        "item": {
          "id": "2c22e547-aa08-495e-af53-8e8e1cd6b330",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "59fb2e26-83fb-4acc-b238-0fca1cee513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321b7b75-b91e-47b4-8090-50b6fb974125",
        "cursor": {
          "ref": "6e22f2dc-3683-47a7-bd75-62d14271d94a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fdd3be7f-bbd4-4215-9a55-6f1ee458d435"
        },
        "item": {
          "id": "321b7b75-b91e-47b4-8090-50b6fb974125",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3ec26288-00d4-47c0-af0f-3bde89a8b690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ce05e-5e3f-473c-9b68-fb945bc2b683",
        "cursor": {
          "ref": "24ab83e3-8bd3-4507-a8a4-b6ea444ba217",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a0c717c6-e313-4e2a-a628-d94f71d3049a"
        },
        "item": {
          "id": "558ce05e-5e3f-473c-9b68-fb945bc2b683",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3edcf42d-e0d4-491f-9f02-c0ca00259b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23c9329-af00-4cf8-aa55-1a6014d329f5",
        "cursor": {
          "ref": "e8c22d97-baa1-4b07-bc36-5ef8265a8e1d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "919a45ff-d3ec-487f-a867-d4c459db9540"
        },
        "item": {
          "id": "f23c9329-af00-4cf8-aa55-1a6014d329f5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "189de78a-cdbe-4ec2-aa55-31157d04b4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a77b9e-96a0-4622-ba6a-0606dc198f06",
        "cursor": {
          "ref": "ca68e08d-c6e9-414f-b19e-6f8a8dcc5379",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8c05f4d-45dd-4e3e-9c21-8a8a4262c3f2"
        },
        "item": {
          "id": "49a77b9e-96a0-4622-ba6a-0606dc198f06",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0025b925-3585-4423-80fc-63f73029290b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52333fc-0412-4999-8c66-73861040522c",
        "cursor": {
          "ref": "9add64da-6d7a-4cb2-9438-bf6e2a5a6bdf",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ebcceb6-45be-41e2-8a4a-3898febd04f4"
        },
        "item": {
          "id": "e52333fc-0412-4999-8c66-73861040522c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4dca9b9-84f5-461d-a1df-496193811c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7744f03c-9a11-40ff-8e27-1fbd1dcb8f8e",
        "cursor": {
          "ref": "9574e341-82dc-4256-b225-00827d16621f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "65a27a50-8d03-47ee-bdad-0aad9b8e18fd"
        },
        "item": {
          "id": "7744f03c-9a11-40ff-8e27-1fbd1dcb8f8e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0b373783-de9a-41ba-84d7-8fce387136e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9f2277-236a-4c7d-bee7-699d3250b4db",
        "cursor": {
          "ref": "880696ac-88b6-4114-8822-3c3e86fda688",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e05a37df-8cf8-4650-a9c0-cbb9ae2af0de"
        },
        "item": {
          "id": "3e9f2277-236a-4c7d-bee7-699d3250b4db",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b99edbb5-7861-41c6-ba88-73c356d98472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80becedd-bf61-4fe7-9be3-40e8e55a7c1d",
        "cursor": {
          "ref": "ec64c640-0568-482e-abc6-abf70bd1fb6d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c109051e-11d0-461a-a1a5-619eebd9b77f"
        },
        "item": {
          "id": "80becedd-bf61-4fe7-9be3-40e8e55a7c1d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "28ee9dd8-2fd3-4653-aa13-c8a8f11e4d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fea02b-2051-46f2-8701-5cb65775894b",
        "cursor": {
          "ref": "f1d09397-2205-40ef-bc77-a235fe4d8154",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4012d8c0-595e-443d-8552-4e035b901d57"
        },
        "item": {
          "id": "78fea02b-2051-46f2-8701-5cb65775894b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb437846-4508-4ace-8171-6b561a776538",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9e65ed-1255-4258-806d-26f85f6acf85",
        "cursor": {
          "ref": "fa6aa996-a551-45be-bffe-d961b9aaf712",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49454d85-32a3-443a-9289-79e1a443617a"
        },
        "item": {
          "id": "bd9e65ed-1255-4258-806d-26f85f6acf85",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b6bfe2a9-e999-44e8-81d9-f31cb606dad2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 275,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0a1ca-9249-4285-a43d-202457d17573",
        "cursor": {
          "ref": "bc384eb4-e2d0-4c05-859f-e8adadd0c98d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "47893353-6fab-4528-b4b0-41b66a9a53be"
        },
        "item": {
          "id": "0cb0a1ca-9249-4285-a43d-202457d17573",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b51c08b-04ef-4bb6-bfd0-fdb88c856dd2",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa2ba94-e5fb-4997-9620-a6f06a23228b",
        "cursor": {
          "ref": "0fdafb1a-c0a5-403d-9bb0-5939262e0530",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2637eea6-1054-4a5a-9cb7-1d9bc85f64b3"
        },
        "item": {
          "id": "aaa2ba94-e5fb-4997-9620-a6f06a23228b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e39d7f09-eb47-4b84-9d02-5a307f62ecf0",
          "status": "Created",
          "code": 201,
          "responseTime": 288,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "95decb87-9f2b-41a4-bef0-d915cd156341",
        "cursor": {
          "ref": "e1c9ea48-0e21-4492-9e9f-a33ab780c7d4",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ed46ce6f-0704-4452-a288-ee217755df88"
        },
        "item": {
          "id": "95decb87-9f2b-41a4-bef0-d915cd156341",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a9cf299d-5125-4fe6-be88-618c997cf377",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f5eca-ef6c-4073-8ae1-259071314a45",
        "cursor": {
          "ref": "a292815c-438a-40d4-98ab-98b6158c23ee",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "86ceb12e-9f44-4413-bd04-289dbb15a8f2"
        },
        "item": {
          "id": "c35f5eca-ef6c-4073-8ae1-259071314a45",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a18ff493-3e5a-42b1-b12c-7b9964db2a30",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "366428ac-130e-4200-bfe0-c0d1753992ab",
        "cursor": {
          "ref": "4739e937-0cc3-4f83-b386-c63558fc12c6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a6735763-b57e-40c2-b3b2-bfed4677b1e4"
        },
        "item": {
          "id": "366428ac-130e-4200-bfe0-c0d1753992ab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c3ed1cb4-ee14-4404-ad25-6d79aadcfddf",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbac540c-75b3-4c8a-95be-9430421cd0c1",
        "cursor": {
          "ref": "9675ef7f-8210-47a7-972a-dc9b5dfed9b3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b12b3c22-ee6a-4786-b442-88aa2159e0f0"
        },
        "item": {
          "id": "bbac540c-75b3-4c8a-95be-9430421cd0c1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "45bfa02f-4bbd-4933-b1a9-5b0c5a9c1c77",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82319208-61f5-481a-a65f-8d2e3f9f438c",
        "cursor": {
          "ref": "f63b01c1-e2c6-48b4-900e-962bb14a5eaa",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9b3c7f2-1296-4c75-8cf7-803135182d0e"
        },
        "item": {
          "id": "82319208-61f5-481a-a65f-8d2e3f9f438c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d5e46db-f872-4c23-a025-8b5d3bc546ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82319208-61f5-481a-a65f-8d2e3f9f438c",
        "cursor": {
          "ref": "f63b01c1-e2c6-48b4-900e-962bb14a5eaa",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9b3c7f2-1296-4c75-8cf7-803135182d0e"
        },
        "item": {
          "id": "82319208-61f5-481a-a65f-8d2e3f9f438c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d5e46db-f872-4c23-a025-8b5d3bc546ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fe5542-cffe-4526-b118-1acc702669cc",
        "cursor": {
          "ref": "f60f9974-2f73-4c9c-87ed-1aca2ec7afe2",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4bf009de-ae4c-4de0-8628-6b27436ad51a"
        },
        "item": {
          "id": "f3fe5542-cffe-4526-b118-1acc702669cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68a82da3-4476-4f8b-8bd9-4fe46f723e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03143c7-95dc-4dac-810a-df076d452515",
        "cursor": {
          "ref": "a125b431-da2f-462b-8307-4c4e87e32c52",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f10165ae-aa10-428e-9aa6-79dda25b52fb"
        },
        "item": {
          "id": "e03143c7-95dc-4dac-810a-df076d452515",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6c515d89-9290-4f59-9e3b-1ae69f7f39e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab00f485-9452-4f78-9fb2-666f7807d7ec",
        "cursor": {
          "ref": "e950d927-125c-4ece-9eeb-60857d769b1e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cc5890f4-43c8-428d-8697-d87552764b6c"
        },
        "item": {
          "id": "ab00f485-9452-4f78-9fb2-666f7807d7ec",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "95c7a73b-a39b-43bc-8276-b733ef682265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce74b60-3c94-451a-91f8-d58f9fc2e1d9",
        "cursor": {
          "ref": "64cfc77b-006a-4091-8a68-9df55a85dd11",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e9f1186-eae4-40c7-af63-8a18bafd69d4"
        },
        "item": {
          "id": "fce74b60-3c94-451a-91f8-d58f9fc2e1d9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "97218e1b-965e-40c4-956c-cd5bda6e25cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da57f4-c6f4-4461-a1b6-a97ba11921e4",
        "cursor": {
          "ref": "e8b54d38-a4d7-442d-951f-f008118f80db",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d071bfa-ab8d-4cad-ae17-d6970ccbaed9"
        },
        "item": {
          "id": "49da57f4-c6f4-4461-a1b6-a97ba11921e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "661e8b72-bf8b-436f-af81-ee3ebf4321b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2ccfed-a2ff-467d-bf5e-c049f36a3b35",
        "cursor": {
          "ref": "8b01aee2-84d3-422a-8eff-ccbd3b18b214",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc6cd648-bd37-4b2c-b360-28f9033e3314"
        },
        "item": {
          "id": "fd2ccfed-a2ff-467d-bf5e-c049f36a3b35",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10ad7fdc-c8f2-44be-a75e-28f73b765f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78757701-f86a-49e6-9def-bffc3136fc3d",
        "cursor": {
          "ref": "0b32a114-cfaf-4faf-bf84-a23b7c2b4e50",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "213f03d7-4518-4b10-b07c-804c3c767434"
        },
        "item": {
          "id": "78757701-f86a-49e6-9def-bffc3136fc3d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "821d2d67-1811-48ed-8df4-d41335bb7576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ac67c-4fa5-45a2-81d4-83be81960864",
        "cursor": {
          "ref": "75ec61f8-bef9-4158-8dc7-9d79344475b1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a4ecdbe7-5724-4f59-abef-05f11fa2803b"
        },
        "item": {
          "id": "530ac67c-4fa5-45a2-81d4-83be81960864",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b50d17c8-622f-4472-be54-6cfb94e11f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85152dca-2823-4065-9890-dd5ac3237b4d",
        "cursor": {
          "ref": "8e236466-0899-4c9b-b563-d230efcd0368",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "137312e5-7b7a-4b46-9965-49f2f99c2eac"
        },
        "item": {
          "id": "85152dca-2823-4065-9890-dd5ac3237b4d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60c5c34a-6eb6-4213-b203-d38f3154590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd91b5a4-d3f5-45c0-b74f-73bfcc47e5b3",
        "cursor": {
          "ref": "dae2ae7f-aaaf-4bf5-b52e-bd3444ceb021",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e183f49b-2b5e-49bc-b069-eb4825ee0dfe"
        },
        "item": {
          "id": "cd91b5a4-d3f5-45c0-b74f-73bfcc47e5b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fcaf6bc1-cb52-446a-af61-0e99b51e35ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ef57b5-4fb6-406d-bc3b-10fb2660357f",
        "cursor": {
          "ref": "f2353f02-b61c-43b8-ab15-bfc109578ff8",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d5091326-36b0-4e24-81eb-4acc61559c02"
        },
        "item": {
          "id": "17ef57b5-4fb6-406d-bc3b-10fb2660357f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "846a1867-d751-4e98-9b81-ffb32a7e7bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d8d92e-c1c2-47d4-98b5-8f2e5cec3ff3",
        "cursor": {
          "ref": "b42e73d3-d67e-4276-a1a0-d3427534d914",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ca643761-0180-4f68-9119-219963c50fd8"
        },
        "item": {
          "id": "45d8d92e-c1c2-47d4-98b5-8f2e5cec3ff3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "47598044-decc-4253-b68d-fe69a943f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bb8b4b-41ae-409b-8e2b-11fb8ae38030",
        "cursor": {
          "ref": "e8f2ac74-301c-40a0-bf51-b1cedccc422f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d03ef27f-5e7e-4d09-9bf3-1a03ed8d355a"
        },
        "item": {
          "id": "76bb8b4b-41ae-409b-8e2b-11fb8ae38030",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b4e18ec6-b10f-4cb1-ac99-e8d4ca6bb1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa11a71-b11d-4707-819f-0b75258e4671",
        "cursor": {
          "ref": "1c667ec4-6643-4ee2-881a-5ac0728c1e16",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56965ed3-a8fd-4c8d-ab1c-91d3952b919c"
        },
        "item": {
          "id": "3aa11a71-b11d-4707-819f-0b75258e4671",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20ca6c27-8c36-43a0-816b-208f1f98d6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61beee4d-b822-4bba-8529-20dc4afd7cdf",
        "cursor": {
          "ref": "1d3203eb-dec5-4fdc-9db8-5233ff21bb59",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b30a21a8-e0f7-43b0-bf2d-6213ec330242"
        },
        "item": {
          "id": "61beee4d-b822-4bba-8529-20dc4afd7cdf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5bcf5e95-1fc2-43a7-8e28-df26f0be1206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779b071f-4b89-4ae6-9d4d-1db67de0c615",
        "cursor": {
          "ref": "fdb51010-bcef-4fc2-80c3-0e3abc685d0f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d38bb0c1-eaf4-4b59-a81c-67b7633979d3"
        },
        "item": {
          "id": "779b071f-4b89-4ae6-9d4d-1db67de0c615",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1670ed9-3597-4d1f-942e-2cfcfaa4680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119a6f13-11ca-488a-96e7-0dcf68320ad9",
        "cursor": {
          "ref": "a21cd2ec-636e-4dbf-b3a9-314d6ac343a8",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e122f47-f335-44dd-9c3f-fc18a2f677ba"
        },
        "item": {
          "id": "119a6f13-11ca-488a-96e7-0dcf68320ad9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "806f85c0-425a-47b8-a5a4-7a4514af836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b0a521-dd54-4a26-af7d-3ee0079545e6",
        "cursor": {
          "ref": "eafd97cf-a554-4df2-b583-d3afe19cc5d4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b8d1984f-8428-41e0-8154-5eafcff5c5e3"
        },
        "item": {
          "id": "c3b0a521-dd54-4a26-af7d-3ee0079545e6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b9438c59-1ec1-49f4-85dd-90743d243143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d11c57-a63e-4866-9fd1-6b210ef9d891",
        "cursor": {
          "ref": "e22c96aa-7ef6-49c5-ba77-f78878bde142",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7121f257-27ce-49a7-8a67-1df151247ae4"
        },
        "item": {
          "id": "f0d11c57-a63e-4866-9fd1-6b210ef9d891",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0cd7f412-f037-4f6b-a48a-5b780e7047c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c89231-c5a4-4f78-b151-040ddd7283f3",
        "cursor": {
          "ref": "388c74fd-0701-48fa-b71d-c4331a3a159d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cb2f53ed-ad5f-4347-bb61-3ecf19c18e18"
        },
        "item": {
          "id": "19c89231-c5a4-4f78-b151-040ddd7283f3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3349d923-eb77-4fb2-865b-89a833bd7054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b7f022-61d6-41e0-868f-973ee24ad9ac",
        "cursor": {
          "ref": "e7c940e6-2462-4d3f-b1f1-b661c14f8f39",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "647cb049-e210-4ea8-8d8c-420ed1694371"
        },
        "item": {
          "id": "d0b7f022-61d6-41e0-868f-973ee24ad9ac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c864b8e-e8e1-4121-973b-87d77f57a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813d2553-1abf-4c60-819d-3533425db031",
        "cursor": {
          "ref": "1e742c60-5c4a-4b25-b57f-e69eba39c7bf",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dfb3d8a1-f818-4149-a11f-df7072d25a24"
        },
        "item": {
          "id": "813d2553-1abf-4c60-819d-3533425db031",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa6dd2b7-6a29-4bc5-af28-98f1a0a975fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b7027-6fa2-4bcc-9ef3-d602592767c3",
        "cursor": {
          "ref": "a44f056b-6a93-4b10-b95a-badc0615ab38",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b54e37c6-9627-42d3-b39d-b4d5ec50440b"
        },
        "item": {
          "id": "601b7027-6fa2-4bcc-9ef3-d602592767c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d7440ea-6edd-457e-9f78-1098fe3cf7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5199bc-5446-42c1-ad9b-e68031a4c997",
        "cursor": {
          "ref": "c725d315-1f49-4f2d-9cf2-5ae31698bdd3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "18f45661-416c-451e-b48f-243f32f44474"
        },
        "item": {
          "id": "0a5199bc-5446-42c1-ad9b-e68031a4c997",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e361beeb-c8af-4a33-9bab-18deafae0d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7062bcd5-9a91-48ed-a896-4f978e747e13",
        "cursor": {
          "ref": "6a4ab07b-cef6-4076-9638-3fcfdbaa5157",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "694e4e6a-4e7f-481c-99dd-96164139e04a"
        },
        "item": {
          "id": "7062bcd5-9a91-48ed-a896-4f978e747e13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9bcca0f5-df5a-4de0-b2d7-aa093a5a76b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed488875-067e-4e81-a3f0-ad35e85d92e7",
        "cursor": {
          "ref": "15efc9c3-dd07-43a0-96a2-c14ebf040e1c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ec24e6f9-b706-42d3-83f5-794e2c7ecfd1"
        },
        "item": {
          "id": "ed488875-067e-4e81-a3f0-ad35e85d92e7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48364de9-161d-4164-b4fb-7ff27712f036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1009cef-f1f8-45b5-9e4f-0f73783f3298",
        "cursor": {
          "ref": "ac9d1a25-ed07-4411-8824-2e9a7faa710e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b80be965-e229-471a-a6ce-c8a79f362e67"
        },
        "item": {
          "id": "c1009cef-f1f8-45b5-9e4f-0f73783f3298",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5181543-b80c-4f32-b5d1-774d49b8568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d057a165-9885-4368-bae2-ab08cbb3dc3e",
        "cursor": {
          "ref": "783aedce-c2d7-4693-a9a1-3a0cd89b867f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0910d69-d22f-4c94-8f78-32d0c62fa150"
        },
        "item": {
          "id": "d057a165-9885-4368-bae2-ab08cbb3dc3e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "866e9ce0-d6c5-4e4e-8357-190a631dad4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1590f2-1918-46b7-b4bd-74f03251e967",
        "cursor": {
          "ref": "48fd50ed-bbb2-4a6a-aa06-af4cbcba582f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "08a8396b-4870-41d3-ba12-83a941406aba"
        },
        "item": {
          "id": "db1590f2-1918-46b7-b4bd-74f03251e967",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9b7004c-c32b-4c79-a36f-193d7aedd8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b3a768-f225-43dd-bc11-78347671dd0c",
        "cursor": {
          "ref": "8f83baf4-a350-45d6-9bdf-ac503a0301bb",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b19692fd-bfd9-4d9c-b6be-1689443541b4"
        },
        "item": {
          "id": "25b3a768-f225-43dd-bc11-78347671dd0c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "35e1a94a-3ee1-4687-9551-18ded9cfea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cefbd1-877b-418f-ab53-26eb86863a30",
        "cursor": {
          "ref": "9293b0b9-5f0d-4699-aa32-84b2260daea8",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b912d9c5-4b6e-4f79-a8d1-99279c22ac3a"
        },
        "item": {
          "id": "a5cefbd1-877b-418f-ab53-26eb86863a30",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c91e6cf3-ba94-49d2-9661-0b359060cd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c9bf68-bc7e-4ea7-be8d-79f9b69308c7",
        "cursor": {
          "ref": "61c067b8-964e-4c16-ad9b-ad6be8b2f5fa",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2444b9ff-b74c-4066-bb18-7a746d62e47f"
        },
        "item": {
          "id": "12c9bf68-bc7e-4ea7-be8d-79f9b69308c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4fa6bac8-6cde-4138-bdcd-742d3c049546",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a94de22-8fba-477e-aaca-ae16de49523a",
        "cursor": {
          "ref": "9f3531d0-7868-4ecd-9c99-74e070f06152",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5927f9bc-7fe4-4f7c-88f4-b67e2fcf6d8e"
        },
        "item": {
          "id": "8a94de22-8fba-477e-aaca-ae16de49523a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dcf9b2b4-202d-4c8d-8c2a-662738f571ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179c9876-2f9c-4410-9855-936355548251",
        "cursor": {
          "ref": "2011fc38-a53a-4e55-b9ab-c7dab0c0d109",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9572f69a-9346-4142-bd97-062d257a2966"
        },
        "item": {
          "id": "179c9876-2f9c-4410-9855-936355548251",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a7313437-f41f-4e32-a72f-8e157f27b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179c9876-2f9c-4410-9855-936355548251",
        "cursor": {
          "ref": "2011fc38-a53a-4e55-b9ab-c7dab0c0d109",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9572f69a-9346-4142-bd97-062d257a2966"
        },
        "item": {
          "id": "179c9876-2f9c-4410-9855-936355548251",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a7313437-f41f-4e32-a72f-8e157f27b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9135b2-c9f0-4a7c-9b3e-f1dc0209b480",
        "cursor": {
          "ref": "926f900c-30b0-4e80-81a6-f97b4a164074",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66dcd032-1523-46d9-9f94-efbba55f45b0"
        },
        "item": {
          "id": "8f9135b2-c9f0-4a7c-9b3e-f1dc0209b480",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e8bcec02-0431-4d36-9ea5-8bfa0957f57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4f2ecd-63d8-41de-a1b4-80a966d6f108",
        "cursor": {
          "ref": "5d424b04-bc10-40aa-ba60-406c30e56ea2",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30de296f-f33f-4651-ba74-5be9d26e8de8"
        },
        "item": {
          "id": "3b4f2ecd-63d8-41de-a1b4-80a966d6f108",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a16bc76e-a2e0-47b8-9633-f7f4ba1c8f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e081477-e1cf-4383-9b65-04f519a3c01a",
        "cursor": {
          "ref": "267de0f8-a41d-40c6-ae50-94e8aa54941b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f5cecde8-982b-4953-907b-51b84fe3c2ee"
        },
        "item": {
          "id": "7e081477-e1cf-4383-9b65-04f519a3c01a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "47334c58-ce45-47fc-89c8-ed367809d8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec0129-e573-46d2-aaa7-3f1be83ce3a3",
        "cursor": {
          "ref": "de79b15f-1079-4435-afb0-41ae03076e64",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e86770fc-2646-4325-9a31-1f68d6233b28"
        },
        "item": {
          "id": "f0ec0129-e573-46d2-aaa7-3f1be83ce3a3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "179a0cb6-b322-4b82-822d-d3fc98e9e133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58afeee1-32ec-4c96-8763-4d1e3ec16554",
        "cursor": {
          "ref": "97b64676-39ee-497a-8bd0-7bd96fa669b3",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5e40737-ad6f-465a-b586-339eaa6fc28f"
        },
        "item": {
          "id": "58afeee1-32ec-4c96-8763-4d1e3ec16554",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bb013fd-0d16-475b-aac7-ae944b4deee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833d215-a885-4963-b4da-cc4563ba681c",
        "cursor": {
          "ref": "f66bdcc3-b1a3-49dc-9ac1-0da334d0985f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "31444a61-44bd-47b3-ae2f-61192920964d"
        },
        "item": {
          "id": "3833d215-a885-4963-b4da-cc4563ba681c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e4168495-d93e-4acf-ac03-bfa299959545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7311d845-43d6-41a3-ad77-645c9ad9fcc1",
        "cursor": {
          "ref": "66176db2-95ba-41d3-83ce-e21741097bea",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "24b01f9a-9155-4467-bcea-8524bc2a869f"
        },
        "item": {
          "id": "7311d845-43d6-41a3-ad77-645c9ad9fcc1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ad1cd84-52fe-442d-838e-c653a3b30aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305aef6a-767a-46e9-a2cf-dc128c9101dd",
        "cursor": {
          "ref": "447a0c74-417d-4794-b7b9-7d73a681d0ae",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6b412867-e3e2-4d21-bb7d-4e8be0d05f1f"
        },
        "item": {
          "id": "305aef6a-767a-46e9-a2cf-dc128c9101dd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "13f2d721-ade5-4c30-b692-250b2ae0a5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7f2cdc-8ca3-42d5-bbc8-8d8aee9e8e5a",
        "cursor": {
          "ref": "ada2c107-4945-44fa-9051-0381c3a58e09",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9d553068-94ab-4425-a539-fb7f19fde11a"
        },
        "item": {
          "id": "aa7f2cdc-8ca3-42d5-bbc8-8d8aee9e8e5a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fd84e612-93b7-4e9b-be82-0dad023a8cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bde9af-321e-4de3-a270-f381ded473f0",
        "cursor": {
          "ref": "43ba9bca-ebfc-42e3-8144-fa604d660c9b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5a63a61f-c4b3-4edf-85c2-caa5a7292ff7"
        },
        "item": {
          "id": "82bde9af-321e-4de3-a270-f381ded473f0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a25ad432-6446-4667-8d67-2a1ae05e2ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816aa68-c2a1-4b69-8cae-df51651e8cee",
        "cursor": {
          "ref": "b65784e7-a927-4d38-9f0f-2263a3a70cc5",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "de251bc6-19d8-4c28-a542-19d096ee6225"
        },
        "item": {
          "id": "d816aa68-c2a1-4b69-8cae-df51651e8cee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9654a201-bb5e-4900-94e2-57e7684c11ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4979528-fd86-4d41-ab59-fbc367a8ceda",
        "cursor": {
          "ref": "d001f90c-953e-44ef-ab44-84aaddcb8d36",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7a4e48f-ef49-49a8-aec1-edd7dccc876e"
        },
        "item": {
          "id": "e4979528-fd86-4d41-ab59-fbc367a8ceda",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "edd44935-e31d-478b-a131-7da6890ffcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0169c820-6d0c-4b2d-a3a9-9a35fc1f5016",
        "cursor": {
          "ref": "ab4c0c70-5bad-478a-9cb2-237ab3b4deaf",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62808fc5-52f0-4027-bede-dbf64072b650"
        },
        "item": {
          "id": "0169c820-6d0c-4b2d-a3a9-9a35fc1f5016",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "22608c68-876f-4b10-ba3b-b5d7b6162b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef20c4b-6dc8-4790-b264-2322bdf60a02",
        "cursor": {
          "ref": "2545dd62-7982-41b6-9274-aefb4bc1ed11",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c730f051-59ed-42ca-9ffc-1127254dfa18"
        },
        "item": {
          "id": "3ef20c4b-6dc8-4790-b264-2322bdf60a02",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "28fabefe-58d6-41f9-a1d5-486da47be179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d68011-aba8-4884-a368-e36026c2723d",
        "cursor": {
          "ref": "551870e3-2cc1-4579-bd4f-59612de017c2",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "75dab29a-c9f3-4528-8ad7-0e415ec86507"
        },
        "item": {
          "id": "f4d68011-aba8-4884-a368-e36026c2723d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fdb9a842-fabf-4345-9ea0-1e2e2065daa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5a9577-39de-4729-88b3-4d28cc57fd8f",
        "cursor": {
          "ref": "e75d630d-2e2f-43e9-b2be-74b3c9bdf274",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ddc2f3c-50da-4922-a83f-e156ffb058de"
        },
        "item": {
          "id": "5b5a9577-39de-4729-88b3-4d28cc57fd8f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "92219a96-250f-4243-bc40-6d3e6d18d31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6726f47-b69f-4f91-a1db-4a80d3d739c9",
        "cursor": {
          "ref": "e49a711c-ee81-495a-9f6a-d575a2bd802e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ee99f2ea-3ad2-4527-b921-b681ac135486"
        },
        "item": {
          "id": "c6726f47-b69f-4f91-a1db-4a80d3d739c9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fdae31ce-12e6-44ae-96e5-4766e445dfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a57f49-f739-4ebf-aef9-b7dd30717664",
        "cursor": {
          "ref": "f61afe2c-d60b-4a7e-815e-56594bb473db",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "14ba01a1-3b6d-449f-a6b1-853c10bd25cc"
        },
        "item": {
          "id": "67a57f49-f739-4ebf-aef9-b7dd30717664",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8bd94bdc-7268-46cc-9615-96250e84cebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19702500-152f-4178-a0bf-65bad5cf3b28",
        "cursor": {
          "ref": "c470485e-a9fe-4881-b08b-17766da0a7a4",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f94b248d-2533-44c3-ba73-37b7c37811b4"
        },
        "item": {
          "id": "19702500-152f-4178-a0bf-65bad5cf3b28",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aaffa6c9-7ad4-4aa3-b36e-898b6573ae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4f9d58-ba24-462b-a5bd-5083a13f6954",
        "cursor": {
          "ref": "85a77f55-01c2-4b00-9d0a-f58f21423f31",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f471fc40-fb40-462b-8f1b-8cc404338b0a"
        },
        "item": {
          "id": "7e4f9d58-ba24-462b-a5bd-5083a13f6954",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4d9820fd-9a1f-4e8a-bf71-9cbd52ad6654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88eae82-a027-429d-a26e-a3322a4cf497",
        "cursor": {
          "ref": "a1106c74-2109-40d9-a1de-3c22e783fc27",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6bcecaed-d222-410c-a216-42901d628381"
        },
        "item": {
          "id": "f88eae82-a027-429d-a26e-a3322a4cf497",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e108839e-ebe6-4153-8440-03467e1d019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f417de-1515-44dd-b385-35b760cc4180",
        "cursor": {
          "ref": "ab016256-12a9-4bd8-bd9f-924677aff296",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4ee216a9-2dfd-4378-94d1-23183a6d53db"
        },
        "item": {
          "id": "a6f417de-1515-44dd-b385-35b760cc4180",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e9301091-4aab-42cf-9a98-24c14a8dc204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d9d5de-2245-41ca-a433-37edefdbd5a8",
        "cursor": {
          "ref": "9b10c114-978c-4dad-bfa9-0ce6e6d17473",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "37911dcd-930e-4573-917e-c959e0fe824a"
        },
        "item": {
          "id": "a1d9d5de-2245-41ca-a433-37edefdbd5a8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "361ed350-8e6c-45e2-b4af-b900081ef2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b6b8c4-2cce-4c22-b2d5-c266c7955abb",
        "cursor": {
          "ref": "f7fba22f-80a9-4cc5-8882-fa761518128b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0ebca6fe-04a7-4c16-abfe-dcd7541a3a26"
        },
        "item": {
          "id": "b4b6b8c4-2cce-4c22-b2d5-c266c7955abb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1eb3cba1-b302-4c42-aa35-8ad46aeeb6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4570bb2-2670-46b0-876b-be3316d032e9",
        "cursor": {
          "ref": "6f4fb872-e8e4-4fa7-87c2-4ecf240de3b9",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "edb12bd7-c48f-4bef-92da-bae477d67dee"
        },
        "item": {
          "id": "d4570bb2-2670-46b0-876b-be3316d032e9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "131ebb9b-837c-4026-8a19-f3573888e7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fc35db-02cd-4868-9c21-67b33a67cb88",
        "cursor": {
          "ref": "1fa4d270-78d3-4f58-960a-90761a66f7e7",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "79dd6ad1-8744-441c-9edb-fd808d3db1d8"
        },
        "item": {
          "id": "84fc35db-02cd-4868-9c21-67b33a67cb88",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "52b01a82-cd09-4bef-9139-49bfe61f6010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9f7814-dd41-471a-b2fc-fd508e91a33c",
        "cursor": {
          "ref": "6d000369-a416-4291-9025-fb41c6137930",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "44ce229a-448c-4165-8593-04b5450dd4e4"
        },
        "item": {
          "id": "1a9f7814-dd41-471a-b2fc-fd508e91a33c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7542de37-2a6b-4bbe-8e16-fd7b1d23f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf8ffc-eb97-44b9-927b-83f5e9094abb",
        "cursor": {
          "ref": "a6c918a3-227f-40ef-ba81-64a88abc1b83",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fc11f193-8121-45e7-94d4-6262fedcb8d8"
        },
        "item": {
          "id": "debf8ffc-eb97-44b9-927b-83f5e9094abb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dfff5602-1e1a-410a-ac71-4d3b16ac9271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da60ba9-6f21-43c8-b970-4f2a4ff8c149",
        "cursor": {
          "ref": "cba18e62-575c-4a4c-9616-85cc32cbab19",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cdc77978-e9c4-4f1b-aae4-1056a0f4ab3c"
        },
        "item": {
          "id": "9da60ba9-6f21-43c8-b970-4f2a4ff8c149",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0ddf1c71-48e3-4c8f-90cf-1dda2a353b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd434c5-3e21-491d-9901-e68b4639a475",
        "cursor": {
          "ref": "d863849a-1e73-447d-8f15-0fe41f5e1e1b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e51b3937-4a91-4deb-b0de-67094843c9a7"
        },
        "item": {
          "id": "6fd434c5-3e21-491d-9901-e68b4639a475",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ba496d51-8312-4acc-a494-509da9d90707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cd1121-677f-411c-8ae2-4f110d5037b4",
        "cursor": {
          "ref": "a87209e5-ba4c-4d2a-889e-a233ba83c20c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "629058b2-8903-4b26-bcd2-03b5c47db2c1"
        },
        "item": {
          "id": "79cd1121-677f-411c-8ae2-4f110d5037b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a9b9a451-8c96-498b-bcbe-a93e165d711c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d8b4f3-9b65-42f9-89f3-9017088fea8d",
        "cursor": {
          "ref": "a7c6d58f-11c6-4078-8673-f21e68ca5287",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "528b3979-9cad-41ed-8ab2-7850e604841d"
        },
        "item": {
          "id": "65d8b4f3-9b65-42f9-89f3-9017088fea8d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d8106095-83d7-40e9-8b0b-1858ad02aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2bd44e-26f4-4758-9995-f298856625e5",
        "cursor": {
          "ref": "39f5701b-b981-4525-a04e-e360a92d37cc",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8b88242d-c291-4eec-9227-656d6a03b6bc"
        },
        "item": {
          "id": "0e2bd44e-26f4-4758-9995-f298856625e5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "35eb9f9d-31c7-4e67-a026-1cc72b4e7021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f311c3-77c9-46b7-8708-d1c10a04a5c2",
        "cursor": {
          "ref": "a572f4ff-6ae3-464f-8edd-deb9c25976b8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c81b1de2-8522-49af-86cf-3ac39e2ad6c9"
        },
        "item": {
          "id": "e9f311c3-77c9-46b7-8708-d1c10a04a5c2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ac49fab5-a211-4020-97b8-744e724ca3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33224ec-2ade-413e-b93f-d26144878763",
        "cursor": {
          "ref": "4f142adb-53b8-43f2-8890-9d9acd3fe70f",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2cab0dc-8c43-4295-8874-14d2d5c70067"
        },
        "item": {
          "id": "f33224ec-2ade-413e-b93f-d26144878763",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58cde904-9b51-4a4e-8fbe-5fdc7876667b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572a162c-1442-4097-b3a1-411afb482ec5",
        "cursor": {
          "ref": "8235ce88-db0c-4d9c-993f-88eb97c67d03",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "008f45db-1f5a-4c35-9a93-b81fb1ca86ae"
        },
        "item": {
          "id": "572a162c-1442-4097-b3a1-411afb482ec5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2d0897cf-909d-46a0-8013-5b1395eb488c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e8688-ec24-4703-9ae5-61fb1bcdd720",
        "cursor": {
          "ref": "0accfdc3-2323-409a-9650-a6c4613dc641",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d9c69ef-e5e3-42ab-b2c9-f5881745be30"
        },
        "item": {
          "id": "c65e8688-ec24-4703-9ae5-61fb1bcdd720",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "73ced52d-7d37-4090-9d51-15f62d7bb8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00334854-df44-4ec7-916d-612523e921a1",
        "cursor": {
          "ref": "4c7c0301-709b-4820-bff3-8cb6ac25dc2f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "509b514e-a263-404c-b37f-88591b9e6613"
        },
        "item": {
          "id": "00334854-df44-4ec7-916d-612523e921a1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c506813d-2d21-4eec-af48-b4f4a6b43f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e94eaf-b10d-4bb5-8584-4011beb52ce2",
        "cursor": {
          "ref": "344e47b3-0e93-436a-9b3c-cd0bed672b79",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e7854cf-7e6f-458b-b2cf-c629ed58d16f"
        },
        "item": {
          "id": "a5e94eaf-b10d-4bb5-8584-4011beb52ce2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a62c8f6b-2018-497c-8519-dc25457588cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eed111-f389-48d9-9349-e053eff623c9",
        "cursor": {
          "ref": "6f97bf57-e08c-4b62-8ac0-36694b83955a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "534eee7f-e510-4735-b4ef-c61ae3b36afe"
        },
        "item": {
          "id": "a8eed111-f389-48d9-9349-e053eff623c9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "636a5417-5857-43f7-b327-fbc81db50ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b9c51b-8eb4-4301-80f5-e2deb8449abf",
        "cursor": {
          "ref": "0cc6ff51-a1ae-4fdb-9bd9-e339b6761056",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74d7f9c0-41e2-4716-8f19-9281bdfad54c"
        },
        "item": {
          "id": "a5b9c51b-8eb4-4301-80f5-e2deb8449abf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "123232bb-22ce-4e9e-8d86-9fce27a16da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11787193-8936-4251-a9d7-17928591c95a",
        "cursor": {
          "ref": "4b793573-bf5c-4db7-9de2-c6bedeec6634",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5817d376-6bb3-4b3f-917c-1fb401472b96"
        },
        "item": {
          "id": "11787193-8936-4251-a9d7-17928591c95a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "88c3595f-e15e-4016-aa3e-2d4c54c42218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32220b0-0da8-41a8-9baf-2951bc3ca01a",
        "cursor": {
          "ref": "8df2d9ff-5934-46c9-b270-2867b613dc06",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "36eb52b8-bdf6-4818-a303-986e982b7545"
        },
        "item": {
          "id": "a32220b0-0da8-41a8-9baf-2951bc3ca01a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "945ee35f-7a55-43cb-b39e-b4dc2af9403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c031f23-0bcc-426c-8a4c-3b5dd3419801",
        "cursor": {
          "ref": "aacda8a8-b523-41fe-93ee-e738cdbd4bd8",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1b707724-68d7-462d-b43e-3914dfaf7f2e"
        },
        "item": {
          "id": "8c031f23-0bcc-426c-8a4c-3b5dd3419801",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dcf76a12-cf19-4449-9660-a97efda5d372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf81422-5b0e-47a8-9c5b-eb45dead2ba8",
        "cursor": {
          "ref": "22020734-1964-4a26-b7c7-e5552f70daa7",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e278d87e-5c61-4718-a2d9-5a5e2793f89f"
        },
        "item": {
          "id": "ccf81422-5b0e-47a8-9c5b-eb45dead2ba8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a9b6b5ff-c24a-4d8f-bab4-f62746e68c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e297754f-3a67-4970-83d2-70f03766de98",
        "cursor": {
          "ref": "a2ff5aad-9b3c-4ab0-8e41-005a882abad1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ccf24d40-cd77-432d-836d-ba13d7660cb0"
        },
        "item": {
          "id": "e297754f-3a67-4970-83d2-70f03766de98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "723610c2-2d7a-4e1e-bdb1-f1e6f944e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53e6356-a5ff-4d89-906e-c51068b67625",
        "cursor": {
          "ref": "299c584d-3434-4cd1-90e5-4c8d6f3a456f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1abc88ca-f42c-4ba8-a3d4-443abba80c01"
        },
        "item": {
          "id": "e53e6356-a5ff-4d89-906e-c51068b67625",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "21e24158-1c51-4d02-9419-b07f5b8a2781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405faf0c-1e9b-442d-9352-544d64c47f3e",
        "cursor": {
          "ref": "a16b9cd8-591f-4cee-80a7-a1ba1fa80fc7",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dafdc874-b3aa-4b39-b0f7-b8001f541a2e"
        },
        "item": {
          "id": "405faf0c-1e9b-442d-9352-544d64c47f3e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bc102206-3e15-4190-ad4b-aefe293dd331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e8fd3f-b4d4-483d-94d7-38eea0a1a348",
        "cursor": {
          "ref": "512d5827-b5d7-4959-9da5-f1dde408826f",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6460a13c-cd7b-4de5-9a1f-95c858ef9998"
        },
        "item": {
          "id": "f6e8fd3f-b4d4-483d-94d7-38eea0a1a348",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ad578625-82d4-4261-8dd2-2ec33d126c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b2a9a4-fca5-4004-8b65-b973ac2a5ff8",
        "cursor": {
          "ref": "57b88606-ee9a-4590-ae28-9509f1147176",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2f8daf19-07a8-4b79-8aa2-e2e45cbae572"
        },
        "item": {
          "id": "31b2a9a4-fca5-4004-8b65-b973ac2a5ff8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ddbc8bfa-bcb9-462b-990e-8995465cd6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cfb72b-f39d-4c0d-b65b-c345c7763104",
        "cursor": {
          "ref": "3cebd1f2-ea53-4b11-b4ed-0781deec6e76",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "059335ad-c1f6-4f07-b477-3da00a258b22"
        },
        "item": {
          "id": "93cfb72b-f39d-4c0d-b65b-c345c7763104",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8cdd64cd-f585-4bca-a959-f13f68a64337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f459b2-c821-4a2c-aa1d-4a7a7baaa0b2",
        "cursor": {
          "ref": "0b5af6d0-e549-43ce-b06f-c77d45a013ee",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fab8b598-4661-46ce-bb11-77f5a217ac89"
        },
        "item": {
          "id": "f5f459b2-c821-4a2c-aa1d-4a7a7baaa0b2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e27ccaf3-6f5a-4215-869c-ffd05633d206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f1c10-a464-4176-aed0-44d8be2e4292",
        "cursor": {
          "ref": "b99c740a-056e-4942-9a9f-41ce966fba06",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1b8234a-0d71-49d2-a1a7-9ba86798691a"
        },
        "item": {
          "id": "b54f1c10-a464-4176-aed0-44d8be2e4292",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a049f96-64b3-41a0-9163-14800e4e7640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c033a310-0117-4a04-b650-ecf66d118c28",
        "cursor": {
          "ref": "b2dfd931-aa58-496b-8e04-191e48395f39",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec6ae0d7-be9f-44eb-8895-6ac093d08665"
        },
        "item": {
          "id": "c033a310-0117-4a04-b650-ecf66d118c28",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2d7e9d76-f8af-4e2b-8117-a1b26eeb871f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c596bf38-b035-4dc4-88bd-10792b13cb3a",
        "cursor": {
          "ref": "b85a7b00-46ae-4dc6-a21f-7d5f6ae034f1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d2e3551-b100-48d7-a374-987c748a079c"
        },
        "item": {
          "id": "c596bf38-b035-4dc4-88bd-10792b13cb3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2e7da2c4-d168-4b8c-ab81-a16ee066b286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ffd471-f917-409d-9333-47295d4770a8",
        "cursor": {
          "ref": "7185d20b-ec8e-43b4-8919-011a059946e6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4399f765-5c7a-42c8-8067-5e58fef467e9"
        },
        "item": {
          "id": "d9ffd471-f917-409d-9333-47295d4770a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c8caeaa9-743c-481b-8b5a-1d4cfd1af62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78846d49-3165-4483-bb3f-bd2e83c93d52",
        "cursor": {
          "ref": "bac786ef-0ef3-4422-a614-41cc319ad166",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f7f10b7a-9dc5-40c3-adb6-a743df4043fc"
        },
        "item": {
          "id": "78846d49-3165-4483-bb3f-bd2e83c93d52",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "695258d5-f191-49ce-8781-a5a7b0b10d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116d8efb-7cc9-4c8e-a06d-58f776e77c20",
        "cursor": {
          "ref": "a25f8e0a-4765-428f-861c-4a6447e9eeb2",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4bf9aeb6-edff-4b05-8989-e834e0b60bee"
        },
        "item": {
          "id": "116d8efb-7cc9-4c8e-a06d-58f776e77c20",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e21488b1-e0cf-4b61-aa15-d0e1c63e7ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b2eddb-3be5-44f5-a9d3-3a0ddd9b7ee7",
        "cursor": {
          "ref": "da229d84-3324-4c10-bdd3-1076b181f126",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5dee08e7-9926-434c-b118-7e00c568b31d"
        },
        "item": {
          "id": "e1b2eddb-3be5-44f5-a9d3-3a0ddd9b7ee7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4cc346d1-28da-46da-bdee-3a860d80ae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ed76dd-36fc-4513-8d9d-1a24a4465ae4",
        "cursor": {
          "ref": "105bf7a6-59ed-4d5a-8f86-5b02e8f3dfd2",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f585a7da-66c4-4614-ba04-1117186f5ad5"
        },
        "item": {
          "id": "b9ed76dd-36fc-4513-8d9d-1a24a4465ae4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e53d7e0-6026-44ed-b129-eedb790a8895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd90e7b2-4053-47d7-872c-f5dc50e12007",
        "cursor": {
          "ref": "2354903f-9d09-489b-b62d-2756fa054059",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e9dc26a1-6bb3-4f06-8a85-c2282c2df0fd"
        },
        "item": {
          "id": "cd90e7b2-4053-47d7-872c-f5dc50e12007",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb94d58c-0de6-4663-8a8f-dedc4e4d4707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ac0a61-0178-45e3-83ff-aa89ee32bff6",
        "cursor": {
          "ref": "858eca56-146d-45c0-9729-78791a53c22a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "99087d2a-7049-48b3-b472-6c330aa5868a"
        },
        "item": {
          "id": "08ac0a61-0178-45e3-83ff-aa89ee32bff6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6920def0-3608-4d2b-8cad-1caf3a4e73c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52a780b-d46e-4ee0-8030-be1e3f9b1b3d",
        "cursor": {
          "ref": "00eda050-a1fe-4a6d-9294-24c29f86aeb1",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "57661be6-5b9d-4fa5-8468-ea059119560a"
        },
        "item": {
          "id": "b52a780b-d46e-4ee0-8030-be1e3f9b1b3d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c7ce402f-368f-49c3-a654-37431024375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1156db-5926-403e-ba73-1d49768180e4",
        "cursor": {
          "ref": "fba74370-9882-4ed0-95dd-1b9dbb8af445",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fafd717c-dd97-499e-b2f9-9696bd630b42"
        },
        "item": {
          "id": "ae1156db-5926-403e-ba73-1d49768180e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "90e884e3-c0d6-4d9c-b46b-9cfac8dad0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ac765f-632b-4ede-9003-da8734c27d96",
        "cursor": {
          "ref": "b7a3ca72-6350-4a25-861c-85e9e1f736f6",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4fa256ca-e90e-420e-9f37-e25028bafa45"
        },
        "item": {
          "id": "19ac765f-632b-4ede-9003-da8734c27d96",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "15625c7e-0a82-484a-b6c6-616431298493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acbd3a2-920c-486f-b5f0-f26faaba7d9a",
        "cursor": {
          "ref": "bf437cdd-71fa-4307-9b68-4fdd12c62f5f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7e0b9924-dd81-496e-99ba-7321fcb5145c"
        },
        "item": {
          "id": "8acbd3a2-920c-486f-b5f0-f26faaba7d9a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9f0b3ad-19ff-4c8f-814a-3c5a7a46229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be327569-0669-4060-b4b2-bc3f9794b643",
        "cursor": {
          "ref": "f1574ce0-ecff-449c-b4af-a0dad954f2e8",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "60edc3f1-08fd-4a00-be28-f282ba8b13b7"
        },
        "item": {
          "id": "be327569-0669-4060-b4b2-bc3f9794b643",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ba7baaf-62ca-457e-9550-c76ae51eebb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfbdfd5-9e8a-45bb-9a27-bea5c9cec327",
        "cursor": {
          "ref": "319fd6ef-e9da-485e-a70a-4431a9ce196d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1f34ae92-db68-4189-a2bc-201590a53c12"
        },
        "item": {
          "id": "3cfbdfd5-9e8a-45bb-9a27-bea5c9cec327",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e95f59b2-afeb-4a66-a5b5-60e392d6dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b0ade-b4ea-4ba7-bc86-2bf3f63dcab1",
        "cursor": {
          "ref": "27bd90e8-7c2b-43cf-82ee-c7cdd698bdf7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e92db2b5-836d-4bd2-bd3e-33eae31b7f50"
        },
        "item": {
          "id": "876b0ade-b4ea-4ba7-bc86-2bf3f63dcab1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d10452a6-d06e-49ca-9212-5e17e1e3a8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f854d24-ad5b-4251-8f3e-8e9335a82c54",
        "cursor": {
          "ref": "79f2d8b0-53b3-44ca-b281-000289ad5549",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4f31d0ab-44d2-42e1-aae7-e7b176635ca6"
        },
        "item": {
          "id": "7f854d24-ad5b-4251-8f3e-8e9335a82c54",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c2edf57e-650b-4c12-845d-9ed6e75c1ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9825358a-a5f1-43a8-90a8-ce8b928ca500",
        "cursor": {
          "ref": "81c6d743-9efb-4b8e-abf2-be878f59eb3e",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1fb06855-23fb-4439-9ce9-8580d2b8bff5"
        },
        "item": {
          "id": "9825358a-a5f1-43a8-90a8-ce8b928ca500",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5c85f7fc-ac1f-4a99-af4e-867b2f2cd95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965b9c4-120d-4cc4-9049-c41fc770bfeb",
        "cursor": {
          "ref": "581a3cb6-e786-4320-96d5-680010f0286e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aec78708-cda9-4e8f-995a-81123296c3e1"
        },
        "item": {
          "id": "d965b9c4-120d-4cc4-9049-c41fc770bfeb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e8e0c13d-30d5-48f0-ad25-48bb379f592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49df6ae-42ea-465a-932f-faf3335faf7a",
        "cursor": {
          "ref": "9441b550-d475-4a4b-93e1-742615455c70",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bfe68396-11ba-47bc-94c6-0152ecb2b5ea"
        },
        "item": {
          "id": "f49df6ae-42ea-465a-932f-faf3335faf7a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9ebaecb6-e96d-4287-b5d4-2484d83e1737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7f2676-441c-40b0-bfd7-30bd6f5316ed",
        "cursor": {
          "ref": "3557586a-2ca0-4f68-bba8-ac3df4a765fb",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a00ec8f-1d31-4861-a945-209f225b6b01"
        },
        "item": {
          "id": "1a7f2676-441c-40b0-bfd7-30bd6f5316ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7ac98360-b4af-4c21-9226-de92dadce312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d6028f-2f38-42a3-943d-d14d3711f83f",
        "cursor": {
          "ref": "b28586f5-dfcc-4517-a23e-acb563100204",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1cf6aaf5-4055-4b84-bfaf-07c5c1888efb"
        },
        "item": {
          "id": "23d6028f-2f38-42a3-943d-d14d3711f83f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "20716b7a-b1aa-46a0-81a1-c801eee6f70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a975368c-10bb-47e4-b67e-e89f6c928818",
        "cursor": {
          "ref": "fece0e6a-1856-4f86-b57e-3a7f8eb152bd",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8eaf7ab4-959c-407a-88c7-d235f219f221"
        },
        "item": {
          "id": "a975368c-10bb-47e4-b67e-e89f6c928818",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e86cf1e5-dc0e-4863-8769-e40a0f484cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34ce84-2e85-4053-8185-94951a54e90b",
        "cursor": {
          "ref": "c3438bfe-f488-4f00-b9c9-45824e84106f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "39ef8868-d7eb-4fc0-b5fe-a63e96dd7bb4"
        },
        "item": {
          "id": "1f34ce84-2e85-4053-8185-94951a54e90b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1d570c2c-6d22-4e8d-bb18-40c1e38555da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b3e546-ff37-4598-8555-54cb12cdc930",
        "cursor": {
          "ref": "4ae2c38e-ce23-4a22-9b2a-e4c7bebae06e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8a618a09-b752-40a5-96b1-542cbd038688"
        },
        "item": {
          "id": "22b3e546-ff37-4598-8555-54cb12cdc930",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1d78e277-02e4-490a-99b5-98f8ec494f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28d98d9-ca03-442b-8c5a-44f32ff42453",
        "cursor": {
          "ref": "e3fb623d-17c5-403f-9699-100c53babf4f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "91f1bfb8-106b-4bc8-aa0e-bfc2b90ba9e5"
        },
        "item": {
          "id": "f28d98d9-ca03-442b-8c5a-44f32ff42453",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4486917d-0a69-45a0-b530-cbc4273ae754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb04070-6ee5-48f3-8c75-7f395241807b",
        "cursor": {
          "ref": "faf83c09-2d18-40d4-8775-6d6f1c385cf0",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "744cf6b0-2c3e-4a7d-a82a-6e4678a3954b"
        },
        "item": {
          "id": "afb04070-6ee5-48f3-8c75-7f395241807b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6b7fd378-88a5-4c69-97e4-e7886fce2463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3d7b8-7cc4-4aad-b6fd-b51b6d843e0c",
        "cursor": {
          "ref": "5be02622-1c17-4e84-9c57-c2cd027bda27",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb44e8e7-770d-438a-a4d1-5e59860ccf2c"
        },
        "item": {
          "id": "68e3d7b8-7cc4-4aad-b6fd-b51b6d843e0c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "be6811b5-c71e-4dc2-8327-0decc5787f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5a970-4188-4b8a-8d39-6385dff79927",
        "cursor": {
          "ref": "a5c4c5e2-eb5e-4011-8174-e90d256d3297",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e99c6828-62f9-47c4-a132-31b7de5e3ac6"
        },
        "item": {
          "id": "11c5a970-4188-4b8a-8d39-6385dff79927",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce441971-87ac-4ecc-b7a5-ec41795e309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1a1601-0af9-49ad-aaf0-c059f4a56c8c",
        "cursor": {
          "ref": "1d6d1b50-e507-49a1-b0fe-aa68020e62cb",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "569d1e67-4ad0-4b76-b10c-fe2a57222779"
        },
        "item": {
          "id": "4d1a1601-0af9-49ad-aaf0-c059f4a56c8c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "94e31d32-e5e5-4f83-b416-19b7b2c564a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f45cee-49be-4a26-afdd-32452bf23963",
        "cursor": {
          "ref": "92019d00-5cda-4536-aa81-d92face0442b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "82205810-f783-4518-8556-f7eeeb5a45fd"
        },
        "item": {
          "id": "48f45cee-49be-4a26-afdd-32452bf23963",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6cbfe446-7051-432c-a34b-32bed55e5324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798eb92b-cdeb-4367-8aa2-b38b3f7867d8",
        "cursor": {
          "ref": "2898003f-7e9e-411e-87e4-3532566882eb",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2dd95529-a4ba-4bd9-afc1-c110838788a5"
        },
        "item": {
          "id": "798eb92b-cdeb-4367-8aa2-b38b3f7867d8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d82ff3b2-d2d2-4e5f-a7d1-18997a3d2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde0075-3b50-42fa-9056-911f3e3c2d82",
        "cursor": {
          "ref": "a851ab87-a600-4ea0-bb13-8f43c7b8aa68",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4f5e34a4-4081-4ae8-a9b5-d799538952a0"
        },
        "item": {
          "id": "1cde0075-3b50-42fa-9056-911f3e3c2d82",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fb3354d9-ad84-4e0b-9c17-f4b9abfc5be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436e581-5758-4081-9d64-a5499c10f992",
        "cursor": {
          "ref": "f485d1a1-9062-49e2-8139-2e804a155164",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5dd61bc9-d46c-4f91-8196-4f149aa0fc9a"
        },
        "item": {
          "id": "1436e581-5758-4081-9d64-a5499c10f992",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "467cbbb4-c0f6-4d54-a066-5e16dc129eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9436a8de-09ad-4014-adf8-0ed15dc909a5",
        "cursor": {
          "ref": "9851742d-f69a-48f4-b17c-e7962acb9392",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd2eadf4-8a5b-40ef-847a-4bb0d625ec34"
        },
        "item": {
          "id": "9436a8de-09ad-4014-adf8-0ed15dc909a5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "360395c2-e78c-44e8-b483-53dd9f7114b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb0f8e-23f1-4d25-9ce5-da79c64cbb89",
        "cursor": {
          "ref": "d1d70777-877c-4b19-bb3d-e410ed91cb62",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "477157d1-f40c-485a-bd38-77e43de4a8c8"
        },
        "item": {
          "id": "25cb0f8e-23f1-4d25-9ce5-da79c64cbb89",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7152da1a-7e89-4f39-aea6-fa91e1c9f364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1dbb8c-25d5-4ec9-ac99-0d16258195b5",
        "cursor": {
          "ref": "5e959832-58c6-4c95-962f-ae7522528f1d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7bce55ea-29d0-4f20-bc70-8e4f085d8391"
        },
        "item": {
          "id": "5b1dbb8c-25d5-4ec9-ac99-0d16258195b5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0f546b3-39f2-4f55-baba-18393b34c95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354c362-e215-49bb-be49-4c876c625e1f",
        "cursor": {
          "ref": "978a3ef0-4395-4679-88d7-e2b245e7c493",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f532d1a-0586-4090-8242-19d858afebab"
        },
        "item": {
          "id": "1354c362-e215-49bb-be49-4c876c625e1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89ef27df-edad-4edd-b54c-576f13ad2193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daded8b-5114-46be-996b-fe535fa232bc",
        "cursor": {
          "ref": "bd343554-c065-4b94-b51e-7e9809fe5832",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61fb8eaa-75ec-441a-b56d-c40f610c9792"
        },
        "item": {
          "id": "3daded8b-5114-46be-996b-fe535fa232bc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "75af38dc-89ff-4e1f-b043-13da4e131958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5854e6c-e82a-4888-84ff-f36ba98d7c94",
        "cursor": {
          "ref": "5e03f1b9-05ca-4dac-aebb-39b1ce7e755b",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "20e92466-3dee-442d-a176-fee0f3a269bb"
        },
        "item": {
          "id": "c5854e6c-e82a-4888-84ff-f36ba98d7c94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1cc25033-6818-4b78-8842-34cee9f5c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4196fe6c-3a4f-406e-bc03-51b35bde7e5c",
        "cursor": {
          "ref": "33809f27-9945-4181-acef-a17c284a248c",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "76d4f8a7-4c15-4360-96f4-b851b987f363"
        },
        "item": {
          "id": "4196fe6c-3a4f-406e-bc03-51b35bde7e5c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54bdf5b7-fb51-4601-b8d4-63b4f020b02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed0d20-0275-4c6d-9818-a96cf8d12c89",
        "cursor": {
          "ref": "f9e7bb77-49a9-4f57-911a-72d4d6e46636",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "62d4e51f-6818-441c-bb24-399959e240d9"
        },
        "item": {
          "id": "45ed0d20-0275-4c6d-9818-a96cf8d12c89",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1f5f7ed9-5467-4cbd-973f-b3ee033e94a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a50f43f-a19b-4832-9b5f-e9db27807c50",
        "cursor": {
          "ref": "0e8bc622-e35e-4a88-99df-a4fdfeadaf0b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ace6e690-60b9-4095-b818-dbd0c1f98b38"
        },
        "item": {
          "id": "2a50f43f-a19b-4832-9b5f-e9db27807c50",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9cc81129-5bb2-47eb-aeaf-e066d54e0a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0f6563-2e9a-4464-bc78-d1edd2e0fcf6",
        "cursor": {
          "ref": "a72161ae-c7bb-4d2d-9e1d-016f24c2ee1b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "42bc3a57-b116-43dc-a330-e71197511c7e"
        },
        "item": {
          "id": "8d0f6563-2e9a-4464-bc78-d1edd2e0fcf6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bb8e30ed-e044-473f-a95a-b6de19018dbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cecee4-d33e-4fa0-94b6-4f3785b2a9c6",
        "cursor": {
          "ref": "719e3841-175e-4f8e-ae35-daaec56a5bb7",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abbc1a74-e2d3-4728-9aa4-b66857ee3275"
        },
        "item": {
          "id": "d4cecee4-d33e-4fa0-94b6-4f3785b2a9c6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4630ac36-b55b-4289-bfa9-397bb9d3bc6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6520be-10c0-440f-ad35-e96597345a59",
        "cursor": {
          "ref": "c283856c-65a7-470e-b421-309efa3d00c6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "79ddb1a4-20df-4adc-b0f2-a32167f794f6"
        },
        "item": {
          "id": "2a6520be-10c0-440f-ad35-e96597345a59",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "95689b86-a6e7-4667-96d7-b57886263128",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b31df3a-93c2-484f-a9f7-e5b2bd88969e",
        "cursor": {
          "ref": "813c0f04-7c30-47c3-b658-ece74c2a6132",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "92d36d35-f6a8-4ade-bae9-e9336a168292"
        },
        "item": {
          "id": "5b31df3a-93c2-484f-a9f7-e5b2bd88969e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1265e0f0-cc03-44b9-95dd-fb904fde5f93",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d413d7-b5eb-43bc-b5a2-0d71477eb642",
        "cursor": {
          "ref": "a4180403-6662-40eb-a8d5-417692a046dd",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f2a1056-4fd6-4098-9776-f9bacc8efabb"
        },
        "item": {
          "id": "e9d413d7-b5eb-43bc-b5a2-0d71477eb642",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e8d4f91-b7a7-4782-817e-2bf4b3fc92f1",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
        "cursor": {
          "ref": "299a4435-eca6-4721-9d36-50f4ee3a9a13",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d4bfe82-2ae5-4953-981a-9455417a0b09"
        },
        "item": {
          "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b044263f-f648-444c-af0b-8fdc6c65aa66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
        "cursor": {
          "ref": "299a4435-eca6-4721-9d36-50f4ee3a9a13",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d4bfe82-2ae5-4953-981a-9455417a0b09"
        },
        "item": {
          "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b044263f-f648-444c-af0b-8fdc6c65aa66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
        "cursor": {
          "ref": "299a4435-eca6-4721-9d36-50f4ee3a9a13",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d4bfe82-2ae5-4953-981a-9455417a0b09"
        },
        "item": {
          "id": "d4baaaf4-21ce-41ee-9250-7b76ece3cb7a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b044263f-f648-444c-af0b-8fdc6c65aa66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba9734-6464-49e0-a1fc-7b36b7b7b612",
        "cursor": {
          "ref": "1fd7038d-95dd-49f4-8984-42a9508fb4bf",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d61bcfbe-54f7-4559-8e5f-5bf458720ca6"
        },
        "item": {
          "id": "d4ba9734-6464-49e0-a1fc-7b36b7b7b612",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3a864e54-17fe-4c41-9b6d-a64b49d736e3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80544743-d093-4b3b-bc52-a7114aeec473",
        "cursor": {
          "ref": "3f649ab0-0930-4b96-aabf-f22e765a74b1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a41b805-eea8-4042-a494-54f489814fc9"
        },
        "item": {
          "id": "80544743-d093-4b3b-bc52-a7114aeec473",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "521654d1-4d4a-4d70-9d73-cd17d9e4de1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80544743-d093-4b3b-bc52-a7114aeec473",
        "cursor": {
          "ref": "3f649ab0-0930-4b96-aabf-f22e765a74b1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a41b805-eea8-4042-a494-54f489814fc9"
        },
        "item": {
          "id": "80544743-d093-4b3b-bc52-a7114aeec473",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "521654d1-4d4a-4d70-9d73-cd17d9e4de1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d31176c-72f2-4f08-ad22-efe56cf554e5",
        "cursor": {
          "ref": "a2620b29-3a58-4037-85a2-0f089af194fd",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9e4249f-0e6c-40f3-969e-3ca30f964369"
        },
        "item": {
          "id": "7d31176c-72f2-4f08-ad22-efe56cf554e5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "868a4a6e-1199-4876-84e3-62683ad00499",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 74,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c05d3-e329-4f3a-a84d-c1c14126529d",
        "cursor": {
          "ref": "ec3bb514-80ed-49b8-9161-c8d9095e8974",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea69eab3-5b64-4db3-af4a-9677c1bd53d0"
        },
        "item": {
          "id": "134c05d3-e329-4f3a-a84d-c1c14126529d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac73a00a-63fa-440d-a85d-a3082a110c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c05d3-e329-4f3a-a84d-c1c14126529d",
        "cursor": {
          "ref": "ec3bb514-80ed-49b8-9161-c8d9095e8974",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea69eab3-5b64-4db3-af4a-9677c1bd53d0"
        },
        "item": {
          "id": "134c05d3-e329-4f3a-a84d-c1c14126529d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac73a00a-63fa-440d-a85d-a3082a110c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ea85e3-a6d7-4680-ab31-e2046045a1ae",
        "cursor": {
          "ref": "3d7dc065-51bb-4c76-9bce-2d62d51bfbbe",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "173154ae-895b-4be5-8e2b-018290c33eef"
        },
        "item": {
          "id": "e8ea85e3-a6d7-4680-ab31-e2046045a1ae",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3471f256-fa8b-432b-b1be-9dad3d531c80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}