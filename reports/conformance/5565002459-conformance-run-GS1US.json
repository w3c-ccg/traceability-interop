{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a37b1e51-0963-42f1-8f23-eac9fb01b921",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9dcbfa3a-e4cb-492e-be98-5c504506c79c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65435a6f-b188-4fd2-a40d-a59353d62940",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45057990-478b-42d6-b068-e3e7d79c0c3e"
                }
              }
            ]
          },
          {
            "id": "40e2186a-0074-4bc7-ab69-f62b891b7ae4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "122c07dc-5afe-4d39-8ba5-e35090d43c16",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3788062b-b8af-412f-841e-bc1b3df993bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d67452a-b637-425f-8a04-181dbfcb31d6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "97e5710f-dd91-4e0b-b9cd-cda24727076d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2bb658e7-986f-4492-9667-ad41ea56d2a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a104af3d-77f1-43bd-b018-ec51d2647279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01aef30c-70b6-4d2d-9a68-a6bc3b272f7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecf786dc-4dc9-4d6e-ae77-4d9bcb3e16b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45003b75-1967-44d8-8b28-d8085b2dc865"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5efca438-c32a-481a-ad85-a519a620f6d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "117a759d-37d8-443f-bb99-29de2166f5fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67e9f31c-4f70-4c3d-a00b-d32e8b724de0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8361b05f-ccd3-48d5-ad02-cbb961af824b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0481d6f3-f658-49eb-a65b-288d4b177cbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d423aff2-ced0-4f89-8522-a68ad3b76c07"
            }
          }
        ]
      },
      {
        "id": "491661eb-fd8f-4aee-ad14-ed2c413b55d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad2ba008-1fa2-4c60-8d42-2d3c6d6625b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e461aad2-23cf-46ae-ac15-60422f83d568",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e873ae45-de49-492d-a8f9-ba2ade93da35",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc55526-931f-4947-9a80-8bf23ecea83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd7be689-5bb9-4447-bd4c-4513604e06dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0d4dd-49a0-42ce-891e-e96a29023373",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511b2906-da9e-4c4d-a15d-05d656c35b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44141dda-d1eb-4cdb-811f-48ebffad7118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd512296-041b-43e3-829d-853b3990783d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab30763-0628-40f6-9e2c-f9ca18f2fbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbee2f59-93e0-4d4e-9185-db245fad3fcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "042c5b3a-ec09-4e1e-a1cc-cd4ffb8e775a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52148a61-a3d7-4d94-8ccd-d2bc0034a9d6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896f1e48-c0eb-4019-b656-2bd90f5adfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2eaa989-b14b-422c-81dd-3b808bd69523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef9f73e-d41a-4091-b5c5-87cc29bea1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0ef6b3-6f1e-4585-a528-d36d4d507c05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4bab581-8cac-4679-9dbb-8bd45e77a260",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d98cc500-7b9d-4a28-83e3-38064df03e90",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24d0f29a-6dbb-44a0-a8ac-579e8cb5a27e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a30fb3ef-7468-458f-9d4a-5f1ce8694976"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f60f35f-e924-490e-b502-4ca76699f4d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "49581167-2269-4606-a97f-0356d54d314e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "530fe7c6-07d5-42ae-a447-321603a4d62f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b50247cc-7943-4004-8441-f0b4e8b5ac03"
            }
          }
        ]
      },
      {
        "id": "a8faf4dc-177e-458f-a19b-dccfd02582f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "528ed635-9f31-45af-9cd0-e44006cad4a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a89abe9d-04c2-4ef0-9d30-35dbe013287e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f483020f-4de5-4ea2-ae0f-fe3b1f0eee0c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa30d75e-afd3-4924-aa19-343ad9fb15e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f88e6a-cc54-4085-a6f7-0f502d7abb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8bb55b-b7be-4106-b3be-3edd9618bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa008a1-2389-41dc-9e6b-a5423b690a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc3506e-43b3-4e20-b508-7172f14d4154",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e63c08-854f-4c69-b3f1-d508100248e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff88920b-0bf4-4959-aa7d-88b1d7cc2967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e785f0-6e54-47cd-8cfa-4052b8439f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f951c236-7238-48e0-9032-e59825a0b12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583be98b-50d4-45bc-a9e9-59912f0ed11e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444b213a-9067-40ec-98cd-95f4a94a4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c3729b-b18b-410e-9cb1-82ccb8cf5acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b96298a-503c-4354-98a8-4eab05e6b156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82327ca7-25fd-428a-bcd9-aac114cdbb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a045e8-d2d1-4301-931b-f19222b65705",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0cac8e-0937-4bb7-b80e-27f813e226b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796d3790-de37-4c0f-8fe9-42869e6b42ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f17722-24d0-41e4-81c0-80888436f441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d98c219-a407-4efd-8fa6-14c3a5e43692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a02ae29-2678-4158-a8fd-9e140150e5a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9826fc34-c132-43c3-af54-2cd1157ee869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168af637-337a-467f-8856-959fad86a727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1475c8d4-01e1-4949-987e-e4eb1d579cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45daabc0-231e-4937-bbe3-52137e44bed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de7dea-e804-454a-b0eb-589ce2f92ace",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea61de1-f819-4a2f-bf7b-88537da1e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec5512f-a12d-4103-9cb3-3fe93392ab29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372775ee-4c4f-4003-a7df-08c00c5f43b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d515a87-1c24-4026-b0b5-d763c64cbda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d484a93-fc47-422b-a88d-309d76e54118",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39f4bd2-5bd1-415c-9692-c682a6822af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5fc317-1bb4-432a-8e0a-80a3b53929fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d8c0a3-4289-4035-a5f9-ba2f6a2def8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cee52573-ac1a-4db3-a51b-188632bd9776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c423894e-d450-4625-af39-83060bda52b1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5ad7f4-9264-405a-9e2c-b1fc854ff883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0259af8-d8d2-4745-8797-24c7579c8bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b68dc5-6ce1-4c6f-b7b6-3d90daa77de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6b58a5d-4a39-4d68-b980-d1e253bfb675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77147af-58f4-4ed5-a512-17de81bbd520",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf76646-8025-4697-94fc-42757dc13910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b73f6e-92c1-47e9-91ba-e9daaae4583f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e0a95-7fe7-460b-bc54-4cae9bacf998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eed44388-14fd-4097-9279-ea86765e1ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc24d79-371a-4520-8395-5307460e6aff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9cbbcc-e5a7-4944-b01e-199cf62667b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33451300-747e-4e15-a806-82496e2fbac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b8714-3ac5-44eb-a875-0e6037f946cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "585bc359-2564-44e7-920a-5655a3aab84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfebe1e7-06f1-47d5-949a-ab66bcb588d3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab2cae1-b291-4ab1-bc50-d5f2cfd7d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64082f62-bfb3-45cb-826f-6be167acae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574ea6d6-4f7f-4274-89c8-f498d2d5bb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babe8c68-780d-4a2f-bfef-0a57614c9dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84687342-9ddd-4df1-aea7-21415cc2fc80",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdb6925-726c-4e6b-9a46-a596854a0fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf74eb2-4dd8-4614-b28e-87513d45c6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973c9d43-51f8-482d-9514-c4c309746239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "758f60ed-9402-4d39-8be0-68862aa50b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22c739d-0b56-423f-9504-19763f70aaa6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd7173-e7cb-4a06-86de-00dbab4304c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374500e5-80e1-432e-937e-8554ce9189ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92d957-7374-4842-a88b-a4e521bd0f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63f3deab-b17c-4cd2-9953-799203fbc801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ab767-c588-45b1-bd8a-11c61eab336d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b36bc-ce96-415c-8b2c-cff4f0af973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81612787-1afd-4886-b790-3d531d55fd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5135db1a-ac76-446a-bf83-6c030147d94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc19a3e-b2d0-48bf-9b79-cecd0e1bac90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d13a1a1-f62a-4c86-a589-4a65af3f27a0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0042912-4fe9-4a57-833e-623d1d2a1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1997d5e7-55b3-47c5-ac42-ac09a93b3f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aed24a3-e9e3-45fe-8933-664e21089f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "249f8b57-499b-4e86-97f9-b392928ab3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96908ad7-95a4-4a20-b3cc-612f9bd550dc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0143ac36-9dac-4b5d-8b8a-a46629113969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140caa3d-febb-4813-b997-fd6b121ccfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af82170d-266c-4682-a24b-36b4e7f41683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9e97405-42d3-467d-8b9b-fe018325648b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4fda43-30b6-4126-9f1c-c669307cc7ed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d00e07-101c-484d-b3be-8886f94dd0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70181182-fffa-4a42-a13f-4a457b13bac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcd7e67-2824-465c-95c4-bef57b20996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd7301eb-9c3e-4ae2-ac99-e7f10917183f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe6f5f-dad9-4f65-985e-d3c3d0944e1b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48962d14-ad10-4883-86aa-a29f00f3ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0144dca1-87de-4e02-82f3-b5eac9d58063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909a71c9-48a6-4912-8c35-d05149111bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "206e2e5f-0702-400b-884e-68173f551ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa3ff5a-5872-4328-bb8f-e46ffcb40dfa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4803dc4-0238-4c7a-ba02-a874c7b28e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b1a4c9-3268-4ed7-b8a9-0ad27f06e15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650e1648-9e4c-4628-899c-85094202773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98c18e8-e69b-4a3c-b98d-47ca49513f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4996f28b-b914-47cc-afb1-e820a6bc51dc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e2742-b838-4cfd-b620-6b44086ca395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b13020-89f5-4317-a795-2b15fd8634d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8231edbe-62d8-48c3-8b7b-6c3d8b72d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd442cbe-0c40-4258-9979-35c40a3405be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678ccaf5-e8d8-477d-a95e-f49f98fab714",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827d08dc-fbf4-4901-b692-c84ecada35b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82da10c-9a87-4241-859d-fac183f68b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55da4649-7d90-4d8b-ac6e-14779625eeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5662ad4-4163-4663-ae16-05323cf873f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ebbcb2-762b-4bb9-84b2-411fc965b6de",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25dfccd-dcea-48e4-acf2-cd51f7f3b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09aa3aab-b9f4-452f-968b-265b2a485c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0f4a5a-8677-4fd8-8fc2-f4c5e0240c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9fa2a2-816c-44b3-8b7e-a5a3385ccc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6f3b1d-545d-405a-8342-3a31cfce913d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc46b51-97e2-4faf-a142-a836805642ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a7edb2-67c2-42dd-a364-fdfdd0837829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2831c3f0-06b4-483c-859f-249313d055d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9188c69e-4d51-4ffe-921d-45e617b87290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e671b8ec-2784-4b35-bcf3-2492fa8c5c43",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1124946-d7fc-4a4f-bb41-1e6821e73bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d1e558-929c-4c2b-8dc9-d18f701b46b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6da734b-cd99-483e-8f72-f186546eb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5e7fc3-8875-4294-a657-0ef9e0bd0685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc6357a-ee64-4a53-a160-d2d525088d2d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c743b59a-81e9-46c3-83f6-ba19044083eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76f1b8d-75e8-48b9-810b-35e30b63e52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b35777-795e-486a-beef-9e355797e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77399ac2-9f49-4b44-97f9-c6055fb707fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ebb810-0726-4731-be77-c3933d4edb8e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e36024-721e-4455-b836-c00d4fc23cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c551cefb-aa7a-4042-af0b-afeb8cec5519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bfdedd-eb33-44ec-8727-336f7c0211ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0127a9fe-72f3-4ce3-ae42-eaab0637f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300fa848-3dd8-4a0e-ab73-7d59017fa6ae",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8948d6e4-2454-4cf1-b93d-5601fe3304a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b388f1-a845-4287-ad05-08be92b28ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8807a4-ad89-4e1c-8b32-f51ba7aebaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd019497-4dec-46d0-af2a-6a2743bd12b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29e2348-7a08-4030-a001-c05edad61c86",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2475e5-8415-4e46-a4c8-0628d2bb9235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0827fb-3a18-40ce-bd57-4ca13b325c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6598bee-d2ce-49e9-92d5-8b42d8f8257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5eb6f1-5645-4d29-9e40-784ece6d95a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d23f2f-0d29-40bf-80b5-7334dcf1d844",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2850e07-8467-4e57-bc7c-1ecf9062a4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f21c35-7973-49e9-99f8-1e73b737ed54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471324d1-1445-4fdc-9aac-d18307663164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60847ce-1b2e-408d-a046-7d0caa6058f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02dd571-3539-41a8-97e0-bd34d67127b1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2445014f-3437-417d-afc1-b36aefa05693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2918e6-7bf5-42bd-b939-92cd942fe4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f49406-961a-4826-a5b2-dee9479e8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "379886bb-e4dd-41bc-91c4-78726772355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b7ba21-6757-4177-8d28-5ee0b854224e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fe1c41-cdda-4ce9-8997-44310c3c6ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e8f7fe-d8fe-4d97-81f9-91be8c09ee1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d96634-7110-45f6-b52b-023a3cd5490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "537b3153-052f-4065-b3f4-e01e1aeb88d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5d8990-5943-45ab-92d9-a8fb44d4fda1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52432a4-f176-4e8e-b4a7-4eafdea7462f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67d09f1-f362-49c8-a5b5-050bfad21088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea95977-8a9f-46ca-b203-0901599280c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405283df-14fb-4328-a05b-a6f5d10de28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca83f6d-eafa-4365-b8b0-852ab5ee15b6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ce90d-4058-4c49-98ff-1e989bd733ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125f1093-c47c-4196-ab04-8edce0ba190b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da783db-8fde-4846-9837-2a762be04657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d4a199-fd29-49f0-9067-ec4ce1bea35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47df4d48-57e0-44b9-a025-6de09ba6bdf7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e51614-6544-47b2-bd6d-3daa3433e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505751e9-0319-4290-8c57-029d40a8f7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d7dcd4-d819-4d5a-8956-00bf94c23e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4abb397c-6bba-4484-a580-335d19ac03bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadad112-763a-4b92-b0b0-6ef665067d79",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91ba30-d051-465a-8494-c42405e33abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5d6b3f-128e-4a12-8e9f-31a9b3a7ff92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1791591f-75f5-491a-83cf-878599474618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0cdd54-4699-4400-97ee-52e5a27ffa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038f636-3cee-4742-abc9-37e203540a5b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b692278-750b-437b-94c9-363fbedcab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdcb9de-899e-4170-bf94-4d728c995135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb92f5d-0eef-454d-a17e-57c3d948c209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "777144ed-b2d0-4728-88fb-ead377a74586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d095dd6-3d7c-4ac7-aca9-c75cbaadb94e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9d6148-92d1-431b-933c-0ef02a73269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b3f1fc-dd81-4ae4-8239-53afab0ba624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6e9ea5-6531-4e0a-8604-f613c8f1775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29b3592-a345-476e-8ec7-bd0f527c7ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b201ba-8bb5-4115-a8af-e940270fd829",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5033982-3d7d-4969-9b24-e2bbd3abf0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53320ac4-9cf1-4987-9d74-dec6460f4a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e798db0-b3a3-46de-9261-44fa6d5b9354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d9f56e-4173-4759-b008-eb0107b9aae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974de480-9141-494d-b43e-c04d0c6140c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8cd898-4e19-416c-835c-865836dd977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507d853e-9184-4115-9ed6-aa8b756663d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c95b1c-19ef-4b0b-ac43-243411b24743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00567ab0-c22f-4f3e-a086-c84c7124ba8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac500304-c2af-44c0-bed9-580b900fc891",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6811a2a-05eb-471b-b2f6-48fe14aead9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605f77a4-eebd-4a50-89b0-e47c83dcef63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075b2d6-bee3-42ff-81e7-4ebc2bb72649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6792109-5d7a-41aa-81fe-7318387cd21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fa2256-3d7e-452c-b179-104c04fdec5a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0754961-c5da-48d7-84be-4ecdae338791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ff16f8-2644-4a65-8a1e-d64ce6ac35b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9def66-305a-475d-bc5a-76ee9a97a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc36a18-f8da-4964-8abd-00e0154368d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ba1e88-01af-4266-92d0-e8ea8f48d296",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa79aa6-9200-4ae4-83df-3d81b49fe801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4d2b18-ea33-4fea-aa37-974dbcc7ce6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88415bd0-56c4-4320-a65d-42f5ec86973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "47dcee22-5c9e-4a93-83fe-0e35a7b0e821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc736f7d-d1e4-445f-8e51-22aab2b367ce",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b060bc0-277b-4f2c-96df-bba61ce64bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6e0926-22f7-47ec-9fe6-af10c408db46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c1f8cb-7e4b-44f0-816e-a80fd1dc008f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e17d598-8d38-4131-a010-17df04e604aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e08f356-4cac-4c01-b20e-52d95b7299c1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead3f91c-3d87-4771-99f6-71617b733c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4e2d82-5c1e-49fa-8890-ad56e96e610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5fa94f-ce05-4da8-b225-10518b2cc7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0576d1a3-4cfd-413a-9bdd-60c3392cf862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58754af-d09c-4a41-a185-0d223b70dfcf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f6e071-3bb0-4897-ae2e-20f1fdde6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4ebfef-bf12-4a62-b239-53675a9bd2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1343c62e-d24d-45e3-9dbc-baef5d4b0eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d947c2a-7b00-44dd-9985-e2384ada5df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5544a70a-6b10-45e6-bd1b-74533662a128",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46c2e90-ae8b-49b8-8055-86b1af9a8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ef28a5-dc66-4499-937a-22da8090a8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d8fa0-2ceb-4b9a-9c82-61bd1cb18ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77822ab0-e5cb-49aa-aa1e-007910fc78e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a760bf9-4e24-474d-bd74-f7e688d75375",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6442826-0958-4e43-83de-9403ab0cee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ff778b-81b3-492d-b4eb-b7962e2c1e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c59daaf-55c2-4067-8048-2a51d58ce5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d89db2-63c1-4bea-9eeb-1ac1247f7ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b7834-8934-4f81-ae5a-0f09a7cf2bab",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda4932-d702-453e-8aef-fd8cc661a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd2e2fb-979c-4b41-a144-e8eeb768a8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e392f26-7401-4e16-b462-79b194d51cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0008d633-fc58-4de8-a562-0bdfbf3d3a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4c1f6a-4dbf-4375-b4a1-f40b72f7043c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4edbb77-8a2d-4394-8a3f-659e5d9fe9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46538e56-c6ed-4bb7-8616-910a4a44baaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e6990b-a496-4e22-b4c6-c54230246d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5f6742-9adb-4e38-b780-88d380fe0f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b64a4b8-89e9-4d0b-bd26-9beb582103eb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f641950-13a4-4fdb-8f03-b288913f59e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12477e17-af65-40f8-b9bc-7c4aed25980d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3e9de3-198e-4c1f-bf50-5598c0e35dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff611723-aec1-4da8-b6fa-d2da1609779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2eabe-fe21-4c0e-b85d-a50f46d6b477",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af76a5b-650d-4843-acb8-a8f512a5350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657cff89-6138-4a9e-88e6-07da766f3520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20673791-bd7e-4f5c-933d-b99cbf8165f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be7e50a-b548-4b40-9cbf-a3e55de289e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b160b9df-7d67-4e55-abde-a6b9a0590301",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05bcd2a-3b2e-4805-90f3-73bb3715bb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b16695-ceb8-4d0b-a40b-bde030c15350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460acdea-92ce-4428-ac5f-44bc85168512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6c4adb-46a0-4533-b392-2462163a40fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e5d6a-3f20-4b31-a847-d8b2342693b2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f592263-6ba2-4a5d-b7b1-1b217bb65b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c109793e-4370-4bce-86fe-e24ef60cfaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad81aa3-92b9-4c94-8b36-1439174de2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c372cda5-7d08-4a2e-ad90-9bf1548eda51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da3f50c-dcc6-4f34-9a56-be7657607ff6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea53c73-1413-481e-99c2-492629ec56df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8677402d-0a88-425c-b10a-0cb71390b317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a33aab-3631-4742-a1f3-cd8da0005e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e154bc1-c018-4194-bd35-49c33808acdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3c8451-e1e9-4b3b-a87c-dc86db7808f9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a22ce-e389-45e7-bbf2-a24e1c6329e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46313f3-03bd-406e-9f6f-0091e8c40c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5447a9f-720d-48f9-af50-cdd07daa2717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f371d72-db3f-4b88-aff5-3f1eb9b75f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5d3a5-d7a3-4264-9149-a1b185bb5f87",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d1685-b1c8-4d01-a2c0-b293692dfcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e88f9b4-0431-427b-94e3-909d02da8cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ca4656-f87b-46e0-b6ee-6e63b374c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29996f04-6e3b-4c66-935f-78ee07df0e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e1e3d6-85e0-4e55-9a2e-dfeb6403d077",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06975d85-84ab-4666-826f-804dbda8d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e18890d-7643-4ba2-ade6-e51f6fd630d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38675707-0be5-40ca-a68d-c5745a0487d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e78c89-ad23-4c61-a19e-1b829caaddf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae77265a-c81f-4321-a334-775bc7ad6f9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b5a0c-d7f0-4625-8000-de40e99ab501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4885240-95e9-4f9e-bb66-f34e005188d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772213e5-a574-4de1-9d69-f2f14b45385a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e882529d-7bb0-47a6-ae7c-de29e2e1022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddea916-fb3c-425b-bee1-b4cda9177aba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efb157f-359b-4b50-a8c3-4a4eb6b737f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1322d8-38c5-4e01-9b54-3db49d97b028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cf18a4-e4f6-493b-a7ed-70ef270b05a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb19dc0d-8248-465e-95d1-eb6a1c048769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61e4fd2-de85-4f24-a1b3-6c2b398b109e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cba998e-aa35-45c7-ad17-e31e75d2da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7355009-203c-4c81-aea6-14b27712906e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57920c4-c4ca-4b4e-a183-cb9e442f2938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f154270e-5cd7-4598-822e-4ce60083a0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a55bc2-8c04-4f08-ab5f-d0e31ca945c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1ea7e8-7b22-4338-93a8-205cd0360355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9421b1-6103-4b7a-b93a-c62e4c839844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71f07f7-ceea-49a2-b36b-317bb2565cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ec32c0-0a04-4c7a-956c-b6b660194746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f03525-a977-424f-b55e-af8410f8315d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6cc0ab-7997-41b0-a615-6d8de487f53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2dd803-621b-435f-bec5-04a35e00b35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb946b6-2929-4863-9d99-27055c741197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "978265d4-872e-445c-ba45-2e7cc7d8a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31178a6f-b9ea-4beb-b384-c7f1ea817977",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c89ef4f-feb0-467b-a1ef-3fa75e059e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1350978-bf1a-48f7-80e3-5f7cdf4bd9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40592765-0db7-4015-b5e5-2d3beb917b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "480ab289-96ab-46ec-8a6f-bebafabf6e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef57583a-ff38-462d-89e6-f6e4e2e50648",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7309b09-1642-4678-bddb-e1b567b5485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccab0521-9326-42fc-b848-22779ec4dd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac68b072-ee64-44c3-a3a2-5defc91adedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "822988b6-fa8a-4292-baf2-ffde9688a060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b35daf-bb31-4737-b124-7eb433c4681c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fb0b82-e3ce-4a7e-96fc-22af1b705cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236d3834-f304-4d8a-9f23-5b816c65e93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbced29-0b7e-4f54-bd9c-1f21671aac1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a485da56-71ee-4a07-89d3-eac5dc12bee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0516dc-a9d0-45c2-8a68-02de5a5c6b27",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5921758-0771-4224-94fe-dba8e34b6599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6990fd-96ce-4db5-8d78-78701b6a0f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201f14f4-0ed0-4941-8345-ea615f998f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb9e6df-9327-4e7a-aca1-18e9b7e2b607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168cb46-f349-4ee2-a14b-3823a5fac10d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed98c4d8-d9e0-49c9-b801-243bcc53e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65c3774-c049-4bf5-bfc0-ac85717c1f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6beede8-5d29-4d6a-9a9a-1cd03aae9886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c39650-e639-4c52-8649-8b7aacc7eca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b5f1fe-6a0d-430e-b7d9-f09b4eee7d93",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f06c7-6f82-4b11-8fd9-5c598059f93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c80a511-3f8d-4d26-80ed-6b4a5a8fecd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5b34e1-965c-458c-bf8b-4f0b8cbc684b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8e12a-9098-4e2b-80ed-793e084f91ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dffec6-2d69-45ad-89e1-a4a25c8bf541",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0329805f-9dc2-45cd-bf62-69501acc0148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915cf38c-0f58-40ac-99f1-29f4baf02f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11617d53-7db4-4098-aa3b-453eba6727fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b7e237-9741-4f24-b4d5-d766f69c40dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0750720a-5756-4f19-8726-3c58369549c3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67dd904-9759-453c-8ea1-268581a3b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bb9392-a216-4d9e-b631-38830617eccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcfc267-ba0a-480c-93d8-9da29589d00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e27669-d9b9-4e67-bf71-0c3b2956cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabbfcf7-c3de-4272-9487-e2f2916414ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb34c351-dac1-4821-92f0-af0f3cad36c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c96e96-a9cf-464b-b2e3-71ee291e6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a21e57c-4067-4cd1-adf2-87be5944cd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5450789-8d57-4222-b6a0-e44df1ae5296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735acf7e-d5e5-4570-aa9c-13f33b0cde6e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ad613-942f-449f-ae7c-bbf485e94d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc353b5-def9-4b63-986a-e68c498c0969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99163d8c-f823-47db-ac34-07951cca30a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c9f3b4-17bc-4f4e-bc98-30d878dbc259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14b9596-cc57-4eb5-aeb5-80fea9a5ad6a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77901487-f914-4e4e-bf84-26f73427d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b2a7af-ca78-4681-96a2-e2d85f69a91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed2f67-a367-48ea-9c6f-15fd5e689553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62848b40-be34-4009-a286-005b68874a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28cce19-4100-4699-b837-42e5e0952fd2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35246166-da7f-4ab3-942d-d3fe9aab4bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4200ed3c-e981-46aa-b4a0-e9eba6cd355f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4114146-aae2-4958-b27e-7fb573b6992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d532c8d8-0373-44c7-bbad-a550e78bc922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0f5710-8413-4f7e-8526-e1486979b930",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5dbf1d-d93e-4650-a1f1-6a2a12401607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c19713-5dc1-4546-9d6e-ad4f4394f1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b7cfef-c321-481c-8703-18a236c673f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb3546c-6e6d-4e6e-9e55-5666a8a6dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21aef518-286c-4e55-98e8-b23b14a697e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f55ca10-da1d-49f0-a347-fa2fffdf1653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c27c3f-155f-428b-9ea1-840704a71a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5d528f-462c-4b14-b7b9-6571faa7f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6671af39-2979-4855-b93a-7f944a215d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb77623-81e8-4f60-9486-5485d1018533",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e1f8cf-7635-4f31-8d93-abf2d9fd4644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363d4b9b-6bd2-4dbf-ade3-75444851ae06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9a6180-bef6-4c45-99a3-d408afa799d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe9d3ab-ed35-4d3a-b9fb-4d6d10ee0302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff96b57-9f2f-495e-8e92-bee1c7e53941",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5eaad9-f0f4-4ff0-a914-c09fe8cc96cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100e1c13-887b-4242-8ecb-5462a2bdedfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38730d71-7d52-4fd9-8fd6-b2d6412290c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5062d793-1295-496f-ba45-1c89328b3af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36519512-5c20-4c7c-809b-9674be04355a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d673f0-25bc-4f36-b69f-21360514ec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce88fc22-6a16-4cae-9fca-0d483ee39f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc567f5-df94-4abf-9212-452690aa614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a100eb-6223-4595-acac-194cd1cfc14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00eb05e-f25c-4346-a2eb-060c37c5b4c9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803d35c6-d8be-4a64-a82a-19199d6e3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523bc358-5860-4fa7-b6c9-8ed6c1d34ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da5699a-f853-4786-a1e9-a734768941f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc44e1c0-2734-4b98-9d76-e5397052520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a928b05-2ca9-4a86-8da3-b1eea752cd6c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1873c26b-fd27-4e71-b1fc-9ae641110ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35036405-af68-43a8-bc25-a777c45c080d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01fe84a-81ad-448e-964f-14e1e013a4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9737d443-688f-44fc-9464-fe601a73f944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c98a2cf-fe0d-4999-b7c6-f20ce234f117",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974bd396-497e-477b-a55f-10a756768308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3165b6a0-d9fc-43db-97a1-ef562a32b803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322c96fe-cea9-451a-805a-6d28256492e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1366ac-cc5f-4b38-98bc-a812bd11155e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335507a2-3afc-4241-bf2a-816d101db311",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ddc9b-96d3-48a0-a7a5-95b6db26212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627d9731-b9d1-40f2-950f-de354b7831f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c48d7f3-f5d2-46cb-be85-fb3aae1f7df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d101108-8c43-4f33-b5ed-dc24e492fe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b638b7-42ba-4fbc-b0ad-8db992649eb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d6eeb-e0e0-4be3-a5c6-4521ded93697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1181e878-ed35-4949-8096-fb3066e8c935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4014452-5d1d-4a00-81b7-f3c8844345b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caec88df-2f59-4387-8564-6fe9325cba27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57830074-cc55-463f-b3a2-edd7a64f10fb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49b28fc-686e-4b8f-880f-e420acfad81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49adae2f-75a7-4723-b5c7-0117ea9beb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba08d0-2e67-44ba-870d-ceae6855b77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2edf3db9-423e-4f06-ab5f-3e679644c47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24cf50b-12d0-4ef6-918d-225419e13ff6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dbb62e-4b44-454c-951c-5ffc35b68a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ca2842-55eb-408b-bb08-4574249ecfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9020ce3-210d-4e20-84b0-d9fffcbbf06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f260fc9-da87-493c-be05-c39a89f04518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf607d8-d2b7-4b32-bb2f-43967561d91c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2e4f95-6f4b-4c56-adef-4fcf3fd663d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6429c844-ee43-45c8-a3ea-b2616aa84370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe771246-4e4f-4d36-9e40-59ca681205ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f684bf-1175-4510-85c1-77909e45161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa06106-244f-4a76-bdaa-d7fd8dee4faf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3075ef71-bb33-4f25-a230-1d1cddc77f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccda216f-112b-4ac0-aca4-82064c0043b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d58c348-7c9f-499c-8d34-b27490bbd2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cfa74a-3a16-49ff-b89e-2ecc0764b8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b7d3e0-3277-4367-afdb-0d6450170701",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2cf46e-12da-4c20-9be0-1130beb24e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bab91d-77a1-4d6c-8167-091f646350a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eada49-eaa4-4645-bfbf-7510f6d7d162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e657478-9596-4f78-a09e-b8ef0af9bc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f786f01b-d044-4df0-89f9-53abb45635d1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed7f70e-b71c-4b21-a7ed-a2861765f3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35334ab1-35b3-49e5-a59e-052663f85dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03efb297-6596-4bcc-abc1-f8bbf53d2b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd9c00d-745b-401c-82f0-3d2d1a00cc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a87144-5f5d-4383-a720-f27ff3e0d44a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb0d6d8-488f-45ba-856f-6a47522a53a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee27da9-8be0-4ac2-9be1-54adf989f3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dc5283-b87a-44c3-af2e-08f623575cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7874102-7601-43e3-bc9c-77ff4cb87697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceec722-b2b6-4a4f-bee4-8e4ec2d4e2c5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973b2927-4a01-435c-8398-060d6910dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "836ffccf-3d7d-41a8-9294-e57762ea218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b30e03a-5758-4f7d-926c-4bf01f34259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd645394-8355-4c2e-8af5-3e10fa088cb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "989c5dd6-97a9-4a90-bb9c-0848228f0cb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae7619dc-5926-4c33-815d-4cd54c30e117",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f224c7-f692-4366-960d-da184077551a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6823cd-2178-415d-84f5-968208045376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d9a31b-2727-4cda-b526-983d73cb929c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0316559-70bf-40c9-915a-ad0a7f56c10c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab8596cc-bd1f-4f6d-921a-c4176a686d3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b60bc1e-75e9-46b0-8685-8fee61579919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5319411e-d620-4724-9bdc-500fc0bdf012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20653e18-71ec-4139-87ab-835fdb93ba39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d2907b6-eb70-4bc3-91ef-5344de4b32a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb8ada0e-ecf6-400a-a925-65eb3ed3543e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "690d9e3a-6a9f-41e9-a510-15a61ab8c382",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b92514a9-2ad0-44cc-864d-8cd61782c996"
                }
              }
            ]
          },
          {
            "id": "804aa7f6-d881-44d9-9031-f7610b621d1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72fe3351-b24e-47e5-a2fd-b57d6e1ee1b0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "789ae52a-7dfb-4a5e-a376-0f1e252228b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89f705a2-f6c1-46c8-a86a-fb7a840d1f78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e57e622c-83af-4145-b201-299840aeee2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcdab22d-b3b1-49f2-9653-66b6480dc856"
                    }
                  }
                ]
              },
              {
                "id": "5a4402c5-3c7a-4acb-ac63-49bc499b8ed6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "382766cc-044c-409c-bcb2-19bd4a984fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb1aee3f-2548-487f-affc-185e29ec9044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddcb27ff-b292-4b1d-adbc-5c58f64fc90d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5a515dc-e93b-48c3-9667-ace40fb59781"
                    }
                  }
                ]
              },
              {
                "id": "2726da46-57a5-40f7-addd-1b212053bb72",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54e21d0-c665-4f21-99a7-84dd9c10366e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff4f103e-ded5-401d-9e48-511c8080913f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c5d905e-4f81-4c6c-9700-cd99af9ff6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7be1556-ccde-4cdc-8d4b-0b65d29f9b22"
                    }
                  }
                ]
              },
              {
                "id": "2a8e5dcc-3848-4aaa-b620-0f505fdbfa6d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "188303e8-d5d5-4c6e-943b-d187b4d05495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dc29ac4-d5da-4328-a172-9158e16a032c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d44bb9cd-727b-4084-96c8-a0bdc75b1f70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bb245de8-d14a-4d13-b8af-bde295dfd6a4"
                    }
                  }
                ]
              },
              {
                "id": "9232ae0d-0bf7-42b8-b787-c9f38b1099be",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ad98e9-700c-4ee4-afbb-8052a206aec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52b9da03-4afd-4f8e-81a7-4ef1b7441269"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddc6a18d-5e85-4b21-87f7-12438a36d658",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d687546-429c-45fe-8fd9-9c0694e47331"
                    }
                  }
                ]
              },
              {
                "id": "af6f4c7c-4d87-478f-9109-d467d874ed1b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72b226c5-f2bc-4d74-87e0-c3f8ff7ef588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6da2b15f-344b-4df2-a5af-4a6cc4a6aea0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2920dc7c-30c1-49f2-b06f-fd06061d7786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e38f666-368d-41dd-a34e-3a3e3d7a31c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91b16b6c-2260-4d8b-a464-4082817f02b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dcf9016-7ef6-4323-920c-4ed557894a7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46f4f642-1624-40cf-ba16-c9745fe59373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a01e7de-87b1-4aae-ac9b-2dd493c47998"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f53e5ad6-cce7-4e3e-8b4a-5a5efcbb510b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3c0fea67-65f7-4240-8d18-291aec0d6431"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1ecc7c6-0441-42de-b222-0bbf21d8a178",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12e66236-036b-4ca9-b534-e37ad66e5f1a"
            }
          }
        ]
      },
      {
        "id": "5371d6b4-9cff-439c-8a5b-2282a3fb20df",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "75c931dc-76e3-44ea-b36a-9bd95b286dbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a2a0579-5c76-4130-84cb-684d6a12c896",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b58be35-990c-403d-8e95-a269c78a42fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f3d65d-df61-4c87-9889-9f507c847243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04db3de-5e79-42ba-bee8-604b67f1a317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cdb812-9dc0-49d7-8ff3-aaa8a2c25f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e481d59-b5aa-4afa-abbe-2556f6f97505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c122d95-22df-4bcf-836f-b994df212b7a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f9cc89-09ea-4b01-ad1c-dda54862daa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63a0812-b172-4170-ad6d-48fd9221fb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b133e9-ffdf-4a33-9db5-2e9c327bfef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e87b53-02c3-490b-8cb2-4ccfe2f8490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c132b782-e0cb-4a1e-968e-5a40c901f468",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03c077-110c-4d33-b8e0-c0bdda6b18d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f4a6db-e846-4401-a798-3b655df7a794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16d4517-f7c5-4bb9-99b6-add29d389f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9973129f-6d52-4a67-a456-66d9512e6cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129cf00b-0a08-4136-b110-36d062730c4e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f88660-53ce-4680-b764-e1ab84421e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c014db4c-2ce0-40ba-955c-04a7c8298789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a967927-b813-4222-9449-d32aa3ca62a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9121ec-7cfa-4941-9754-8b65920e05db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c461d-f76f-4181-9fd1-dd87a76d92d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d314f3c-35bb-456b-9894-9d56fbf0d9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b9450f-875c-4261-bfd2-aa14671ce950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3883dd4-3f9a-44e0-b0e4-bb1f7b611d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf70fec-a05e-4709-9e10-f80207cd50d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c486271a-6c98-4d67-b39a-2bf8ee23d371",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1130905-1cd6-4b88-81d4-d3d78c9aead9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0309598-5776-49db-9ebd-fe9f90cc120b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b5263c-33d2-4ac4-b6a3-031b82386c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bbf03d-6ae5-4b9a-a02e-31e007b77dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383a981b-03a2-4a9b-ae86-f8862d654454",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93edd112-ad83-4e6b-9c84-916aa4c9c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101a502f-2a00-4223-8bdd-175ba8ba6591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598229b3-aa15-4ea6-bedb-5cae686ee698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2f944-d55a-4da9-b000-3c0935ebe322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd1f0ca-a904-47c6-8548-9dda24df6f9d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754bbaca-6324-417b-bcab-e69c574f8d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f35e07-d854-4c10-ad78-b41d907544be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b2a52-b09f-4859-a65a-824eb1cb591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30433495-f982-418d-a93b-59edede3571c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f77ec5-b921-4652-8c1e-f037e755a3e7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93caa3e-fd0c-4c86-81ac-bcd356015c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f1d2d7-547b-427e-9a55-08a233bcbc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcb398c-e180-442a-8082-dcc6f1a5f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d96707e9-e150-4093-9ff1-439f5eeb9dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b513a74-a50e-497b-af6e-b2deabd6815c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d91a435-b133-4075-b018-7ec71ee6c4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0910f6ca-b36f-4801-90fe-ac02cff408ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b8c308-5da4-483d-ae73-2a059c139943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b528d73-e535-4ce1-a0d9-af0992bcab0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65645574-b95c-4d7f-bafd-b3dc6ca81d5e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e717be5-3c72-4312-8ead-afbd1f682df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a13870e-0b5a-43f4-85a2-fdd0c4fd2863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e6651-e448-4d8e-8a1a-5ae3ec48ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe6093a-2315-41e1-9d21-ef7cbb690d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a875ff-ba13-48d5-976b-2219856409de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff278cb9-45a0-4fd9-a609-ba4ac2789403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da146ef3-77eb-4f5a-b3ad-2f8b45c4d033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13720f7b-3261-47f9-9e09-6c86322a97e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb66f0f-0eed-4e6e-9f19-5cc1202315d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e3ad13-2e46-497d-bc54-57df89740865",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec006284-4739-46d7-bf81-64727df837bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1aaf97-ad6c-4d1c-a95e-232b3ab9f28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ebddf0-cb2b-41b0-8f84-7755fbc4ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe5aab3-57a8-407f-b227-cf50dec867af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da7fcb1-e4fa-46c6-934a-4e18a8a53088",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e62f751-d0db-4162-b731-198658b5cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0975ee2c-833d-411c-9929-43a211ddba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64b6317-3456-4c8b-baef-e5bc9e033afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae4d1c7-a8a0-44a8-b99c-cfafc8cec2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0748f-ec59-4126-a1f7-399a8842ac68",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a220e-9227-4196-bee0-a9b8858897a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87fdfb9-53e7-4e48-bb76-e12312fb0941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9a076b-936b-437c-9c0b-369a616ead12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41490496-9b0e-4670-87eb-efecf1a7f586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c383e08-27f4-4118-9aea-c5bd2889e6ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a242897-7543-42d8-a981-b08ed7c0e69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11286a00-3468-421a-97fe-c60c6493a629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b702533d-8a36-4b8d-8371-4bf83696269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6276e414-c1ab-4e2a-b967-255547565099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf9d81a-8ece-451a-bb51-f0771ec1dcfe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09be6c2-e6c3-4439-a256-4851190542c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7f6e2a-f403-4344-a6cf-c3deb4a03d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02c7928-ac87-4759-8d14-9b7944156ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cb6934-c4c7-4b96-a606-e6974aac86b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a1d5f0-dc75-4bd1-8edd-e28d5a8c24c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308aa3f3-9850-4176-862f-865d49845236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1392c2-81aa-4466-b413-5666069c9223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c82d12-10bc-4934-9a45-085b4fa521bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d307e57-86e8-4f3a-949d-c9ff3a944547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f0c2c2-464a-442c-9aaa-c92ede43870b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57603c1c-623d-464d-a452-b3d5b98ff186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412e318b-d835-4e90-95b5-62aa1ef87b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc61c284-1e08-4250-b67b-1fa2efbe157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d51837-4f81-4052-ae29-f0fd0d9f3fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050822fa-917d-48bc-b7e9-bb124ea59a6d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b76f13-e05d-42c3-8ae5-d1d0e391f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8eccf1-33b8-4cea-908e-cb2f1799f68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc9ef0e-78d6-42fd-94a0-02d3cb09f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c788c92e-eece-4e8a-ac19-7c578c0370d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca5e93f-826e-4d4b-80a8-44f76ff740e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46718dff-6804-4e3a-b684-d4e030c416e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf77cac-2885-4eb3-b2d9-e5739d71b7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94c200c-1262-486e-99d9-8df002cf5a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce000ee-d66a-4419-a114-c3b41ddbecd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde2fad4-9f4c-439b-a054-4130851d4b9a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53a308e-fc98-44d8-b890-140adcc89bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94531a8e-0547-4b78-b73f-70411a9480d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb72420-795a-4017-b978-cf1ee394ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c590a3-5752-4c31-81d6-db2b94a3c3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900fbedd-ffb5-4193-bea2-03a51c6ebd59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2b500b-4f7c-4ac6-9158-335b8ceb3ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d8bae4-d76f-4d79-86bf-233d19f0a385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5bc22b-4c63-4a1b-a869-7d25cf72f682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d2fb52-729f-4dbc-b4f1-b1af73ca0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b4cd6-6eda-4397-aa99-b879cd34b3da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2e9986-ee8e-4116-a1da-543e001d08d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bcb6b1-2501-45d3-a406-c8ac605a7111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c786f396-92fe-4ab8-bad4-86c8ef7a6604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "623b4161-3a4e-4a3c-88b3-0a36d01a076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c8c1da-8c9d-4467-ad5b-834c481c18e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3b3225-8048-4dd0-9283-d3a9902d0881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7ed9a4-fa2e-44b4-8b56-a5d228bc1130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc8c8d6-4deb-4a0c-addd-3a7e4fcfbaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24af56f9-0bfd-47eb-87b1-cc6c034c9ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d66f135-8a21-4f77-a662-e1c1ee014ba9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fe7e77-749f-41af-a9a8-73524b75f6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5db5db-1bcf-4eca-ac92-fbc6e4403827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd6797c-8149-4d24-a5b2-e786218da037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81bea0e-f67b-4507-9c75-56117ef57b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52183808-9c1f-450d-afb0-539d5468b339",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aaf3c1-f737-41ab-b883-37ece1714ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1658fc-7e29-4181-b3b9-5e3516b3a9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e3724b-98a4-4e27-beaf-e9c2de24f150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3d9edb-7e39-467c-b6f9-69d871cdd7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d31e2-4b86-4290-83bb-811b3c0836c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfba3648-620f-4bc7-9bf3-440c195a734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29f2062-84ca-4bf4-8d39-530a5a08cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536aedb2-7658-420a-9f9b-4fb073a83d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fbdfbf-da24-488b-8f3d-24a5dbe9e024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba77d2bd-5625-40e5-8d44-6f0a7e5dba0e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e218fd7f-603c-46eb-a31a-7e2d85ca8f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ee0009-f629-479c-85d8-fd1bbc26682f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd42e15-8710-49d3-aba6-dd40d387630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060440b0-76a6-4948-9870-30423808b137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc82af1-644b-4947-86a6-ca23b5881a31",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f88fa8e-4119-4d31-b537-7d3879c94aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0be43c-e58a-4f76-b9e6-cdb00eb23e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea079851-ebe3-4e0f-a1ce-73ff9f44a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd906561-29d3-480c-a459-bbda68623513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdee34f-3379-4c52-941d-3b6b5e80f6f4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690679a7-8671-4eb3-87b3-533f9824ab9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d34448-59f0-4b61-8adf-e51023a03662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61409c25-32e0-4a03-8b3e-a5b8ee517fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490b0bc2-237c-4f67-9fad-49c9f9bfbcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e2bc6-67ab-4962-8234-991350db5647",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535f874d-d1d1-4436-9884-2d4b31c6ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ca3478-1286-46ff-848e-411323c28061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7367b083-aef9-4a5b-9f4f-5e9bea277d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6afd979e-3245-4b65-9557-b38d016bb925"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c49894c-213b-4c93-b67b-04bf06de2446",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f074a83e-f332-416d-9160-81dc57a632e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb3973b-8882-4373-a0cc-f18a1270e00a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e27cbbd4-58c1-4f55-ada1-d734769867ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd5938c-58c6-42ed-a03e-b7736a05bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ef8aad-d1f7-45af-9567-9daee388e24e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f59c443-003f-4cdb-9ff6-dd7b0cf98787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ac0155-cafc-4feb-b632-9b0fc2bf572d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fca302-0cb5-4248-9fed-38f60fcae86d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ea560d-e718-4e3f-aed2-26b3e155ee21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daf49da2-77ea-4b14-8b79-97965c34e126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42b743b6-0784-4fff-8954-8190f3fff583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3fe6226-f109-4139-b23d-76a813205a70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b7987ae-652a-4ca3-bbeb-740777877aec"
            }
          }
        ]
      },
      {
        "id": "b870c248-27ad-4dc3-8311-2e698c194d50",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e86e7c6e-5a2e-420b-a07c-d37a4fcf125f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08143c5f-6a90-4bcc-9c7d-27d1eef79bee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c93a8b7-4b90-45bb-80e0-7c9896e72a2d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0dacc4-2b86-44cf-b2b0-5011c60819ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66fc056-972b-44b7-9725-b2bee8f94f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090c3a88-acc2-4fa5-a304-27ad0d89d5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b668fe78-e2c1-4b98-828e-ae02535a7ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f5ee4-52c3-4b2a-a841-8474e009f69a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d61ff3d-b1c8-4996-bdad-d5581219d718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833c1969-5bfd-47b0-8a58-62bab6d6caff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453d1ac0-432b-411d-b085-46dc1393595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "106ed878-8f7f-4aec-98ba-f48a24fc977f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4705b0-b28c-448c-a6da-dff77dfb37df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6facd7-666e-40e8-9f7e-68715e4f0f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb65a6c-7025-4a35-bf03-cf3575dec1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4538b819-7a13-4e69-81f0-fc94617065eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0996664-d0a0-40b3-af9e-485c14cd9961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7bfb6c-54db-481d-ae76-52e70fa3edc9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fe44ca-db2c-489b-996a-813e16826f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ac2ea0-2f97-4e91-9ce4-4949d542bfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0747bd0e-e9e7-46d1-8da5-eaa8e7b5fe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a802e15e-156d-4132-8753-3b47c9644e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35efe7-19eb-4fbd-a3a8-6130360661a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d1d76b-36b7-4014-b5f4-8c057cf12b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f7eea7-ca98-44bc-84dd-eb20e4fd5e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4e23b6-b3b9-403d-9b1d-a226d575e94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00b704a-9ee8-44e0-b914-b70f654abe75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d396d15c-5a18-42a8-92f7-6719cc6e5d46",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15b8ab-8e0d-4917-9937-8cf23dd5d71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2512e43a-497b-436a-8c39-004ae64a5a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d37f25-fcf3-46a6-aad0-e4dc918597b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd965c7-5f6e-41b0-8b97-2e7204edff21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a1d7d0-7942-4a3d-bf48-146ac831797d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c313cc4-5ebd-4bb6-8c4a-049d82b374ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3e36f6-9477-40d4-bb9c-b74e689f7d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600cea55-6266-47ba-82ec-80fb9e52c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd3e84b-a8d3-4c43-8a50-82ec5ab2a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0791cdd-446a-4f6b-b3cc-a408a53eca80",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e3e788-cc3f-4738-938a-48c2f6eb757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab105ba-a024-459b-8e9d-3ce5ccf9b8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0e1124-c3e6-4d5b-9ef2-17c0d3842f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20bce332-c235-4b71-94b3-e0eadf69ff41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e24b1df-0dec-4e78-ab8d-650828e3430e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c6cd9d-cd44-41c7-a928-072f4be18a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee3a7a1-9ca6-4f22-9314-252f33b864e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c7a25a-f544-4a72-8e22-a5863b9517a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c244f6e-bfa4-4b03-8264-d7a2d25bcb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9fb55c-ac7e-46a3-a579-6fdf7eed604d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf667c2-c0f8-40dc-a35f-8acd2fa641f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a104f09b-629b-4e61-ae8c-96de71c940ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09357084-ab0b-4f2b-ae5e-2905d1dae22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8adb5936-8a1e-4660-95b7-3309eb577a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253b81d-6b58-4b0b-bbad-4477f7d57f98",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec46290-044f-4bdd-a094-74ab4a64ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3469e03a-8820-49cf-b586-451b5c3eb10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668e4260-3fc3-41b4-a353-4f45aad04008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b66d6f6-4d89-4249-b3e4-a52007c3c384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b83c233-b98c-4d66-8429-abb8e235d5f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346bcf24-d399-46af-a9d7-6601ba64c77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cd266e-4092-4434-a7a4-5ac34f4d9f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b55e64-8f74-4ba8-b5f9-7caa23bc6583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec547b9-fb0c-4d02-8214-083ce790ca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce6f33-f968-49df-8122-8cdbe090f4c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec43054-4f9c-49db-8678-c3db6448f21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218fdbd1-da28-4792-b6a5-54ff7d626859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59494c0a-505f-4a03-a3b1-082dde526a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ca74de-3213-4a44-a64b-d7f83bdf41ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda9eb19-b21a-4290-8712-aa3a0eca6589",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f65de4b-8531-4382-8259-73bbc99e31ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b76422a-bb9e-456a-b9fa-4075206a6ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ba0ec-b030-48e8-958f-706f12ab1901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b295a703-d5a5-41b5-b85c-8ecc95160e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1031c222-2b43-4109-8a71-37a5f073d7f0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b31c69-c8b9-43a0-97e7-6de2054c8dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a242bd81-e1f5-4a88-b0da-18747369bc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b6e7a2-0548-40f6-902b-189c62e79506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffd3f7a-09cd-4d59-afa1-b4d704574c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a254d2-e6b2-4ce8-b130-02666c025d3a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efc8369-0053-4be2-a36b-d5abe4520fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6474cde1-4cbc-4f4d-bc61-d4f871b304d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e560b140-5dc7-45a6-b12d-d95a8f7fe01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e86a84-24b6-4657-aa73-71f3cb3c34ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfecfbb7-fd0f-40b3-8f20-b2e38193c0a2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc8e88c-9840-4dc0-867c-5e0c6854306d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2535589a-69d9-471d-a1c1-ea5980b0ead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d331f-ccbb-4483-86bf-f2bedff032ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb58ab7-a263-425c-bc5f-37709caff1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8bbd8-c74b-467e-bb1d-a096f35a96ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad0dab-6906-4476-81eb-53c0c306d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ad4ca-af35-4f19-9be5-aa30c58a1be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7f9fb0-71dd-46aa-a98a-3b1ed715dde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd3b12e-5150-4d99-a4dd-f686b15d46c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca2957b-82ae-4f3c-9e08-604f61fecf74",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75140eb9-f84d-45bc-8cd1-90c0b38bab72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059e76d5-c2f9-4cfd-ba5a-0e418e6b2e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b671e24-56a3-4a81-a52e-21128bdd54e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8919a373-c219-4b1c-9a7f-6223113cf3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d06d49a-e196-4b20-9130-1509a6a0f4c4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f192a7-c70a-4d73-8e0d-c2221475743a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d188db-ad67-48cd-90cb-32d30e259751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bb0b79-b3d8-46a5-bb41-cdf6dbb5d10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a922ff0-959a-4b38-94e7-43126c5c711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12353099-f4b4-416a-b8e8-79fc761afc99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf484c8-1202-4537-8f45-4c26f2eaeecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a8ccc9-bda3-4437-a791-50893c514598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6205936-6661-4477-8f35-9bb67705e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9336af3d-6b42-4650-969b-a91732c81d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b19c12f-7ea3-4440-a6c2-43f8dab0f714",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9500c143-4549-4016-827e-8404105b450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ff905c-42d2-4885-a2ba-c89f4ecd51cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5b5a7-3074-4411-93e4-1d382440d75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7befb551-f20e-4f08-ac89-e3efcdda26bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd8cc01-27bb-4a38-bc54-6eade03a0aa1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50016e63-3f2f-4daf-a2bc-31b9146fa7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1f96f7-50fe-4c41-bac4-2c158ad324fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8698e87-47b8-4fce-a203-9b3cee59c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8f672f-bd5c-4aa9-8f4e-a0e6dfa59fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab427427-f98c-4fef-a047-8f329574eea5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f4e18a-41cc-4f16-9b10-65f3abf4d689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5156afa-f444-4b82-baf5-bc8ed67bc719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3db5dda-4c59-41d7-a8d4-3e801878b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cffa621-f99c-4c89-a3b0-8d52f9316ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5143214a-ada6-4649-83d4-d8c886fa2e46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf85637-eb59-4c8a-ade3-ffe9c85d0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa92de80-d1ac-4b01-afa0-cfe97c0471f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51e6bc9-3819-4510-9721-065f9a50e134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d56a4f-d58c-4e7e-9219-e5756a3857fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5433fb40-e371-4282-b4b1-7565696fbb3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12bb393-eb19-4ace-940e-b713c0ef5038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c942f9f-9d5c-4b48-b7a9-11034c3d2e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703eb18d-a98f-4e94-9a28-94fe8c69ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c996e5c4-5ac6-4cb8-bdc2-9f882dc3accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461d3903-b2a5-4094-990d-5dc10543f0fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ca21fb-de9d-4708-99d3-966caea4865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16865ef-47a6-4b05-a6da-fbf0ab23d8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527ff473-9788-412a-b393-e62dfb80269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "311a8032-e462-4b87-9e86-0009823f5ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f953c907-e5fd-4d29-8965-e0bcac0ed06c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144a368b-b6e4-46b0-95f0-036c4de44aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3489b4-201d-41fb-8f98-75176145a5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7f5916-6921-4fcd-be86-e8d274491c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0def07fc-458b-4d58-bc3b-f2d190e9e3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c7a7ca-b4d0-4839-b3e8-98a8601979e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6f02a0-e73b-4d7f-8f52-4b3fab91ff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef544f96-1361-4480-955d-a99dc0067784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9702e-ba2e-4659-aedb-d1c7fb754d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d43e74-c339-4375-9d84-01cb7071d9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2702662e-b359-479a-8983-1cdf9f0a64db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83d431a-dc40-4491-ac14-3b21203d71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea03978-8236-4c21-a2b9-c987f1244958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8511c78-5ba9-460c-874f-9c6e378e0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23065845-b2de-40c7-8463-d4b740012de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd41ab-61bc-43e3-b51a-3240270716fd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4510b751-cc9e-4397-b35a-e8b5bb806918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d281e26-9129-4504-aa4d-e60128687bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b2b5ce-bc0f-47dc-b0ac-6fd21a7b55b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "967d4e87-9f30-4e87-959a-b6cc61e29bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0ee440-703d-4451-93f2-2e8edf347953",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd5d60e-b372-4c42-aecc-4b63beb345b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dec511f-11ae-431b-a917-4d967e5a136d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2794ac9d-89b6-4652-9c9e-88eb0325b969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75500d24-78a1-4450-9e43-492ac49cf331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdb44e1-815c-4b6a-a2d6-6d378ea453d0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ca6d7e-704e-4f7e-8445-729b5a0b5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a059a47-8fe6-4141-9d6c-82a19ed96a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718970da-7c5b-421d-9418-af18b00c6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12aaeab-fb22-4845-a979-36f40444d67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd0d260-3844-4af6-a0c9-ddb8dc9b4ecb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e33200a-e735-4be8-96ff-e3fa8dad076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea833c17-ecda-4f23-9c3c-3dd29d3014c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2bba47-0568-464b-babd-aba477301584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e64166-fdf6-4170-a864-bae989561971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b92fc-4ec8-45fc-86d6-710b2e6fa90a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bf0457-c9d2-4125-b27c-be62322b057f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df13627-e00c-4e5d-8a1a-e61063a8dacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed15ee3c-4496-4ecf-a4f6-39e776ba53e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18855176-3237-443a-ba47-bbe4ddefc08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a87c13-37a8-412f-bb39-bb5a056049e5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505dabec-73e7-4794-9d23-6afba56fdeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dec965-6b0c-4f0c-9965-ffd55738437a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d25108-287d-4d88-a728-9cc6f03f95b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8cdbcd-5dae-41e6-8d5c-8a9068692839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c053ee-7537-4c52-a54a-83c2c67d4648",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1646df55-afcb-4a9f-be49-035e9b61e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9d8c8c-8a3b-4f21-8ccc-faf346a74916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef32669f-a0b6-404e-abdb-95d976fc4be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34dd27be-f639-430b-8626-a7d1c31c72cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24036be5-00a4-4ce2-8f17-be4e61759f0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fd15acd-7163-4912-aed1-303e1f5f5be7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a263b1d-7872-4cb2-b18e-2b6fddc04310",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51791e87-551f-4a54-96ca-3cdd42b951f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50dadfd-4fbd-4b38-87c8-59dd39539f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8998e8b2-75b4-4659-b92e-6af3d7ab6ebc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c6a514d-c58f-4b35-a2ce-37d3e72c9291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1392f4e3-2100-407d-9580-702864507d8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4106e125-9f84-49bf-b453-edffcf6b275f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24bee128-6fd8-4786-8d68-528a0f3f1c49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4dca3f4-6d36-4f76-9187-49ad0c93a1ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71866e84-5519-4a13-8790-e146ed8d3a10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8c6a466-b8ec-4fa3-9879-c3473ae48edd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62fb172d-7e89-4435-9604-26d85aad9e05"
            }
          }
        ]
      },
      {
        "id": "b1383d36-3b67-443b-9570-905571f3f118",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "361fe509-3b13-413c-b425-ec1b12e9777a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b80dc000-9e15-4cf7-af85-821beda16a52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c77c616-1a15-4167-bc5b-2551852861f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee9a49b-e23c-4c8a-a329-631b1ce376c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d589e127-5024-4b0d-aa60-1f705a158417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52235bca-7341-4972-8a27-4056da8f1fa1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1016e56-e229-4ce4-98f2-f291ef5b4759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702ad2bb-e27b-4668-a85a-79d6c72ae5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c67439-3995-480e-8cb0-1cdbe0340612",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99e7165-05fc-487f-8d3f-7a9f19d86e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a10c84d-bee1-4c4a-ae58-d202ff6c65a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0267d9da-590c-44ba-98c6-cbeedc9438a0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5355ef-e112-4019-aa8a-7602498f1782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f493469b-b66c-4c1e-a7fc-e507ab5116bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316089e4-6a79-4c53-b4ad-71247c117bee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29895118-1678-4dac-aeb6-174b17549acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee32123b-2157-4f76-85d2-bc705dcd3d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae077aa-150b-44c2-b077-0fd88fdf4a6f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aaefd3-d392-4960-994d-e204d1bdd0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c744f210-f426-4558-add1-952123501494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e94e2e1-688d-40fd-9814-54486d081139",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff6288a-dbd6-4469-9e82-3c0e6fdeeb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762f4b93-52f1-43b0-9ac8-2fd2acb645e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7097e41e-d1c3-46f5-a963-b53d10a9c9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af971446-290f-441d-b4d6-ec5a56ed8d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f702c74-95f5-4239-be91-7b66a5543d9f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f38c38e-43a6-4e11-83fb-2a0ebd060579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adabaf3d-0c89-43d7-b2a7-f03ee93e76e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad263841-a881-4ca3-a635-58a42502ff5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23cf26d-89fd-4222-9b16-f9ae774d728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40b3bc3-6a72-4fc4-bc8e-072776b9a349",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f02f61-7e33-4fdd-9ccf-8bdb52782969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866c0344-1336-4d10-9b31-1aeb32a698a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71e7b12-6bda-458d-9c98-133e402d6124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e19508-3003-438b-8d4a-e1e79bea6213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0fbda3-39ef-4153-bf7b-c8ff7ac757bd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e5b7a3-80fd-42da-ab7a-f2d8d33345a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e3f761-4050-4230-9fec-f68e38f29960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c6be1-1115-4671-b8c8-93ff92e5150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1baf076-fae5-463f-b001-f6365650245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f7177b-fbd1-493b-bad1-6e2e399d3baa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07abc29-9ae9-4a2e-94f2-71e1b665a2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a5f790-50eb-445e-92bf-61294a4e8d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181777e-75cb-4cd2-a7d8-74d7ec061cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c433a098-563e-44b1-af16-316309b5fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78a6bd2-edd5-4862-9465-4744889b5d95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470af98d-3eca-44d5-8412-70ef22074fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5ce710-e0fd-4d20-9774-3ad74f5c3586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1fce70-7a98-43ab-8edc-32571e075032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa87e9ea-1fa0-4ce7-a389-c739564e0e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cffcc6-b36f-490a-8431-96b584ad0476",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5005cdb6-611f-4f35-88a5-1e5afb0a2dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67fa899-8fbc-4847-a3d6-56ccdbf0d2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b1c0c6-a84a-4fc8-9503-f3f9beeed9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c4da2d-2e56-4a09-aaa2-c75078ac54d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a8e688-9415-44f0-9720-1628d37fd230",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7050a9ba-07d8-48ec-a125-2ca2be96b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1b3b01-b5c8-41e3-ac2c-4c1a0512e43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57971d4f-5b5d-472d-9917-587940c80a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2f74ae-3da8-4e77-b0ed-feaecf0f7e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90825b39-1fd6-4c86-8836-e14b9afde8f7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36535b8e-f7d8-4292-8af0-4fc0603bdabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4be56f-a7ea-4bd9-9dac-c52da2a5353b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1459469a-8ab6-447e-ac82-dae532e78445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb50688-9151-4082-afa0-59e03ff9b4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c559a0-9335-4d62-93a6-44527a6d28be",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd43d19-f05a-4427-8e49-e1f22f2bbde7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce40dd4d-15bb-4a3f-acfc-e5e9d077f84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2b7a7a-ff05-407a-8ddd-4cc1813aa2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb2194d-b6de-48d2-988d-14e77a5ef8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42734c23-8795-4009-97c6-38814c5f4caa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30cb43c-a9c7-415c-9c08-8ef97a1be3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f39177-8928-473a-961b-7568e7c45acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb40a1a-b66f-4878-a17d-57ec3a50bd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4ee8f8-4ad2-4725-bc50-c60107732b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c52e910-3718-4d0a-bbf8-480ec7ccfe4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad376a43-a77b-43e0-b98a-6780edbbb6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2818f809-bf56-43c4-91f4-9e30d8cbc129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae384d80-788f-4bf7-bc90-43703d4579c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e77b713-e32b-47b0-8e73-dcc39e785565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25b5057-7563-493e-a7c4-6f91b5b44669",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3c7c54-d76d-41f9-9df3-95ad793d921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d03caa0-493d-4db9-9c6c-f6a9cdb856d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84992edb-1514-4306-9d16-c50c7548beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521c8b7b-bee6-4aa2-af55-0a2b70aedec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f99a1c-8393-411b-8397-d617da30b270",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a2de77-5997-480d-9862-3082cebe24d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca9c13f-db1e-472f-b1eb-7ba33ee37015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45e13fb-97b7-4818-a5d9-44853190d2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee2b95-7804-481b-9075-9c801d3aabf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e21dfd-e384-48a0-8cd6-68f4cfa1002c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4768b233-fd1b-4bab-a9bc-e7aa763e072d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecf612c-ed42-4a7f-ac1c-01bd30b1a61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c43467-93d7-49b7-9b7e-25599cbd797c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e4fbbe-5d9e-4b8e-b9fe-6d66cfc60ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2388bb5b-fea6-4979-a68b-712de974e213",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c562fc5-24ce-4e24-b9fe-af7240525799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9a2ef8-df2a-4b82-9e69-1315cbcf9126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3fa50-50be-4f87-98f5-97944991b042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7af0c2-f8ed-4ca8-83df-5936c5a27533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ecdee5-3d5e-45a5-ba45-28616259a5e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c530bb0-b712-4b4e-b0e5-7fb0d3c98864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bcaeb8-4658-47ff-8818-64f7a631ecb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c855f73-8fcd-4f42-82fc-29c2e1c9a458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eef22e9-5b87-4caa-84de-fbbcf0d962df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a050381d-450b-4ab3-b9e8-2b47d6c7482a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4cfbc3-cf5b-427e-97a5-565e79c7002a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c0b211b-9695-4cda-afcb-f9240172266c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7ab530-23c9-4d50-ae48-631a46e544e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78979bbb-7a6d-445f-9333-6f9347961d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28b53d-83dc-4e3f-b1e5-88c9d2cecffb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74e9feb-f9a9-4154-ac60-df2844c7463a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83664144-d20a-495d-b3d0-dcff13de3c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cac66e8-584d-47ea-8853-98a6571235f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda872b3-6294-4ceb-b721-01fd58878a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7240e60-e514-4140-9849-7cb2a92e9d59",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6680703-181a-41c1-bf52-ced86b5d722e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40bc106-5468-4712-ad37-9d96a10c627c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90edde00-9e02-461a-b34b-ca47fd1f827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342a52ff-710f-4c63-a0d2-2a1ff46fc5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e48fc4-5ef3-442c-bdd7-b4d969f843af",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3887aa-0ba5-4bae-966b-2a41bafd9dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55bd922-be29-4788-a431-42b4db3fd201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48ed11a-a7f1-4f18-b50a-58abb4d639b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0373cc7d-50c4-4e69-996a-6411e490022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad803729-9cff-4a7e-b84d-cd6c5c2cc9ad",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f99797-9b7c-4ba2-a5ea-54b73e84cccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68ffad7-00b1-413c-a34c-abf5822bfb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496f8bb-747c-41e2-9692-901c50e27c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbb79b1-3c2c-4c62-a1f5-40db0efbe220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664e59a-9ffa-4fa9-ba39-bf6f577d2c45",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f964c56-2ef5-4a66-8ec2-5b08019bfb00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bfa8f6-b4f6-4119-aa08-960a844d3955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b92e419-dc08-4bbe-9400-f8fa9ea314fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2b4cd8-3bd6-4435-90e8-3b487b131938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a08082e-c8af-4fbb-8827-d996eb470b55",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adabc214-2252-4b28-a795-a9df06372f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25f4cfb-1647-4855-8ece-7cf86e0f165e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aa6cfc-d749-4c1d-845b-3bf5745810c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb31d49-5595-49b1-9067-820df812787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a34d6a9-3c30-4f76-8179-1183b6b81080",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d437ef-a432-45b9-88d2-7c93f570d511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf6471e-07b8-4e73-855a-6b3c7cd6e909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594b120e-1937-4202-96e1-951823c4939e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54346d7f-03c9-4538-a0f8-611c4a1f1d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9bb59f-a87c-40ad-92ea-84a0a73b684f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72649485-7bde-48f3-8755-13e2d273c542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91dc96d-7ce5-491c-941f-871e8fdf712e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc2a24-4a12-43f3-9e29-078ba6c8ccac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840c34bd-eac4-488d-bade-06e510dabe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942bb5f5-da43-41e0-8a8c-d27a8add79d6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ff0f31-47ae-4faa-87aa-c6e39e6ae29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe5b4af-26ac-4b83-9d40-b8bffa1ed6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee735426-0513-4c8b-a181-78748e35e807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4982a3-408e-49fc-b2ed-907825ffff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18930e8a-8f72-4775-ae2a-5bb2578f5560",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905020d-6efd-4427-b16b-57506931c91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4bf3b3-8da3-4f5e-a6ad-d09c2ca06a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5144cb6-86bc-4e00-9a23-a44d6774a026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c1bba2-36af-45a9-9313-19652df06b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328152ff-0698-4d88-900d-207366d67886",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf46cd8-89d9-4dc3-a62b-9938925ac4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037e44b9-c51c-4bb8-be0e-f538cb3d9f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168087cf-9e81-4a59-b27a-e3f141767b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c1bd47-d54b-4c2c-9a7a-afcf3bdce688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ac5e6-4372-4fef-81af-7b309bcac872",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea24908c-5a63-4dd3-a570-502b83b1ae7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308cd95f-3b46-4905-8abd-86c57c21f9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63246951-33ee-4a04-a8b9-75b44dd044a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c5f836-579b-4a56-af1e-13ff072107a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e0ab95-a4eb-46cd-b827-fe97c97a1861",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a637b0-a6ac-40b1-bfe7-53808030f247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec9c4f5-bea9-4e3a-ac99-3d6b40d2624d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a14bea-6357-4e70-8af3-44268e960850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8977824-7848-418e-95c1-dfebbf525c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2eb4e1-f1d3-4481-9a22-652759aae4c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9c41e7-8df5-4b50-8948-9a88609cb6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33e59d8-614c-4a79-a1cd-4753aac0fce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d649cf-e144-420f-bd25-15fc7082d34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e52c0c8-b4af-47ec-a4f3-df1bf80e327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c456359-1c2d-45a3-8c08-86fc4978ae26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16171d24-6840-4703-a931-2e22329c33f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a79b4f-d6a8-4ab7-ad1e-ce473f7b2a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f8f89-8c65-453f-8b1a-0d337bd7a4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a981cf2b-1034-467b-90c4-14a3dd98d192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db123e5-15d5-4230-8b83-423f063b5011",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2e1397-9ac4-42c9-be46-fb1e9767f9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da1f609-f223-43b4-bd71-2c6f0d3e4004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f701c0-95ee-4f96-a52e-7091d241d28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f2046d-135f-4462-b065-e1ca7102f42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2d90c5-041c-443c-abb7-ee30d0f72db7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f70c9a3-a826-4ebc-b698-3b6195ec0202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e492d4-39ad-4b93-97eb-eed374b60cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0876751-83ac-4ce1-8eb6-ce06b4452f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0780bac2-6278-43aa-af64-a2560f1af2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b8421d-81d4-46f4-9f15-a573e78b45d8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2227e1ca-458d-41c4-a391-3a45c7a3108c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eda1513-c5ff-47bb-9b9d-364e511a319f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918c5003-52bb-486b-a199-6620cbfa7960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4815528-a76f-4fa1-9878-c1f2f9338901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7dc263-3654-4467-9697-88afb70491c5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3ac02-6dd8-4bbe-92d6-54f91dbe6343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3276d189-05ea-4556-9e07-6beff3befa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea6b51e-1045-48f4-bf54-e775ba02dde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f618a8-6386-4d4c-81e7-370762c72acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f7e97-7381-4f75-8c57-f5e7bd0ec450",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c072a31d-ab99-4cfa-a8a3-a0afefaaf0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c246b1b-7cc6-4fa1-9226-f48915437182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae3038-4c8d-439a-aa93-f35cfabe104b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757aaf47-2dd7-493f-9d29-3be590a3d9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9404dcba-5d14-4d88-ba99-e6ddbd11b91f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b22f5-1c66-4f70-b102-4a3eae9ba18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6809a228-5e93-4780-81a8-f536f494e0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96abbfd3-2bd2-44e0-873d-67e67f961480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a75f0f9-8699-4c63-bfbf-a8687e30917a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb80e8e-29d4-4156-8189-c9438b78b97f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92383301-52be-4fce-a3d9-939b6db11242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fe84b6-5b04-4e6e-a75f-630c217f7218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ed84a-17fc-4980-b255-d084f0755a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af9b75d-1465-4ec6-8388-8a63481d5ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b7386-545e-4f4e-8f2f-f869b54bac53",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a1f9d8-dd64-418a-8b1d-3eb34cf3d9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb538b6-8f03-48b2-9ec0-158bc885f8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a313fc97-d9f6-4dc6-bb4e-86022cc6d0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e537a588-94eb-48e2-925e-90b6e3b49214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64e5334-23ae-4b23-a5c4-cad6434c38ae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd4f29a-7e34-49a4-8186-3d6103e7e9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53496fb-f489-4642-9a5a-471c188279d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad94affc-f494-433b-85c4-6a7db7e2114b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480d3c0e-1193-4064-bb93-45b7deff2c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14abd03b-caea-4c06-853d-406883ff1885",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f80753f-a02a-423d-9ab1-4eaccc88a5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08e00e0-b892-4dfe-84fc-d7f84b6891a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15d8ddc-ce2b-4237-8b9b-99a9858084aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d52721b-61eb-4742-8241-364571e8d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd0565-1cba-4ff0-bbaf-ea9930d29e38",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe370d81-2e52-474c-a1e1-049d54ee7939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1f3fbf-86f6-4235-b639-f201589ab5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687cc25e-41d0-4ebc-8383-4b3c1078d129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5cee75-42cd-4c66-9f4f-85edded6e030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e9d3af-c666-4850-b117-b41d91259de9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b0353c-af71-4918-b430-c69e1af7fbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8879efe-3290-480d-9700-803ff777689f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5abe1-6ade-412f-ae22-a7a29152918e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dad1a4-2c50-4789-ad8d-fcddf8868738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04ead7-93b0-4ccb-8173-cec91105c746",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798d2742-77cb-44ac-a8ce-25ba2d0876b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f8cdbd-3b3c-479e-883b-3f10a1212d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f200c3ae-5701-410d-bebe-a92dfa916a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f94071e-df8c-4053-a645-8556f055d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c193a-c4d0-4ceb-96eb-16895b20ebff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a3980f-a940-46e0-9a0e-9f337ed9525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d52b0d-0064-4166-a689-ecec1387fdb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fab9987-b801-40d8-b74f-1d7ac659df3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955d91ee-e1ea-4ca7-8a2f-cf1761bc16dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3cb7db-cdcf-43aa-9f25-e464473bc04a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076a7e7e-5eca-4d14-9b36-5884f2e2225c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc907cd-0122-478e-b273-1d163382d88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f783039f-ab7b-436c-a172-079be2bc2911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6ed9de-404c-467d-ac1b-694bba8d3cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea53ccd4-262a-4f93-ab7d-31b950111c00",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3089194c-3cc9-4bb5-a305-6ccd5309a091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ed7400-6366-42d2-9b1f-90ad3829bb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c964b-ec5f-47c4-b2f2-300562e92b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9a3118-e7dc-40b4-b691-aa0c70965391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2224a620-5185-4c20-8861-f9ceec1b51e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8a846f-f16a-488f-bf42-4fda5a0a6dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6de714-942b-429c-88ca-891b862d2fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da4877-c9ab-4c58-8e4d-ebb654e114a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553d45ac-ddcf-419f-8c18-53af7ff69231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2dbb91-e760-4dc2-90cb-64150b530356",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5babb41-f55f-404f-9f15-c42efc81f677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1f97e1-46ff-43d8-b747-30ed90125930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011c5252-4f2a-4c94-8a1f-6180789cfdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16da299-6950-4ff8-b968-2924b2efca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24df5e92-f195-4e99-af15-7fd7fc4d767c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aae1f32-5186-4ac6-9151-dd2567e033d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abba86f-c4e4-42c3-b995-f97454e58410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af28e3e-5e91-4852-912e-f88ba7bc9684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c049403c-74b0-4d6d-8e98-f5443ebfc567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8da5fd8-cdd9-4336-bd40-327cf097b283",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ecc118-aba5-4d5a-8514-88a8f8b1a6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b7378f-9218-4a13-ad68-12654763e458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986ca798-35bb-4594-bec2-7d9a3d455d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b9804e-84c3-4f9e-a468-b4c70be927e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088fad2f-d3e3-4326-8980-dca7823d38ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378a5c3d-eec7-46c5-9c32-121e6bfb8ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec522438-6f9e-454f-a0ee-ae1b25402fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7714424d-2486-43c8-858a-a92915b01bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a65bb6b-a268-4db7-b9f4-daf5100109fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb5605c-f748-4eba-b4a6-4237e4fb3f07",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c45454-351e-41a1-87c4-352228f33969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d9778c-ea11-4d99-b6c1-1846f40f1a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66636765-7359-41a7-9d57-e64bc39d5e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d43724-6746-4e55-a468-60cbbce50aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe324dbe-a586-4480-96d0-6864f68ec2bb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1f4ab-5e37-415e-bc99-39709ef6c050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4b6f72-73fe-447c-abf4-e7011f4f736c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61455f2e-8bb6-4a7d-9377-e1332d4a07b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da96d65-8696-406d-8727-3a144d1a935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75762d-fed9-428e-bbeb-c544c1b86a0f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380392b3-2c68-4bb1-8577-cdd9c94ece14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf41368f-0c17-4c2f-8309-b1f0bc5e1d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea912db-7cd1-442e-9f1c-94b95982c960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aa07de-d680-4855-926f-dca9f2d0b6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90f1951-345e-40c7-b070-2b15f21d9129",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f41d834-ed66-4457-b9fa-cfcbc2255bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a03cc9-c4c3-452a-8b2f-e2fded02cd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4926a1d1-4909-4c59-9643-086b772e98a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5e7d3f-9ef6-4803-b57a-e54ea03787ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eea507-5d78-4a11-a139-421b80f9b1e7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ebc8b0-160d-4de6-b431-7b1c144f78dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafd8315-198e-4dc5-af1f-1e08ffaeebf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db6e355-26f4-44ee-9528-347bc48cdfca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553013ab-e6d3-449b-8bbb-7afddcbc8144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b00d6b7-e45a-4877-b3f1-f515427da075",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab427a6a-d4c4-4718-96c6-ee33c805d01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708f325c-cc42-450c-9ae1-9ae7b566ce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da42c1-df36-4965-9ceb-13d341b35b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cdad59-a223-4181-8af1-39297eae4a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4f3bb3-16b6-4e8f-9f43-de0316057755",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc5577-277c-4585-94c7-9bc8f98ce4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6511be-67d1-450d-a1e7-a31c8b26e1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5374ef-79ad-4168-acd5-27d1a02d8370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eed18a-32f9-47de-9644-d70b271669d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e32cc-8312-4041-8fcc-c0def580cabd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcae7046-2cbe-407c-b956-57c8e8807ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d6d774-971f-4596-92ff-3e5056aaadb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71511f8-4923-43a3-a6f4-c300e32c13a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f95c508-19df-4227-a3b1-61babdec410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e747fcc8-fbc6-4f56-8617-3d51c92ed30d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e03a68d-2be6-4428-9a82-a5ecb640f4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8246117-b807-43d1-b272-7caf2ec07000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6e730d-ef9c-4409-854d-4dc2b1c8ee67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a90f45-c6dd-4283-85e2-6012aea9a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c8f2ed-56d5-4a03-b040-4dc81a8642e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc830f-c51e-43c9-8fb1-4b8c43f7be32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d63f9c39-3fa3-4ace-93b6-52d754b94e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e998256-154a-42f3-87a7-d7b7a1bbf428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3380013-e1dc-4396-b7c7-a7866dfc277a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc42b58-1eb5-4684-a7a3-fc727a87a61e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c80564-76ba-4da6-aec1-87a9a4cc8227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1767b5bf-42da-41be-af43-6c6ec5294287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd4b2ba-36d4-476a-bcff-275a8facd71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a10595f-3220-41bf-9fc7-1f98f258671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2760e93b-4b7c-4a4b-b22a-c41eab3d3ae9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d37b12-97a9-490e-a04f-7f75ed581455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8304ee1b-3b81-4c1f-9146-0d3e1e430892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e79a8-8b58-40ad-afcb-9a5f07e6be85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98381c5-f21b-4645-bdc2-77166afd667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ebdf5a-2bac-4365-aca0-4a75b5dcde31",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe0712a-cb6b-49c4-ab0a-c5fc4d1a9d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30836ef-ba98-445d-b637-415ac54c35b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90283689-5635-4d9e-b626-b1c4d2983439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9459f1c9-11e1-4170-8751-9857ffeee51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be5cd7b-2441-46ab-ba30-21bb298acdb1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f696f0-8f24-435f-943f-b3fd6029bc8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fc9946-4683-4827-b824-a0beedfd1fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7007b2a2-c4cf-403d-b5b6-a1d79ba0816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4ae4a6-57c9-49af-bf1b-2aeb6385b4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d70bc4-b647-48f9-b40f-a43a1b5a2e26",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f945772b-7add-4c8e-bd2b-6d00b717a967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a39c86-15fb-4ebc-ad68-35ca63bde317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba63870-306d-45aa-a340-ce57702148c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad09ea2-99fd-4956-9b50-9354f021a57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c9b651-d76b-4694-bde8-ff4c2dacc292",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34181da4-abc9-457d-997d-1d9830db2ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe538ac-2e2c-4261-88a5-cd2eed60f3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbb9bd6-cae2-4cd3-aa1d-7a13b599f83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a82b0b4-bc92-44e9-886a-5d80e90c8ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a2a8af-3225-42ec-835a-2a7e753f95fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60763c1c-2c78-426a-974f-f19cb38a5013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f9aa86-0d12-4be9-9183-7f60c7d069dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c4aa6-851a-4a0c-af9d-700e43a4d509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005191f3-321e-436d-8a33-29810451363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff9753-4bb7-4ce0-b732-9446eea02a26",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da8388c-4635-4f23-9f79-7ff49b86d662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80e02e2-a452-4bf5-823a-9b044214f8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b9beeb-acd2-4950-aeb3-9c240488d377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db27f1c7-a5f4-4989-8767-3c7441cd45fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0fc7c6-6a9f-436e-9bcf-735c412ac8f6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3984e4bc-60d8-4e55-9854-335381ede952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e201236d-dc36-47fe-a1fa-9be9876989d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b2218f-e159-4f23-8d8e-8aeaa3a845af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87962de8-eaeb-4215-8c29-8c051bd5b866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a70c25-1922-4374-802f-b6f74c1e7bb3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aa3fc0-6022-46f0-b412-6dbe868cd6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2b92eb-e955-47f6-a0ae-ec8aefa60e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e85813-9467-450b-90bb-11e2e05cb5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033ab5ee-3ff6-4545-b68e-73ff9c191b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfd04ad-1ccb-421f-99ad-8c996c70e643",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba568a6-1a41-496b-a7d3-6cd95302a1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce68514-1156-43b6-8b77-b0c2351c5b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f5a63-6f1c-40c5-938b-214d25156c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a1c5ec-17a1-4752-8025-d0208ad2a4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0b1b66-5e49-41af-a447-db49486d2bd3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bc6d3b-27e5-4509-9720-ef123efeb524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70627d83-b2d7-4690-8762-40b6e86a56bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a618b3eb-44c4-4988-9f82-b0563a41e850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b058ea0f-34a6-4a37-97b5-44de26431f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641b7656-124d-4488-9155-ba241900b254",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599cdc01-923b-4f24-84f5-210b606a0afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17e2eb8-e219-4909-b9b7-78e2891e9b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e41ccd-05fb-454f-97e6-c8565d7611bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ace043-cf34-4ee1-a9e9-febb0d44cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8defebaf-618b-480a-b015-aabbe2e3d4db",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7f3e6c-d98b-48ab-87e7-01443b548875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb4d5c5-45f8-46f7-8257-73b7d7f83be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007812b9-2068-490f-a823-de7cdd7e1c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fe0369-61c0-4c7f-8442-80544c37fb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f904efc3-28da-47e7-9994-cdb531d74025",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66c3cca-8d71-4db4-b117-ec704a4f0992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91d8989-2f24-4caf-b651-e4c9227f27b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95e630-2863-4f88-bda3-f47c6a93537a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890437aa-4965-420b-9c31-6020f7f234e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f18f31-2834-4624-81e9-6b3d68505612",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03308904-c1dd-4e25-8884-c77c611f2663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d967aebe-70f4-4724-bc7b-3963bd5876f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcebe70-2835-4d39-a188-d188b95e4e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0424a2d9-663d-4e62-95e8-f98f057e7358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3e7f25-5bef-45b9-8de0-709d23a19fd4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a865b-1bff-411a-9903-da51ddad9e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5b1f8f-e47b-4420-8edf-465a0efc4a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e819e-ad28-41f2-84c0-7c0529693cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e064c7e8-ecbc-4a23-bf04-ee384e169666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f04da1d-490f-460f-b37c-75cb5870011f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8639454c-26a1-4d06-b4c9-f9cd206602ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41e9a53-7db6-43a8-86e6-42bc4172d17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf016b6-6eb3-45c8-90de-4a5f78c7e421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd50ab4-22f7-4f86-acea-4628f2d1e8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a1820a-e2f0-4e4f-88e7-dc06eeb1d30e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be665f6-4f8c-4d83-b7f9-89622472d935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60e02b3-6368-44b3-9d93-85ab8c2082af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8026a0-bbfc-4cca-a162-b79302aaf020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be621a8d-0067-485d-8d5c-850fe79cc577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cf2f20-f628-4387-85d4-0345fceb9a5c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d4c1e5-d1de-4a2f-a401-eaa8ecbdd516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e97d1a-09dc-4826-9292-aee905a70461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044a34ff-7ba8-4649-8fc2-e15198e21b68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7388ad0d-4f60-4ab4-a0fd-853e234ecdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c2da62-010f-4ab1-89e7-5b694b14a503",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33bbc96-3863-449b-901c-14d86f285094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b08e53-ad5d-44fd-af9b-671f03808bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451c9160-3dad-496d-a028-152d4719d6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751b3559-9bf9-49bc-947f-307b02b893c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f72f9fd-0fed-4674-9ace-a0a83034b6b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3785c424-0c30-4237-8321-ffc00417f795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212fad91-619e-4629-9c7b-b7c070866194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97970822-811d-4457-ad3c-a95264cf0065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae694cf5-479c-4275-865d-167feb736fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e682f4a8-24de-407e-8908-c7e0e321cd56",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31b88ee-1dd1-4259-aa5a-969630634787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb9f1be-0289-4ef1-99be-f16a3b5de9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1dc1a3-e01a-4b35-a454-dd8fac0e9439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d49aaf4-18f9-4284-8494-4e6761ead4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4671637-a604-4dd0-85a2-8a889f79c5da",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55a844f-5919-4574-a799-50980bfb3b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1044f316-13c3-4881-b669-7e66a3199d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d97be7-fa4d-448e-8218-761f32c56192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65560a5e-0923-4c91-bee2-c161319324a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d89f0-06f9-4e66-bedc-02b7b16b48c6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d612585-5c67-4115-96c3-aec256b22e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e3a479-6e8a-4068-83dc-0354a25ff8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183aa92e-f9d2-40f7-9e0b-a08ba8103f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77104bb6-db17-44ea-9b33-fdf9f861f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fca476-ca9f-4ee9-a820-3358d8a68a4a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e1fe3-3e23-4803-bb85-2745f886614e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef75a42-f22e-4d13-b44d-c7999bbbf8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaa6218-7b67-4935-9919-0f322f35d026",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893c05cb-3ae8-4786-86dc-3a9293c27f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45da3e99-5bdf-4d1b-b51a-18923d4fdb97",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c381cb3-3923-4fa9-ac5d-b24b93846816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb7df87-a096-43bf-82dc-33e8a0b726fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e335f6-7fda-423f-8640-b3a371eba2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6d4bec-3bac-443f-b1ec-4dabcfa20dc9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51765a0b-110a-4b07-abb5-87d133930a5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "020cc7be-bf2f-4b24-a774-a16d1943c382"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9126281-b951-4f5a-b2e9-2374098383b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a17ebf3-e1aa-4d11-927b-ec152cd298d2"
                    }
                  }
                ]
              },
              {
                "id": "13ffcea4-9075-4e7a-9129-d0843ddcf7f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4992ae0-69a0-46d4-afe1-7124ed353e58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fcd7c6-3b3a-4dfb-8eef-494397838b09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6e67df7d-bc1d-404a-83fc-dc794dd37495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310ffc28-7a64-40d6-a72d-3221751eab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687672ba-e2e0-43bc-b158-bc9a738479f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4abfbf7f-4d93-4841-b1bc-dbc40999c1af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95d93b2a-c529-4e49-be3d-2a32545c6b38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "197e8545-6eb1-4be6-9e1a-22a21a14bb71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5650736f-2a43-4f0d-8982-ffed05b6be2c"
                    }
                  }
                ]
              },
              {
                "id": "0184c5f4-f681-406d-b1e7-ebf73c633064",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bdb0fd43-d725-4b91-a2c4-f7bf5185d22f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25927b-54fd-4acb-8266-857bcc9acfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8650244c-0b63-48b0-a421-15596d1afb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281a64e1-e5bb-4a3f-8c6a-b1249424fd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7901a209-c1c3-4e9a-bb47-58b7062baa01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eda9d01d-d84a-4110-a761-b59e11c326cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ec66a7a-703a-4d23-8bfc-a0334daa56b9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12931d64-cd44-48fd-ac9b-a1b45bd7af65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cefec665-9124-4b22-bd44-da61f8ee958c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e35db47-7d65-422e-9357-7663490bab9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b6893a7-d66b-48d9-864d-db5543519215"
                    }
                  }
                ]
              },
              {
                "id": "df88304e-9c50-49fd-9c08-4c8085d6a78c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6193440d-ae08-4272-87fb-e4c9f6578003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcf95eb4-3f43-4d02-a0c9-57a45250c939"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0e5ee71-7231-4c53-86d6-ce568bc5399b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b73ae784-bc8c-4531-9907-50ffa018ea2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e09ce36-1cc7-43e2-a03c-9cee7eff26cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24d5d32c-cdd8-429e-ac3c-18340a5680e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f243cb8-71be-4160-a498-558a76e72f67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "124cae40-0b89-42ea-9078-90efe2eaeec5"
            }
          }
        ]
      },
      {
        "id": "dab75bbe-2118-4725-bbba-d303b16665f2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a5ca6377-6bdf-47dd-b435-20274b44aa94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47a527a6-a4ed-4b9d-95c1-8225fa1bceb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6791824-422d-4db0-ab3b-c3d941f77a02",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3dd6cf-9ea4-44a5-876b-80673b2277d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd71bb6d-1302-49fd-afaf-d9b432df7a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee36a1-2782-4ce9-a192-0c321c1fe977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f885341-e40a-49f0-a39a-0485c20cdaa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c431f87d-574f-47c8-b267-53cf29a2797d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef20b52f-0804-4d0f-969b-00142cab88cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b92a00d-88fc-4e21-8f02-0059712027b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cdee55e-b5d8-470e-aa46-d89002187e1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a1bcb71-3ee0-430b-8925-0e988f4caee0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0140f5dd-b3ed-4182-af49-84731341b58b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ced6198f-fd86-460b-b55c-6e6888aeb57c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddb1d16a-71ef-4fef-bde2-c9949ebc9259"
            }
          }
        ]
      },
      {
        "id": "b556992d-5996-46f6-92d9-13e465e4e1cf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "952a9a54-6080-4395-89c4-24692c30ea89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6e867e2-02b1-4cba-96d3-8c6b7a5a38b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdc9064d-6f81-4f47-8c14-f3242870251c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1e8289-4f2c-4e94-b247-1e2fb0b6a962",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20b027fc-4b61-43ce-a0d8-a5cfb29a7337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98129607-fa7f-46c1-9f61-145963c52dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcb2e57e-d896-4914-b1a4-c77c2bdc82c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70bd2bad-525e-46d5-9827-3828733e3a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02ba60bd-28bd-454b-8d0d-e232c5a2d284"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d02aee32-ba76-42a4-967d-89846ebc197d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dc1a090-a985-4f7f-9b8c-b7eeab17bc40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0449bb5-0294-4ddf-ad6b-110fd206d300",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d7cc0ec-8bdd-4c72-a6c8-17c916811043"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccc14d1a-e583-422c-8166-7730566a5b99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06e5286e-15bf-4e09-8bcf-c7f152328c41"
            }
          }
        ]
      },
      {
        "id": "91b7bc6b-aa35-439c-b18f-0f17574de1c0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b310cdc8-f001-4597-a9b2-e45a6ecde922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8402ea8e-ab74-40ce-9029-d3dc28db1078",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5695715-e038-48e7-963d-cf2a31a940da",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26599404-3578-4dfd-b2b8-79f70d601cba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e69ab89-beb5-4686-8d80-0062a082f746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16b1e91-4652-4ced-93db-3077c2e00934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a0bee6-0ff9-4c1b-a3da-067e9efa00f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c2b1893-f0e7-4fb7-9f82-fd37fbb0973f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8211c2a-fd26-4019-a78e-112b80871672"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2364b2d7-9bd8-4294-a910-716afca809f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e26bb028-a4d8-4f5e-947d-d72ee2bba59d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7daa10ed-28ab-41c6-a25e-04e480d38fd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "831becfc-5b80-4e58-bc35-80114e7d5bf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c36709a1-266a-4cef-845d-b4b303bd218a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e062d91-c427-46fa-8922-783a9fe05b07"
            }
          }
        ]
      },
      {
        "id": "7067101d-b446-49df-b53e-4b1e3c023b43",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fd078d3-889b-4986-bd1f-b65f4f03f167",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52eb7f5c-6496-4019-8ca2-973ad006907b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "292eea82-5ead-49a0-8644-ea57807bc76f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20ec3d56-b6ae-4720-a238-baf4e4108d2d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ff4eea6-0539-4ab8-bab7-a2620cc78a07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 263.75704225352115,
      "responseMin": 6,
      "responseMax": 8323,
      "responseSd": 822.7464403180586,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689468833503,
      "completed": 1689468922704
    },
    "executions": [
      {
        "id": "9dcbfa3a-e4cb-492e-be98-5c504506c79c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3feae28d-f9a8-4e44-95a6-476a47910074",
          "httpRequestId": "4c3fa121-0075-4559-aaab-859821ac7f1b"
        },
        "item": {
          "id": "9dcbfa3a-e4cb-492e-be98-5c504506c79c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c83d3509-8003-4188-93ef-9af6ded13c4c",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "40e2186a-0074-4bc7-ab69-f62b891b7ae4",
        "cursor": {
          "ref": "27797d35-aa8b-4314-82da-6a38c018c12e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5efb9af6-cf37-40ce-b66a-f48a43959f33"
        },
        "item": {
          "id": "40e2186a-0074-4bc7-ab69-f62b891b7ae4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7ea54815-a496-48d0-a01e-2d80e5d92424",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2bb658e7-986f-4492-9667-ad41ea56d2a5",
        "cursor": {
          "ref": "df8f6414-a144-409a-ac8c-a30509e5d672",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "06126791-0e00-4cdb-a9eb-de2c54ef9ad6"
        },
        "item": {
          "id": "2bb658e7-986f-4492-9667-ad41ea56d2a5",
          "name": "did_json"
        },
        "response": {
          "id": "4a8d0734-260f-4d2e-9cf7-5b13089150ec",
          "status": "OK",
          "code": 200,
          "responseTime": 484,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e873ae45-de49-492d-a8f9-ba2ade93da35",
        "cursor": {
          "ref": "afe734d3-b8ec-4a7b-ba98-5932b36936de",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b6f63ec-a45f-40b0-a858-5da536b7cc3f"
        },
        "item": {
          "id": "e873ae45-de49-492d-a8f9-ba2ade93da35",
          "name": "did:invalid"
        },
        "response": {
          "id": "90437523-ecef-4dda-b403-3869b83c52a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3168,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e873ae45-de49-492d-a8f9-ba2ade93da35",
        "cursor": {
          "ref": "afe734d3-b8ec-4a7b-ba98-5932b36936de",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b6f63ec-a45f-40b0-a858-5da536b7cc3f"
        },
        "item": {
          "id": "e873ae45-de49-492d-a8f9-ba2ade93da35",
          "name": "did:invalid"
        },
        "response": {
          "id": "90437523-ecef-4dda-b403-3869b83c52a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3168,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0d4dd-49a0-42ce-891e-e96a29023373",
        "cursor": {
          "ref": "9f0718fe-63f2-4bcb-8386-f4a37d12401e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "223e8ad3-b565-40ae-b18d-f6f314827259"
        },
        "item": {
          "id": "d7c0d4dd-49a0-42ce-891e-e96a29023373",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f543fe81-f5f2-4291-8a15-96110c99340a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd512296-041b-43e3-829d-853b3990783d",
        "cursor": {
          "ref": "c4020924-51ac-4f04-a2fe-0ece11ff9a4f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2e8ea7f3-e166-42cc-a40b-29343347a27f"
        },
        "item": {
          "id": "dd512296-041b-43e3-829d-853b3990783d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "53282c12-76e7-450f-91ca-03060cf91e5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52148a61-a3d7-4d94-8ccd-d2bc0034a9d6",
        "cursor": {
          "ref": "ba0c274d-041b-4805-a01f-83fcddf71b62",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f2c23b31-40b2-410f-b3e1-23936dc8ba80"
        },
        "item": {
          "id": "52148a61-a3d7-4d94-8ccd-d2bc0034a9d6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73cb397e-2740-42ef-92e1-5fd79fbd5406",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98cc500-7b9d-4a28-83e3-38064df03e90",
        "cursor": {
          "ref": "7738915b-6831-4e37-80ac-95879886836e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "63106133-b2e8-426a-ac18-81e92d3a43a6"
        },
        "item": {
          "id": "d98cc500-7b9d-4a28-83e3-38064df03e90",
          "name": "identifiers"
        },
        "response": {
          "id": "f0e277d1-b8e3-4453-8401-4988d83e28c2",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f483020f-4de5-4ea2-ae0f-fe3b1f0eee0c",
        "cursor": {
          "ref": "a37564cf-72d3-4194-ad4c-75960d2ceffa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "937876f3-368a-4edb-aee3-ec7bc13c8ce9"
        },
        "item": {
          "id": "f483020f-4de5-4ea2-ae0f-fe3b1f0eee0c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7602bede-c6d6-411e-bca7-46d9d208832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc3506e-43b3-4e20-b508-7172f14d4154",
        "cursor": {
          "ref": "f61ee4a7-8e7f-4af8-907d-d425b2a368ce",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e216ed0-5a01-4634-a4b0-b76262cf71f7"
        },
        "item": {
          "id": "bdc3506e-43b3-4e20-b508-7172f14d4154",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "54873a7e-f8c7-46bf-bb47-7600b57ed4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583be98b-50d4-45bc-a9e9-59912f0ed11e",
        "cursor": {
          "ref": "1886ace8-bf1f-489c-a84d-08b0f7f19223",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7a4dc529-c6d1-4e92-8730-e70bfef4b208"
        },
        "item": {
          "id": "583be98b-50d4-45bc-a9e9-59912f0ed11e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "44afe3a9-46ad-4ad9-8c0f-c99b7d915662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a045e8-d2d1-4301-931b-f19222b65705",
        "cursor": {
          "ref": "7169b4cf-3810-4a94-869a-86aae93be8a2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e9897df3-3f6b-4447-af1d-531eb73b92f9"
        },
        "item": {
          "id": "54a045e8-d2d1-4301-931b-f19222b65705",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9c46454c-082f-4fa2-a574-92404d124d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a02ae29-2678-4158-a8fd-9e140150e5a2",
        "cursor": {
          "ref": "8e39ecf7-d7f0-4430-ab64-51a49ce7ff99",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e727361-be3a-434f-8b37-de6459b89e25"
        },
        "item": {
          "id": "9a02ae29-2678-4158-a8fd-9e140150e5a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7d60f9a0-a42a-4f3c-a9b2-abc2614de242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de7dea-e804-454a-b0eb-589ce2f92ace",
        "cursor": {
          "ref": "e9c9540e-f43c-47d3-b02b-2cebd57d3b6b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e6d2b0bc-6b1f-4941-888a-704932dc17b3"
        },
        "item": {
          "id": "e3de7dea-e804-454a-b0eb-589ce2f92ace",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "83215bc3-8b55-47e9-a832-816cdc6ac5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d484a93-fc47-422b-a88d-309d76e54118",
        "cursor": {
          "ref": "dd349edc-14e0-4cf8-9f99-76348624b895",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b499fb5f-eee2-4780-96a3-09ea74637859"
        },
        "item": {
          "id": "0d484a93-fc47-422b-a88d-309d76e54118",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d550512e-827c-4522-a718-e14c9cac609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c423894e-d450-4625-af39-83060bda52b1",
        "cursor": {
          "ref": "5eb1770b-3f20-43b1-9a57-8fbe5b740d6e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2f8a96e3-a80b-46c7-bfd0-fd93d218a9d0"
        },
        "item": {
          "id": "c423894e-d450-4625-af39-83060bda52b1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5b28a6bc-c936-4494-b677-d03d95c3a63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77147af-58f4-4ed5-a512-17de81bbd520",
        "cursor": {
          "ref": "d772351a-8dec-4a2d-954d-c1d0ff7865c4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5699787f-6a8d-4f3a-ab56-8b153c098fe5"
        },
        "item": {
          "id": "e77147af-58f4-4ed5-a512-17de81bbd520",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ff3890a6-f3ec-42f8-ba0c-d9efa97ca0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc24d79-371a-4520-8395-5307460e6aff",
        "cursor": {
          "ref": "ec25686b-16e3-4962-ab41-b6dcc269117b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d5c2b1b3-4ea0-4c8d-855d-e613ebabe21e"
        },
        "item": {
          "id": "ecc24d79-371a-4520-8395-5307460e6aff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bab6ce2d-cbd1-4a4b-a907-fcf2d328615e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfebe1e7-06f1-47d5-949a-ab66bcb588d3",
        "cursor": {
          "ref": "3104c9d7-0098-4466-a21e-bc2449254492",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2446ebf3-7dc6-428c-9442-50991f8beae2"
        },
        "item": {
          "id": "cfebe1e7-06f1-47d5-949a-ab66bcb588d3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4a8169a2-b525-44d0-bf3b-cc8552e526d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84687342-9ddd-4df1-aea7-21415cc2fc80",
        "cursor": {
          "ref": "de188aa7-a9ec-46ca-ab79-b714da81061a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "568e6eef-f9fe-4485-af76-9409e3377aa4"
        },
        "item": {
          "id": "84687342-9ddd-4df1-aea7-21415cc2fc80",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5694683a-cf62-497e-a6d5-cd08677ee2b9",
          "status": "Created",
          "code": 201,
          "responseTime": 1051,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "b22c739d-0b56-423f-9504-19763f70aaa6",
        "cursor": {
          "ref": "a403b852-86bc-42c5-9e4f-cf7889157a78",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "978f62d4-b156-4fbf-88f0-bed4f370e5b0"
        },
        "item": {
          "id": "b22c739d-0b56-423f-9504-19763f70aaa6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12b1c8f7-f5fb-4e39-b15e-44d52f6ff044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ab767-c588-45b1-bd8a-11c61eab336d",
        "cursor": {
          "ref": "b5c0b6b3-2d27-4f32-8f9a-95fefc9f8872",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ec3cf39-3e18-4182-aa18-7325e2039d0e"
        },
        "item": {
          "id": "538ab767-c588-45b1-bd8a-11c61eab336d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3f1b2628-105b-410e-b522-9f4bda5d4c88",
          "status": "Created",
          "code": 201,
          "responseTime": 8323,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "6d13a1a1-f62a-4c86-a589-4a65af3f27a0",
        "cursor": {
          "ref": "a713e375-3d5d-429b-9e5f-54ad14c41321",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aa91cbf2-ae29-4b96-a742-1caf4ed8cfed"
        },
        "item": {
          "id": "6d13a1a1-f62a-4c86-a589-4a65af3f27a0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8e80ed60-e989-4986-b643-5fb0623f4e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96908ad7-95a4-4a20-b3cc-612f9bd550dc",
        "cursor": {
          "ref": "abcf9d44-ecbc-466f-8f0c-684d823859f2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "901fac7f-86ab-4df9-9ea1-89239a80a805"
        },
        "item": {
          "id": "96908ad7-95a4-4a20-b3cc-612f9bd550dc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "10ff3edf-2688-4cef-be5b-bc0892478ad0",
          "status": "Created",
          "code": 201,
          "responseTime": 3318,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "6a4fda43-30b6-4126-9f1c-c669307cc7ed",
        "cursor": {
          "ref": "0a0cf140-f70e-4568-a864-4cc76b44d680",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a19ff38c-b8b6-4874-8b5b-fb6b7fdfbae2"
        },
        "item": {
          "id": "6a4fda43-30b6-4126-9f1c-c669307cc7ed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9208ade7-5275-4cef-94f8-09251fe75c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe6f5f-dad9-4f65-985e-d3c3d0944e1b",
        "cursor": {
          "ref": "a3a940b0-1c5a-44e7-ba95-87ce8d4dc416",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "003fb076-09d9-460b-b18d-00436cb5d992"
        },
        "item": {
          "id": "febe6f5f-dad9-4f65-985e-d3c3d0944e1b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b892ea2d-8dec-4dd1-95a8-2cc53ffa420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa3ff5a-5872-4328-bb8f-e46ffcb40dfa",
        "cursor": {
          "ref": "b067bcdd-7617-4df4-b870-b720156f0906",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4d5b778f-bda6-4511-a735-fef553b725ed"
        },
        "item": {
          "id": "dfa3ff5a-5872-4328-bb8f-e46ffcb40dfa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "add02d9c-bffd-465d-91be-ca8994cf4f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4996f28b-b914-47cc-afb1-e820a6bc51dc",
        "cursor": {
          "ref": "fe6b10d8-f4c0-40ec-abd2-afc9209d18d6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de124914-1c4a-4998-8460-fe342e9cb5b6"
        },
        "item": {
          "id": "4996f28b-b914-47cc-afb1-e820a6bc51dc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "70661126-35f9-4c31-a458-87bb246d8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678ccaf5-e8d8-477d-a95e-f49f98fab714",
        "cursor": {
          "ref": "338d65df-bbdc-4990-ac06-3dbde071891f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bf09c6bb-feb1-4608-b492-a3c099f4d7a4"
        },
        "item": {
          "id": "678ccaf5-e8d8-477d-a95e-f49f98fab714",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6bf2c8df-f03a-455b-9228-8b5c9ab4ceb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ebbcb2-762b-4bb9-84b2-411fc965b6de",
        "cursor": {
          "ref": "436362c7-8217-4a4a-8916-7a28ed1541e5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2fdf6a2-7766-49dd-b9e2-64ada4b22264"
        },
        "item": {
          "id": "b3ebbcb2-762b-4bb9-84b2-411fc965b6de",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2b2adb3d-0a7f-4b0a-9eeb-f3afd2d925be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6f3b1d-545d-405a-8342-3a31cfce913d",
        "cursor": {
          "ref": "d1918773-82a9-4359-be61-012b6cd4ff95",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cbdc3de7-5f38-4a09-aca1-5353355bed1e"
        },
        "item": {
          "id": "5b6f3b1d-545d-405a-8342-3a31cfce913d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a55aeaa8-a6b2-462e-bca6-46975ee2ac81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e671b8ec-2784-4b35-bcf3-2492fa8c5c43",
        "cursor": {
          "ref": "0461573b-f5eb-4594-bdca-232ef42ca9c3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2b232050-e16b-49fc-9475-40dc0255366c"
        },
        "item": {
          "id": "e671b8ec-2784-4b35-bcf3-2492fa8c5c43",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "31505d92-6418-4aa3-84ea-aab97cb09d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc6357a-ee64-4a53-a160-d2d525088d2d",
        "cursor": {
          "ref": "74b785c3-a612-4c31-8e86-39d0ad785f11",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7c0dbd46-54ee-48fa-9212-95ac817d4073"
        },
        "item": {
          "id": "7cc6357a-ee64-4a53-a160-d2d525088d2d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5c8b1cec-c4be-4cae-8d28-64f62afee97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ebb810-0726-4731-be77-c3933d4edb8e",
        "cursor": {
          "ref": "42d05c86-7ca4-4ff3-9465-e197874ff6e0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27dd47f4-09fc-4c21-8da4-92ecc60b1ded"
        },
        "item": {
          "id": "f9ebb810-0726-4731-be77-c3933d4edb8e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfaf771c-f067-4aea-9c0a-11c9db239f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300fa848-3dd8-4a0e-ab73-7d59017fa6ae",
        "cursor": {
          "ref": "7a28e15d-2843-4181-8947-78a77db51c92",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "60d8d6f8-027f-42c1-b2f5-404617de52c5"
        },
        "item": {
          "id": "300fa848-3dd8-4a0e-ab73-7d59017fa6ae",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df3b31c9-4e59-4b93-a976-bdb35e29c56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29e2348-7a08-4030-a001-c05edad61c86",
        "cursor": {
          "ref": "a38d13f1-b6d3-4762-a17e-7c7f34a847e6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce856676-982c-4a60-ba2e-1c24312fd77d"
        },
        "item": {
          "id": "b29e2348-7a08-4030-a001-c05edad61c86",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4d5d5082-f5a5-44c5-b5b9-ee50c9919eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d23f2f-0d29-40bf-80b5-7334dcf1d844",
        "cursor": {
          "ref": "858189a6-7e7e-4106-a7a2-39891169ead5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "abae8327-c913-45a0-9a34-e54c702b8510"
        },
        "item": {
          "id": "22d23f2f-0d29-40bf-80b5-7334dcf1d844",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db68d6a0-2c55-4d8c-aff1-4a2085d206d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02dd571-3539-41a8-97e0-bd34d67127b1",
        "cursor": {
          "ref": "bfe60c17-0d90-48cb-a5d9-494665547226",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c3df3c5-092c-471f-b9c7-05b41c1f3a49"
        },
        "item": {
          "id": "c02dd571-3539-41a8-97e0-bd34d67127b1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f90b5106-e326-415b-bbcb-0bb69b2c4492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b7ba21-6757-4177-8d28-5ee0b854224e",
        "cursor": {
          "ref": "940d346e-9a65-426b-a6d6-08b69c6b4ec5",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a94a408-b3f8-416c-909a-561b0a61d38a"
        },
        "item": {
          "id": "75b7ba21-6757-4177-8d28-5ee0b854224e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "650c2014-9ca3-4497-aa6d-10d31487ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5d8990-5943-45ab-92d9-a8fb44d4fda1",
        "cursor": {
          "ref": "a796342d-ed03-40e0-9ced-e42c47a7bdbd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8652fdb2-51f1-455a-9411-5dcfdf6ff992"
        },
        "item": {
          "id": "7e5d8990-5943-45ab-92d9-a8fb44d4fda1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3007e779-77d7-4d71-8637-3af7f7607afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca83f6d-eafa-4365-b8b0-852ab5ee15b6",
        "cursor": {
          "ref": "42da15f4-f053-448f-89ea-1ab5a95e4db3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6b5e329a-16bf-49c9-8afd-a5f167120c62"
        },
        "item": {
          "id": "4ca83f6d-eafa-4365-b8b0-852ab5ee15b6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "abfe6453-b1b8-4daf-8393-28f9184d2abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47df4d48-57e0-44b9-a025-6de09ba6bdf7",
        "cursor": {
          "ref": "4e4a14fb-78bf-472e-bc00-f75ba6696055",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb455df3-1ddc-4b76-9803-a03bf2532654"
        },
        "item": {
          "id": "47df4d48-57e0-44b9-a025-6de09ba6bdf7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b907c1f4-e261-448f-881b-bb71f0f05d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadad112-763a-4b92-b0b0-6ef665067d79",
        "cursor": {
          "ref": "c749ee2a-12b5-4df5-92ca-f885c593589b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac9971c8-d74b-46f4-99ce-020225e18a47"
        },
        "item": {
          "id": "aadad112-763a-4b92-b0b0-6ef665067d79",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4e8b6a0f-10c6-4af1-b057-3c7f1f3e9af2",
          "status": "Created",
          "code": 201,
          "responseTime": 2750,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "1038f636-3cee-4742-abc9-37e203540a5b",
        "cursor": {
          "ref": "cf35d6b9-d941-4df8-918a-32f6e3369da2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "84aee0ba-1dc2-4f68-af94-074f1bb54a03"
        },
        "item": {
          "id": "1038f636-3cee-4742-abc9-37e203540a5b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "72ee36df-87bc-4161-9b4d-6a813f4664c3",
          "status": "Created",
          "code": 201,
          "responseTime": 3097,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "6d095dd6-3d7c-4ac7-aca9-c75cbaadb94e",
        "cursor": {
          "ref": "7525a969-2d2d-4141-aa98-6330bb523a42",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ad718689-95ea-4103-81c0-cc031a2ebdf5"
        },
        "item": {
          "id": "6d095dd6-3d7c-4ac7-aca9-c75cbaadb94e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61ea1552-b0f0-4004-81fe-d95c3db97739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b201ba-8bb5-4115-a8af-e940270fd829",
        "cursor": {
          "ref": "4ae006cb-d8ce-4511-8300-bbb3e143bfa9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf728327-ddc2-4037-ac0d-1265fe037a6f"
        },
        "item": {
          "id": "95b201ba-8bb5-4115-a8af-e940270fd829",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ccca5dc-1901-41b5-9d78-6029ce85cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974de480-9141-494d-b43e-c04d0c6140c6",
        "cursor": {
          "ref": "5f8a8470-03fa-4efa-80f8-b492e92c7756",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "78eac5ec-c726-4644-b639-fbdcb8befaf7"
        },
        "item": {
          "id": "974de480-9141-494d-b43e-c04d0c6140c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c64aad7d-ef19-4851-98d3-58575b297185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac500304-c2af-44c0-bed9-580b900fc891",
        "cursor": {
          "ref": "8aee8d56-7c21-455f-ac8a-f90f7b80d62d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80f9e38e-d322-45a3-963e-2592b14bfe05"
        },
        "item": {
          "id": "ac500304-c2af-44c0-bed9-580b900fc891",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c4ce4889-a435-4a5e-87e7-119414bea5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa2256-3d7e-452c-b179-104c04fdec5a",
        "cursor": {
          "ref": "b2f19b97-7a35-4596-8428-a672bd78d32a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a3b5cfbb-6867-46fb-8505-17222b36c056"
        },
        "item": {
          "id": "e0fa2256-3d7e-452c-b179-104c04fdec5a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e691270c-c72b-4d19-ba7a-c5fcc8ed5000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ba1e88-01af-4266-92d0-e8ea8f48d296",
        "cursor": {
          "ref": "e4992228-db63-436c-9423-568ae6ebcf8b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dbf84c1f-6fc1-4fcc-8606-563c896e6aa6"
        },
        "item": {
          "id": "f4ba1e88-01af-4266-92d0-e8ea8f48d296",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "85fbebed-fac9-4f35-aee3-b6a7cebdcbee",
          "status": "Created",
          "code": 201,
          "responseTime": 2566,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "cc736f7d-d1e4-445f-8e51-22aab2b367ce",
        "cursor": {
          "ref": "998fa7a2-2bd5-4021-b820-f219ea230762",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "62eee1e5-e41c-4a39-b23c-f4ae91b850ff"
        },
        "item": {
          "id": "cc736f7d-d1e4-445f-8e51-22aab2b367ce",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4bda9352-556d-40b7-9076-088fa96edd8a",
          "status": "Created",
          "code": 201,
          "responseTime": 2890,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "2e08f356-4cac-4c01-b20e-52d95b7299c1",
        "cursor": {
          "ref": "3ef805b8-522d-4fb4-8fb3-6f2be6cc9474",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c79aeeb1-deff-4f74-9d98-aa672e3fe3b6"
        },
        "item": {
          "id": "2e08f356-4cac-4c01-b20e-52d95b7299c1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c1f7dfe7-420d-4fc2-8662-d02cf3f8fc5e",
          "status": "Created",
          "code": 201,
          "responseTime": 2413,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "f58754af-d09c-4a41-a185-0d223b70dfcf",
        "cursor": {
          "ref": "f48de910-5ea8-49b2-a547-98eecf81ab5f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52b90771-4195-466b-b5be-6c27a2ced2de"
        },
        "item": {
          "id": "f58754af-d09c-4a41-a185-0d223b70dfcf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "26f8bec9-2e0b-4353-a2d6-001ee28c8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5544a70a-6b10-45e6-bd1b-74533662a128",
        "cursor": {
          "ref": "4754f4f2-13b8-4406-b3b0-0c46a71f4d2c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b4e38015-1fc4-4eef-985a-f231670e782e"
        },
        "item": {
          "id": "5544a70a-6b10-45e6-bd1b-74533662a128",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b5e6568d-3688-4ae7-8096-6abfc5b1cbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a760bf9-4e24-474d-bd74-f7e688d75375",
        "cursor": {
          "ref": "f7ad32f1-0fb0-4e66-8763-8f762a89d595",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8308264d-5522-4f74-aac9-39eb84405e39"
        },
        "item": {
          "id": "6a760bf9-4e24-474d-bd74-f7e688d75375",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aaddc365-1315-4021-ac02-5af4ff90f0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b7834-8934-4f81-ae5a-0f09a7cf2bab",
        "cursor": {
          "ref": "4501de20-f854-4670-bed2-89aefb9aebb6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d03f8273-862a-4a74-b743-2249391472ed"
        },
        "item": {
          "id": "5a4b7834-8934-4f81-ae5a-0f09a7cf2bab",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c2d48d5-b80f-479d-a94a-04afaf27aa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4c1f6a-4dbf-4375-b4a1-f40b72f7043c",
        "cursor": {
          "ref": "a654e4cb-eb69-49d0-a778-3ce91f33be07",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9689da6d-82b9-424f-b0fd-e4d1fee6d394"
        },
        "item": {
          "id": "ed4c1f6a-4dbf-4375-b4a1-f40b72f7043c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2b0c3520-1cf4-4252-b4a4-5661fcbead1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b64a4b8-89e9-4d0b-bd26-9beb582103eb",
        "cursor": {
          "ref": "cf0b0b64-707c-4c13-b29d-90e94e7e4268",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "88d13376-e7ef-48da-aac0-36a232eeb529"
        },
        "item": {
          "id": "6b64a4b8-89e9-4d0b-bd26-9beb582103eb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ea1c4e85-d735-4371-b4ac-bd9f03abd34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2eabe-fe21-4c0e-b85d-a50f46d6b477",
        "cursor": {
          "ref": "8f189e8f-3827-437a-b858-73b2ff921afa",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6a1a5c26-4ad1-49c9-892d-f9279dcf0b87"
        },
        "item": {
          "id": "87b2eabe-fe21-4c0e-b85d-a50f46d6b477",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "991c8260-91db-45b7-8147-795093eaac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b160b9df-7d67-4e55-abde-a6b9a0590301",
        "cursor": {
          "ref": "c5762bb2-1054-4d53-b916-9a128535ae6c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5f52be97-7192-4491-a339-1a6a7ab0f96f"
        },
        "item": {
          "id": "b160b9df-7d67-4e55-abde-a6b9a0590301",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "25cc28da-8c1a-41c9-a69b-4272cf61dc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e5d6a-3f20-4b31-a847-d8b2342693b2",
        "cursor": {
          "ref": "dcb67b2e-61ce-43bd-a49f-b7950fab0d00",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6bf315d6-f5fb-4457-82b2-8a30f0a2313e"
        },
        "item": {
          "id": "cd4e5d6a-3f20-4b31-a847-d8b2342693b2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2cd0caa8-f202-40a4-96a2-421dd6ce1bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da3f50c-dcc6-4f34-9a56-be7657607ff6",
        "cursor": {
          "ref": "ee3b2de7-74f7-451c-8bf7-8488260de36b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c6c45dca-f20d-44a7-97fc-fe04d50f760d"
        },
        "item": {
          "id": "3da3f50c-dcc6-4f34-9a56-be7657607ff6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "301b5237-200a-4a18-8ca7-010599626a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3c8451-e1e9-4b3b-a87c-dc86db7808f9",
        "cursor": {
          "ref": "0c78774d-5529-499f-83dc-a796b590ddd6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "55206638-dcf1-4a8a-95a0-dbf2f468d72c"
        },
        "item": {
          "id": "4a3c8451-e1e9-4b3b-a87c-dc86db7808f9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "72aad22a-dbd2-4b7c-a78d-9e29ee06c364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5d3a5-d7a3-4264-9149-a1b185bb5f87",
        "cursor": {
          "ref": "978cf37a-7926-4116-ad85-6b5b20bd3368",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "59a2a5f0-dc10-4ced-b59f-4227680a029d"
        },
        "item": {
          "id": "48c5d3a5-d7a3-4264-9149-a1b185bb5f87",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d9e99e89-ceb8-40fc-8b17-4f9af018e533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e1e3d6-85e0-4e55-9a2e-dfeb6403d077",
        "cursor": {
          "ref": "fc186a6d-0c37-4748-9aea-f46a634facde",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a94eb408-949a-4f17-a5db-d130f57e5c55"
        },
        "item": {
          "id": "95e1e3d6-85e0-4e55-9a2e-dfeb6403d077",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5812bfa5-b0ae-4a64-9830-4e0b252ca836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77265a-c81f-4321-a334-775bc7ad6f9d",
        "cursor": {
          "ref": "39d29d92-c8ea-4108-9c52-1b515f55451a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fcec9aca-68a1-4b20-8e95-cd0cbf8e470c"
        },
        "item": {
          "id": "ae77265a-c81f-4321-a334-775bc7ad6f9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ee1199a5-31f0-47b9-96ca-70889ccf7304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddea916-fb3c-425b-bee1-b4cda9177aba",
        "cursor": {
          "ref": "acd4225f-f94a-4483-a474-c11b01ca93f7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4f7c3819-395c-4057-ae18-3dd0693c6ed1"
        },
        "item": {
          "id": "1ddea916-fb3c-425b-bee1-b4cda9177aba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "55d8cc5a-16aa-4862-adc8-d455fd639508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61e4fd2-de85-4f24-a1b3-6c2b398b109e",
        "cursor": {
          "ref": "5cede6a1-26a3-440f-9c9b-74393b8f5e8f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5298c2b1-bbcc-403a-bce2-b2086c6227f1"
        },
        "item": {
          "id": "d61e4fd2-de85-4f24-a1b3-6c2b398b109e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "280fe211-1c4f-4430-a476-53d7c2a09df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a55bc2-8c04-4f08-ab5f-d0e31ca945c0",
        "cursor": {
          "ref": "9e8c7033-1259-4e52-94a2-1ee4891d7626",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f7289900-0add-4061-9a9e-515cdb5e552e"
        },
        "item": {
          "id": "36a55bc2-8c04-4f08-ab5f-d0e31ca945c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "19a1e009-acc3-4957-9944-ccdc378965b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f03525-a977-424f-b55e-af8410f8315d",
        "cursor": {
          "ref": "cffaf801-1475-4aa0-a4bf-7de66d44fd5c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2c841c96-1507-4b48-a1e0-a3a106a29a14"
        },
        "item": {
          "id": "69f03525-a977-424f-b55e-af8410f8315d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cc51387e-76bd-486d-82e4-90227b419c39",
          "status": "Created",
          "code": 201,
          "responseTime": 2150,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "31178a6f-b9ea-4beb-b384-c7f1ea817977",
        "cursor": {
          "ref": "edf9f750-aee4-408e-b7c4-e0e1402db82b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "544ab622-bbb5-4525-8ff9-6a27f7b80e1b"
        },
        "item": {
          "id": "31178a6f-b9ea-4beb-b384-c7f1ea817977",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "33bd8c0c-4ae4-479f-8a5f-9d61eba3f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef57583a-ff38-462d-89e6-f6e4e2e50648",
        "cursor": {
          "ref": "7f24c971-19b1-44a0-9637-6cadca1cd5a7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a12fa51c-cad8-4f0b-bcde-3e6a2cc4c062"
        },
        "item": {
          "id": "ef57583a-ff38-462d-89e6-f6e4e2e50648",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "01b701c3-5e06-42a9-a87d-4e87e2030798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b35daf-bb31-4737-b124-7eb433c4681c",
        "cursor": {
          "ref": "55a89362-c9a1-4527-8900-57d79d6a099e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d43ba3e-8d54-42e0-aa8e-263d97b68184"
        },
        "item": {
          "id": "09b35daf-bb31-4737-b124-7eb433c4681c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aedef8cc-8e54-4674-9c51-4a67ff9fe870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0516dc-a9d0-45c2-8a68-02de5a5c6b27",
        "cursor": {
          "ref": "0061b77a-b7d5-4f92-9706-1ee7c6a706bf",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5c87efea-cdf9-4074-9409-8d13f644baac"
        },
        "item": {
          "id": "0e0516dc-a9d0-45c2-8a68-02de5a5c6b27",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c776d29-1230-46c0-8808-d4d5faf2c2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168cb46-f349-4ee2-a14b-3823a5fac10d",
        "cursor": {
          "ref": "63690890-db32-4c27-838a-4dbbcd74d966",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "37ac0600-3ba6-42f1-ad73-c63858cd0e5c"
        },
        "item": {
          "id": "0168cb46-f349-4ee2-a14b-3823a5fac10d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bfe6a1b1-8162-4e04-bbf9-b5ab0c1bd7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b5f1fe-6a0d-430e-b7d9-f09b4eee7d93",
        "cursor": {
          "ref": "793c9853-155d-4390-9f5e-d2edac9e5507",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "24400f3f-d789-48e9-9091-46688738d32b"
        },
        "item": {
          "id": "e3b5f1fe-6a0d-430e-b7d9-f09b4eee7d93",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62822312-f5ba-4d6c-8a2c-0e0c6ec856bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dffec6-2d69-45ad-89e1-a4a25c8bf541",
        "cursor": {
          "ref": "e0acb85a-f666-4419-b260-ffc66d752319",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8eaa6501-9510-4e5c-84a7-0a654ce72b52"
        },
        "item": {
          "id": "a3dffec6-2d69-45ad-89e1-a4a25c8bf541",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ccbdc13-4d86-4327-b5f6-cdace4ad787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0750720a-5756-4f19-8726-3c58369549c3",
        "cursor": {
          "ref": "0bb30ac6-061e-448a-86b0-7087a8bbf14a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "060f3b38-d746-40dc-8e70-50774c17a2f2"
        },
        "item": {
          "id": "0750720a-5756-4f19-8726-3c58369549c3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c4dbee12-2bc6-4178-87da-9d347fa86f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabbfcf7-c3de-4272-9487-e2f2916414ab",
        "cursor": {
          "ref": "c968ce96-20b9-4a3c-9103-d723acdf5277",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "39570c99-d842-4563-a862-f1b4c529da78"
        },
        "item": {
          "id": "fabbfcf7-c3de-4272-9487-e2f2916414ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6b15373e-ef4a-4d10-b8c1-f407b9bb8301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735acf7e-d5e5-4570-aa9c-13f33b0cde6e",
        "cursor": {
          "ref": "fbda51a4-7fc4-4eb9-af9f-f5ccb86bd96c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c5e88643-2305-44fa-8654-2c2f45654191"
        },
        "item": {
          "id": "735acf7e-d5e5-4570-aa9c-13f33b0cde6e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6e82e395-58da-40a5-9ff3-d636997f756a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14b9596-cc57-4eb5-aeb5-80fea9a5ad6a",
        "cursor": {
          "ref": "2a6a70c6-6a75-4226-a079-d3f5d0c70fc5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bb14714f-120e-47ff-909b-a6d1dd8877a4"
        },
        "item": {
          "id": "d14b9596-cc57-4eb5-aeb5-80fea9a5ad6a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "48c9b01e-5124-4768-959d-03dc96228acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28cce19-4100-4699-b837-42e5e0952fd2",
        "cursor": {
          "ref": "1fb1bd0a-655b-43f6-90ee-0a8ea8051c99",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "663b490c-7d64-49c5-a9e1-08c51f143380"
        },
        "item": {
          "id": "e28cce19-4100-4699-b837-42e5e0952fd2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "614b3247-e014-42ff-8a7b-020d50b23920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0f5710-8413-4f7e-8526-e1486979b930",
        "cursor": {
          "ref": "33063284-b01b-4d8e-a2a6-c861e7a39db8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8806d5ad-e522-4148-99a2-b7dae7ad9e35"
        },
        "item": {
          "id": "ee0f5710-8413-4f7e-8526-e1486979b930",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "61c0b995-beb4-49b0-b0dc-8633a70c7741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21aef518-286c-4e55-98e8-b23b14a697e1",
        "cursor": {
          "ref": "20e52b26-dcbb-48e2-bab7-e012454dfefe",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fff3d5d4-6a4c-474f-985a-32747de645c2"
        },
        "item": {
          "id": "21aef518-286c-4e55-98e8-b23b14a697e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "99f14cd8-ebbf-4ab4-b2d3-93830fa0965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb77623-81e8-4f60-9486-5485d1018533",
        "cursor": {
          "ref": "2a23cc8c-58d8-4fc3-b7e2-f39f904b5169",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff1e8ffd-0cf4-4363-9134-2b5e9580a8da"
        },
        "item": {
          "id": "cdb77623-81e8-4f60-9486-5485d1018533",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2be29d6d-ede5-49d4-afa9-cbe8594f1e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff96b57-9f2f-495e-8e92-bee1c7e53941",
        "cursor": {
          "ref": "a5c1ab3b-c89a-4188-886f-cfdaa536fc2b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0af584f8-b67e-410e-bccd-82565f15b0a8"
        },
        "item": {
          "id": "5ff96b57-9f2f-495e-8e92-bee1c7e53941",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "98e153a1-f932-4efa-82ed-5465da9db543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36519512-5c20-4c7c-809b-9674be04355a",
        "cursor": {
          "ref": "8068b42a-c7d6-42d4-9e96-d269c6ab0402",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "474ed33f-fe15-499a-8ada-3446abe0d051"
        },
        "item": {
          "id": "36519512-5c20-4c7c-809b-9674be04355a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "08f340d9-df91-439c-bf52-72c4bebe19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00eb05e-f25c-4346-a2eb-060c37c5b4c9",
        "cursor": {
          "ref": "f7a9a10f-6b86-43a8-9ab7-1bb6cec6ecd3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0cad369-5fba-443a-9eb1-1e3fa7dd8ed5"
        },
        "item": {
          "id": "d00eb05e-f25c-4346-a2eb-060c37c5b4c9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9605c2eb-2903-4c82-ab42-a03856d7474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a928b05-2ca9-4a86-8da3-b1eea752cd6c",
        "cursor": {
          "ref": "515db49a-6626-43fc-b318-72d1ec4edd25",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "05c419e2-874c-40d2-9a41-72a0a6201077"
        },
        "item": {
          "id": "8a928b05-2ca9-4a86-8da3-b1eea752cd6c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5b46ae0-fd88-4ccb-952d-45543b5bbd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c98a2cf-fe0d-4999-b7c6-f20ce234f117",
        "cursor": {
          "ref": "0a361bc1-b5c0-4943-b394-bff91f37784a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5dd06ec8-f31c-4dda-93ee-40a5cf3d5285"
        },
        "item": {
          "id": "4c98a2cf-fe0d-4999-b7c6-f20ce234f117",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "784fc6bf-4c06-4f80-b298-5bc1067f308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335507a2-3afc-4241-bf2a-816d101db311",
        "cursor": {
          "ref": "0acf5819-058c-4ece-a8ba-f360d00b036f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6df61b4c-25c9-4a88-aa32-7c7fd729cec8"
        },
        "item": {
          "id": "335507a2-3afc-4241-bf2a-816d101db311",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7aa4a306-4ccc-4aa8-8746-6a6589f265b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b638b7-42ba-4fbc-b0ad-8db992649eb8",
        "cursor": {
          "ref": "93cadf8d-d3b0-41c3-bd8b-693ac40cd7d3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8aa460ab-5c69-4a93-8de2-a85db2b6c1dc"
        },
        "item": {
          "id": "26b638b7-42ba-4fbc-b0ad-8db992649eb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "25254c02-4613-44b0-92cb-f05981b925dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57830074-cc55-463f-b3a2-edd7a64f10fb",
        "cursor": {
          "ref": "7b1b2ac6-f210-41a8-bcd9-1257843ba022",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "29a48774-afaa-4f71-a23c-905397851d03"
        },
        "item": {
          "id": "57830074-cc55-463f-b3a2-edd7a64f10fb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d041b186-308f-4e96-af56-cab0983e682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24cf50b-12d0-4ef6-918d-225419e13ff6",
        "cursor": {
          "ref": "2075da5c-16e0-4c44-9a10-018d43bafa0b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff69fbc7-5df3-47dc-835a-b89cd5651fea"
        },
        "item": {
          "id": "c24cf50b-12d0-4ef6-918d-225419e13ff6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18c1ef01-0777-4b8a-8b04-249a52e0fae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf607d8-d2b7-4b32-bb2f-43967561d91c",
        "cursor": {
          "ref": "e1abe49a-7502-4abb-89dd-e7f8c38277be",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a21674fa-52fa-4631-98ab-5a49af42675f"
        },
        "item": {
          "id": "0bf607d8-d2b7-4b32-bb2f-43967561d91c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3d0be878-6897-4375-a260-0f952260141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa06106-244f-4a76-bdaa-d7fd8dee4faf",
        "cursor": {
          "ref": "49087b24-0524-4183-bfe7-74874327569c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "511d047e-01ed-42ee-abfa-1dcb52c99baa"
        },
        "item": {
          "id": "aaa06106-244f-4a76-bdaa-d7fd8dee4faf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "61c201a8-a8aa-44d1-8a69-bdfaac7711ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b7d3e0-3277-4367-afdb-0d6450170701",
        "cursor": {
          "ref": "90c9406b-e15d-49bc-9714-09e2047c746a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f484fb4d-2bf3-4e4f-98a0-65cef8027c8f"
        },
        "item": {
          "id": "33b7d3e0-3277-4367-afdb-0d6450170701",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1cd8fd17-3fa3-4c3b-b7c1-63733069c9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f786f01b-d044-4df0-89f9-53abb45635d1",
        "cursor": {
          "ref": "c33267c4-0339-4f02-9cfc-0967a0814418",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55fb4909-1cf8-4504-b8dd-5350f7e0edd4"
        },
        "item": {
          "id": "f786f01b-d044-4df0-89f9-53abb45635d1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5b508c51-cf14-44a8-97b3-23e8da5402b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a87144-5f5d-4383-a720-f27ff3e0d44a",
        "cursor": {
          "ref": "c8af8633-71f2-43bb-aef2-94c29d59bff9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3b336cc7-1e1a-46e6-9ee9-901119ceca11"
        },
        "item": {
          "id": "61a87144-5f5d-4383-a720-f27ff3e0d44a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e8d6d23-f392-4727-9be3-80b2dcad7b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceec722-b2b6-4a4f-bee4-8e4ec2d4e2c5",
        "cursor": {
          "ref": "d94bfcf2-6460-4ed9-a32a-d8dcf6ef9f2f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "13770374-99f3-4f21-918f-27718ae5924f"
        },
        "item": {
          "id": "4ceec722-b2b6-4a4f-bee4-8e4ec2d4e2c5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f2708f8e-b248-4107-b5dd-6b295c5fcb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7619dc-5926-4c33-815d-4cd54c30e117",
        "cursor": {
          "ref": "52321ad3-0f42-46a2-b587-ff4593c01932",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0f28c4b0-ecf2-4d8a-9bad-9c4017881672"
        },
        "item": {
          "id": "ae7619dc-5926-4c33-815d-4cd54c30e117",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3d6af25f-3d10-4587-9534-7ccd33e3a8b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe3351-b24e-47e5-a2fd-b57d6e1ee1b0",
        "cursor": {
          "ref": "9f7cf243-344a-4c68-97a6-42c388e156cc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f266ff19-c127-4b42-bbb9-b20c4aa4c5e2"
        },
        "item": {
          "id": "72fe3351-b24e-47e5-a2fd-b57d6e1ee1b0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6c07fb7-e709-4fd4-822d-cfc297db347d",
          "status": "Created",
          "code": 201,
          "responseTime": 2045,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4402c5-3c7a-4acb-ac63-49bc499b8ed6",
        "cursor": {
          "ref": "92a3babd-8527-4f02-aa4b-2313cc01dc09",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "80f2cb5b-267c-4a11-8c87-53c55f93d39b"
        },
        "item": {
          "id": "5a4402c5-3c7a-4acb-ac63-49bc499b8ed6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "99752016-84df-4773-a50d-9d85e5ff6384",
          "status": "Created",
          "code": 201,
          "responseTime": 2694,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726da46-57a5-40f7-addd-1b212053bb72",
        "cursor": {
          "ref": "75e8c0cb-67b4-4ae2-83f9-7f55e360692a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "956ccd11-bae2-4da1-a2f8-df98a12b6bab"
        },
        "item": {
          "id": "2726da46-57a5-40f7-addd-1b212053bb72",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8cf91b92-15a4-427f-9b9c-b70612249512",
          "status": "Created",
          "code": 201,
          "responseTime": 2363,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8e5dcc-3848-4aaa-b620-0f505fdbfa6d",
        "cursor": {
          "ref": "61914c95-683e-48a0-b4f7-ebd08d9edc2a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1fa9f297-04ff-47ba-bd16-732f3f400a99"
        },
        "item": {
          "id": "2a8e5dcc-3848-4aaa-b620-0f505fdbfa6d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9caf46ba-94ab-4ab2-a44d-ebcc98213127",
          "status": "Created",
          "code": 201,
          "responseTime": 2831,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9232ae0d-0bf7-42b8-b787-c9f38b1099be",
        "cursor": {
          "ref": "2ca8e94f-c37d-46bf-b59d-0e52d5fb45ad",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5cd60be5-2c37-4e51-bb37-4b670209f740"
        },
        "item": {
          "id": "9232ae0d-0bf7-42b8-b787-c9f38b1099be",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd8ea156-9e14-4e9a-967c-e4d17821f2c3",
          "status": "Created",
          "code": 201,
          "responseTime": 3075,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-16T00:54:53Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-16T00:54:53Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "af6f4c7c-4d87-478f-9109-d467d874ed1b",
        "cursor": {
          "ref": "0baefe29-9ca7-4d3c-a5c9-ae899e6c266b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "40080374-f328-4664-a3d1-7c06c5fea4e0"
        },
        "item": {
          "id": "af6f4c7c-4d87-478f-9109-d467d874ed1b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "35953546-ce6d-45f0-a3e2-e1e4abfc961f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "0b58be35-990c-403d-8e95-a269c78a42fb",
        "cursor": {
          "ref": "25baede7-d148-43df-9155-9b452a79ae36",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "312e4574-2aab-4325-ac25-d7f4fe1e5a44"
        },
        "item": {
          "id": "0b58be35-990c-403d-8e95-a269c78a42fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a04d5b2b-7d3d-404c-9a66-7f2cc5858e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c122d95-22df-4bcf-836f-b994df212b7a",
        "cursor": {
          "ref": "9af4c1bd-a6ea-48f3-a39c-54b438d53543",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d7c9f01f-a8bc-4022-8ece-12fb72458d90"
        },
        "item": {
          "id": "9c122d95-22df-4bcf-836f-b994df212b7a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "94e660be-1d17-4862-b70e-38a678d38f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c132b782-e0cb-4a1e-968e-5a40c901f468",
        "cursor": {
          "ref": "2b29e433-e0be-4fe3-bf5c-7d664b138c07",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af426c55-0383-4763-9407-982db57dd7db"
        },
        "item": {
          "id": "c132b782-e0cb-4a1e-968e-5a40c901f468",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2caeb007-0fb6-4722-bbc0-3fe5292b4328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129cf00b-0a08-4136-b110-36d062730c4e",
        "cursor": {
          "ref": "a8cf8c19-1375-411e-90d0-190374f9eaa2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "36a17fa4-b9cb-4d90-ad06-69303aa4d278"
        },
        "item": {
          "id": "129cf00b-0a08-4136-b110-36d062730c4e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e16f7e6-d497-4cc0-8558-cf924549efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c461d-f76f-4181-9fd1-dd87a76d92d6",
        "cursor": {
          "ref": "68d63c98-2748-4592-a5b2-037ffc9afeb6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2a13d94b-5235-4259-8c0e-b461e20946a8"
        },
        "item": {
          "id": "761c461d-f76f-4181-9fd1-dd87a76d92d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36602d1b-89c2-443d-93d0-06ba98de2017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c486271a-6c98-4d67-b39a-2bf8ee23d371",
        "cursor": {
          "ref": "16409174-bb98-4a29-a38f-95d5fb5b7318",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d705b27-0ba0-4171-b640-b73c03dbdc9e"
        },
        "item": {
          "id": "c486271a-6c98-4d67-b39a-2bf8ee23d371",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ce1a749f-4bb9-444a-9468-27b209c554d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383a981b-03a2-4a9b-ae86-f8862d654454",
        "cursor": {
          "ref": "aca89dfc-99aa-4f69-ae7b-0336176989ff",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b184784f-b588-4c69-aa97-34a2d903bf4d"
        },
        "item": {
          "id": "383a981b-03a2-4a9b-ae86-f8862d654454",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d8f4120-b5c9-414b-9c05-59327fcfa90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd1f0ca-a904-47c6-8548-9dda24df6f9d",
        "cursor": {
          "ref": "b4a22d9c-6c6d-4a73-acf4-1e81b9275f14",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3d349252-4612-498b-becd-ea6ae8f731a9"
        },
        "item": {
          "id": "8fd1f0ca-a904-47c6-8548-9dda24df6f9d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e1a586f1-7227-4593-b30c-e2ea409655e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f77ec5-b921-4652-8c1e-f037e755a3e7",
        "cursor": {
          "ref": "dabecbfb-00d4-4051-bfd8-0a0262bc9317",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "343d2e42-3bd7-4ad5-90ea-d6118b232dae"
        },
        "item": {
          "id": "10f77ec5-b921-4652-8c1e-f037e755a3e7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d182fae-3496-4c44-88b1-1ef10e4e97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b513a74-a50e-497b-af6e-b2deabd6815c",
        "cursor": {
          "ref": "4653179b-50b9-41ec-a419-769c50d63d9a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5cb00cb7-d7f7-47f1-9cbd-f93bb8cab089"
        },
        "item": {
          "id": "6b513a74-a50e-497b-af6e-b2deabd6815c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2415a826-75ca-4fe1-9bb5-95a6bceaad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65645574-b95c-4d7f-bafd-b3dc6ca81d5e",
        "cursor": {
          "ref": "251f88a9-2f7a-451b-91f4-0f6188306632",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9b20e34a-e4e1-4452-8d6c-fcdcd27fdce7"
        },
        "item": {
          "id": "65645574-b95c-4d7f-bafd-b3dc6ca81d5e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3c63da19-2b4d-4581-889e-39b6fb8b585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a875ff-ba13-48d5-976b-2219856409de",
        "cursor": {
          "ref": "330ff799-38a9-44c7-9bf9-e4ab585b8b36",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7a2e7976-2435-4ba7-93f1-80a8cb5b0f79"
        },
        "item": {
          "id": "13a875ff-ba13-48d5-976b-2219856409de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74dfde04-d165-406d-8527-39a34fade468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e3ad13-2e46-497d-bc54-57df89740865",
        "cursor": {
          "ref": "e1f80e31-a128-446b-83ae-2c0a08656382",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e9da440b-a093-4626-afde-8519f23bcdc5"
        },
        "item": {
          "id": "93e3ad13-2e46-497d-bc54-57df89740865",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "689756bb-defe-46cf-a56f-5692161f2b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da7fcb1-e4fa-46c6-934a-4e18a8a53088",
        "cursor": {
          "ref": "a19c51ec-f923-413d-ba4f-dce2796268ab",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa658291-1038-4189-9158-b9078c1b0c08"
        },
        "item": {
          "id": "1da7fcb1-e4fa-46c6-934a-4e18a8a53088",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ad6f6d1-3600-4402-af8e-a6a7c6d01344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0748f-ec59-4126-a1f7-399a8842ac68",
        "cursor": {
          "ref": "506c28a9-eab2-4ca7-9dc9-90e4a7b85088",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a82eb69f-9012-4578-a033-d2b7b2f9a036"
        },
        "item": {
          "id": "5eb0748f-ec59-4126-a1f7-399a8842ac68",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "07bc40b8-3aee-4eeb-b20b-1698ead37441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c383e08-27f4-4118-9aea-c5bd2889e6ef",
        "cursor": {
          "ref": "08cbb234-970e-4534-918a-490a72d12d58",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3e4112e6-00ff-4566-a156-32698c2f11a8"
        },
        "item": {
          "id": "6c383e08-27f4-4118-9aea-c5bd2889e6ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22f01cc7-b095-4cf4-a6ac-78f11f18e6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf9d81a-8ece-451a-bb51-f0771ec1dcfe",
        "cursor": {
          "ref": "d4b4a616-4a1e-4853-8eb3-10dac0c12eb4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f370457d-61bd-489f-aeaf-71fc8a7cc88c"
        },
        "item": {
          "id": "adf9d81a-8ece-451a-bb51-f0771ec1dcfe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9122b74d-ab5f-43e5-abd2-201e9c0fc777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a1d5f0-dc75-4bd1-8edd-e28d5a8c24c3",
        "cursor": {
          "ref": "4f888f69-898c-4c5c-bced-8a6b929202aa",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0e7f914b-6eb1-4776-ab27-9e8791bf9cf7"
        },
        "item": {
          "id": "f2a1d5f0-dc75-4bd1-8edd-e28d5a8c24c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aac84404-ecb5-4ba7-be32-496dc607ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f0c2c2-464a-442c-9aaa-c92ede43870b",
        "cursor": {
          "ref": "325c20bf-9bf9-4939-b18e-da00bb5db930",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d915ddb8-5298-40a7-adb6-f72349baa1e9"
        },
        "item": {
          "id": "d2f0c2c2-464a-442c-9aaa-c92ede43870b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3c2c316e-a6e5-445c-b609-d1eb9a7904db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050822fa-917d-48bc-b7e9-bb124ea59a6d",
        "cursor": {
          "ref": "330e3ab3-d680-4893-8e92-17fb0c8a0d25",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1b779c27-660b-4931-a819-02393f5c6d27"
        },
        "item": {
          "id": "050822fa-917d-48bc-b7e9-bb124ea59a6d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b67ebdd2-7f38-485d-b271-af1cd01260db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca5e93f-826e-4d4b-80a8-44f76ff740e1",
        "cursor": {
          "ref": "379f9d71-5498-49e5-88f4-82cc54a4bf6f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "503f06b2-e962-4aa8-a26c-39a4064a402c"
        },
        "item": {
          "id": "eca5e93f-826e-4d4b-80a8-44f76ff740e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "046e4a2f-df25-4ff8-82fe-33c4ab40ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde2fad4-9f4c-439b-a054-4130851d4b9a",
        "cursor": {
          "ref": "9e7c1b01-250a-4fca-a5b4-edeb6e10ec18",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "35e6cd25-d2cc-468b-bc47-999dca835c1e"
        },
        "item": {
          "id": "fde2fad4-9f4c-439b-a054-4130851d4b9a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "70760f81-30e0-4cc5-bccf-f53751eddb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900fbedd-ffb5-4193-bea2-03a51c6ebd59",
        "cursor": {
          "ref": "5d08a461-f29c-4ab7-9707-e15f68cdd5c8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f277e819-60bb-4084-9a5f-fcd2c85836e2"
        },
        "item": {
          "id": "900fbedd-ffb5-4193-bea2-03a51c6ebd59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72064fd5-f303-480a-814f-64b3d35d3e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b4cd6-6eda-4397-aa99-b879cd34b3da",
        "cursor": {
          "ref": "758971d6-e9bd-4da2-b976-895e08ea3919",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a61ad584-bf88-4a22-93d5-147124904489"
        },
        "item": {
          "id": "9c1b4cd6-6eda-4397-aa99-b879cd34b3da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2d45bb84-c45c-4462-8d7c-48d8e533e717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c8c1da-8c9d-4467-ad5b-834c481c18e6",
        "cursor": {
          "ref": "8983e2ca-3420-4871-8992-42b56df990fb",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1cecb3e-0211-4c26-a5c3-3bd0c8e80a74"
        },
        "item": {
          "id": "15c8c1da-8c9d-4467-ad5b-834c481c18e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34b28eab-7d1f-49bc-a758-763202378292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d66f135-8a21-4f77-a662-e1c1ee014ba9",
        "cursor": {
          "ref": "64f45fc4-acbb-475d-a984-a8547ce5a1d0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7182542-15dc-4613-81fa-98c7af7acf11"
        },
        "item": {
          "id": "7d66f135-8a21-4f77-a662-e1c1ee014ba9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aca12102-8f8f-468a-93cb-abe040e6863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52183808-9c1f-450d-afb0-539d5468b339",
        "cursor": {
          "ref": "00a31126-560e-4b22-88df-fcdaec805ba0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "507aa53b-1976-4e74-8286-339c3bdd8a09"
        },
        "item": {
          "id": "52183808-9c1f-450d-afb0-539d5468b339",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7235747-3205-4997-aa0d-f9eb2776a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d31e2-4b86-4290-83bb-811b3c0836c3",
        "cursor": {
          "ref": "3ff05e8b-a877-4fac-979f-00076c99c24a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db260a82-48f0-4df2-8c0c-525a4230dc35"
        },
        "item": {
          "id": "ae5d31e2-4b86-4290-83bb-811b3c0836c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14b22ca6-b296-48e0-84ac-04f7e2f71b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba77d2bd-5625-40e5-8d44-6f0a7e5dba0e",
        "cursor": {
          "ref": "39e942a0-a27c-44d4-9ede-2c52f58eafd8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58f4d27a-48a0-404c-930a-24571a50c9e9"
        },
        "item": {
          "id": "ba77d2bd-5625-40e5-8d44-6f0a7e5dba0e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "09c47f5d-7fab-4d50-9803-64a330b9690e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc82af1-644b-4947-86a6-ca23b5881a31",
        "cursor": {
          "ref": "76d60b7b-8108-41b3-8c08-ac3002d78679",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c9aabeb-df56-445b-84e5-e9a6581a2156"
        },
        "item": {
          "id": "8bc82af1-644b-4947-86a6-ca23b5881a31",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db56c963-b70d-4bc1-b598-5b2a31b67012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdee34f-3379-4c52-941d-3b6b5e80f6f4",
        "cursor": {
          "ref": "ba92d126-f1aa-4f7d-a6a4-70f85092d53d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a45982ce-ed9c-4374-8990-2231dbe1dfd6"
        },
        "item": {
          "id": "9bdee34f-3379-4c52-941d-3b6b5e80f6f4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fff0e831-6ba6-444a-a391-635ece45136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e2bc6-67ab-4962-8234-991350db5647",
        "cursor": {
          "ref": "7bd57ff6-eabf-4ae8-8116-12fdedecec5c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c3308c28-2a00-4f63-ac81-a4f0b936f057"
        },
        "item": {
          "id": "b54e2bc6-67ab-4962-8234-991350db5647",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "07ae2570-2e55-40a7-85c5-eaec887d661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074a83e-f332-416d-9160-81dc57a632e7",
        "cursor": {
          "ref": "e096482b-6d2d-4991-b23d-5673bf817f01",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42f27790-6bd2-4f2d-b05f-5e41dac20f3e"
        },
        "item": {
          "id": "f074a83e-f332-416d-9160-81dc57a632e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e11876ad-a0b8-4f55-aa92-33e009acd7ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c93a8b7-4b90-45bb-80e0-7c9896e72a2d",
        "cursor": {
          "ref": "f66b9651-fa9b-4b2d-aaf5-f06049fc2f06",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "48735aba-3963-43ec-a951-992f2e06dc50"
        },
        "item": {
          "id": "7c93a8b7-4b90-45bb-80e0-7c9896e72a2d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93c1b406-f0db-4a55-9f2c-5e7df6f8a0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f5ee4-52c3-4b2a-a841-8474e009f69a",
        "cursor": {
          "ref": "90201ade-b1b0-4d71-9bf1-b3312af8aa09",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "702090dd-915b-4b15-9909-bb9ef9e26e5b"
        },
        "item": {
          "id": "3d8f5ee4-52c3-4b2a-a841-8474e009f69a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "958aee15-d8d7-46c3-80d5-2f746eca6c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4705b0-b28c-448c-a6da-dff77dfb37df",
        "cursor": {
          "ref": "115447cb-ed05-47ae-a08c-cc0713d4179c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "985cb59b-14ea-4fb1-9611-91232a8626f3"
        },
        "item": {
          "id": "9f4705b0-b28c-448c-a6da-dff77dfb37df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "229859e3-84d4-42b6-bf84-bbf81adc3db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7bfb6c-54db-481d-ae76-52e70fa3edc9",
        "cursor": {
          "ref": "bd5690cc-7020-40a3-bd0a-4abd5e055de8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ca59fa47-f19d-45f2-9e17-0aa285be3156"
        },
        "item": {
          "id": "7a7bfb6c-54db-481d-ae76-52e70fa3edc9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a582fbb1-8a57-4d84-a3a3-49bcc1fa92cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35efe7-19eb-4fbd-a3a8-6130360661a1",
        "cursor": {
          "ref": "f1547dca-4785-4fdf-882e-13cf8a8bb1ac",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3173ff72-a9ef-4760-964f-4f1087da4de2"
        },
        "item": {
          "id": "5c35efe7-19eb-4fbd-a3a8-6130360661a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f139c83-51ea-4049-b2f8-08ab41f7321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d396d15c-5a18-42a8-92f7-6719cc6e5d46",
        "cursor": {
          "ref": "d9b9c471-e7ab-4276-844a-3ca72d04547e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "11172c78-4150-4e7b-9315-468b9c9e5ac2"
        },
        "item": {
          "id": "d396d15c-5a18-42a8-92f7-6719cc6e5d46",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b9d8cad-66e8-4725-ab8f-c09fe707a3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1d7d0-7942-4a3d-bf48-146ac831797d",
        "cursor": {
          "ref": "53d78a21-1a4e-4640-ad78-964ac19cf144",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "54e081f4-01d6-4f24-ad50-9dab10a4c918"
        },
        "item": {
          "id": "88a1d7d0-7942-4a3d-bf48-146ac831797d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1a4a478-7d4f-4b30-90e0-b48d5df5a16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0791cdd-446a-4f6b-b3cc-a408a53eca80",
        "cursor": {
          "ref": "87e8428c-a3c1-4980-a8f6-b548562a5b49",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9703003e-c0fa-43f5-9e1a-8ec018bad8b5"
        },
        "item": {
          "id": "f0791cdd-446a-4f6b-b3cc-a408a53eca80",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1b11d3fc-7b94-4986-9f1b-89563815b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24b1df-0dec-4e78-ab8d-650828e3430e",
        "cursor": {
          "ref": "eab6419b-f79c-4b56-bd43-41e38a1dc582",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a9da45bb-e696-4019-8fcd-920fa6c87706"
        },
        "item": {
          "id": "1e24b1df-0dec-4e78-ab8d-650828e3430e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae187896-a0e2-4d87-aed6-654e51b88514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9fb55c-ac7e-46a3-a579-6fdf7eed604d",
        "cursor": {
          "ref": "4559c487-450b-4e03-8506-19a8050b53fb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "41639e65-f1cd-4f7d-af74-ea8133c5834e"
        },
        "item": {
          "id": "1e9fb55c-ac7e-46a3-a579-6fdf7eed604d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d5896cbd-171d-4fea-b51c-147c8b1d15ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253b81d-6b58-4b0b-bbad-4477f7d57f98",
        "cursor": {
          "ref": "cb835c70-3c76-4872-97d5-fa9837030d06",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dd2ac33b-083f-43b5-b45a-bbc15ab5b4af"
        },
        "item": {
          "id": "9253b81d-6b58-4b0b-bbad-4477f7d57f98",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "001f1fe8-4539-4e54-9647-e836f6b3a07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b83c233-b98c-4d66-8429-abb8e235d5f3",
        "cursor": {
          "ref": "dca0c035-1bf1-43ef-98da-7eea4dd39cc7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da558d12-b0a5-4630-b454-ffb2ffdf63b8"
        },
        "item": {
          "id": "8b83c233-b98c-4d66-8429-abb8e235d5f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dde95f89-35ff-4955-8943-237b7501c644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce6f33-f968-49df-8122-8cdbe090f4c0",
        "cursor": {
          "ref": "e6e76a33-004b-454d-b18a-e3f2702341d2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a8565ac-94b0-4ead-884c-52ea1fe32ee8"
        },
        "item": {
          "id": "c6ce6f33-f968-49df-8122-8cdbe090f4c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b68d0e6-c52e-48fb-9383-f4876af90ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda9eb19-b21a-4290-8712-aa3a0eca6589",
        "cursor": {
          "ref": "11759b3b-dce9-47e5-a8ea-f2d50f67fb7d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "80f710c3-507e-4eec-a797-c4200c608ee6"
        },
        "item": {
          "id": "eda9eb19-b21a-4290-8712-aa3a0eca6589",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1cac2364-0ff8-4322-a0dd-33ef3d56a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1031c222-2b43-4109-8a71-37a5f073d7f0",
        "cursor": {
          "ref": "86ba5ca1-2109-4f90-a7a1-ba7a5a7748f3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8bc1e7bb-b3f4-465e-8a65-8b3175005c9f"
        },
        "item": {
          "id": "1031c222-2b43-4109-8a71-37a5f073d7f0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "70c0d6bf-f4ab-4912-be77-c25b9283cfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a254d2-e6b2-4ce8-b130-02666c025d3a",
        "cursor": {
          "ref": "8a8dc093-baf7-486a-86b8-7c0553398871",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dde736a7-2fdf-47fc-a8d2-50bab9105587"
        },
        "item": {
          "id": "76a254d2-e6b2-4ce8-b130-02666c025d3a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4b591b8d-92c3-4075-88a4-de25a5e8131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfecfbb7-fd0f-40b3-8f20-b2e38193c0a2",
        "cursor": {
          "ref": "094ceac9-904a-41da-9bc8-fb5a5caf0510",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "729aba08-b457-4bc4-80de-6e8812aec915"
        },
        "item": {
          "id": "bfecfbb7-fd0f-40b3-8f20-b2e38193c0a2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3db7987c-c26e-4da8-875d-380896b34f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8bbd8-c74b-467e-bb1d-a096f35a96ea",
        "cursor": {
          "ref": "954487cb-b612-4727-94a6-83d686ca83bf",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "14593ea3-3dfc-472a-830d-b50452013dcc"
        },
        "item": {
          "id": "68a8bbd8-c74b-467e-bb1d-a096f35a96ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c05fc10-c650-4a8b-b488-e9d4bd8cb149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca2957b-82ae-4f3c-9e08-604f61fecf74",
        "cursor": {
          "ref": "e452909e-6d0f-4588-b203-3129a5464f7a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a81ed642-64b9-4cb8-b7fd-4110c7e0acc4"
        },
        "item": {
          "id": "6ca2957b-82ae-4f3c-9e08-604f61fecf74",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00783e28-f626-45db-874a-cc63ce7039ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d06d49a-e196-4b20-9130-1509a6a0f4c4",
        "cursor": {
          "ref": "856d87aa-75f7-4a4b-8454-1faa716d3978",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cf65a2ef-e383-4a26-8df7-956b5c90de4e"
        },
        "item": {
          "id": "6d06d49a-e196-4b20-9130-1509a6a0f4c4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "90bfe5db-03bb-4b80-9c52-6158221aa4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12353099-f4b4-416a-b8e8-79fc761afc99",
        "cursor": {
          "ref": "52a0d17e-170d-44ed-88eb-91a31ac7f7cb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4901dd4-8ac1-4b4e-8750-9790f88bdc2b"
        },
        "item": {
          "id": "12353099-f4b4-416a-b8e8-79fc761afc99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a8744917-d9e7-41e0-81ee-b055f17691fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b19c12f-7ea3-4440-a6c2-43f8dab0f714",
        "cursor": {
          "ref": "67eb340b-8269-43ca-8cae-5a562fd5abb7",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ceb5134f-f2bb-4fcd-9d68-d7415e68667f"
        },
        "item": {
          "id": "6b19c12f-7ea3-4440-a6c2-43f8dab0f714",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ea2af2c1-030f-489f-8f7d-18784fac7793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd8cc01-27bb-4a38-bc54-6eade03a0aa1",
        "cursor": {
          "ref": "2ecf116e-b227-49ca-b6af-8ca11ff8976a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "97fa1532-414f-499c-81c3-5f4a5885e40b"
        },
        "item": {
          "id": "cdd8cc01-27bb-4a38-bc54-6eade03a0aa1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b9d16fae-fae0-4254-b5b6-b696f4cb6ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab427427-f98c-4fef-a047-8f329574eea5",
        "cursor": {
          "ref": "341a144a-8236-470c-8ffb-865138dad5e0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ac8173ee-f83c-4f52-b65e-fd8400f06080"
        },
        "item": {
          "id": "ab427427-f98c-4fef-a047-8f329574eea5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55f553be-ef4f-45a8-a2da-15e95e7b3dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5143214a-ada6-4649-83d4-d8c886fa2e46",
        "cursor": {
          "ref": "cfb9d25f-0ad3-4d5d-b42b-9aa0eac28ab4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c3164044-3865-4a77-901c-cffa00b73b4a"
        },
        "item": {
          "id": "5143214a-ada6-4649-83d4-d8c886fa2e46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4f3fd28e-a2ac-48b8-b515-c1b4d06221c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5433fb40-e371-4282-b4b1-7565696fbb3d",
        "cursor": {
          "ref": "c123d698-9e68-444c-bef3-c14f0fe68687",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ae196de1-df6a-45b5-8b8f-e9e99881af1f"
        },
        "item": {
          "id": "5433fb40-e371-4282-b4b1-7565696fbb3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1485b43d-1525-4e3f-873e-21c993baa8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461d3903-b2a5-4094-990d-5dc10543f0fc",
        "cursor": {
          "ref": "6205d54a-5454-4aa0-9e20-35b09a8d49f1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5b3660a4-5594-476b-88dd-d1a50ac81e69"
        },
        "item": {
          "id": "461d3903-b2a5-4094-990d-5dc10543f0fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2c68d123-ac3e-48e0-8894-5c432fe7a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f953c907-e5fd-4d29-8965-e0bcac0ed06c",
        "cursor": {
          "ref": "06a2f1f2-f2fb-470d-a09f-d2ba2159f400",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b4f0bd5-a666-464c-bff4-7cd142a7bb33"
        },
        "item": {
          "id": "f953c907-e5fd-4d29-8965-e0bcac0ed06c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d954159-2a7c-4c39-958e-5ba9ffe85173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c7a7ca-b4d0-4839-b3e8-98a8601979e6",
        "cursor": {
          "ref": "031d7a69-a02a-4515-a499-4362c07779e5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8d8e2117-ed74-4ca8-bdd4-dae24a2aef26"
        },
        "item": {
          "id": "d0c7a7ca-b4d0-4839-b3e8-98a8601979e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3c6a672-6573-4013-a012-a83458e22c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2702662e-b359-479a-8983-1cdf9f0a64db",
        "cursor": {
          "ref": "9c087437-72a9-4d45-a60f-e492307df8de",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "11d3c91e-bc53-4607-81e0-c02676064e1f"
        },
        "item": {
          "id": "2702662e-b359-479a-8983-1cdf9f0a64db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e3369ca-0694-40f6-b101-71325c03d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd41ab-61bc-43e3-b51a-3240270716fd",
        "cursor": {
          "ref": "544408ec-11a9-4dc3-a378-394be264b7ab",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2c084e44-0905-4a05-9fc0-c1ce58695b58"
        },
        "item": {
          "id": "1bcd41ab-61bc-43e3-b51a-3240270716fd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b869de0-7464-430f-825d-6cdd7157764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0ee440-703d-4451-93f2-2e8edf347953",
        "cursor": {
          "ref": "5cbdd73f-0828-47da-8925-d6c352a3e210",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98f19d69-a0b9-41e4-aa34-83da2b709210"
        },
        "item": {
          "id": "da0ee440-703d-4451-93f2-2e8edf347953",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b35a7335-2471-4673-b2a2-a19a2b7fbfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdb44e1-815c-4b6a-a2d6-6d378ea453d0",
        "cursor": {
          "ref": "2ae4b85d-4590-4eab-8b4a-e45bdc7ee0b0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5fa6e849-4063-42fd-94ed-e87a8086488e"
        },
        "item": {
          "id": "5cdb44e1-815c-4b6a-a2d6-6d378ea453d0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a3c15d50-3b4b-4cd2-b6ef-b1935588b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd0d260-3844-4af6-a0c9-ddb8dc9b4ecb",
        "cursor": {
          "ref": "06f16928-fe28-4ed8-9b9b-9c17b640a0a2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "38df576b-fb23-4999-99c8-4cd2c4d18fdd"
        },
        "item": {
          "id": "cfd0d260-3844-4af6-a0c9-ddb8dc9b4ecb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "718ec88f-06f4-4b7a-8971-8efd0cd4e1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b92fc-4ec8-45fc-86d6-710b2e6fa90a",
        "cursor": {
          "ref": "41e13fa3-2249-4fb7-a80b-ae9e38cebe27",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "df82d80b-592d-4cf1-a7e4-b1b9eaecb7e2"
        },
        "item": {
          "id": "424b92fc-4ec8-45fc-86d6-710b2e6fa90a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d0c067a4-7385-40cf-a0be-e30d48ead3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a87c13-37a8-412f-bb39-bb5a056049e5",
        "cursor": {
          "ref": "6780ebcf-3c62-4fde-b1bb-9b023ced9411",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aab13f7e-232f-42d9-b8aa-1698e450d401"
        },
        "item": {
          "id": "12a87c13-37a8-412f-bb39-bb5a056049e5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7bcb3a0e-fa8a-467a-91d8-b77f81d38a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c053ee-7537-4c52-a54a-83c2c67d4648",
        "cursor": {
          "ref": "0515c5ee-1917-4cf2-a224-456ebfd68a44",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c31f59c6-08bc-4bd2-995a-ecf2c0adf2a8"
        },
        "item": {
          "id": "32c053ee-7537-4c52-a54a-83c2c67d4648",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ae19fb4f-39e9-44fc-ad04-e22bc7141658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd15acd-7163-4912-aed1-303e1f5f5be7",
        "cursor": {
          "ref": "bfcfa5d9-c9bd-4817-8ffe-1e93a1880481",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "883af591-11ee-4d76-8283-95d11d9c3304"
        },
        "item": {
          "id": "5fd15acd-7163-4912-aed1-303e1f5f5be7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ac05ab6-bfe3-4254-8238-6564ced15f8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c77c616-1a15-4167-bc5b-2551852861f4",
        "cursor": {
          "ref": "078b88d3-208a-42b6-92ee-05cb202e9b71",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "972abbe9-c6e6-42d8-beb9-ff143b30282f"
        },
        "item": {
          "id": "5c77c616-1a15-4167-bc5b-2551852861f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fdb8e2e8-fa9a-4902-8dd0-4aad378a628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52235bca-7341-4972-8a27-4056da8f1fa1",
        "cursor": {
          "ref": "92174e9b-f38b-4f63-868f-a105e6b6479e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c6cb07ce-69e5-4f3b-b3ee-33fe17ac3dfe"
        },
        "item": {
          "id": "52235bca-7341-4972-8a27-4056da8f1fa1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d3309162-9a66-4cd5-8c21-6d24904c0bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c67439-3995-480e-8cb0-1cdbe0340612",
        "cursor": {
          "ref": "d4a5d517-b31a-4aa8-a44e-ca9d34d5a34a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b97f667c-1997-405f-91e5-1148a4529d2a"
        },
        "item": {
          "id": "18c67439-3995-480e-8cb0-1cdbe0340612",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5e220dda-84a9-4b00-b12c-d6696ea22d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0267d9da-590c-44ba-98c6-cbeedc9438a0",
        "cursor": {
          "ref": "7441b51a-1673-486e-922d-ed0f5df3d7b5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2a4470b-9a6a-4744-a400-1732d4d4efae"
        },
        "item": {
          "id": "0267d9da-590c-44ba-98c6-cbeedc9438a0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4284f11b-54c8-4b9f-892a-d0c27a8b68a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316089e4-6a79-4c53-b4ad-71247c117bee",
        "cursor": {
          "ref": "dc6f1a87-9512-4316-95b1-4561980786d9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8c0427f9-abe8-4818-966e-880ec991afb3"
        },
        "item": {
          "id": "316089e4-6a79-4c53-b4ad-71247c117bee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "24e65784-aa40-4a96-8c9f-6f5e77d96f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae077aa-150b-44c2-b077-0fd88fdf4a6f",
        "cursor": {
          "ref": "89520b1c-40d7-49b0-8d74-d1603f86af20",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b3d5a24-c47f-4fd8-a384-417500cee155"
        },
        "item": {
          "id": "2ae077aa-150b-44c2-b077-0fd88fdf4a6f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5f0ebea2-ffde-4602-96f1-4ec6cf5560a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e94e2e1-688d-40fd-9814-54486d081139",
        "cursor": {
          "ref": "b363f346-3c6b-4c00-ac38-8093731ad865",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7056761d-505b-49fe-a9f7-9840a3eb6b04"
        },
        "item": {
          "id": "1e94e2e1-688d-40fd-9814-54486d081139",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "229d1fa8-2b0f-4183-8b2c-8ea4eed4852c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f702c74-95f5-4239-be91-7b66a5543d9f",
        "cursor": {
          "ref": "f35eaf3a-aef5-4079-85ca-bc5d1e8191a9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e803a0be-b6c5-473a-ae8a-dad8442e2457"
        },
        "item": {
          "id": "4f702c74-95f5-4239-be91-7b66a5543d9f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8f4dcaf8-07a7-4687-a1fd-66f13c3f5a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40b3bc3-6a72-4fc4-bc8e-072776b9a349",
        "cursor": {
          "ref": "a6f6b027-c698-4c06-b779-e8d5c7ff4990",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eeb7817e-68d2-4bd9-b59b-b82377e0f9dc"
        },
        "item": {
          "id": "e40b3bc3-6a72-4fc4-bc8e-072776b9a349",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "af83a049-273c-4eac-880d-fa4b83299d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0fbda3-39ef-4153-bf7b-c8ff7ac757bd",
        "cursor": {
          "ref": "c7d606c9-37ff-4853-a847-18d992e5a0f6",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "32950c36-4dd7-4507-8b67-9c2cf960040d"
        },
        "item": {
          "id": "2c0fbda3-39ef-4153-bf7b-c8ff7ac757bd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "78b8b0c2-1c59-4afb-b469-f9339367412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7177b-fbd1-493b-bad1-6e2e399d3baa",
        "cursor": {
          "ref": "ffebb8a1-376d-4825-814d-dba386d1ea70",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "af597536-de79-418d-ac61-4a1c703cf2a9"
        },
        "item": {
          "id": "b2f7177b-fbd1-493b-bad1-6e2e399d3baa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95a4cf34-42b4-4cec-8892-7941b0bae6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78a6bd2-edd5-4862-9465-4744889b5d95",
        "cursor": {
          "ref": "9955757c-c6f5-4a49-ab73-5a65b9828ece",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f42893cd-b943-4dde-b05c-ef879c5e369a"
        },
        "item": {
          "id": "a78a6bd2-edd5-4862-9465-4744889b5d95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "16eedf90-da8a-4659-88f1-51cde6424852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cffcc6-b36f-490a-8431-96b584ad0476",
        "cursor": {
          "ref": "c2a2fd44-efec-4ffd-ae80-897bca5a5cc0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f2040ae1-8b2b-4c17-b9d6-cb1dab569931"
        },
        "item": {
          "id": "47cffcc6-b36f-490a-8431-96b584ad0476",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "012f2b0e-f140-4726-8f3d-b2027ee116bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a8e688-9415-44f0-9720-1628d37fd230",
        "cursor": {
          "ref": "424f48ed-0941-4bd1-945d-7fdc9d3ca123",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bc209605-fd9a-4f97-bbbb-ec618743f3f0"
        },
        "item": {
          "id": "d1a8e688-9415-44f0-9720-1628d37fd230",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "97c146d5-5e12-47a6-bd1a-a0a689f41534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90825b39-1fd6-4c86-8836-e14b9afde8f7",
        "cursor": {
          "ref": "1e167478-aacc-4bd7-a8e1-dd25ee7678d2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6730681a-486c-4be2-8a90-ce0e7f108634"
        },
        "item": {
          "id": "90825b39-1fd6-4c86-8836-e14b9afde8f7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a84bd929-3279-471d-bf4f-2d935d59ba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c559a0-9335-4d62-93a6-44527a6d28be",
        "cursor": {
          "ref": "ed6e216d-9f3c-43cd-9caf-782dd6def34c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00dc73da-5f99-4baf-b928-567dbd5027cc"
        },
        "item": {
          "id": "28c559a0-9335-4d62-93a6-44527a6d28be",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "508e66ad-5f30-4154-8fa2-d60ed1791e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42734c23-8795-4009-97c6-38814c5f4caa",
        "cursor": {
          "ref": "865fb045-b4c0-4799-b95d-b8aea63edf1a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "125eb15a-c34c-4027-8913-bf8d781f4735"
        },
        "item": {
          "id": "42734c23-8795-4009-97c6-38814c5f4caa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e8daa6cf-c543-439d-a64e-fc16f06bf917",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "2c52e910-3718-4d0a-bbf8-480ec7ccfe4f",
        "cursor": {
          "ref": "2550c44c-a132-44da-85ed-a55389862c38",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5bd348bb-c992-4aa3-ac11-98e71b27633f"
        },
        "item": {
          "id": "2c52e910-3718-4d0a-bbf8-480ec7ccfe4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6d195c1f-a559-4156-9f7e-250dd37a2aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b5057-7563-493e-a7c4-6f91b5b44669",
        "cursor": {
          "ref": "1690e37c-4fee-4fee-8471-0c8da98f024a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7e870afa-4ba0-4d20-8420-bc1a850e5a28"
        },
        "item": {
          "id": "d25b5057-7563-493e-a7c4-6f91b5b44669",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "51f9b641-8b9b-40c4-8f97-f92c5731efa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f99a1c-8393-411b-8397-d617da30b270",
        "cursor": {
          "ref": "dea5ca48-33ab-43dd-b381-9e9ca2cffa56",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "76242278-d21f-4279-8120-0aa6a525e63b"
        },
        "item": {
          "id": "a9f99a1c-8393-411b-8397-d617da30b270",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3a6ff419-58c5-4730-a1f5-bf89a7dfbe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e21dfd-e384-48a0-8cd6-68f4cfa1002c",
        "cursor": {
          "ref": "cbfcb413-2edf-4747-a872-1babc0104107",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5c491c94-08f2-4ecc-acf6-59c7bcb893fa"
        },
        "item": {
          "id": "d4e21dfd-e384-48a0-8cd6-68f4cfa1002c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b70b42ba-bef2-40e3-b389-ff2f5f06efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2388bb5b-fea6-4979-a68b-712de974e213",
        "cursor": {
          "ref": "f6a8b497-f45a-4baf-b053-225721663de9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3b8c21fd-9335-4838-a64d-f51656ddc581"
        },
        "item": {
          "id": "2388bb5b-fea6-4979-a68b-712de974e213",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6071ac22-1385-44b1-aee4-b22b90a38892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ecdee5-3d5e-45a5-ba45-28616259a5e4",
        "cursor": {
          "ref": "d200e2d9-a333-4f99-9866-ea4c8045c663",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ad7c8d9f-5012-4957-a010-82e206f72137"
        },
        "item": {
          "id": "10ecdee5-3d5e-45a5-ba45-28616259a5e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9678a916-b568-4dd3-9af5-ac82986800f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a050381d-450b-4ab3-b9e8-2b47d6c7482a",
        "cursor": {
          "ref": "71e06a77-4bab-4885-bb6d-2c24b7978ef0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cb7103ea-a311-443c-bf07-4e44fbef7ea2"
        },
        "item": {
          "id": "a050381d-450b-4ab3-b9e8-2b47d6c7482a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "022aedcb-6f1f-4ff2-bd4b-5bc5ba7f9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28b53d-83dc-4e3f-b1e5-88c9d2cecffb",
        "cursor": {
          "ref": "47b1ad2a-93a3-4b2a-a226-ef4b69005084",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2eaf4381-8c98-4118-92ba-c151d24d4698"
        },
        "item": {
          "id": "ef28b53d-83dc-4e3f-b1e5-88c9d2cecffb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "30d157b6-4aea-4637-89f1-1f33f0831fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7240e60-e514-4140-9849-7cb2a92e9d59",
        "cursor": {
          "ref": "7541e3aa-b969-4949-9e99-86dd5fe049a8",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "57f89fb7-5d4b-4226-ad6f-014f5e7d7e59"
        },
        "item": {
          "id": "b7240e60-e514-4140-9849-7cb2a92e9d59",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4b43a1d7-743d-4541-b021-438f7d3c4771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e48fc4-5ef3-442c-bdd7-b4d969f843af",
        "cursor": {
          "ref": "c4c6c910-aee7-4b76-9a9f-f0cec11ae99b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9cf5aae1-8c53-4c9b-b737-6469aa942dd2"
        },
        "item": {
          "id": "c0e48fc4-5ef3-442c-bdd7-b4d969f843af",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f77458f3-274f-46bd-98e0-23c457091c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad803729-9cff-4a7e-b84d-cd6c5c2cc9ad",
        "cursor": {
          "ref": "2b8f5a02-40b7-446a-9035-877d33dc43b7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "379cd67a-c790-4bd9-8f27-b06f39e18ec0"
        },
        "item": {
          "id": "ad803729-9cff-4a7e-b84d-cd6c5c2cc9ad",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "637659e2-5d04-4983-b5a3-b4d5d03d9c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664e59a-9ffa-4fa9-ba39-bf6f577d2c45",
        "cursor": {
          "ref": "c49f3a53-0ec0-4100-a22a-1b5755ddd46e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bfc57d1d-ce28-4501-8f49-0a12169ebe3f"
        },
        "item": {
          "id": "b664e59a-9ffa-4fa9-ba39-bf6f577d2c45",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9a00d455-b4f1-4839-9b2e-4adbae8fcdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a08082e-c8af-4fbb-8827-d996eb470b55",
        "cursor": {
          "ref": "9e42d1f6-ad7d-49d9-b344-b5d78fffc7e0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "72cba974-e714-4a83-93bf-915640ada0cd"
        },
        "item": {
          "id": "0a08082e-c8af-4fbb-8827-d996eb470b55",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1f6e977-7c33-4e27-b08d-3b3854f05762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a34d6a9-3c30-4f76-8179-1183b6b81080",
        "cursor": {
          "ref": "d0ab007d-1927-408d-a066-5a9c98b6c942",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "20d9bfcb-09c3-4dcb-810f-1406ffd31887"
        },
        "item": {
          "id": "5a34d6a9-3c30-4f76-8179-1183b6b81080",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "57384fb0-07d4-4ea5-9c5e-b54b730b995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9bb59f-a87c-40ad-92ea-84a0a73b684f",
        "cursor": {
          "ref": "52c0418e-9092-48b7-b3d8-f39b509e4b65",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "486d8f84-ef18-4627-9e25-ed26289a2855"
        },
        "item": {
          "id": "da9bb59f-a87c-40ad-92ea-84a0a73b684f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "25ab8cda-55eb-46ef-a08d-0922d35aefd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942bb5f5-da43-41e0-8a8c-d27a8add79d6",
        "cursor": {
          "ref": "552baedc-7a47-4d20-8a99-e1c8236825b8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cdcca0e8-b95d-4c25-9657-83c802bd20db"
        },
        "item": {
          "id": "942bb5f5-da43-41e0-8a8c-d27a8add79d6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "25eb2ab4-40aa-479f-bc91-e6262e27a7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18930e8a-8f72-4775-ae2a-5bb2578f5560",
        "cursor": {
          "ref": "de7d9903-5922-497b-8bf3-0e0f0f3040ea",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "678220d1-7f46-40af-9aae-20eb188dc0ef"
        },
        "item": {
          "id": "18930e8a-8f72-4775-ae2a-5bb2578f5560",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "363a8e5b-9cf5-4f59-9bc2-3af48f50645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328152ff-0698-4d88-900d-207366d67886",
        "cursor": {
          "ref": "14c5046e-1028-4bbf-8b17-2f39aea659e9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3db46ef6-dace-499e-8c7e-4d6f55961916"
        },
        "item": {
          "id": "328152ff-0698-4d88-900d-207366d67886",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e6b1d5d4-4a13-4da4-b75b-f2dd25fcb1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ac5e6-4372-4fef-81af-7b309bcac872",
        "cursor": {
          "ref": "f03b5c54-cbc6-49ef-bf14-d0c1139f92af",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a9736491-19c7-4394-a396-8bbe1a377b59"
        },
        "item": {
          "id": "3d5ac5e6-4372-4fef-81af-7b309bcac872",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c034d338-5fd8-42fa-a778-8dfab898e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e0ab95-a4eb-46cd-b827-fe97c97a1861",
        "cursor": {
          "ref": "1ac8d87e-b41e-4b4d-922b-10e9bc86d068",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "52adfb3f-ac10-4933-8967-3630cf9f3694"
        },
        "item": {
          "id": "16e0ab95-a4eb-46cd-b827-fe97c97a1861",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cd9938db-926a-4dcd-8793-9245cbf0552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2eb4e1-f1d3-4481-9a22-652759aae4c3",
        "cursor": {
          "ref": "8f90a8fb-e8e0-4ae7-aa71-ecd29dd7c08e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5831689d-3c0d-455b-901e-d3d488788762"
        },
        "item": {
          "id": "3e2eb4e1-f1d3-4481-9a22-652759aae4c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0b01d4e5-3974-4928-8058-bdd898a2260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c456359-1c2d-45a3-8c08-86fc4978ae26",
        "cursor": {
          "ref": "0d80c17c-d10e-413b-9220-283413a6ee56",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ba695ae0-a196-4e9e-a5fb-a896e78de536"
        },
        "item": {
          "id": "2c456359-1c2d-45a3-8c08-86fc4978ae26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21ff4a0d-0c97-4b20-bda1-a18aae1790ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db123e5-15d5-4230-8b83-423f063b5011",
        "cursor": {
          "ref": "340762c4-9a16-4f6c-be97-0d6cc98eaaf4",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d8975efa-6fa7-47b1-8aba-b2f703ace5b3"
        },
        "item": {
          "id": "7db123e5-15d5-4230-8b83-423f063b5011",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6bb7d945-a837-4eee-bb51-0e2942f88598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2d90c5-041c-443c-abb7-ee30d0f72db7",
        "cursor": {
          "ref": "f0982790-edce-4fa7-a39d-cd87a1bd3212",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4064f5b7-9592-47f0-871e-18a8c270b526"
        },
        "item": {
          "id": "3a2d90c5-041c-443c-abb7-ee30d0f72db7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9f9c0891-9a69-4a74-a31b-ae431f1b5eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b8421d-81d4-46f4-9f15-a573e78b45d8",
        "cursor": {
          "ref": "7087f38a-ee41-4322-99b9-a41ca66cd6a3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "255ed7df-5ac6-4567-b571-accb41bc61a7"
        },
        "item": {
          "id": "53b8421d-81d4-46f4-9f15-a573e78b45d8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94fdd23d-c2f5-47fc-a185-cb860c770071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7dc263-3654-4467-9697-88afb70491c5",
        "cursor": {
          "ref": "c73ac228-65ae-4d52-9311-cafaea9e8391",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7172985b-5732-465e-a230-0555a0cf55d3"
        },
        "item": {
          "id": "1e7dc263-3654-4467-9697-88afb70491c5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f6d0ba27-86a1-4d1c-8267-b35f5c4b03fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f7e97-7381-4f75-8c57-f5e7bd0ec450",
        "cursor": {
          "ref": "753c4849-e26a-437a-a18e-81ad78404e93",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bb07c722-51e9-4e90-86b5-ade7b6b6415b"
        },
        "item": {
          "id": "9d5f7e97-7381-4f75-8c57-f5e7bd0ec450",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e5c65b7b-a112-4395-9ddb-20aff732c204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404dcba-5d14-4d88-ba99-e6ddbd11b91f",
        "cursor": {
          "ref": "34088496-4f00-45a0-9c28-a4dcfcab2773",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "770de837-b17a-4b32-b80a-811ad73a4142"
        },
        "item": {
          "id": "9404dcba-5d14-4d88-ba99-e6ddbd11b91f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "192d904d-90f6-4897-83b2-7c308bf05c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb80e8e-29d4-4156-8189-c9438b78b97f",
        "cursor": {
          "ref": "0f3ef489-ece5-4244-bf95-00742c435545",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9176ea49-d34b-48d2-aff2-59bb8bb50476"
        },
        "item": {
          "id": "bcb80e8e-29d4-4156-8189-c9438b78b97f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "efe30dc3-cb14-4b3c-99a3-6bc1fb7c5c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b7386-545e-4f4e-8f2f-f869b54bac53",
        "cursor": {
          "ref": "cf6db71a-5964-43c1-a525-b56f7fb8fdbc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "31a04937-7bbf-4006-a6f1-08cebe25be83"
        },
        "item": {
          "id": "174b7386-545e-4f4e-8f2f-f869b54bac53",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4ffa579e-beb9-4ad8-add7-ee6442793a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64e5334-23ae-4b23-a5c4-cad6434c38ae",
        "cursor": {
          "ref": "345e9c3a-12f2-4b91-b0fd-71b090b44864",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9891ae8d-9245-4617-88fa-71aed0508b2f"
        },
        "item": {
          "id": "b64e5334-23ae-4b23-a5c4-cad6434c38ae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a3b8084c-e195-469f-8ec7-ec045b4d057b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14abd03b-caea-4c06-853d-406883ff1885",
        "cursor": {
          "ref": "225cbbdb-e244-4a51-9311-3a8403edcd9f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "05f04060-10b5-48b2-a745-218a72d67926"
        },
        "item": {
          "id": "14abd03b-caea-4c06-853d-406883ff1885",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3661855a-28f9-4b90-86d1-211d08683614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd0565-1cba-4ff0-bbaf-ea9930d29e38",
        "cursor": {
          "ref": "ec36d734-905c-4089-85dd-42618c78958e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3f207abd-4e60-4a4b-81a7-0e6afde3f195"
        },
        "item": {
          "id": "4cbd0565-1cba-4ff0-bbaf-ea9930d29e38",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d7e53bf1-f113-4eea-a207-c790d05d8f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e9d3af-c666-4850-b117-b41d91259de9",
        "cursor": {
          "ref": "961e1a8f-31f7-4918-958e-5a00f026c91f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6b139e23-58b7-4429-9557-a8c24716cad7"
        },
        "item": {
          "id": "89e9d3af-c666-4850-b117-b41d91259de9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c4384054-09e5-4eee-9c26-ac7eb35eefca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04ead7-93b0-4ccb-8173-cec91105c746",
        "cursor": {
          "ref": "5a088809-2011-4feb-9d81-80b6682ece2c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f5c028f7-3885-4dfa-b2b4-0a090d4453e4"
        },
        "item": {
          "id": "cb04ead7-93b0-4ccb-8173-cec91105c746",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36c0747b-6770-4208-a0ee-acaac6ca1cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c193a-c4d0-4ceb-96eb-16895b20ebff",
        "cursor": {
          "ref": "519d6404-aeef-4526-a2ce-fa87fedc26fa",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9c9118d0-cc2a-49eb-b347-9a90457291fb"
        },
        "item": {
          "id": "a19c193a-c4d0-4ceb-96eb-16895b20ebff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1554d959-4c85-4ba4-9f18-c051bd36ce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3cb7db-cdcf-43aa-9f25-e464473bc04a",
        "cursor": {
          "ref": "4c8c54bb-f866-4e46-baa9-0da89b4276d7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "95d29606-e614-43fc-a5ac-6f185ca5980e"
        },
        "item": {
          "id": "bf3cb7db-cdcf-43aa-9f25-e464473bc04a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fd3e44aa-a9fa-48fc-8a54-81d8c0bb7707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53ccd4-262a-4f93-ab7d-31b950111c00",
        "cursor": {
          "ref": "552bfe13-31b6-44c6-89ad-f36f54680d71",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "68b95d55-5e40-4890-96ab-7cb706b777d5"
        },
        "item": {
          "id": "ea53ccd4-262a-4f93-ab7d-31b950111c00",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6971e8cc-bb49-4f36-9aa6-7ae0bdfc6892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2224a620-5185-4c20-8861-f9ceec1b51e3",
        "cursor": {
          "ref": "897e2eba-3749-4d97-a9b4-42eec89f40a3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fbb524d5-cc20-49c5-8a35-c6754557bcd8"
        },
        "item": {
          "id": "2224a620-5185-4c20-8861-f9ceec1b51e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "035a14dd-8ec8-4a91-9b3c-dfa2122f1f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2dbb91-e760-4dc2-90cb-64150b530356",
        "cursor": {
          "ref": "df0c68b6-d288-4aa3-b763-022040b96406",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6eec063f-305a-45f5-90f1-79901b136ba0"
        },
        "item": {
          "id": "4c2dbb91-e760-4dc2-90cb-64150b530356",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e9b0dc5-eedf-4cef-9af2-0f519362402d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24df5e92-f195-4e99-af15-7fd7fc4d767c",
        "cursor": {
          "ref": "a59f952d-be37-41fc-b1a7-9b258acbaf3d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "faf9eafa-57a1-4d90-bc1e-2146b7d14ad5"
        },
        "item": {
          "id": "24df5e92-f195-4e99-af15-7fd7fc4d767c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6925c93c-8d46-4aaf-a61e-03e1970a8c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8da5fd8-cdd9-4336-bd40-327cf097b283",
        "cursor": {
          "ref": "dc0b9658-97a5-45ea-ad5c-24bc0669c5c6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96613055-cd48-4c93-b602-44bbae9443a1"
        },
        "item": {
          "id": "a8da5fd8-cdd9-4336-bd40-327cf097b283",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7fca15a3-85f9-458c-9c78-d14ef7ab32cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088fad2f-d3e3-4326-8980-dca7823d38ae",
        "cursor": {
          "ref": "cf90c189-0eb1-401f-8391-0cf68e08c322",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5904ccbd-e172-4a5d-8c60-3142fa1fd20c"
        },
        "item": {
          "id": "088fad2f-d3e3-4326-8980-dca7823d38ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "80f156ba-dd0b-4f0f-9f59-b770616c24a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb5605c-f748-4eba-b4a6-4237e4fb3f07",
        "cursor": {
          "ref": "7133466b-11a4-47f4-9a04-061caff7d1d5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "16a652c6-d88a-404b-8a12-31d3da60ea01"
        },
        "item": {
          "id": "efb5605c-f748-4eba-b4a6-4237e4fb3f07",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "22ba663d-dce1-4196-adc0-83a4c7a5ae15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe324dbe-a586-4480-96d0-6864f68ec2bb",
        "cursor": {
          "ref": "6bcfb6c2-3f5e-4621-989b-9b29d00702ed",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f2522f21-0059-4d2d-acbb-00378b371d5e"
        },
        "item": {
          "id": "fe324dbe-a586-4480-96d0-6864f68ec2bb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "41fbe6c0-1fd8-4e66-92c4-e2f74bf16e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75762d-fed9-428e-bbeb-c544c1b86a0f",
        "cursor": {
          "ref": "be1f4d1e-3a77-4cda-b782-73c257760990",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "149b0252-b923-4646-9998-6f97aad038ea"
        },
        "item": {
          "id": "aa75762d-fed9-428e-bbeb-c544c1b86a0f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e4824d7-1760-4804-b7d7-94c0c80959c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90f1951-345e-40c7-b070-2b15f21d9129",
        "cursor": {
          "ref": "36dc4d63-7460-4809-a70d-6298b332c0be",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5c6497bd-7c30-4404-94e4-66f20b761ebf"
        },
        "item": {
          "id": "c90f1951-345e-40c7-b070-2b15f21d9129",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4632fc17-b394-43e5-be06-c5a0a6e79459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eea507-5d78-4a11-a139-421b80f9b1e7",
        "cursor": {
          "ref": "88bc9f09-1eb2-409a-abd0-fb7f01c41e1a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "43f6920c-2a05-4191-8d81-7cfc9f034fd0"
        },
        "item": {
          "id": "f3eea507-5d78-4a11-a139-421b80f9b1e7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d9029161-cf3b-4129-aa57-bd8158841eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b00d6b7-e45a-4877-b3f1-f515427da075",
        "cursor": {
          "ref": "8d4be94c-3227-49f2-b2ed-c8ea1171a5ca",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2b579812-073f-4260-82f2-91f75331df1c"
        },
        "item": {
          "id": "3b00d6b7-e45a-4877-b3f1-f515427da075",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a0e860bd-63da-4839-8dee-e61d81c8df4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4f3bb3-16b6-4e8f-9f43-de0316057755",
        "cursor": {
          "ref": "8f75fc12-54c6-4a0b-9e5a-0febb64c15c3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "518324cc-1635-4158-a849-7fd03c359674"
        },
        "item": {
          "id": "ac4f3bb3-16b6-4e8f-9f43-de0316057755",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "347be27d-d1d9-4102-a740-41a7a3c96430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e32cc-8312-4041-8fcc-c0def580cabd",
        "cursor": {
          "ref": "2d849191-fc0c-443b-806e-ad0c50916061",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a2409afd-f842-4814-8e0f-e755524df3dc"
        },
        "item": {
          "id": "271e32cc-8312-4041-8fcc-c0def580cabd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6df3ca4e-11b5-4736-a053-28b4722c483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e747fcc8-fbc6-4f56-8617-3d51c92ed30d",
        "cursor": {
          "ref": "d2a59b65-4a92-4e4a-b607-2c5fd9d6f435",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e0b1e20b-b2db-49f0-9ad9-66f6efaa3274"
        },
        "item": {
          "id": "e747fcc8-fbc6-4f56-8617-3d51c92ed30d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b0c70043-5d8b-4912-8cb1-b7cccd1546d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8f2ed-56d5-4a03-b040-4dc81a8642e6",
        "cursor": {
          "ref": "7685299b-f690-4fc4-9882-ee0bad060d9c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98da2fd3-9e57-4d82-a9a9-09098f808c21"
        },
        "item": {
          "id": "d8c8f2ed-56d5-4a03-b040-4dc81a8642e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dca05453-7bbf-4980-9f62-dcc208b82e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc42b58-1eb5-4684-a7a3-fc727a87a61e",
        "cursor": {
          "ref": "f6f8ad9d-3685-486b-8836-12aa19e7022a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "18205c0e-a5ff-48db-a6b8-760710ad50ea"
        },
        "item": {
          "id": "4cc42b58-1eb5-4684-a7a3-fc727a87a61e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1c31bb34-fe5a-403d-a548-4b3bb7190295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2760e93b-4b7c-4a4b-b22a-c41eab3d3ae9",
        "cursor": {
          "ref": "b95ba436-1e5f-4f14-9dc3-221a105d3b6e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10aa6ecd-e727-4c38-a9db-181e95b6602a"
        },
        "item": {
          "id": "2760e93b-4b7c-4a4b-b22a-c41eab3d3ae9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5c8177fb-f471-453b-9298-65f305a9d1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ebdf5a-2bac-4365-aca0-4a75b5dcde31",
        "cursor": {
          "ref": "d443d172-c885-4ac2-8318-21688a24704f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fbee02b5-889c-4b51-a47f-66cc49c1f89f"
        },
        "item": {
          "id": "89ebdf5a-2bac-4365-aca0-4a75b5dcde31",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "53ffd735-57f7-4c77-a499-e2052922f713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be5cd7b-2441-46ab-ba30-21bb298acdb1",
        "cursor": {
          "ref": "e64a43db-f07e-4b7d-9600-bb5fc5589664",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "41c63aec-c914-4437-88f3-d8fc8440572a"
        },
        "item": {
          "id": "6be5cd7b-2441-46ab-ba30-21bb298acdb1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b252b510-632a-42bd-aef2-2f1503364e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d70bc4-b647-48f9-b40f-a43a1b5a2e26",
        "cursor": {
          "ref": "94505fb1-e9c2-4d30-ab3e-6f8945a9ba1c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1339e2c3-1f9a-41d3-b3c0-2785827f4ab2"
        },
        "item": {
          "id": "48d70bc4-b647-48f9-b40f-a43a1b5a2e26",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e4e2e43e-38b3-4b30-ab88-5ec6743499bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c9b651-d76b-4694-bde8-ff4c2dacc292",
        "cursor": {
          "ref": "7b5f3c19-b9fe-481d-8e89-a8885ec855e6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a15cd83c-b5ab-4b59-a528-3a9eac0a0148"
        },
        "item": {
          "id": "40c9b651-d76b-4694-bde8-ff4c2dacc292",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "74ed5782-5115-46cc-9ab4-062c246af45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a2a8af-3225-42ec-835a-2a7e753f95fa",
        "cursor": {
          "ref": "44df7b5e-9f72-4360-ab36-14f11e622e7b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d25e5aa9-f79e-410b-b29a-b95da8046d35"
        },
        "item": {
          "id": "f9a2a8af-3225-42ec-835a-2a7e753f95fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "263271f9-bc9f-45ae-85aa-69969a4c6ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff9753-4bb7-4ce0-b732-9446eea02a26",
        "cursor": {
          "ref": "29858755-3d5c-4ad8-be42-9abd42d664c5",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "de4ac510-f531-4a28-a2de-fed1a47fbec6"
        },
        "item": {
          "id": "3dff9753-4bb7-4ce0-b732-9446eea02a26",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "22a905c5-a3e1-4cfe-ac67-6b9b956b3ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0fc7c6-6a9f-436e-9bcf-735c412ac8f6",
        "cursor": {
          "ref": "2f64a642-bce5-4975-83fc-5412a7cfbfeb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7f0e5c57-d86b-402a-a7da-c37df30863f6"
        },
        "item": {
          "id": "bf0fc7c6-6a9f-436e-9bcf-735c412ac8f6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6647596d-2d98-4ab1-b1d7-b348e778a4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a70c25-1922-4374-802f-b6f74c1e7bb3",
        "cursor": {
          "ref": "55290211-9d24-4974-8c29-02dd689857d3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2b2a37f4-43a7-4cd5-811f-7db3f1d45e42"
        },
        "item": {
          "id": "28a70c25-1922-4374-802f-b6f74c1e7bb3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "268852b1-9b0c-4f24-a53c-e2b503f905b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd04ad-1ccb-421f-99ad-8c996c70e643",
        "cursor": {
          "ref": "8078071c-7561-4435-bbbe-c12604d4b267",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9cb6450d-bb3a-4780-8e53-f74892062319"
        },
        "item": {
          "id": "3bfd04ad-1ccb-421f-99ad-8c996c70e643",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c9c67be6-ae08-4dc8-bd43-c38fbd082662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0b1b66-5e49-41af-a447-db49486d2bd3",
        "cursor": {
          "ref": "e1ac1d54-8c72-42a0-a507-a84b821cb32c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "50916d37-9261-4043-baac-f478f184b48f"
        },
        "item": {
          "id": "4f0b1b66-5e49-41af-a447-db49486d2bd3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0f35e496-9d2e-4e66-9bec-25fa7c6ca41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641b7656-124d-4488-9155-ba241900b254",
        "cursor": {
          "ref": "f2f051c0-4116-477c-a4a7-3ef5c667fd65",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "acf17d68-a916-4f65-89b9-c74e86409d6f"
        },
        "item": {
          "id": "641b7656-124d-4488-9155-ba241900b254",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cfb122ce-2836-4781-a13d-1d4dedecd105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8defebaf-618b-480a-b015-aabbe2e3d4db",
        "cursor": {
          "ref": "27574f44-2c9d-4283-94e1-a2d81abe6ae4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e9464438-9f75-4583-8bfd-95294e5d0057"
        },
        "item": {
          "id": "8defebaf-618b-480a-b015-aabbe2e3d4db",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6e498110-ec69-422e-9916-279a233be1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f904efc3-28da-47e7-9994-cdb531d74025",
        "cursor": {
          "ref": "09b81860-9958-4e48-8d8d-a120e765f160",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7007e0fe-f08b-4627-91ff-101dc33ce5c9"
        },
        "item": {
          "id": "f904efc3-28da-47e7-9994-cdb531d74025",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e0b1a8b-e378-45e9-be48-7377e5ce2e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f18f31-2834-4624-81e9-6b3d68505612",
        "cursor": {
          "ref": "381f24f6-1057-46c3-8af9-50de2bc5f683",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cb68ac47-11e7-4488-ba9a-1181c142b9ae"
        },
        "item": {
          "id": "28f18f31-2834-4624-81e9-6b3d68505612",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cc4705fd-7b8b-49d2-a734-3c2ddb9664a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3e7f25-5bef-45b9-8de0-709d23a19fd4",
        "cursor": {
          "ref": "a025cbdf-4139-438b-a372-c6a7f5524b9e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "65dfb8bb-a854-44bd-9015-ae48a5ebf624"
        },
        "item": {
          "id": "ca3e7f25-5bef-45b9-8de0-709d23a19fd4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f7876b3-8ace-4448-9b3f-cd39d8c09f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f04da1d-490f-460f-b37c-75cb5870011f",
        "cursor": {
          "ref": "83d8a7a8-6e8a-45fa-a4e5-ad032a91f36f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ab728e32-9e89-41d1-9eac-8a621979b29e"
        },
        "item": {
          "id": "7f04da1d-490f-460f-b37c-75cb5870011f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ed7e1b82-060f-4ce6-8502-75b82d70c578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a1820a-e2f0-4e4f-88e7-dc06eeb1d30e",
        "cursor": {
          "ref": "7d6d2e89-acef-4202-bffc-82a959afb0a6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f39192a-93b8-4b8e-b0ce-a55d8c0ee6de"
        },
        "item": {
          "id": "36a1820a-e2f0-4e4f-88e7-dc06eeb1d30e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ec1582a-ef35-4723-bab1-432e3c0ad572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cf2f20-f628-4387-85d4-0345fceb9a5c",
        "cursor": {
          "ref": "880f8d80-5971-47e4-b198-f14c19e4f01d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "194299c0-2040-431c-97a2-1a23d57f51c0"
        },
        "item": {
          "id": "e9cf2f20-f628-4387-85d4-0345fceb9a5c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a7d1ce5c-91be-4436-baea-b63368856b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c2da62-010f-4ab1-89e7-5b694b14a503",
        "cursor": {
          "ref": "5d6802cb-4bc0-4ea8-bcb5-4992a1294afc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7cc626a2-613d-4c4a-ada0-2373b3346cf8"
        },
        "item": {
          "id": "07c2da62-010f-4ab1-89e7-5b694b14a503",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73d079b5-a1cd-4107-bc54-0891727e32fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f72f9fd-0fed-4674-9ace-a0a83034b6b9",
        "cursor": {
          "ref": "626c43ab-ff63-4b6a-a362-e05aa41283a4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "32276ac2-0966-446b-b01d-0186b492ab29"
        },
        "item": {
          "id": "9f72f9fd-0fed-4674-9ace-a0a83034b6b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22565d4e-37e1-4a20-bd2f-32447c106082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682f4a8-24de-407e-8908-c7e0e321cd56",
        "cursor": {
          "ref": "81eec593-5e20-41ae-aa8a-c6ba5fc1030d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a92287c6-50a4-4ec3-89ae-e9da5a1b15db"
        },
        "item": {
          "id": "e682f4a8-24de-407e-8908-c7e0e321cd56",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8a076b29-396b-47ad-8f41-2270256f303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4671637-a604-4dd0-85a2-8a889f79c5da",
        "cursor": {
          "ref": "f8059e62-23b1-492e-b077-13cf1b1d7838",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7f3651fa-dc2e-41ac-a026-8b164ec8789b"
        },
        "item": {
          "id": "a4671637-a604-4dd0-85a2-8a889f79c5da",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4bfb8cb-82f4-4e99-93ff-604b83c80bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d89f0-06f9-4e66-bedc-02b7b16b48c6",
        "cursor": {
          "ref": "460e7b00-d56f-4e14-abe4-ca1a98c082ea",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6830b66e-e496-40a3-ab4a-f5380047a64e"
        },
        "item": {
          "id": "b64d89f0-06f9-4e66-bedc-02b7b16b48c6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "33fa8a9d-e073-4093-8ee2-95093fee8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fca476-ca9f-4ee9-a820-3358d8a68a4a",
        "cursor": {
          "ref": "8cfacc8b-fc43-4d2c-9bb2-8d48c94d53b0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8dd1cbb1-2788-45d4-9bc0-35c072fa72f7"
        },
        "item": {
          "id": "f5fca476-ca9f-4ee9-a820-3358d8a68a4a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d7f24552-78db-4c2f-9e42-8b04942cef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45da3e99-5bdf-4d1b-b51a-18923d4fdb97",
        "cursor": {
          "ref": "b54e1c2f-b561-4e60-8ff9-19b37d14b40b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6f25c2a9-44d5-4606-93ad-9956bd844e87"
        },
        "item": {
          "id": "45da3e99-5bdf-4d1b-b51a-18923d4fdb97",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a1f30c0-9f9d-48e3-8960-95c02459dd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4992ae0-69a0-46d4-afe1-7124ed353e58",
        "cursor": {
          "ref": "20d63fc9-7d6d-4fb7-a770-fc1918fd2998",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ce012842-ba68-42b2-90e5-f512a9a1b749"
        },
        "item": {
          "id": "d4992ae0-69a0-46d4-afe1-7124ed353e58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a892de3-315c-4509-a8c9-484e676dd586",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb0fd43-d725-4b91-a2c4-f7bf5185d22f",
        "cursor": {
          "ref": "6f84493f-696e-40a5-b8d5-014ea1e0ccf0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "44d946d5-6cb5-403d-b412-2fdd99cde2c5"
        },
        "item": {
          "id": "bdb0fd43-d725-4b91-a2c4-f7bf5185d22f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "42ac44fa-55a2-41f4-887c-a2ae99623f19",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec66a7a-703a-4d23-8bfc-a0334daa56b9",
        "cursor": {
          "ref": "660e0091-b470-4bb4-9e94-64114851dd13",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1d5e846f-0d51-483b-9613-6cfcbd230317"
        },
        "item": {
          "id": "7ec66a7a-703a-4d23-8bfc-a0334daa56b9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ef424056-bc01-49f0-a99d-0fc0333a2ee6",
          "status": "OK",
          "code": 200,
          "responseTime": 2944,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df88304e-9c50-49fd-9c08-4c8085d6a78c",
        "cursor": {
          "ref": "bae7da37-b2b5-4b84-b9c4-b6dc02d62906",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6e737bb3-f83a-4724-b030-e64e327789d3"
        },
        "item": {
          "id": "df88304e-9c50-49fd-9c08-4c8085d6a78c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1c6d597-1581-4f97-a0c8-3b54f84f3a33",
          "status": "OK",
          "code": 200,
          "responseTime": 2267,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6791824-422d-4db0-ab3b-c3d941f77a02",
        "cursor": {
          "ref": "cd974759-6db4-42f6-aeb7-e56a3556e4f8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8955c111-aa76-41ec-8157-05f48b6f7c7a"
        },
        "item": {
          "id": "b6791824-422d-4db0-ab3b-c3d941f77a02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "906b1951-c5f3-4512-9f81-1a762389a8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6791824-422d-4db0-ab3b-c3d941f77a02",
        "cursor": {
          "ref": "cd974759-6db4-42f6-aeb7-e56a3556e4f8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8955c111-aa76-41ec-8157-05f48b6f7c7a"
        },
        "item": {
          "id": "b6791824-422d-4db0-ab3b-c3d941f77a02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "906b1951-c5f3-4512-9f81-1a762389a8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9064d-6f81-4f47-8c14-f3242870251c",
        "cursor": {
          "ref": "a8102160-1387-4105-b08d-b48d85a17b1e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a223b56a-aa1b-4916-b20b-a1bc62f0a967"
        },
        "item": {
          "id": "fdc9064d-6f81-4f47-8c14-f3242870251c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2eba0c46-1c3a-47d1-b28e-309e611ee782",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5695715-e038-48e7-963d-cf2a31a940da",
        "cursor": {
          "ref": "b4559cad-b9dd-4f55-9046-71b9a63f4016",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "87c073e9-394c-4a80-b86e-1b9e5953bd00"
        },
        "item": {
          "id": "a5695715-e038-48e7-963d-cf2a31a940da",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f25a9d0b-4339-412c-8375-5b52ef47f4ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}