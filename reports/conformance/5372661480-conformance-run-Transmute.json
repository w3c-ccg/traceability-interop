{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "27e21f05-306c-4402-850e-5447d02e6700",
        "name": "Clear Cache",
        "item": [
          {
            "id": "98e3982e-0d04-4f34-b605-b0a52999055c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc16ccbb-29ba-44bc-b318-04d5f10831a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebc79d38-8134-4cfb-9bd9-e75df3e3b368"
                }
              }
            ]
          },
          {
            "id": "005dba43-bd22-429e-a61d-56cff5590bb0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2695fe1-de07-45ae-81bf-2c76511049c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8dc701f9-f8d7-4ade-b2bf-44ca0278c962"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "27dc6ad7-6ecc-465d-b03c-4d5ffaa04893",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7a6f9df9-b7b0-4567-9ef4-8aa5fef2959f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83b1481d-d163-4340-9e39-de00a6b43559",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca371b8-1540-4b9d-9e0b-85ae9bbb869d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5862bcc1-ef8f-4f56-b5f4-a6194dcabb32"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d219f6b-fb3b-4d10-8ff1-2f8d765f8434",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28864cb7-cfbd-47eb-8bba-b017980e9679"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00111ea0-398e-4013-b397-15653ba5fb62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89be5ded-a49a-4a66-8a1a-0c5b9505c0ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0e1dbc-f507-433a-929c-a0cf0b5b7add",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "68a25c53-8316-4c22-9346-c0ce38c9f544"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd2224f3-83c8-4dc4-8b29-d09943db33c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8230dcd8-d77d-448e-a47c-b74a0b80a9d8"
            }
          }
        ]
      },
      {
        "id": "345864d0-1ae3-44cc-b5ca-78476a342da9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00aa4e84-6a39-4d48-a17f-4ffc13de8643",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8fa2c43-ffb6-4253-88bf-6351eac7097e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "004bc938-b40e-4e35-9d6e-ef368acff31c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f60079-141a-4463-84d8-d27d6dd6393e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38bbd423-112f-4cab-a3f0-121adef74329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c827d-636c-4583-9a58-f1df5abb5ae8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbfee07-19a2-4374-b40b-377979b1edf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c24526e3-49df-42b4-8097-e410c69d3aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001692d0-4868-4187-8beb-2f7d02e8f6af",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4378211-f266-42a3-b2f9-6f8f9ec14e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c9daec7-d4cf-45bc-ac1a-623f69815bb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e1fc996-ff8a-4d29-a668-36a71645c53d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0683909a-1746-49cc-a3f0-04dc505852c6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f714fcce-06e8-44fa-bbe7-b90fb05ae1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88dd9a49-d321-4477-8e4d-152d16f194df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0bf904-2c4e-4df3-a774-4d12e4271575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70a05bc-5e25-4d14-8f8f-6350ec0357df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1df5e6ec-2c41-4570-83d0-ed3b748f1273",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5bbfa47-4b89-4ff7-ba4b-5ecd253e851e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "975594d0-153c-4d7e-bddd-a9c1e9d6c3ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "41b08dea-bf1b-4ab0-afd2-40743fc13897"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3388939e-00b2-437e-bc7b-cfcb699c17d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4f229a99-181e-4a48-9fdb-6f2aa14d145e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54103fcc-07f4-4118-b010-5c8ba1daff1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd7e87e9-f46e-4e5d-82a9-e8637430f184"
            }
          }
        ]
      },
      {
        "id": "5348ef32-6f23-41ed-a9f3-892f6b418d04",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53ad2da1-f44c-465b-94a9-f134e66be01b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c48bffc4-bf50-42ad-a66b-742ac808451a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0c6e70b1-9a67-4bcd-bc3a-b34508c0a08e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2183c108-3993-48ae-a76a-cf700ec707ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b7a394-d5c5-4bf8-a415-479066207e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7cde94-76b6-4b41-9920-3fd062be4d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a6fbf5-9745-455c-805a-2ee726939844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59324afa-ed9d-465c-8c00-c126ae2cf497",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c2cc8-008f-42ca-b247-11712310318e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787e3f71-23c9-4f06-9265-5d48f3297084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1806ac-5077-43de-bc81-400d6e00e00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8364a9d9-52dc-4f4f-95f9-955f307470cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3de52-2131-49ec-b595-cf1e2a593234",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d6d94-9539-4a28-8f3d-74fc0f391111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74889de5-997e-4696-8ede-18b939179934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e33158-0e6a-4ee1-86f2-e6906201ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47056403-c577-4bb5-9028-2cfd326b0081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a28057-2109-460f-ba0d-360cca824147",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f113ffd-547b-4551-8634-3113201a32be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2df28e4-ecfb-4ded-8ca3-6d0388c3a8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2db2f2-ff9b-4bf1-b973-7212b5b28215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eac6b7d0-0677-43b5-a0b1-299bcadedb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708fa5a9-5f17-4cb6-9a1d-1ae907d812f5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4fa21a-e4b9-4f9b-8313-4d9bd9ed804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cca861-4d86-4cb4-b025-8753f9fad988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6278b58b-fe72-4b1a-8710-0acb40995283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95c5924b-0422-4b23-a1eb-a672f159cf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c02d6f4-dc98-4cea-bdcc-630dd01baa5a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb7cf06-5378-40f8-90dc-166b42f77f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c96db45-7dad-46bd-8b99-ace60ec663d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045a002e-cfaf-4dfd-b8aa-28af4a130c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6477cab-4cce-4c02-a714-438bbde19369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e153d89-01cd-4642-9345-5a78fd6fd387",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57cffe1-86c4-42db-a375-93feb8ed337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23256283-2d27-40c2-9857-6e97e0deab13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83968ee-7a68-42c5-a1da-141dfbc97171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0471c2a-2fe2-4bdc-b48c-04f8edcf9a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6ec758-8f76-476e-a040-e5c9ac2177fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0866ea7-0c5f-492f-96a8-757d99d76666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28e413c-481a-4440-8a2b-949f8771ccb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6780ab78-48e2-4ebe-b5c5-e7ea31dad3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f48b7b-fabf-4fa7-8227-5f2777e2e36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef30f8-1d7a-440e-9dd1-a24a153cee88",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc71ffcd-0e4e-4c9f-b8a3-11ad3d5ae45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4e5f31-a831-4b4a-9b59-8fc962adc715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e54ceb-a325-4711-ac9a-2199f49d3f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb15243c-c865-496e-afe2-9e33a9db3895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb22b1c-1f87-4d94-99c2-50ed4e3785ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d25b13-9400-4f43-a5c6-68384467800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49a4581-686e-45f9-b275-6d5a759063a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9adc9a7-1e9d-499d-9792-3d1ff6b37b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff61da18-28c6-4918-b088-66dcc47556e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d64bfc8-d589-496e-aeeb-850a509370b8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373633df-b111-430f-a48e-99fa43271bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b129e-51ba-4e50-aef2-9777d3edeedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b88f48-9348-4ff3-9f50-13f398898543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c27e5c-2549-4832-bae3-c7fea139677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61a8b18-fcdb-423f-a53f-2fb41f956c71",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5885c003-680b-49d2-94d6-431d36bd251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c41aa5c-2cff-4571-8f11-55c116a433cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d19fd-2299-4998-9c7c-8f716cda5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cc31b8d-50ab-4d01-9cbb-43d98fd08ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d5eb58-a21d-439b-8838-fda38340e8f6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f38b70-1c28-49b8-9447-1b0778ccef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f453d7c-060d-488a-ab8c-99c6f2a9764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd69ee-2a57-4c8f-acb7-e6b539ea90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8e60939-3882-4174-806a-5b7505abf869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a5f84-8b0e-44c3-a034-64c2fa011e1e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c40334b-a97b-46fe-9660-b6ca83322b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df74615-1ac1-4548-b35c-de49935c062f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac29332-1b40-4c32-9c79-e065de494746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71a50c27-ee55-428d-9365-c444629a496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02963fc-cf0a-4f29-9053-3ed5ac01f8a5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fd36bc-39b6-42e4-9e58-8545627f43ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b3ae1e-05a5-42bf-b6d8-defc4134ca0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73565351-eeea-40d0-a0f8-fe1f4f799f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "424829cf-f29c-4db9-bdbb-69fedf4de626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172fd12c-3792-476b-b875-90cb9fe4c04f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe649b9-e84e-45aa-aa14-d8354e5adcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357fcc1d-6a0a-4b23-bfdb-2d3bb4e5bee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a427df1e-3b31-40ce-a67d-e5aae81d875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db1d5caf-c9b5-4098-b33f-6a2c9493aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78327b0-5c71-4c0c-b92b-a696c4309e69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730e23f0-034c-4a8f-b904-93b17ba77867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b77c99-f2ca-4f07-876a-38684899a9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dda409-27b9-4674-807f-c6788d6f92b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f09b289a-26d5-44bb-bb82-72c17885e346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5b720-c574-40e0-86d5-dca0719084aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f707dd66-7105-4d35-a186-ca7eb5187844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a476efd1-96c2-4726-bccf-927f26d7113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a7deae-cbed-465d-a601-145cad554a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "688f1ca4-c5c8-4eea-8258-bf0fdcae3a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1782a1-cf8d-4185-a03e-61b6fd28a677",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43325e14-5246-4219-8c7b-6f342ec8129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d934e34-219e-4eea-9b19-52d8f73dccab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5507ab-0856-49ef-b591-3ca759679321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70981e94-f2d0-4aed-ade6-f62c6806550c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dec0fc-1ea7-46cf-9894-d21a5ba9e320",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddce4e8-413e-4064-bb1c-caea8838cebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3dbb4e-33f9-4f96-95a2-4dcbfa685bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b260b122-b136-4228-ad11-da952b97b102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f016513-25a9-47f0-b7c2-ccc6a8debe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f956f87-e4fa-404f-8910-98e80c33a13c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6574f447-fc9a-42ab-a480-f14aaf4b3148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4820ac-dceb-42a3-bc71-28d72b37fb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb7eec6-ac03-4f82-bd05-e8e1e9a7ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a48941-59a8-48d1-b295-f62171a68c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474785ec-ae9d-4524-af18-31a78121a075",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc3f633-4a3e-4426-9312-c5ca52f746be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e20f50c-e453-4929-8b86-8fc895f266d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4544c99-101c-4f4f-9ff7-4eca56f958a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d9501d-f0a1-4115-9dfc-75aba7e6ce71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3883c5f0-6f65-4e7a-a211-d64e784b4bce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90758f08-2e5f-49f0-aecf-55b4597d9c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70be56ce-ddec-4ee8-8dd6-31380c20a6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87534be9-c40a-4308-95c6-8d4adc9a5551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8088827-57e4-4532-888c-1f3686e43eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c95e56-5f6e-405c-9919-58622b302b9d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fd6b90-29b0-43cd-90cc-00cff6c5f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f009b5c-412e-48ad-860e-8175dda7578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1f53df-a8f7-4ca1-a811-4056a2073fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "296990b4-0ecf-4e66-8b07-b5df3f18d884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a2cd5a-289f-4a0f-8751-63b088fed799",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2010e583-e73d-4053-984b-f835f144e818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd2370a-7680-418a-9f2d-5eb4d5102f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ece673-9726-4665-8976-5474920bf00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78811fbc-7da3-4c91-b4d4-0f7c0f012b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad7467-2b1c-455a-a40d-34d9da62c4ae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23addc2-cfdd-453e-bc23-fdd13d599316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478ac3e2-12ab-4c9f-8ec0-210bf9442c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e16948b-b8fd-4e9d-94e1-7fbf9634c817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e299bbf-c405-4308-825a-51c5c0c4ff45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25c3836-cd36-4b04-91e1-dbee27285969",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb114918-e867-4817-b8fd-030d7754d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f07546a-53e7-4224-9aa9-8d503c60190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7420cbc8-c7a1-4a88-a1ac-1445ef8309b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e837f1d-40aa-419d-9ca4-0e4317c07cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c46eb61-799b-45ae-8d3f-e0cc6a3a3c8a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ea0f2-4ec0-40f8-aa8b-03868a049890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7a283e-9c34-4c46-adec-7040dfe96894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccc5150-d700-4b4e-9c1c-7e428ed5ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f9198f-5c7b-4a6f-8af4-1c64c08775ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ff0aef-9eb4-4fc1-b51e-48491bbe1544",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af559eb-6440-4470-9792-e9ced69133e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ce05d3-c27c-48f6-a98a-f74cbf94112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aebd4a-75bd-4e89-941b-202d4f5323ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9244e43-8e7e-4075-8140-24afb783772b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0aff7c-cc70-4883-9c22-023f9c3bd989",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af296660-2264-49e9-b1e9-5354d0e48651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebd6312-0255-4ff6-b8e0-4bcfed20ca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149230a6-1c16-441a-9c0f-44eb0595767d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51404fe0-4e70-4936-b041-e3b0155176a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d464807-052f-4be0-be29-338529049094",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dcbc5b-5643-4aaa-ad2e-202d39c666cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221772fa-55ae-4c46-b462-944fc2ff6199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8dc33-4e33-4214-a844-bd873fc06bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54551aeb-5504-47f0-a0b0-5420bc4f4aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a45071-d6c8-4974-b4e1-eb381f3a1ab2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd32ef-090c-4d9e-ad14-b7042814f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57504f60-348b-480c-b60b-c882c9c9672c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0fadc0-4f7c-4e2d-8a4a-c37be366ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "219ef550-c17a-441d-aa23-312f204d6082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982ea0d9-224e-42ef-aaf8-50997fe58a5f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b471e9-40f8-4fab-9048-fa2ac5029707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a3ec57-ca24-45f5-aa4d-cc20fdf3ff34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8900538-608b-40c0-8c76-c3e638cab901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfbe7e3-5306-4fb7-a9c8-f0b1dc7be2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2ef71-2a87-4231-9d07-0139f15186c8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cffe46-7e82-4fa9-83fe-e30f515f4345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16840bc-c069-4257-85ec-888679ff0030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db0e4eb-21cb-4ee7-a813-aa1c07203f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bacb18-5530-439b-bc10-b631140b965c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10bd323-3a77-4979-875a-6bcd7d7597ae",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7574561d-43fd-426e-af52-4bf8150f8ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c1609e-a7e3-4daf-93da-24706d98772c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2addb08-6194-4aaf-8df1-06564cc699f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4640ec0f-649f-4a4d-ab89-2805459da2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a6d2da-7fdd-4b61-a699-b4a2f7d4e77a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dfaa67-8886-4804-8cb4-d8e544e9dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb6c64ec-e15a-4db8-bf92-49ebd5bb6397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b929fc2d-13eb-460d-a4e5-480c28ec45f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75f76788-6662-4424-9440-5b02029e84ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08822287-eeb4-42aa-8d60-d4f5cd65572a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fe3c3d-efc5-4571-82d2-d0ea7bc5c7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0f5ce6-0b99-4e46-9caf-b2592f9fa137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fc74db-77b5-408b-8738-80f3bc286433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "260366f5-eb41-4140-84b1-0ac43d9c58a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de11e92-a26a-468e-b831-9a884b0ba097",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91cc0fd-372d-44ba-a3b7-7b335c6065d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b482802c-280d-4bf6-84a2-8875540511b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68cd0ab-b515-4524-ba21-d620bc15a193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9c57cc-969e-4436-be69-8caacad731c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906f415d-1c71-44a3-949b-e0c440ac7128",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd478793-71f7-4531-8fe0-37ebd85b6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e39580-126b-4c0f-a028-61bff96be12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac489b6-28ec-4dd2-bfce-f0cf0cff2155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87387813-d6f0-45bf-bc9a-f39d9738fac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a2c05c-6ee3-4761-9eaf-2e6aef52609a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706fa72a-9cdf-4479-90ec-6dfbe1dedf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb23cd0-c7e5-4fb8-a339-c03ee4be2d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf6c1c-527f-4c8c-80e7-02af7d14ded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d38016-e9f5-4680-9530-952c10a00bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d13c46f-38cb-4585-8b4e-282478ee27ec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee265018-dff6-4db0-9107-d7d668e1ad0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646769a2-1ea3-4326-90bc-51a1da371115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af318d0-d3b2-4b48-9689-184dfdbdb07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efda25bb-4baf-4cce-b195-09751e2aa070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa04dca-6e83-4cac-b04c-b88353ba44a0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02840dd-6c35-4aba-afdd-8ff45a8d3dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5082c45-98ff-4ed6-b3c7-05757994fa59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4bdccb-aea1-439c-85ff-d480d9aaf36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e0782d0e-207a-4c60-8d68-1248ad811e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2fd816-86d4-439b-9263-e36367df965a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f44d3e5-a27a-4ab1-83c3-f2d1dc9846e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58f4a45-b562-4650-9894-be32901943e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cd15e4-2a4d-4426-afa7-4b3c048809ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6cd53d-c341-4dc1-a872-5def0b08a2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248265bf-9b0d-448e-be4d-965db808a87b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4712973d-5d7c-4a4c-a44e-9550f634becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee779032-d28f-4940-97f2-88449d51aef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b38b90-3933-4b89-b99c-5ca6b3a2637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "332944ec-501d-4ed8-84d4-30b1eed1a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c914cd1-8ad4-4991-b397-5b68a158151b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a49a091-f18f-4d09-b110-6cbb5d2f48c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5853d137-032d-45df-b1b5-1c46408eb486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d6b3e-3f26-46da-9bfb-c8f22d74ab2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adf4d49-e401-496e-a987-c3b2b403e368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21668635-e480-4539-9430-1dbe5aa40aae",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea20d65-ae44-4594-9b6d-33f238125d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6560833-ef3c-4267-a3b0-9466b07f79dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d33150a-76e4-4745-a4a4-df5fbf705f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f01d0d3-6b50-435f-ae65-51b1e4c763ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc844897-4c92-4cec-b4e5-567488f84ab1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0cb41-62b6-4b6a-9a7d-f164f78e4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c0b5ce-e2f2-436d-9639-6866e91378f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb686b6-216b-4e7e-8839-fb928937370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51a3c90-3d71-46fd-a78f-8a58ab41f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0086d8e4-abb9-42c4-a05c-be07d07509b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8961e090-55d1-423e-b972-bf6461348254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4565f160-d324-46d5-a549-37b879f9b7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4341d84a-0aef-4cd0-82a0-1d94119c4d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f4851d-e724-4581-9308-b23fb23e9ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abec721-6e31-4ff9-a574-4d85b78f6210",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccc0e06-8a12-4ff6-bc00-0369d3fbe563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a46193-a956-48ae-93c8-3b3fa5e37324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773f55c-4b37-4ed6-b0e9-a5f2b7ce52e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaeef97-1ddd-4ad0-bc12-b0778297b157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6977a76d-7cb2-44d4-b3e7-9f0d52043157",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d781a45e-21d9-4911-90e0-46696f5b1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670c3c7e-b331-4eb9-84a7-b771c0fd7e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f1fcd1-ff32-429c-8423-e9e61f6d9a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50d7631b-6e77-4d3d-891c-db132bb4cc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1da7d21-2133-4ed5-9921-2493de0ce6d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733e77fc-21aa-4ac0-b8bf-3f554db0ad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25fcf48-1c7d-4b5e-9bcc-f07a12e82c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae4da8-7da7-4001-823a-05471b7138e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4501500-fe87-49a5-a1b9-6d2763fbc574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10dbaae-c5e8-472d-978d-4c79c0be5668",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0b73ff-5806-403c-81aa-da18cb814509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4123b6ec-ef01-4bbf-bdde-3072b5df9def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6206d8e2-83d2-408f-a9f4-ee029d39024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c20eed-87bc-496c-af01-9c7d38e95a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69f0008-e4f9-4f0f-9cc7-79d48ab8834f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1be0e13-058e-4531-b104-16ce87046916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26dbea0-1cd5-453b-a5ec-ef247381260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699b120-bb83-455e-977a-8264d6d2f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbd8527-f3bd-4496-a656-53f8dee8d27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348af656-6cfb-48b1-a94b-24473e64805a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5028e0-822a-4c91-954a-82cf530cc0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114fa755-8512-4860-a0f3-1d5b468275a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1f8eaa-4394-49ec-bd21-99bbd53cd4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31655fa9-dd46-482c-bfed-8b051a58f685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b8ea85-942a-4ac8-99d6-708baf09fb7f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131c7e8f-8930-4544-ab30-1b040e70c581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25f71b2-64b9-4124-9ebd-b432518f9410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3380a4-ef96-4f02-8773-beef193291fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee5d4b2-fe59-4402-a54a-b6d9539c5730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aa6f99-a7e6-487c-852e-c366dc706750",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e1a44-9afa-44b2-ba61-d1c062d1a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0467fae8-5c0e-4d67-aa74-ac6b8526065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d7a55-4368-4314-8b57-cbccc823facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6efb41ce-14e6-4691-aa4c-3f2dabab64ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4584da58-3bfa-4801-acd3-d5b4495c0bbc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f041ad-9fae-49c4-8832-9160cc33c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3e9681-e778-4287-a876-2a73d3cbeeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b0c9b8-9948-4560-9c90-004db2d0c0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acdf6eb0-ef88-4019-b6c3-20f914630a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b6062-0955-457f-ad3e-423321c346ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf9f11b-640c-4e6b-ba92-c000d714302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db72c0a8-ca48-48a8-99e5-10f9bb4d7a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611c1f00-fce9-42e9-bc27-ca2b28413e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f75d1e-8b93-49c6-a2a6-6749199d2e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf35388-52d6-4ec7-a6a9-456ecf72dd92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed4b361-0cf4-4b08-8005-edbba8fe876f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7070bd81-f1e3-4f5a-95df-0a4bb14974de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868887bc-6dbb-4b27-a724-2cb35181f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "668b20f8-528a-430b-a3ff-3821f4659790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb674061-a946-4142-806a-71278187970f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92630be-84fe-41ed-ba90-c04e889450a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a42018-2012-4d24-b12d-3cb906e41ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f47ad2c-dc83-4315-aec1-207e41800ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da6906bb-9a50-41e9-95b1-cd2497b71eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed8f99d-1a58-4313-bacb-2a0f2268843e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1191c1-af50-4f9e-93e9-0af79a72c004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186ea276-8be3-45b4-8714-41d2ede8d6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9882e900-2d2a-48a0-a759-026f316216a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16ae0d05-1736-44a1-a58f-c126bc9e4307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbd915f-1718-401d-b7dd-0717497221e5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124df62e-e013-480d-8a88-78da1f97d6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6d8415-ccab-4cb3-9be0-3750fc8d28c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8486bb-9a33-4ae0-935b-84ea5b658e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f27dea-746c-45e2-a168-e511bf361d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdedbb4f-276e-4ba3-9576-16256fce4f5f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cc0751-f09a-4177-8938-b5a4fc7aed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118a5b05-1a6d-42bb-84f2-4a9607fb7f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2414981a-1fdf-40aa-925d-10c1e8c1fc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21dedd59-b7ce-4c59-8c20-b4a52fbd9cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f53f6-0cf7-4f47-a00b-7575291ed0bb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3076dae0-6d0a-4af0-a685-484568e58f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8e2187-8fa4-4ad8-b451-21b2bd3be139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b95333-e506-4efa-8ce4-6584e622c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "486708d4-c31c-4234-85ff-1f81837283f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926f9155-ab77-4ba8-a751-a81376c43356",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4e567c-7a94-4bca-85df-4f9fdc99642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6628453d-5901-495a-9728-2b184f87de56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d19459-4c45-4ebd-9ae9-cf4aea137bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29abdcb3-f597-40f5-9fd4-b20aeefa284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30b2280-1762-49fd-b243-9dd830d00124",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff02f04a-734a-4cf2-813b-d572e8585c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78906afd-788b-414c-beb4-11b4948049a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0192aa7-1975-413d-ac85-c3040b8ceae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6bac60-4b65-4ba7-98f5-81dae0ce3e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a31af10-784d-4bb9-a6bc-f1056930f149",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975577c-9e8c-4fa7-a270-f7b75a128869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84ba05a-2530-4686-81c9-b371345604df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b649a1e-e4c7-4422-b916-5bc54ea3d1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "787db680-e686-40e9-8b50-bbd2fc21e646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1278b4-d9a5-444d-bf92-76448014da3d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838081b-e785-40ac-bb6f-b300683f7eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e6d0cf-9d86-4a2e-bb80-0827e83905f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d6ac0-c5a6-4b0a-9a66-0500b5dfb7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22c05fa-f85b-4681-8d33-7eaf18742bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8868e051-2bee-4771-b8d1-e0d939ef61d2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf2a37b-c663-43a0-916c-dcc483c817df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9861278-bcd1-41bc-a49a-38033aec1b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd0fa42-07d2-4c99-8346-71707c79ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3292280a-8266-438e-ae58-10faeb327ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18e32a4-0a6f-47f6-a0cf-2fa6d9e8680d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9affadd-2b5f-410e-bb55-7c76974978e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c069a24-ce30-4fbb-90ab-e52ceeb6eda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e498eb91-355d-4be9-95ff-fb5e015c657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63766be-1d54-43c6-96e4-76cfdf0a307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a199e0d3-75a1-4825-9b72-57f0a45ac9fd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d22d08c-9c0a-4461-b68d-59187ae23fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a171d662-5ff3-4606-bebb-1071dbbb40f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1358bb-c5f7-4f9d-a026-a922f7c702f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc09922-3b3f-402c-b5f1-39bef777004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e09a30e-e2da-4e67-8516-850e713cf7b1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b3a9b1-00c8-4ff3-9af8-81a8dc6a0ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba65f739-809e-42a8-9058-d17c4c9d95d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814dd53f-ace4-47a5-a387-bb72f6b5917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f51851-6ed9-4e8b-aa97-ca96f62262f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9812d361-49df-4b06-905a-b810cae6b380",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64073a6b-30c1-4837-8d3f-f776501bb7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728be4a4-04ad-4157-91dd-dea32fcee121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c317111-80cd-4d3e-b2fc-bb49caa30962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3531cca-a41d-4bad-a877-b822cf1fe057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c2690d-2c07-457c-8fe3-dc1e8e642fad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd3077-8ddc-4f94-b2b1-139aa9c1f58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d73d13-11d4-4ef4-b2c3-ec4d71f457f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f6090-e926-4da9-97e5-775eda86b055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed655674-0e3d-471f-8ab6-0cb1c4e1b25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79b9d59-3771-43b8-9330-cf5a11f58ce4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1a93eb-09ca-4725-af2d-df4d121672c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c892e1d6-50ad-4ded-8914-df06d035f9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c405a686-59d0-4cd0-8328-16b9ccfece4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cf7931-ed71-4440-a143-76b0a6cf93af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adbc839-2a9c-42d5-857c-febe1327433e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4852da23-6973-49d3-9019-5bacbc2930da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45696539-e0d6-4f75-8cd6-d5f97989a95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849ed39d-2790-45fb-ac87-ce4ff3a41e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0dd9c-d9c9-4b2a-8475-4c86ac8e2c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084673b8-3a45-4a99-bd2f-28aadc3b3087",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24939213-7fcf-49a8-9a61-3fc7302328db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1101e465-27df-4e10-9a01-bfb0e2bc9460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6745c-e016-4242-bc98-5af32f184b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b179b11e-666b-403c-be46-9beba8af432b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2efdb-3737-4330-aa1b-ae857b2f83e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f0b651-3393-40ef-a9fd-0b56cacc7b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28ffcb7-1b67-445f-a1a8-a9d94e94647a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd8371a-59a2-4431-9e68-32fcdb775b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1ebfbc-ef91-4102-836f-fa65720a8590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd7d9d5-4b44-4eb5-a9a3-a4efa1aabdf7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657313b5-20c5-4689-b8d2-a26b0d30984e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a04dc5c-1538-4b90-b36c-44b41b1658bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cac84e-744e-4070-9d1b-21765eff474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f55889-816f-4c22-ae14-a2abe5e74332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f2013d-0cdc-4661-ab37-c9f8b116054d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c4a66e-7267-4b4a-a17d-018ac69ececb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57324b9-1730-4671-a382-530151907f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddce6ab-4e04-4926-9594-cea5c51d61d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2125b272-8e8f-4a5b-a1e1-800fa5337739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619db64a-d999-44ec-9d3d-7aa09f298ece",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0be562-6aed-4734-baef-2057cbf3a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81de484-ec70-4d68-80c4-64e29432ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbd256b-a472-44e4-bd32-0944188248a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c5d2da-ef81-4b99-99b9-c7b4e7f267c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3024e2-56d1-4437-83e3-503b5a36d8fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e26dc8-1212-47c6-b85a-2e1439c127bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0a157c-ba57-4786-bb41-41ef3dee377f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e741850-afe4-46de-bab1-043981415f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "751589aa-ba04-4f85-a837-68e1825ce25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c27b29-adbf-4210-884f-296985f653b8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7543b8-2dec-4b7c-a61c-95800a25a9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed35314-c5f2-4d19-9807-64ca92aa5148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9da533f-7078-461f-b636-fe86ae0e4a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e8f8ff-3f14-4520-831f-9620c645fa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c362b291-7f48-4736-aff0-cec1b1dc49bd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7968f2b-495d-42ae-b438-031e569ea2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8979118-6d21-4d97-93d9-c1089e4a5d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08294dc6-e052-49e2-9d2a-4f56b6ccbc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f8baee-30e4-4b73-b51b-de288d4319a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7071431-b1fe-4473-8e68-2266b0b0131b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75938a0-08a4-4d1c-aa6b-3aa156753929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f6d4f-bad7-4f03-a947-7d8dae37d807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a579c1f-b708-4faf-85d8-06f74092cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "321fa23b-2e5a-453b-8b4b-3b696ff1aeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb122dd0-32e3-4dab-b518-c625d245fb58",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a432d1d7-7c6f-432e-897a-15ca0e114974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eee0f6f-9d0a-499c-90bb-e41afea4833e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b0b7c0-c5aa-4052-89bd-cc639bda8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "828595b0-8b98-495c-842a-2fedebe3950a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8e5d3a-fb0c-493a-9fd8-bfae11965ecd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76698795-d74d-464b-a4e8-4c495bdd7264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d504d40-91e7-482d-9207-904d6fb5ecc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94640907-7c6a-4f4a-869d-1cf0fcf1a1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7276660f-96ac-4270-a332-d83b08914e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8b65b8-9930-4310-943a-2327c4b2f10c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264240d4-ec2d-4e9e-96b3-3510a45afcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e3cde2-f7c4-4dea-ba62-14a777143750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e86ac-0b46-499f-98bd-624837c203de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6caebcb5-4658-4e9f-b2c4-2a2b3e01ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260c9f23-a753-464b-babb-525856562146",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761b6395-5dfd-4685-8e42-38317abcb283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c5de0b-3666-47aa-a00c-bdbea5fab6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1c96b7-94e3-4ae0-8432-547a70901cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc149651-6dda-4524-b149-0dbfc9e3104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f045178-5acc-4b5b-b4fb-a92a523bf12a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce550e4-3c3d-4018-9cdd-db5f952c7f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec73118-394f-4970-8d50-21b161248c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5986138-509d-4bb9-bb5d-8072a4c31749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bb98d7-0f06-440d-af82-69f6ba54184d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4feac-c6fb-4e22-a3e6-0ff4a640bc05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a332f9-54a8-4f21-9683-8d1c0a107f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add5e4cb-49bf-4c3d-a563-e628757d0883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8ce5b4-a5ec-4ef0-8484-bad7a4785361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d88541b9-b26b-4e2e-9259-f0950aa61778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5654700d-32cb-4695-8e3c-c5d5a28122e7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af52ba-7169-43c4-933c-faee1bf06e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1882733-0149-44d4-965c-6ca07003ff7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce805f01-9c9d-4b17-87df-f48f2c999f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1853a7-aadb-4ea3-bbbc-5124b2552cb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df1e9431-5f40-4b04-8fca-8e3855d46222",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "479dba12-d9f9-49ff-ad7b-4cb22b95f804",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e0fd17-8d42-4dd1-9042-1f3a0f747a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0403af12-6e8d-4859-962c-a340577d9af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7662ea-1730-4573-98a3-6963aa600696",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ed68d35-2621-4791-8476-a1b4aadc9991"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4a7ccea-89ca-439c-9505-b04c723621a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a98b256-42c6-408b-ae44-b390a2246ff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3b51551-016d-4775-8698-e0568340a438",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02471d1b-adef-4de1-ae6e-29c21da93527"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70d4e30f-529a-448e-8d45-be24b30ae0c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc4327dd-5095-44fc-8aa1-0e7bbce0492e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b0cc29c-30d2-4bb0-8346-44630b179a3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3485b69-1d01-468b-8a74-336b103c624a"
                }
              }
            ]
          },
          {
            "id": "53ef6188-c0e0-4181-a6f1-06e5cb2c6055",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60dc9507-6c1e-4e95-83c0-3cf95e173745",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b0edc51-acf0-4a0c-b0a6-4cc8122ed7e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed8314f9-3cb1-464b-8e02-661277019c1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb86b5bc-51a5-4538-8747-f25676032b51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35aaab3b-b85f-4f0a-90ae-87506cc1ec2b"
                    }
                  }
                ]
              },
              {
                "id": "52e4ed5e-087c-4962-bf1c-e921196f294b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db49eb7e-bd39-4289-aff2-80f8a2b0dfc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eed36be-1e05-49ed-bd82-52e82a27856e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa935349-ab12-4ab6-87df-cd9ac518ccae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44f642ef-ecc0-46f2-b0e2-f6c64a09e71b"
                    }
                  }
                ]
              },
              {
                "id": "05aec41c-e20d-4dcd-9d98-d7e1a32bee09",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27ab06a5-6af1-44bb-af7c-d0ea7a6a81bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1adf6d47-d278-40e4-9187-41ca963855e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "190e5967-8115-4c8c-9ef1-50d35c216a8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ae72d55-579a-4d28-9b0d-d78ffa359cf7"
                    }
                  }
                ]
              },
              {
                "id": "00a96d97-510d-45a1-b159-704c6256a686",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d07f56dc-c3f6-44fd-a4c7-45ce60d9a67a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bc470b0-8c72-4056-a42a-4b9ab8ce7998"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eccbbfb3-e08d-4fe5-be37-01715c66a81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ed44a826-a3d1-4134-a369-da772e9f2ef0"
                    }
                  }
                ]
              },
              {
                "id": "464c4000-5597-43cd-8b2e-fd3aa9791f10",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd503d23-2386-4857-aa84-9a725df838ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5961a28-6cb8-46d9-bb47-e4060afedb3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc744e2-b751-4b85-98b0-599d6eca429a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c04f8dc4-bdfc-40a1-80ff-9001eccc142c"
                    }
                  }
                ]
              },
              {
                "id": "74417fe0-b8b7-49b5-bb8b-2a3e88a6cf2c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b10e235-5b2a-4a40-ace7-e71a30ae93f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eaa2313-8ef0-43fe-bad3-eda1f9938245"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd5ba18b-db69-4c8f-bc50-930e23362f1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab39a8f0-b84e-4c2b-9dbd-542ff7e4a9f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddb79523-8ebc-4bb2-aa5d-17b3e4611ce9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0dcf8d0-8078-424f-948c-310a026880ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be88024a-c1e5-4ac8-8f15-f9b5eed0be4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f38f024-66b6-4652-b7a5-b4a395207b39"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "097de2fd-5c27-4149-9c81-233b5b728be3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0a3dafc0-c61d-4d5a-9d30-66b7c8cbc8f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c9468d7-446c-4170-8a50-c6516e75fa1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43e72dd5-1dea-4389-8075-304e05f1d90a"
            }
          }
        ]
      },
      {
        "id": "929272f0-3be1-4dd0-8fb0-8453173edd4f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ec93e24c-a21d-4be6-ba34-14b999794cdb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "520c2030-e008-488f-81d2-b0714349f86d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b00d650-e3fa-47a4-bd89-a902a3f1b36c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13141b64-1f04-424d-a6dc-307e17bc92f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8657f0db-8c48-4bc5-89b0-634dfd9975cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480eb083-b12d-46c2-8001-80d037554121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "578f030a-6c24-448c-9ca3-64a12b067454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f608b30-98c0-4972-9f8a-4697b9f3c30e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287af780-f712-412d-a365-812252e6803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07e12e5-670f-4499-a292-e5e9253d08db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0d10ad-73d6-4317-83d2-ee8ba6afb94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63cec87-9afa-4ef8-b35a-05b33226e9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b226d-a96b-4fae-bdeb-3acae722501d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0de202-48bf-4d38-a10b-6c2fd7e2d537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c15b570-621a-4aaf-9f48-8743b4a38242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7f2c2-87e9-45f0-940b-2005b9c81bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55cbaee2-179d-4e4e-8785-797e3136cf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ee8548-7bac-4417-a66e-b06b7abaf7cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ba61ef-2f2c-45b5-99db-2174c08a91a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a90c394-21f2-415a-a7f9-ac0bda563169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea8b18-8f85-48b1-adc3-b042d93b41e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c979bd45-b545-420e-af48-e837c3d5fe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd27a60-f36d-4b5a-84bd-d963fb8d332d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa17ed-5e0c-4f4f-991e-79a372000378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2d02d4-ce4c-4a60-906f-811a5037f0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d734de7-df3b-4cba-816d-562e7770caec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e949cc-d3b0-46a7-b58a-88451cd0b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f40e8a5-c26c-4a55-ab25-54ce7c0c97ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb64d899-8dde-4438-80c1-301885979a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6bd189-a3ac-40f6-96e3-ee5380ed75bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e60ade-5297-467c-8fae-88b5d479168c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4c308d-8509-467e-b07e-24588d7e0a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77888f79-ea78-4cbf-a836-279bba554348",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3ef87-2ece-40e4-811e-8753c7de6b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462cffa9-951b-4ee9-993a-7269e53f2033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a41368-b606-4857-befb-ed5c47e3360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac3da53-f445-4bec-90d3-f2dd3e22245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1af3b2-f737-4ef5-a47a-5f679f9b3f1d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ddcf71-a1a1-4aba-b42b-ccb88b1500d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a50fa2-1289-4ba4-b61b-e31128b98234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f34bf-3d49-4c95-9872-c11c6baecdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8f5730-c6be-4e97-9377-8cbb6a433101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed97f8f-05f9-455d-91c2-106e64c63c79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa97172-c649-40aa-b821-e23ab12d316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a629dd43-2155-4226-a4fe-8eaf5f3eca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba4cb92-ab5b-496f-adca-aabb1dad8d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30750710-0a82-49ae-9b65-4f403ff0c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa2e668-931b-42b7-b762-825ff2cfb1ad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c46f83f-444f-4c4b-a4fc-c2dc385a4cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a111c56-fb3f-44f0-bfeb-67b1d2bcd424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aceda8b-1312-4052-b69b-43bdd24ba1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe0057b-cbab-4e5e-8087-d4cd9fca486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a943ab0f-c95d-4a67-b100-4c461249786c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6092b2-7ecb-4f3d-9351-3e2894330e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ec7b00-1d0d-44d6-b399-82063dc9c6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8aeaec-44d5-4918-b10a-a2a00fba0514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1403c946-fafb-4afb-865a-7a8e474cfac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a31adb7-b2a0-4c86-b0ec-b0132ebf4f85",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c2e4b7-4f39-4209-b23b-9c16bbdaa8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b292d6-a3f8-4c9b-b9d8-31a7c1e2b19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961c790a-69c7-4292-b2cd-c0fce5606900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48c068f2-29a7-4a03-9e8d-85db9b43e03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf18168-2768-4781-8f55-56064b464c47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6efbf9-982a-4140-9733-6a76e9823f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7596d216-bec6-4ad8-82c0-ce3a189c42e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e87828a-f2e9-4dfd-a1c3-fcd13067b193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfe2c53-c1ce-4051-b16d-4bf4f650c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48d41c0-5d69-4d62-8d14-54f5c7a0181f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25eb82f-62c3-4848-8255-766d6adbe483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4791d06-5b28-4db9-a001-4b0ed99ddde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e438f4-eefd-43a5-ac0e-a2c35076b7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a09f9a-0e1d-4052-aa1a-5a8532839a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac90ee-bc16-4d9a-9eb2-c5dac2d7e2fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7246d390-5d3a-43ed-a3e1-cfd14a5e6652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff78413-1313-472a-ba1c-61b0c7d840f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5731ff93-b2ac-4f58-9e20-1646a1fed5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "26534739-a2b3-4900-baac-81ee94982fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e78136-f4be-4cb7-97f1-9e80fced0747",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb79a77-f8cc-4585-bbec-aad5ecca5a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bce3df-cc1e-408e-8bf9-c5b24a22f95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb1f035-37b9-443e-b92f-ff78187bab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9f1eda-08b3-4c85-ae1b-744ea819a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8ef6ff-78c7-4879-855b-9e2182e2ff2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28cb3c-a30a-4b18-8974-9d62383bd021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df0fa66-c0e4-4b73-a793-58147ab12b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc798d5-30eb-4bdd-8fdd-7349c285b5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7256113d-007e-4899-8a97-a1d5e50c2710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d78bf8c-4dad-419f-a0d9-c68d4c5567d6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef305b1-9d12-4e05-a1a2-5e5e70e86907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5059235-accd-458a-8703-01d8faf9e9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5371921c-435b-4026-8fc9-d675a2530fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "921c6d4a-3782-4537-8f74-37198b6cff9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60142536-9281-4311-988c-37c338eedb4f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2545ca28-ccb3-4b5f-bf76-56ca55aac3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eba19cb-4e06-4030-9ac2-861ba19c8a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c3dd8-5d53-4135-9652-641191405734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3db608-76ff-4449-a813-7bf6a70468d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba7fe31-f4c8-48a3-baea-0c6993013d84",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12199ff-b99e-43a2-a051-ecf117f55183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e7e1f-654e-488e-98a3-9b4b7aaa2dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b1e13d-b27a-4b72-a4db-c2b083fac83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3988e0c6-e1c2-4b81-b97b-b875f5b46ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf7df65-48df-4ce5-ad65-fd9768dff979",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0e2cc4-07a8-4e07-b405-3463384d0df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd24902-ac1d-48b5-b7ee-ac049ac040a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4917d9c4-cd93-49d8-9671-23fccae8c9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc7f61a-7126-467f-a296-a3de58eedae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c39d8b5-5949-48e5-8c2d-d7c1d20b1f71",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44961166-db5a-4ddd-8daf-7e5fe77cbe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260a2179-7dfa-453a-ac69-abdb650d32fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4827a476-8a13-489a-a7fb-7127e2b332ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b1b22a-a44d-4564-a9b9-69c2ba2d00e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b88c97-f6ee-4ee9-b3f3-f3e93a2643d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e472eda9-6e5a-4e51-b23d-55c2b2542948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85165a26-7f7d-4d19-b6a5-5510d2776c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b17f32-070e-4436-b9ee-de861f73c909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3621a671-12d4-441d-8a4c-32421e716338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc5af42-bcda-4915-9356-18302e9d9ef4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bd15d4-0399-4bc6-912d-94fbb5d3bb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96bed4e-8597-45a1-a02f-8e19740a9566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f571b843-50b5-43cf-97eb-7d4eba7417cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e8fd73-77ee-4d94-b8df-9926c7952e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b75a1cf-f764-4a45-8b0c-ae66f3e78473",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6c8f3-91f3-431c-8faa-cebef98ab6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72198fa-0048-42c9-be5c-967262285b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ab948a-62c0-477b-93cd-14d8b53f7613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8e018a-801f-489e-8452-88ae0f90451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fece06d-4c26-4b22-8397-63e3d2d4ab44",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d3c18a-0384-4774-8f50-13abcf3ae43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19347163-bb41-47c5-b62b-d564c0a2b0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0e2ef-eb52-4515-9460-2696bfd3df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9505d0-1b65-46d9-9989-9b33c4b940f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c11f95-71af-4d4f-bfaf-6839fc81d3a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31bbfae-b56a-4c80-b164-a516bc894e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09b3fb3-596f-4a2e-b2af-a2b60b1a3018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372c5703-ca2d-413e-a799-6f67dc4bf87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d91b3b7f-d45e-48c2-82f8-1af7a16b4b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fdf40e-23a7-47c0-b69c-9ddbae237b9e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81abbfe-3f14-440d-903b-71b0889c19bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c439e92a-f1c6-48e3-b90f-e2acb2a1568a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359f6d59-88de-45cb-a59c-0d1074bdc669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba710bd-b172-40bf-bebc-6ce823513b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49b4cbb-74bb-4ced-8b7a-27f87ca64639",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7583260f-9107-421d-8c07-c3d84313d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228138b4-4246-46fc-92cf-edf7e866d512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49885823-ff04-4974-bd27-fa2ac1cf8f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6fa449-5649-4c64-ab8f-bfe6ffaf4f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83d2747-696a-457f-bef0-b9c5544186bf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d5e163-be73-4ffb-a258-720202cb9f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116681d8-5d03-4fcf-b69b-73fa9dc9e595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bc8d37-1133-49b7-bdce-45a96e9da90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f02476-fb43-48cf-8129-f2fd134bf92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff8e38-28f4-4573-8862-d6fe9e14c2fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4deed3-6a68-4908-8f53-d252cfd9bbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b6fff1-8833-4d1f-904f-b7bd02c41432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59915676-7226-4937-ba83-bb2bd02faa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7026dbf8-1b5d-4ddf-aa71-9ba3ebd09318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23497769-1c5b-4958-814f-ea675c676d6b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363d99b8-d265-4073-8fc7-f60a41150264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b411ea68-da6e-44b2-b9df-0beaad54bef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384f536b-d17a-4c71-83b6-8055cda79d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fd148f-516d-4c57-93e3-9828e44609b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b522da4a-5212-4063-aea5-5a81f80d18af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9847e110-336f-4f52-bbb9-1021eac0d7e0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946c02e5-9753-4c73-8cc2-26e3b696ca60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "37af4743-c33f-41ac-8c56-48202bcb7d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41057b52-1296-4320-8e6e-f201605d74f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a21c9b4a-2c8d-4f35-a79e-6022a1156d1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a1f9dec-ebc5-4783-9797-97abc2c02e4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06f51f0a-dd92-4c19-a31f-789ca619972f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d57a976d-4599-4381-b425-06942693cd71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa14ba4e-32e3-4636-8114-a2e0f179b2ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5aba2e04-0fe1-4154-95b7-bc35c1293b15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e34b6966-c972-4918-aeb5-90e234df4ff3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9df23cf3-60d3-468b-98a1-15c605f416a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cc50db9-bdc5-4786-a2e0-6225ae14bfd4"
            }
          }
        ]
      },
      {
        "id": "2997609f-149d-43de-82b1-85d4519c71e9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b31e82ee-a3ee-45bc-b908-50bcd9d8eba6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c688502-f089-46fc-b791-9f70e969dafe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f677cf4e-b0bc-4002-8763-827f3ab8abac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a627c148-aa0c-450a-9ba7-5894f898ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cdb48f-45ca-4f95-a875-3247b48df337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b87c58-d5bb-403c-81e8-25e07900130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "15117d02-8ace-4f42-8c66-ab4415ba76b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b11431-fcc4-42a0-809f-4122447e8cb7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca95c89b-1ab8-4afa-a203-b5005fe9f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f056e4f-3a69-4df1-b14c-983697e3992b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d7d9ae-c600-4abe-ab82-7d913c080048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "301a108d-989b-47f8-a4fc-66444a4d114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2716af2-7609-45f6-9568-99a5e1b0ede4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe88a81-6e06-456b-8ab4-be6a5aa9be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c0cf85-f141-44c6-8e55-ac9124762d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cad459-5217-4e60-a2cb-529f5b41d570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "840b812a-09c5-4242-b56c-8ec37509888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc827664-f76c-46c7-9077-c6125d163da6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ecfe7c-ecee-44f1-bbec-df488c2c7ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf40a34-6c0a-47a9-bf0a-4a028b25d7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5cb3e-165d-4074-b16b-af008fb7473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1309250-1240-4e36-99bf-ecec87ab5753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7db2330-e0a3-45da-9c34-497f231c694e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4dd0f4-1464-459a-8e67-6bb858fbba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f321f1ee-1d50-42f3-84f7-b3cb64f81d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d339d48e-5f13-49c8-8a05-94cbc7ad3396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3736d863-6c21-4f12-b1d1-20b04dd258f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb0f7b-f574-4bca-acec-1c987cabfe08",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6909c049-bcea-4f4b-9125-ca910ddd83a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e1c526-021e-4f5b-b493-cb8162fa4260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ad8e6d-ed95-4ab7-a0c0-9f522699c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f317cc1d-c7e7-4e72-a073-92718e0aa386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9716f00-6dc6-4f7e-b0a8-bfefaeda6667",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8c0eb-65c1-4485-a3f3-cc5b5845c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476bd1b9-4f35-42e4-9312-cf7cabf4d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae4394-0595-4ea3-8fff-0313cfa80251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82febed-1ddb-4063-b616-cb710466fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f94a6-33cb-42a6-beba-4709c228ae7f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b003d890-fcc1-4aa9-b34b-45daf8c718fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81303ae5-1efa-4633-85b9-a65cea1f51b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aa2b8f-0465-42c4-9594-7f4f6df15406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa4a04e-6a91-4af7-9bbe-da97845076d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2ceb36-cece-4df3-ace7-b4da9610c5b5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3a9e5d-9f82-4854-9104-9797097082d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb8aa94-38a0-47b1-9f18-2bf0740a98ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42163a2-4dad-4383-976f-da964b7dbbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "375b57ea-ba63-4f07-ae4f-89c9d866f4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ac9869-a9a8-4516-b0c1-3aca8c8c004b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f661099-878c-4614-a728-4e91289f8ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666d14e7-ddb0-4ecb-89e9-ba6ec81047e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80631c04-e0a7-4d1a-924a-db91a34bb1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d05315-7fe1-42ed-bd3c-b1f5c2d1271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d846799-dee2-44fe-818f-2ee236fd27d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d161bdf5-81f2-42d4-8a6c-62681dd07f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66d6e80-053e-4e3c-a44c-9afe5d4bcb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4992bff0-aa2b-4836-885a-b513d51934df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f39ccd3-0323-4bcf-b1a9-73a92cbf4e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db46b4a-50f3-483d-b79c-b70ffa4dcae9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7edd83-4c74-4d99-bd4a-ee1c47c7b77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74ddd7d-af1e-4eac-aefa-aa2e7f38e91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db97fd-e0e1-448f-91f3-f92379426f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75071bab-36bb-4dd9-9019-9c530a0b8b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705c8473-0be2-419a-a7ef-4b2bcb29e0e1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded3de5-1643-4763-b39a-d025625f02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfb10c2-6425-470e-ba7c-3a12f412dcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867460ed-d153-49eb-9fbc-2344854b5705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a201e4-6283-4b75-bc7d-c756a6d6a62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8bf88a-9bbb-4d3c-9aac-19da7859f724",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f732382-e17e-4c9e-8162-3811264bff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840717d7-48d3-49fc-b30a-fdbb82f6b932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f059011-bf0f-40e0-bbc6-d41e1f0c60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7b2643-943b-43a5-9c11-9d8fd8b9ad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b2057-54b9-4561-926b-4253f812bb12",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d860fd95-a20d-464b-958e-d4ad113bd354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b03c02-b78e-46ba-aeff-f194224fddcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049eb6ac-a152-4251-996d-bda70d560be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b51f26-8f89-482c-9b64-ab608a26124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd63c91-5b3b-445e-9c3e-9dc1fcb1c06f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34924075-522d-44f4-aa87-287d4e23c8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e1a412-62e2-4026-804d-98a2068607dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0734396f-f5fe-47b7-999a-2d3ad9751d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67022514-3b7b-4767-bb58-6a91396cfe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bdfc23-12a8-4bf8-ae7b-15f5549add76",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d79938-c628-427a-be2d-2bd31356bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68608be4-467a-4c67-b72d-8813a5ed9e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ee1c13-6b13-400c-9de1-cbad334d4671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "71187834-2804-4761-b8e0-a8d01407cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9de360-92e7-471b-8a6b-65a8d106d19b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03786799-59e1-435f-9d4e-ea1eac64148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6dd28-c8fa-4cf2-ba09-ea14bec969b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e60e4-8b44-4390-a4fd-812dd0461551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09fa2a30-9ad3-419e-8f5f-f4a1a9d45cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9bf54a-0bc9-4edd-a9c4-948f53a414b5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fe57c7-0728-420f-a2a6-4b3e2bec1a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debb61ea-44e5-4d9f-9fb1-60faf26e69d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e02ab-63b7-4b6c-be4b-b9dcee2d1284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf7934e-d187-4117-947a-aa77533906ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af72153c-a8f1-473a-a7d7-7811db228c7d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55815c4d-5f4c-4ad1-a852-0ba997f4e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd5ed7c-26a2-48ae-8ef1-b0a0b050ef30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad5b977-a47d-45a0-9993-61cbd7a31129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fc7f7c-f4cc-46c5-9f3c-c666e5cc926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2870e9b9-653d-4161-9142-fdfd0b2c48a3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98289f6c-8c9f-4114-9c48-d44f6683ff14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b91be9-3e5a-4099-a419-093ef0092f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c9cfc1-44d4-486b-8267-f5e098b26a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fde0143-db49-444b-8c06-a30ab99490b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895618c8-38ff-4efa-9dba-f3be485a872a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2e179a-a965-4a2c-90d7-a4dbb1fd0d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e668b316-2e8c-4619-9222-a7dc7e4740c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f041c2-b827-4d47-82dc-92625304f26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdfcdc4-fc4e-4f70-84e4-ad4222964228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcae503-0177-4136-8734-9e6b131beeb4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf46526-b8da-4222-8e64-29707573e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab826db2-3233-4ce8-8ac5-ea03293478ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c283437c-1ce1-445b-b37e-20f1dec74132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9858b2b-3665-42da-857d-5bb5d3e6f969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b1a85d-b33c-489a-b8a2-b73300724917",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c326e9-b233-4f39-a720-ae53c9b4effd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcca155-9237-43c3-bdb7-5cebc50f4a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feac83e-bc2a-45a8-b769-9c94e63cfb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefb1b04-c718-4e2b-9234-1b0c8453e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d798e-cc3a-4a7b-b48b-c443092e66be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb022d0c-6e91-4818-b62c-ba3bfa1da1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d80f575-971c-456b-bec7-99fe0a3b5142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b64a148-b725-4b48-8b6c-8f40dcee87e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6745b698-937c-4265-92d1-5f13e1935827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b06d4-ff21-4386-84ff-25660c496ee2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72877827-6941-4547-8649-3466595e7061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb3b2fa-34f6-42f7-8034-a33ba97cce82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8423d898-c4ce-4173-97a7-53bf03210c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3e5e40-ae67-45ab-95f8-1b42d4f04432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237b3421-1e62-48cf-b365-64a0482dd22b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a0da68-d51b-4f57-a248-e760e0f88312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c2bf3d-0cb1-4a2f-b292-1290b703c789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec41e63-915a-4e50-afd8-94c496cb53df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb63994-6660-43cb-9e18-797226372bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefbefaf-efa2-4284-941c-a6b0fab33e96",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf6f5c9-c98e-4366-bce9-e189dac1db31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8481e7-a358-4982-9b47-382d225e99c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8fb536-03b0-4217-95fe-1c1a7582a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391d1465-a05b-4197-9e2b-aea7f7aaed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf22b74-3d98-470b-bde5-470b2f90b118",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bcc872-7f22-4926-973b-c045aa75e7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdf06a7-104b-4caf-9709-355c1c8d6126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c632bd6e-715a-41ca-8563-6c48845d1770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06841b71-ae0f-4f31-8657-18c0b809db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d1584-819e-4d76-bb33-949f9f0572ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdf9491-9102-452b-8cee-18e96cbb70be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37da2f9-77d5-48db-a7b7-f5e1fbfcbbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3674cae0-1402-4995-973c-f5cfa2a3f6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59977f8-b853-4459-9e29-7277bdeb8944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5426f42e-497e-49c7-b96f-89bae9c61a7b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba931ba5-7cc5-4615-a058-b99b09f40d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd1701d-047f-45a1-84b4-5ba0bc461111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10330d3-6ce0-45fc-a56c-79eeb660560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e775944-5d86-4e39-adf0-261b6f0de2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd40480-d512-458d-8843-dbc434250118",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99c3c8b-c49d-4c48-be41-a4f9bd886826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9409ca90-51a8-4052-80bc-366f99b7ce17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca22e8a-0dc5-4309-ab98-73ca73675b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3eb4aad-4b95-4041-8fcf-9c165239e7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432c71d0-0650-4fec-ba7f-c7047b8f9eb5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253b0e5-87a6-4824-9f0f-9a8082132c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217ae811-b4ec-40ec-8469-7990fd88ebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f1f6c-bb6f-40ba-affa-9272b888f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "214400e8-d234-401e-9df1-7fb1b2354474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf91d2-a2be-4b05-b20c-5659636b8d4d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cec1a49-c246-49e4-99cc-2b8dd96cdcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908cdd97-969f-489b-b73f-2b0393d6fcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f363bf-592e-495a-8def-742b63b291f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b97ec49-3ac3-49cf-92f8-cb68fc60d66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15687adc-c32e-4c7b-8141-71d985dd0f24",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2812b-84f7-4e7f-9a79-9316cc0f72a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b9ab67-282b-4ea9-a3d0-60269c5abdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeb3095-29ff-43ee-964d-e5f04aea20c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69953847-ba12-427a-a958-5b46429f80c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466bca58-784b-4549-9971-0abcc89e9edf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe3cdc-caee-4402-bc8b-b91f980d42e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12702021-115c-48f6-9b33-1775b9cd8cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da755ca-6067-4093-81eb-b1deab6cb272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc7b484-e486-4c64-b1fa-5bc2ad3dcbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa24d034-9b7e-409c-a8dd-4767e36f2ae1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a240dcdc-6175-42c5-bfed-1f82adc0de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc3d3e7-ad1c-4144-965c-158b101e5c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b304a5-7405-445b-b388-2f981d56a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca9242b-f91c-4a5b-982f-f6bb7045e057"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58941618-03c6-4bb6-a578-9ff4a54f4014",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7eb41dcf-628a-4d52-b1ea-d7c48859ecf1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1e10f6-e02c-47a7-8f53-b95f608aa14b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c51d0842-f778-4de0-ad7f-de67927c8fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef0fc14-46f3-4fb6-ac29-e347b9e9a529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "238d0869-3505-4695-a526-bc977b59d824"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ca3807f-5440-4d78-8238-4433b5ffcd7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f6227e7-9570-4569-a573-c42bc2ff8bfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d4b9f7f-98bf-4457-9d8e-a4478d03b85e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c104a656-8a7a-4078-b724-db9e582dccaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b28ef321-b6cf-4a40-b410-f3e870807428",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25e87d62-995f-4076-b28b-e52d5a6751bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eadae48-5916-4d34-a729-9b40c2b7ba08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "855d324e-5697-4c1f-b38f-bdef95ee8980"
            }
          }
        ]
      },
      {
        "id": "04f15591-a90f-4e85-8d24-ecf71102209c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f8113124-3758-4a75-9d46-21bf9d9c7ec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17783151-10aa-42e3-827c-808cb9cf6029",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "876b94f5-4e06-4419-94e9-cbf4250afeae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1442715-517f-4989-abf5-72653d5c6d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5556edc8-83f7-49b7-8ef5-d18604418f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7e086b-997b-4b79-806b-3ebf4525f417",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2273bd05-1392-418a-ada4-6a5af4638a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8cb36c-2555-4be0-8c2d-ffd529c0d483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d914b02a-1a02-4eaa-8ca3-fdf0832de885",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957d1d2-e105-4d37-8505-beee0486a54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10166015-a136-44c7-813c-e549363fc8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0572407-45fd-4f4c-994c-2bd217389be6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd607554-4581-4d3e-b398-4cfb6474e2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689e39f4-7dea-492e-9f79-1c483a3c4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660227ce-16b5-473d-801b-3938a17c3ef9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9218cf0-d08e-4c0f-9ec7-82337137056b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d470c6-5cf4-4d27-9594-331edae1132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93caacd-1777-4309-8a2f-ba895d465efe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacb4b6e-9a93-4cb0-9f13-678b023fe06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca92ceac-ed2a-4744-ba03-98d7273a22a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f3a55a-6dc6-4f03-a86b-31d45016635e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0309bbd5-1fc5-438f-8fff-4d2778d667d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41541c05-be31-46c8-a6de-cfbd80e94dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816fa514-04a4-4713-a6df-36110cbbb3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54afc790-11e7-4987-83cf-3a6be293fe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e4e48a-2ff3-44a5-8025-b7e65d60ab5a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e72f8-af1d-4425-8e72-c2e8bb00c735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea66b31-70d0-418a-8b16-d06e44c5e504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ee8a73-b099-4d54-8465-ed428fd03d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cdfb8e-8898-4338-b480-19ea4888fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7d7522-a236-48b2-b994-0b40c1e63f2c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a394a1b2-c716-446e-b860-2f154cfa5204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e731fa9-9a59-420d-ab59-960b59924656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306be9cd-902e-4c80-8ed4-35ff0cc2863a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0ce432-9d40-489a-8198-328ce43f024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d39cd22-caeb-42b0-afa0-06c5993d89f7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fd4ea-29e1-495d-872d-81c87ddb3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8f6d17-a8fd-4675-8c66-088d315136f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06856c2b-ae8f-4bd5-9d16-64a5c9ca778a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a821040-e2fe-4354-b6bc-7e851c5dedbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27e9a41-09e0-4092-ac2a-74ce03362254",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff70c7dc-252a-4007-baeb-a73f6747b05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233f0c4b-2096-431e-8672-d2318940141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ba807d-12b0-494b-a479-3bc3b045db66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8feeafa-1b0c-4d9d-a7b0-9f187a9ca609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f6dc2d-e47e-465c-9d1f-e54411b5fcf6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182f180d-2f70-4430-affe-a31e048a36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bcf7cf-7439-4aed-bb10-786d4f93d9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb2f9ff-c23b-4395-8571-fc065487f023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7d8735-e785-4bc6-a0bc-16669f54d3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d129a2-f43d-46cc-831c-dae47827fb6e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eb8fa8-0c6c-4e0e-828b-c9c3b54eb075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fee1f00-bb3f-4ee7-8041-6f3bdc33c5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcf0213-30ae-4338-af9a-8cfaece35d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a43616-5b78-4aad-a8dd-6739626ffb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdabe62f-d3a7-4a00-9604-d3baf481d73b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0037d1-03ad-4d8b-9db5-2b3fffea2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b9e48a-89b0-4764-9a4e-372a0fca977f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89d048d-1e75-470e-8001-c9ff301c06ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3154f3-a57a-4ece-933f-2fed624ebf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c674f2-c81f-4369-897b-2dd2809b3e65",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8451432e-3a7c-4354-a4ab-f723a7ec1beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eedf00b3-ee4f-42be-aa75-ff45c3f9ecf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f64e3d-74b1-4b7b-95f9-07f4c82b455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763c0bd3-a04d-4ab7-8e2f-b02f7f55734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa83372-5bab-4c7d-8bba-eeac0842b1d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62222e-bb28-4a06-a76f-7db155e4abdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3664bfb-75be-46d4-922d-1315793d2b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b80477-f638-4c47-ab5a-c71c8c21e2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc01593-27e8-40e2-ab48-529378c539b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7f5f8a-cbf6-46af-b96d-ed07de6c62e3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8418d40d-a7a8-4d3e-8213-f44686528d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e0604d-2c61-408e-b0a8-c986aeb7b1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5297a9f8-d91e-4f63-a3ae-e64734be5b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8914d5a7-c5ea-4cf9-912e-bc122f44579f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3534f53-ca08-4fda-93ed-906339a43922",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c8dd33-b06a-41da-a318-ef57a2432c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0262cb-7895-4e1f-96af-a4cfde696282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d6d780-77b0-47e3-9831-c39948f7947b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2154eecd-78eb-46a3-91ac-f50dc78e796f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a45bcda-7f90-4882-93c5-8836ad4f6293",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62948ae4-0dcf-4217-b17f-42dab0faf425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a020a5-d133-4cdc-a34b-e06009b19925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6b89c7-5d38-4035-bd3e-145a5e751955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab4cffd-1bf4-4755-8ce6-0a31a994fcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5d8899-d1a1-4339-91ae-8d4ed76b46f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af830e8-032a-4856-a91d-c9734a9e6d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8edc35-7617-4757-bf66-4706fad29ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8010121-8568-44a4-861b-e246864f002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eec0851-40ff-4bfb-98a7-f3bc10dceeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97263d7b-0abc-4df8-a947-2315fc60506f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7265797e-0c5f-48d8-bcee-fa73bad1a223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21755d3a-1fee-4dcd-ab3b-ca3c16863cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13144965-c054-4abb-ac38-c706d2876a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6b525f-43b5-4883-add1-9fc81756fb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9640026f-a0f8-4bc2-903d-66c065f52a8e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93b9419-47cc-4c0f-91f8-a55c7c5119d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0a4e0d-b529-4cf2-b0bb-54a23795417b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931eace-d82b-4c9e-99eb-b26a25284ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e485527b-1fe8-489a-9cfa-c690fc872f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2032bb74-a027-4c93-9c50-f3563d13b19e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6537c61-4883-4915-ac50-eae618d90809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b95cac4-c8f5-4f23-abb1-08b61d90ac99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a4e5b1-e5fc-4bb2-b0c4-2de5642a1ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c2f0e-b9ef-483b-bdf1-b770e838de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3aef83-d997-4689-b789-cf749aa05ee0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f41102-daa8-4f07-b533-e9f3c040bff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b618fd-d1cb-4f03-8360-045b06db3c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596049b8-079d-4165-87b0-c97e872f10ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98753586-fcc3-4c94-a319-4f7b1bd905c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3130bdd6-2c6b-43cf-b0ce-174005d56382",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4312bfac-808f-439b-b5cf-a1250b425add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821ceb3f-8511-44b6-9cd0-23b830738f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2e3187-342b-4a29-bd0f-21cd19f84b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273cae38-f2b5-44db-9104-af67ffeb16c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bb7bb7-b88b-4e1c-9d41-5a829e4bb394",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781893b8-32e9-4701-9891-96606bd4a786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15954b0-2545-4224-afc2-bc6858900637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab32d80-864e-4249-954d-8655a783c572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a672b9-0a62-45ee-a74b-c4aa5e5a20c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8def6c3d-ea52-4efe-8bec-ba9016020320",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7a83f2-4cd4-49ea-88e3-f6e369a0b35d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c21c05-cdb3-4cd6-8fc5-5878ab7cba16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893a59ae-12ca-49df-a187-2e638df6dc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9644cc-7b0c-4eb6-9859-336c56a5c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8319f440-45d5-4774-8ed9-01ae1f7b901a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a33adb-a655-43d7-baf5-a384eb74d069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e542b9c2-0eb0-402c-8a4c-fa1b156c3d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1090dbb6-d981-4f6a-b989-af96051f957f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a9f0bc-eacc-441a-84e2-dcc86806ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829e6c91-dd4f-425f-b52a-523a1a7ae1f9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e934d737-290b-4819-aa54-ee36f6b30e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc23145f-a994-40b0-b0da-496ccb6ec18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c7c5b1-2e89-4f6d-9e0b-d151ec538056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc44e45c-9e13-4270-8cee-46cfe518c7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f440edbe-5120-4d19-8418-096142be8ab2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9bb870-730c-406e-99d6-b234250f7baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa87af89-b7b8-4286-9a27-c0f5fe852d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f76bf06-7057-4605-b700-c7a73f763edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098c0298-92ee-40f9-b56a-103d17dee302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88bdec2-ae96-4ed5-a3fd-8a95db60d371",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16a0d9d-9912-4b1a-b901-8eb5714bff86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d189e1d9-051e-4a4b-9678-f5e75fced227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952f971c-1386-4d21-83be-b8af8d435282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9468b8b-3c0a-4f41-ae9c-303f2b33fba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a68677-967f-4da4-8379-1920084080be",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b04269-f2b7-4f4a-af0c-ca8162293727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7c6efa-17c5-4d56-8fe8-b530ac724075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499824e0-da5e-4b49-90e6-16dca13027f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cb669b-3d6f-4e27-ad83-091347409878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c5c609-0504-48cd-a074-c09e6e29e073",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370aad34-359d-4620-8c05-f89ade94fce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ad68a5-27fe-4889-8b15-40c618f8f50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef917fc-dace-465f-869c-0e506dcb3f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281661c6-18c9-4876-9638-8f31c38e0559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f2678-442c-4d9c-9a23-4f1133d56f24",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51018550-1335-4156-84d6-72e493eba4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3cfa43-87d8-4323-9652-eaf4b03d3a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edaef11-c777-44a0-89a9-7b3c93460baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dab3135-9aba-465c-a342-d345d8a211c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40fbaa2-634b-4710-b16c-7ada99d3096d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ca7e1-f6bf-4043-ac13-2090413065b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba50f42-b2e2-424c-9533-6684355db4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e637751-866e-429e-a409-5f22042aff47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131c3d35-3535-4f8e-91df-54b0360c7ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be2788e-b0f3-459c-b823-3225e24fec89",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a83dd59-8965-4080-aa31-7fd77549ca5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59732d1-1b8a-4af1-8846-5de4c1f34cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c40ca0-a7a6-455e-89b8-3c66d6339623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1725ba-c829-4fba-a447-5c4c5ea194ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5daaa-5ec8-4c1b-b2d9-7589742c0ab7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3439be01-1bc2-4d43-8525-7bb07cd1d68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4a98fd-05d1-483e-ae29-e96b7894f7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c327083-6790-434d-8232-8da829697b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc07fea-21e5-44fe-92ad-0202a62e849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e9cfc-3986-4ef6-9be9-84825457b4cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac850d2-3dd8-4f30-b74c-f1c845a1eece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead1167a-6398-4242-8836-c39eebec5ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f819a7-2ae9-40ec-a398-3e8a8da80433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46665856-075e-48d8-93ca-a39654a60480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a94153-055c-4658-848f-d3db601c04d8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398a38d0-cbf9-4558-9f13-059622951b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdfd1aa-b2e8-4a93-af13-f2db4bc1fadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6afbd6-3796-4af8-ae69-87e0b50cda71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec63fa2f-aa4e-4454-ba37-b8548f7a780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539d5da1-8263-4065-9a4f-1470c795baec",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7426a49f-cecd-47c0-8c29-63f603d7aa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86999a2-ca9e-40c2-adfa-f173f6789100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aa7f6b-fea0-40f5-bc39-606a4c6e3070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ccfb74-3d7a-46fd-b8b6-bbf4dab4e56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f7d6c1-0b89-4ef8-85fa-b94bafc6bcc6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985250a3-7d36-4ec1-b83a-5ea07fde84c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07560175-53c6-48e2-8a32-95cad08ef729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2ca0ab-d36c-4df3-b465-1d11c368e85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f0b3e9-5333-49c6-947b-b999ce59477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6214f436-692b-4ffe-94e4-7b1cb59c087b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38c68e0-aa91-4575-b7c3-f38ded3e5654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b070e846-fec6-4fa1-8a0a-2e7fd579ba51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f53c6-19cb-41e4-960c-fc0b4e365d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24593282-4c4c-4efe-bfcc-50b3df7bfa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d543342-d62f-4889-9d6c-254a818f9e77",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef0852f-3880-4245-a191-6fe694e84552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b4c222-911a-4442-bfdd-94ec44af6122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4fb0c7-1fea-4f36-8e86-360a021ce6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65be17a0-8bfc-4566-94b8-6daa0119904d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4705008-1f66-43f5-b826-a8b9ba9be5b9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c08e969-9f99-45ee-bdb9-89df06472860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0ffe1a-e9af-459a-beb0-3f01f80583b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbc3fe4-ad61-4c3c-a1a3-86e50f99f236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a6964b-56c8-4fff-a58a-f389300a360e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ae3ba-6515-4e1c-9bf5-d5d7de2326d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737156eb-f529-410d-9ede-9531ec9a1f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e0b364-e31c-4715-9c4d-c545ab60561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199e7b06-8d3e-4484-abc3-860241b9169f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e359bd1-bda3-4455-bf71-5c35b53d13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64598603-e2f9-4b91-b9d5-b6368e3b2947",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb14c55d-8d62-457d-9ba6-f0e4f0fb23e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0108cebe-a34c-41f7-ac5a-98363de49468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe9a3ed-339b-4df9-afd5-48c88bd9dae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bb8009-3d67-490a-a0a8-f8e18ff82dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80a348f-64da-42af-bfab-15ae512d2c79",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f33c516-cbba-46ed-95eb-473e7740b312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ccfec1-154c-4509-a164-692cf4597508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6de3c1-6cbd-45aa-9a8d-4c01e81d2bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d9e63d-06e8-4234-8a7a-d0efce9fe319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2356505d-9815-47e7-9705-8ac95b4abdd2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679ef0b6-0d9d-4672-8583-e106b5749ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fbb77e-78b2-424f-aee1-cc97754bc65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3036f950-16c7-4aa1-bd49-8041e5a67891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8402a7c7-add1-472d-bdff-cef2030e2f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce81531-b929-4d0c-9939-fcb160e67f12",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e540ad8-7283-4713-88bf-891cf6daae75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78de94d-e719-49b5-9bf6-623ec0a4b13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bea2fe-8bc4-4970-a0a7-5130e44d801c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2a0834-e68a-434f-a6b1-24b56615fad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6500a33b-6873-4619-b1d6-4f4ef9c494d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4cdaef-139c-41bb-a4b1-e2cd2beffabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c117c2bb-8293-4026-a464-658c1b3bc9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72c1ef-fe34-415a-89bb-cb56b809d555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93663fae-18ba-4601-a426-65e8d5333c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb76d6-fb06-4c10-931a-ff911ebf28e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d86f6e-bebd-4022-a0dc-f064999d657d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9985e1e-5a4c-4a32-9d7a-a954b040b8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d10c5d3-8e1e-463b-99b1-5673e58c861b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3908d6bd-0b12-4706-9c90-0a3efe3f7d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2babcd0c-dfd9-413f-8ce3-fcb4b5c6e9e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dac5fc-ce30-49ac-a945-c4d046cab848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6b25b6-9698-4d77-b0b6-f0fa40bcef51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7739c9c-f266-4567-91c3-bfb58a3d3e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51586c58-4c08-4c7c-806c-35567551afd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a905d7-19b8-4b55-b3ff-5de242467a13",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24b7cb3-fca3-4ce6-8f6e-187b203f47d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1381e49-18ca-4e4e-affe-ace3037746cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c828c362-aed2-4d78-b8d1-7cb820d1c86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453a944b-0617-4e6d-9e78-457fefda4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e933e73-f79e-4cc5-8741-4cb69d336ee0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7318c022-3018-46e7-a9dc-d9995f035b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fc2659-3fbc-47ad-849b-4c200c6df2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b984142c-07dc-4bde-ab43-b8ee7b4dc0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec528688-12b2-4387-9a05-0839ec04705d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c3b138-7425-43a5-95a7-66607adc5216",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd66fc-cfb5-4770-b455-f5ceeca96e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae245a5-6dd6-4957-bab4-4c8f95d217d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd54f7-b65f-4e8e-a14f-d1c1966c3c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ac2a1b-848c-49e3-96ad-09c841c5ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaca003-11e6-4393-a5ab-8f067bedd095",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37f4c4b-1a43-4f7f-9748-0bf7ad360bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed98e88-ad67-4fc9-9e41-bf3a9a00cdfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dd9666-3d39-494f-b047-d25b38d167ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc4ab9a-6654-45f7-9e41-afaa7e1dbae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a057ab8-d7a0-41ae-b2ce-5daef88cbc86",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542c8f7-0946-42a3-b2ad-631669c766fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3de9d6e-327d-4d70-bc24-95be5a995418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109a3509-0d1b-4ef8-b431-3af5630fdb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1af4e3-72f0-4a76-8ddd-261148e880a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de162fd2-5c62-4625-abf4-bd466abb4e86",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e65d4-0af3-42e3-a891-01d93db9df30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf52ae5b-88b3-48c1-99ae-7c992778f537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31964b4-7c8f-4ebc-938b-f92a9e23b451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd88be2b-39e2-47a1-b0ca-6e8784d8a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debe3148-b4d0-45ca-9d39-68d0b0d6ec39",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa9ddf7-7345-43bb-bca6-7c964d0afe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c52836b-577e-44ce-ac53-1a9fd79dc179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00cb181-c669-45e3-907e-00b6aadc5f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5400cf-acde-4bc1-a941-df23913dd65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1eb813-3617-47df-adb5-89cfe45b2596",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91632e6-730e-446c-9847-1c305d825d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939ed1d9-a65d-482c-b2e1-0b9a042dd26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c642bbf-f6d2-4b79-8732-53067449e390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd25da1-a73d-4e6d-9a3b-e3d18cca039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c3e87-d001-4021-92ca-958761184399",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52878498-6f9f-4d01-b753-34f36b3df0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7546d02-234e-4026-b890-c608ffc98cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ac4de-6851-40f1-a446-adf301d75fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32373c29-ba24-4cbf-ab20-e4a09ef7ae04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef07ae27-826e-4756-a23f-d5731a09c83b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f61569-2499-4fd2-a934-8cf89c5ac7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a77e86-91d2-43a3-b53a-70276a3170fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35790809-f11a-40ce-88af-05f373953b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c0e522-76c3-49ce-a420-1f4a40331a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328262f7-28b9-4a8b-9fba-3a974cdc2682",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3d984-38ac-4ec8-a0ef-0a19306ba5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3257d14-417d-41a0-b11e-b26416a438bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb98c7-1c83-4399-a396-f1855639ecc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17de9991-4dd4-4063-bc1c-911874b27090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c683fa8e-4400-4cc8-b003-308cb930d482",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791e4619-1e5d-4f66-94ab-995425f10656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e9cbfc-e0e6-4f7f-8f0a-6c2c7558f3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643448b5-a59f-4652-b082-24c75c8851e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caa3c5b-e2e6-4473-a067-50ccc3510f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6a0b21-1045-462b-a87f-4ef266e84611",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140d0fad-0362-4774-a5d6-d214ff34a88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5a5156-9fa3-4df8-a733-765911fc54c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7af4ba1-4d62-453b-9e0d-6083a8684b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac37c11-a8c5-4b07-91dc-699849c8a557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c58d1a-77df-486f-a4bf-69e81868022e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7fa990-9479-4ac2-872d-e844cb33a8ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f574c5-4344-4f99-a88b-0931f9a56c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fe68f5-504f-4259-a469-1cd1c3f62657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7621e1d4-2ddc-4db1-8e9e-a895ddf86b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a8824c-68bc-4585-b8e9-1b49163fc5bc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631c1f2d-4079-423c-865f-812fbbf83b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3e984a-fa47-4734-9412-1bce80ff6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e2fcd-aff3-4692-b7f4-3fe12e721f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebe10b3-f884-4b90-b7ac-4701749bcfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4b21b-a674-4e6d-b99f-8da098e7a167",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e623398-fd2d-4807-8ff6-41df00cf362d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3819b2f9-5240-4ddc-965a-64fe130a1526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63bbbe0-8562-4c59-a609-5cfe9841e0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5ce4a9-1f01-4010-9e7e-b68d2f15098f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70716bcc-fed4-49a7-aa24-b1162aa0f627",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8b8826-d028-4a41-ba28-935054ad792e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bd22f8-b74f-4927-86b7-bcf64002d117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99411ec1-df5d-4f19-beca-b51158fc07b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771a0345-0359-4f7d-b2d2-383769d2d76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a75f46f-828b-4615-97db-72003cdab4d7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27835c5-d0d7-4955-8174-6903d90f37e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1933c8-8b06-4d5c-97ea-e5fe17a8f219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be8c8d6-0a51-42dd-99ba-6b078fee34b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568fcaa2-6399-43dd-81c5-e0d5d86feaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7de5d46-9590-49db-99b3-861084d400cf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6591d913-0c0c-477e-8b37-9ef39a5ae710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50df02f5-79bb-47c1-9a9b-086926512f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829ec37a-cc43-4c51-a3e8-0784fe12e614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4656e5-0e8d-41f1-82eb-aeb5db4cdf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4baf00-b56e-4edd-a2ff-bc97190d9e01",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bed0c3a-ebe0-475e-bc27-b7571046b403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711dcd3a-5d2d-42f4-8ae8-2c086d809bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2ca266-defc-4d89-8e14-e56415c84e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e474e4-4906-4971-8ec0-57dfaa823d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a721c5-d8fe-4337-8d4c-0b415c375528",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03085881-5c3b-4402-8a1d-f70eedc69eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f83022-175e-4d5e-b6fc-fd2935f4edbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7f4ce-bdef-402f-b890-53bfafbf11cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ade1aee-7f1c-4082-9ddd-56dc3bd2f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c833c06c-072b-4dd5-a750-38dc98b1005d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d825e7b-990d-49c6-9f65-e14e2fc94b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbb435d-fee1-485e-ad89-d89fa287a063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40681fe7-154c-4d4a-9c80-27b1d2258fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e7dc1f-b002-4331-a6ed-676b8d50ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81215b4c-26aa-414c-986a-c563e9a8d95a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bdf10d-55f6-4943-ad59-432d9adb926a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb17739-4764-4fb4-a31b-cf5cb33efd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a336df-5bb8-4305-a039-76d482942b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac59e830-6b3a-42a1-9832-da3fb71e1edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95e2d07-1ef8-4ba7-8ebf-2f763f41d57d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8913189-c097-4339-b5c6-8c3cd7c2fc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084166c9-f28b-4134-9944-3c6e1e6a905d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3ce7e7-de34-49fd-a0bb-031a1de148ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d516ddd-8721-4c36-abf4-b92ead0f1abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6b589e-56e0-4b77-9ad0-ee95ede658dc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad953cf2-7981-48d9-94e4-e6191f4e5a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f7cc03-12c9-4963-b968-be2355a3da58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a06bee-a09d-4ee3-9fad-dce9da222b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf1f4e8-b2de-4b54-a6c9-d91845361782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5025a8db-232f-4601-a927-c1312ed14ac9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864e90f0-2337-4458-a6b8-788b7a6d7aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123480f5-c84b-46e7-b6c0-61c07defd290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7903fe7-8e18-45cb-a753-ee12e88230e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028fb25c-7e9e-4b50-b801-b7b580f31656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08259785-e846-43db-8c9c-f8c02d9883ee",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58770aa0-1825-4bce-b12e-22a1f21c61d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ac4240-8ebb-4e6a-b177-d9aaba76c66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23a1bbe-9ca6-4a2d-a05b-f611fd75c98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ed418f-8849-4890-84be-3d740f015b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dba6754-7420-4be3-9fc0-8ecae1f6816a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ace1c65-0406-4106-9571-65c1e91513be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ec5700-75b5-4bf5-86af-3a3e5a49e715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa990b4-e370-4910-bba4-35e66eb9d4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ee0085-9c8c-4fca-b1b3-031d02cff49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2b4873-a9b1-4065-a29c-366697b51d94",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe496a-671e-40df-94b7-7b72a88c5272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85cded97-17e5-467c-adfd-ae07c1c037eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d8816-7912-4e3f-abae-f9b364f66d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a7c650-dbfe-45b3-95e3-f949b5eb224e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e1e402-7daa-48ec-9c36-83fc14d2b92b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657a13fc-8eda-4e5d-a5e3-3208ba78aa34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e8c69d-6f1c-42a9-ad9f-e5fc41219356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c66578-3431-4135-9781-439d5a3d57a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a5fec7-5ebb-4f68-998d-ed3762707b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f6351-1587-4a25-90e7-8f66e190b149",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa72378-f418-4b13-993b-6e2e5440bf63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35ba6a0-685f-45b4-8360-eb658c711ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1699ec-5a43-40c6-bbaa-574e583194d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d6fe2c-70de-4268-be50-4c7b7c332d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d51c4-f16c-4b4a-950b-6d1b7a370a28",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6114a17-3523-4c69-8c0e-650d3131835a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e308f73-22b4-498d-a13f-2577ffc9181e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a72870e-a4b2-4711-b94c-1be4f6074f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3167e340-d17e-45c6-addd-1c40651af1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb0a15-1518-4df2-8aae-6b402ea47ab5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ab573-4184-4c69-a606-602e454d1ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d028cb-6094-45f4-ba26-c5d170226d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf9ed1-3feb-464f-8bff-35fff1dab189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891cde81-898d-488b-9222-93a6b93e42bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c2a8fb-a8ba-4187-b89a-d62077f75900",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f6dd9-4424-45ff-beb4-b023075e4923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec7eb65-d04b-4abe-b660-8aee456581ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9675f-cc06-458f-8aa3-0fb243875c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37842896-2907-455a-bc94-cfd4ed1edc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea022d-dcbc-40f0-af84-832cf446d007",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6738bbf2-d2b5-402e-a4f0-0b975e351389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cfec13d-21b7-4223-94b0-427a683e5ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda55a93-f44d-45b6-ae7b-77db19ae5e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1e61d0-a063-4540-92fe-ee0fc1b84bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b67c80f-3c59-47cd-bd63-aaa851d502bd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebe458-93a9-477d-8404-2950097f051c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6868331-b4c3-424e-a725-0c48cf022548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ed81a-1b10-429d-a111-31aca9fb5a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79930f7-8ad0-4ab2-bf12-21846c13e69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a813d92c-6f62-48c0-a29f-2d0bec6579d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f07d8e-e9d2-4d12-bec5-e0f1c527bd22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e87aeb-4ec0-4b93-9632-8425f2f960c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203f30e-67c6-430c-8207-0fca50c1287f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c9460d-df7c-49d5-89cd-0d8994230382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda9da47-89d6-4554-be94-81e4881f7f0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d48053-5659-47eb-b611-c44887fc3ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a0c849-05d6-4db4-9310-c1155e79b6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7896245d-7fa6-448f-902f-d264a41d5fb0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfa2ccb-d494-4c9a-97eb-5c3c3668af66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321fdf8e-febf-4917-a13a-55acad97a7d6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa18526c-2da2-4e9a-b897-c49f0c83d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28698200-3be0-4711-9efa-ac72cf16e104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c906d77-2258-40c8-ae63-8ee9c50bc6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fc2c3f-3226-4c95-9543-87d6bb60db1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7871979e-1d9f-4bf7-bdf1-9f2dd9879a1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132508ee-35e8-4b46-bf0e-00ac359192cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b4c491-c5fe-4bfb-b91d-bb467529a413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6df5a23-8fe4-44f0-9732-7b653e758f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4631ab-84de-4f7a-8835-8bffef832a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb1d47b-6682-4717-a329-9d8821facf1c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f82b78-67ee-47eb-9866-0441ec050fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c3147d-fad6-4d8f-8833-b95efbc5c7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fa452c-f076-4a6d-b27d-21f8b0850714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352a3a9a-9e3f-4d63-81f2-749a19624748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ea21d6-39b0-463b-898b-c424a0da9f8c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a910e3ea-9eb9-493a-8f35-8c2f39fd7215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c374107-3baf-4b8c-aedb-d6df5b83a18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cecc7d-2f5b-4034-ac61-900d0157d646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d55ae0-752a-40f7-9bf3-ea8e35790499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dcfc53-0537-4292-8439-95793bcd6666",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a34dc6b-1299-4c44-b335-81cb98d5bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5dc381-702a-4689-afa7-a00bf6438abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cc8ca-ed8e-4c98-959b-5f4467bcd20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7ffd7a-f4f3-4b14-8955-4486c97e4cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0391601b-c178-449e-b673-0d80623c88e2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ce39e8-02cc-45a3-a7e9-89469c66b374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05c2f52-ae9f-4c3b-84d4-00205b1746c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c50747-4e40-4a33-a1b2-03f61b3c016e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e341b4-9f07-4143-a202-8c6a35a5e944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350b518f-6783-451d-9569-ea9087ec4ef9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b24e42-4896-4b16-b5cc-d39a8615e526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a3b229-0395-460b-abcc-9d5904136fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e064c70-2539-48a9-87b8-08a7d630f036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe52543-53ef-47b9-8f22-210cd4640413"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd13479-d89a-4398-8e40-31fc042c9a94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63350077-d667-4f8d-8686-a87cc69dacb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1151bbb5-b01d-424e-9a73-0647c29d2123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bed77412-1199-4654-bb5f-bf4fee6b9173"
                    }
                  }
                ]
              },
              {
                "id": "e7297a14-ee22-4059-b841-959e9ebd3dbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d1d4325-525d-4e0a-8a03-1bb020d00fd8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb631ff-9917-4efd-a7da-67908499302b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cfeabe53-5a8d-4972-8a2c-ebe3f0fe3d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8229aa-f4ed-43c0-974e-c82e3a59ae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26db6040-20f7-4ef8-b588-20da236e1597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "870f5d2e-2148-4521-9057-3ae76d3ef94b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ee3f418-fcf1-46b8-b6e7-6ca2cca1a897"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0b9e37f-deb4-4e7a-b31f-2b5f93d7b2d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "342d30fb-dcfd-464f-bd69-1b8a03aac5be"
                    }
                  }
                ]
              },
              {
                "id": "381b3c5d-26e7-4895-a8e3-9c5c1c1f24ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e33b0f1c-b838-4af6-b0a4-a9781e2030d0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d2a10d-de0a-4145-8229-40574be2cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "90151977-f05a-4c4d-a7b0-b2c814f2f86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4c7aeb-6273-4a78-80d4-8a7079d93195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136f7a61-ede9-47ad-9791-253f9644e7c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5be491d2-85fe-4940-94ef-4945067cad08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef5e8dd1-3e68-4075-80e7-1d15ede424d4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab4f110d-6ec2-4d2c-aa2d-20a35b2d8675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6b2c6564-ca8d-4e51-aa57-20d786a25bf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66751d14-3b14-4986-90fa-d4497e0acf2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04f8a134-3957-4630-ab45-fbe8f6619cd3"
                    }
                  }
                ]
              },
              {
                "id": "14f9cc98-cb84-4b3e-bd78-1d2a1ffbf013",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa4104a4-87f5-43e8-8ef3-78b05ad08195",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd1bbe31-e7ce-43d9-b184-18176c1b002f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c1df9f6-641a-4dbb-b4f2-785c6cb8f4cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fc0d06-d4c4-4329-90ee-200841bf810d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b3f11e5-e503-445b-9a85-5ff6e9dfeaed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0e15488a-4244-46b3-9f81-00435550cc91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e827ce5d-4183-468b-9326-14a111db3400",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f48ae7f-379b-48f2-8dc2-3c0c7499fb4a"
            }
          }
        ]
      },
      {
        "id": "19ec7eed-9b8d-4edc-b281-2f92415e6fc7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dbe1ed6f-04da-4dd8-b795-e06a7a317aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15795f2f-7a3f-4be7-839f-98854db9997e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9e3a89c-0b78-4f37-8843-6bc1ecf88349",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ed69c0-2709-4fb1-b1b9-b1f797d9d1c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58a32b33-b91d-4e84-9d2c-e597d7984a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8932b36-2f6f-4d9c-9e62-83e7d83ccdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17ddbe23-d394-47fa-980d-e872717d9ed2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df93f63d-19d6-4c95-87ec-410cb88af291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c694fe5-3186-4c12-adf8-c4c02550c7be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28ab7d61-09a5-4d78-a032-ff5a33d1aeee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fbf0fbc-4bfe-41dc-92cd-6d3d2753ee1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7b0f187-f8f0-4d4b-8502-cffe77195418",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5ef52d57-ff02-4c97-ac43-f3e584cc4c8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "033a7147-6e5d-497e-8476-d94e580bd616",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "816ecb2e-e885-407d-9805-d633cc72ec53"
            }
          }
        ]
      },
      {
        "id": "53be97e4-4b37-4ef3-87de-057b6e105cff",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "161726ec-27df-43d0-ab92-803042544ce9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75262856-8b3b-46c3-8b9f-e4d9861e1505",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06d83478-463a-460b-bfd2-eb48bb1eb00e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49563eb-9e6f-48de-bf93-7c192523edc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "632748be-c4a3-4f1f-b411-0ead745017c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6abfc1-8682-42d4-804c-a15e39a384e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6005f88-dd51-4ae1-aa2e-747ca77dbe38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b88433e6-ceb5-4917-b30a-5940121e7c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7948c88-0e4f-4875-aa86-f30615b113e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0253ed8-5b60-4bb8-95f2-e12e9390e460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "865dd6a0-15da-4e9d-9a6b-4b7402af696c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06d7effb-914d-4953-92c8-3352fe390ea6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "350b9e8f-3eef-43ad-86a3-22e07d923995"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d85537e3-f867-4493-92d7-e35d10b4dbaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "109cf60a-c1e5-494e-9d5d-df3b8bc4c0c4"
            }
          }
        ]
      },
      {
        "id": "a7071fcd-38bb-42f5-89ed-8ac0e5013127",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "57b82c7d-d979-42db-8a59-eef5461063c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b04ef13-0f02-425b-8df9-786dbb4313ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e8be793-e76a-42a2-9258-d95ca70be266",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e479b7a1-f837-48c8-a598-38eff051eee1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16317c82-4f6d-4d65-85d7-30b5461ccc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca51504e-96ff-4e5a-a045-aaefdbfad98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b05f7c30-80ab-43fd-9e17-36cb870a88bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7614f968-cebb-4a4d-b03d-91f3ee37bcc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d6bea4b-3590-4e27-b6c2-3fe4dd41386e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b1b80a0-612b-4d24-8c18-c8feadf9f6b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f814d97-6307-4d19-9ee2-68643d4ee307"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc8f3807-97b6-4751-968a-8e4804e4be9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "752395de-b7c9-471c-a078-baaf9f1547cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45104e4b-e253-471c-9463-b65a7cefa25f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "623c5c32-7356-4cdf-8ab6-69c09eef1d4f"
            }
          }
        ]
      },
      {
        "id": "c0660326-d129-4c86-a39b-00a79a0f8ffd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2273e30c-6d7d-4923-8bfb-96abc7ccd899",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b01bdc30-7abf-4c31-bec6-79a10c8305fb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e04b987a-0f96-4f11-b799-beb2a2ef9b34",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf58ef54-9b05-41f1-9d69-a7783b421fea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f352d7f0-73c0-412f-8fd5-3ed425a59b71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 738.31338028169,
      "responseMin": 10,
      "responseMax": 8076,
      "responseSd": 809.074834865427,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687740531052,
      "completed": 1687740755172
    },
    "executions": [
      {
        "id": "98e3982e-0d04-4f34-b605-b0a52999055c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d5a271e0-b3be-47ba-a1db-a3ef29d56e6b",
          "httpRequestId": "c6da91ea-c82f-4c32-96a2-9578bc1ad355"
        },
        "item": {
          "id": "98e3982e-0d04-4f34-b605-b0a52999055c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "212cb86c-4426-481c-b4b4-9f8c95ba1f28",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "005dba43-bd22-429e-a61d-56cff5590bb0",
        "cursor": {
          "ref": "f1ec7d8c-b7eb-4f6c-bc91-e118674077cd",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dbd18a46-403b-4f52-86db-c041037b53f4"
        },
        "item": {
          "id": "005dba43-bd22-429e-a61d-56cff5590bb0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1384ab66-f9ac-47b3-9d83-d986ec8ccfc0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "83b1481d-d163-4340-9e39-de00a6b43559",
        "cursor": {
          "ref": "956e9a87-1890-4d18-a2c5-194be149eef6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2edccb9c-b4f5-490c-ac3b-3c881d641952"
        },
        "item": {
          "id": "83b1481d-d163-4340-9e39-de00a6b43559",
          "name": "did_json"
        },
        "response": {
          "id": "c1a67ec6-0c08-403e-b347-19fdc52034f7",
          "status": "OK",
          "code": 200,
          "responseTime": 1541,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004bc938-b40e-4e35-9d6e-ef368acff31c",
        "cursor": {
          "ref": "3c078b54-5c20-4adf-8bda-4109b817f6d2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85355ee3-9048-4b5f-8fe1-064b79d03063"
        },
        "item": {
          "id": "004bc938-b40e-4e35-9d6e-ef368acff31c",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d323de4-c6f9-4908-bfb2-4940cc0cd9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004bc938-b40e-4e35-9d6e-ef368acff31c",
        "cursor": {
          "ref": "3c078b54-5c20-4adf-8bda-4109b817f6d2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85355ee3-9048-4b5f-8fe1-064b79d03063"
        },
        "item": {
          "id": "004bc938-b40e-4e35-9d6e-ef368acff31c",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d323de4-c6f9-4908-bfb2-4940cc0cd9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c827d-636c-4583-9a58-f1df5abb5ae8",
        "cursor": {
          "ref": "e71b92ae-9c86-424d-97fb-79f14f2de2b0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a25b5c8e-3415-456b-a5a5-29708775ec00"
        },
        "item": {
          "id": "a83c827d-636c-4583-9a58-f1df5abb5ae8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2025e4f0-913d-4f41-a200-dc0e7e618f4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1354,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001692d0-4868-4187-8beb-2f7d02e8f6af",
        "cursor": {
          "ref": "5ff4b548-8cd1-4cb7-9823-00aabf87dc0e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ebc49d6f-f981-46e2-b2a6-31d440df9d15"
        },
        "item": {
          "id": "001692d0-4868-4187-8beb-2f7d02e8f6af",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c9f5cc8e-99dd-4270-b48a-c08bf2e583f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 702,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0683909a-1746-49cc-a3f0-04dc505852c6",
        "cursor": {
          "ref": "bbdb0515-64a1-4c43-b684-947893ecb50e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7124f2e7-e80c-44fb-a1c0-3da6c5005750"
        },
        "item": {
          "id": "0683909a-1746-49cc-a3f0-04dc505852c6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b73143ab-3504-4514-9abc-03503703bfc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bbfa47-4b89-4ff7-ba4b-5ecd253e851e",
        "cursor": {
          "ref": "ea4cdeae-ab7e-440c-934b-98de91a15f43",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3fd0cfee-b0af-43a1-9ac0-f397b53cb2b5"
        },
        "item": {
          "id": "d5bbfa47-4b89-4ff7-ba4b-5ecd253e851e",
          "name": "identifiers"
        },
        "response": {
          "id": "a976bd84-01e9-4d6b-a594-ab4ec277b9e9",
          "status": "OK",
          "code": 200,
          "responseTime": 1484,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6e70b1-9a67-4bcd-bc3a-b34508c0a08e",
        "cursor": {
          "ref": "7d8fc05b-9195-4b90-b794-3d986916df79",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b67eb224-1b08-4ad8-9ed6-b1168e8a42d4"
        },
        "item": {
          "id": "0c6e70b1-9a67-4bcd-bc3a-b34508c0a08e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5de47f41-6d6b-43ec-ba4c-600bd92e1cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59324afa-ed9d-465c-8c00-c126ae2cf497",
        "cursor": {
          "ref": "68f9c565-92e5-49e6-b956-1a03b23bcf50",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72822c20-898a-423f-a8bb-c363b3ce54a1"
        },
        "item": {
          "id": "59324afa-ed9d-465c-8c00-c126ae2cf497",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6518ffd0-8328-4aa0-8dd3-409c291ec888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3de52-2131-49ec-b595-cf1e2a593234",
        "cursor": {
          "ref": "709c6fd7-1843-46a4-9418-dc80c48e4f58",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a9ff2eea-b70a-4ff0-82e7-5d162b785ccc"
        },
        "item": {
          "id": "1ad3de52-2131-49ec-b595-cf1e2a593234",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df58b42d-72eb-4a1c-9a37-ac5045b444aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a28057-2109-460f-ba0d-360cca824147",
        "cursor": {
          "ref": "b3b372a8-1db9-4362-ad25-2f50edc455b9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8857c15e-06be-4cd9-acc0-b7830b9447e2"
        },
        "item": {
          "id": "25a28057-2109-460f-ba0d-360cca824147",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "09d0053e-c09c-40b7-a6ab-5cd798b0d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708fa5a9-5f17-4cb6-9a1d-1ae907d812f5",
        "cursor": {
          "ref": "f38e053b-6ec4-4344-a98e-2f9965f3cfcc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "86291771-4edc-4cf4-affe-f7b8ce9dd0f6"
        },
        "item": {
          "id": "708fa5a9-5f17-4cb6-9a1d-1ae907d812f5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42084c4f-5a16-4f08-a422-7b99f9914945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c02d6f4-dc98-4cea-bdcc-630dd01baa5a",
        "cursor": {
          "ref": "83f54164-0357-45cf-9253-7d53da58ce01",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "33749191-5c1d-43fb-a757-5dbb95ab01ea"
        },
        "item": {
          "id": "0c02d6f4-dc98-4cea-bdcc-630dd01baa5a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fbb32b01-0aab-4c85-84d5-70a15f096582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e153d89-01cd-4642-9345-5a78fd6fd387",
        "cursor": {
          "ref": "815386f1-cd98-494a-baf2-761627b7bcb5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eec2c4ec-7931-4652-af69-5cd497303466"
        },
        "item": {
          "id": "1e153d89-01cd-4642-9345-5a78fd6fd387",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c60cd7a5-d912-4193-9e9a-81ef0413b0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6ec758-8f76-476e-a040-e5c9ac2177fd",
        "cursor": {
          "ref": "c60b2945-738a-4054-96e0-e6e93de08cba",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7f6c1c6e-82ff-41fd-800d-66bffa93930d"
        },
        "item": {
          "id": "7b6ec758-8f76-476e-a040-e5c9ac2177fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2373c0d7-ca84-4af4-b3a0-6d04a9395786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ef30f8-1d7a-440e-9dd1-a24a153cee88",
        "cursor": {
          "ref": "2f80b52b-6ecb-4a4b-aed9-831fa39f58b9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "195c92c4-00f6-493f-8fe1-57b092b96ed5"
        },
        "item": {
          "id": "09ef30f8-1d7a-440e-9dd1-a24a153cee88",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0bdcd771-ee26-4989-bcfe-c3aa544f9cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb22b1c-1f87-4d94-99c2-50ed4e3785ea",
        "cursor": {
          "ref": "5ddf54e1-2380-453f-b793-0dae3cc5d49a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92e26a70-d002-48de-be2e-d8db24946b8e"
        },
        "item": {
          "id": "6bb22b1c-1f87-4d94-99c2-50ed4e3785ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c9ee1176-104f-4a1d-9900-e39ae6265052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d64bfc8-d589-496e-aeeb-850a509370b8",
        "cursor": {
          "ref": "ab72843d-682a-47f3-8b86-626f58b16fc3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "67f8b44d-5d55-42dc-b038-91167a071b5d"
        },
        "item": {
          "id": "3d64bfc8-d589-496e-aeeb-850a509370b8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b93e5b5b-4250-49ac-a599-353f3c13b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61a8b18-fcdb-423f-a53f-2fb41f956c71",
        "cursor": {
          "ref": "c5071816-70ae-46f2-882d-42e81fd702c9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cb852606-ef6f-4309-86b3-b3de2bff3d47"
        },
        "item": {
          "id": "d61a8b18-fcdb-423f-a53f-2fb41f956c71",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a25c41e-c25f-4a1b-ba6d-e8dd83e9a4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d5eb58-a21d-439b-8838-fda38340e8f6",
        "cursor": {
          "ref": "2bacd35c-3d67-4a6a-aabe-e61656f0f233",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f07c5f72-cb0e-43e5-a22b-1b1bd690057f"
        },
        "item": {
          "id": "b5d5eb58-a21d-439b-8838-fda38340e8f6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cfc60a6b-3183-4420-85df-05d750edc608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a5f84-8b0e-44c3-a034-64c2fa011e1e",
        "cursor": {
          "ref": "93bfb8c0-2a66-4444-9cdf-41592b31c9fb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b3ec4075-45c7-4e37-9ba4-03318b729522"
        },
        "item": {
          "id": "9e6a5f84-8b0e-44c3-a034-64c2fa011e1e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7f2fcf9b-96b7-4f89-9385-7c36391cd4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02963fc-cf0a-4f29-9053-3ed5ac01f8a5",
        "cursor": {
          "ref": "476c80b3-d42a-43da-a28b-951c0306324e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8d46e854-1c44-4f43-a030-6667dde04f7b"
        },
        "item": {
          "id": "e02963fc-cf0a-4f29-9053-3ed5ac01f8a5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "752227fe-2483-41af-8e66-0953faf1d685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172fd12c-3792-476b-b875-90cb9fe4c04f",
        "cursor": {
          "ref": "1708b175-56e1-46a4-a9e0-a0e53f62478b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9b251c3-fd49-41c4-ba67-7fa6294edb34"
        },
        "item": {
          "id": "172fd12c-3792-476b-b875-90cb9fe4c04f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b571f5a3-785f-4d94-977c-3b0d3fbcafba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78327b0-5c71-4c0c-b92b-a696c4309e69",
        "cursor": {
          "ref": "a92a7b41-805d-40f9-8af4-51077b9400d4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e89d370d-f33c-4910-8e34-29b14b262278"
        },
        "item": {
          "id": "a78327b0-5c71-4c0c-b92b-a696c4309e69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "468741da-5581-4055-9f0e-2087959e2a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5b720-c574-40e0-86d5-dca0719084aa",
        "cursor": {
          "ref": "8ee22647-f5ad-4719-8e3b-be446aec44df",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2da05f8b-f8d0-413e-9f40-96ecc34969ac"
        },
        "item": {
          "id": "a6f5b720-c574-40e0-86d5-dca0719084aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0e4b806c-a867-4503-b897-d86e924fc689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1782a1-cf8d-4185-a03e-61b6fd28a677",
        "cursor": {
          "ref": "3b5191f0-b9fa-4865-bae5-66414d265324",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "753cd538-e919-4bd0-8a74-4eccdfb6b20d"
        },
        "item": {
          "id": "0e1782a1-cf8d-4185-a03e-61b6fd28a677",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "34a908dc-7eb8-47f1-95c2-4f7a650f2977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dec0fc-1ea7-46cf-9894-d21a5ba9e320",
        "cursor": {
          "ref": "73fae4af-d8de-452a-9ed5-4b6702c7453f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ad636e04-a36c-4fb4-a104-5cb114fc3718"
        },
        "item": {
          "id": "d3dec0fc-1ea7-46cf-9894-d21a5ba9e320",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b657b724-f0a1-459f-b381-d1b0327834fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f956f87-e4fa-404f-8910-98e80c33a13c",
        "cursor": {
          "ref": "bbcf68e9-a9ac-4b54-9db6-a84810bad4ed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f8e12956-4f12-4731-a3b3-4b888bda4044"
        },
        "item": {
          "id": "1f956f87-e4fa-404f-8910-98e80c33a13c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64e4b0a9-93a2-44a1-8be5-37170c23f829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474785ec-ae9d-4524-af18-31a78121a075",
        "cursor": {
          "ref": "652d89a1-2ab0-448f-932e-5f75439fa667",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2c09242b-f0c9-4b61-a344-5b7058f065ba"
        },
        "item": {
          "id": "474785ec-ae9d-4524-af18-31a78121a075",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da07a860-d390-48b2-929c-e7745bdef46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3883c5f0-6f65-4e7a-a211-d64e784b4bce",
        "cursor": {
          "ref": "0979d5a7-bbff-4c51-8b1a-45b34a1ad975",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9cad6578-8575-476f-a872-13d6b7f04e01"
        },
        "item": {
          "id": "3883c5f0-6f65-4e7a-a211-d64e784b4bce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0a951963-b376-4fe3-887c-95ccc2c18713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c95e56-5f6e-405c-9919-58622b302b9d",
        "cursor": {
          "ref": "f221c17a-e6e8-485c-9a18-c9124b0cc914",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "45cb0677-a1d4-4620-a4d2-6aadbe1fae39"
        },
        "item": {
          "id": "90c95e56-5f6e-405c-9919-58622b302b9d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c317442-1e91-4aaa-b1c0-710abf46f7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a2cd5a-289f-4a0f-8751-63b088fed799",
        "cursor": {
          "ref": "fc1441ec-74b9-4488-bd9e-7c00227c2dfd",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4cfc00f5-b161-4e76-9ad2-b18c962a31a7"
        },
        "item": {
          "id": "23a2cd5a-289f-4a0f-8751-63b088fed799",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fd6cc1c3-6fc8-4bdd-a18a-faa0e0535371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad7467-2b1c-455a-a40d-34d9da62c4ae",
        "cursor": {
          "ref": "d1b81dcd-2c9c-444d-925b-e4f971af8849",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c66f19d7-c35e-4845-addb-40fca3be5970"
        },
        "item": {
          "id": "69ad7467-2b1c-455a-a40d-34d9da62c4ae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "939c5dab-39ec-484e-b994-27e3fa22ef6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c3836-cd36-4b04-91e1-dbee27285969",
        "cursor": {
          "ref": "1cb97669-62f5-44e0-942a-3c710745f85e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b1c40986-9dab-4082-9a65-832a0eab7084"
        },
        "item": {
          "id": "f25c3836-cd36-4b04-91e1-dbee27285969",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30b74256-f266-4ad3-9cae-44a173fa490e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c46eb61-799b-45ae-8d3f-e0cc6a3a3c8a",
        "cursor": {
          "ref": "6a5af61d-7b42-4ffc-bef5-1e0294c43f0e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "62a29ce4-5d77-497f-9fc1-2b7df4ecf215"
        },
        "item": {
          "id": "3c46eb61-799b-45ae-8d3f-e0cc6a3a3c8a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a3dccb93-74c1-4cc4-b4b2-c2d04bd2aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff0aef-9eb4-4fc1-b51e-48491bbe1544",
        "cursor": {
          "ref": "5d629545-18d2-45d7-9767-dc83cc8b3f8d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "64207c78-c236-4699-ab49-8688f75e3d47"
        },
        "item": {
          "id": "e2ff0aef-9eb4-4fc1-b51e-48491bbe1544",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5b2b0825-8ac3-4175-af5f-c42ccbb3bd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0aff7c-cc70-4883-9c22-023f9c3bd989",
        "cursor": {
          "ref": "c7fc448f-8893-42e0-b18b-c1aeb11b00a0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ac3cfb36-07ff-4a10-b4e0-84cb91f76f9f"
        },
        "item": {
          "id": "9b0aff7c-cc70-4883-9c22-023f9c3bd989",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "55728c3d-65b9-4dea-b06f-356a04bcf8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d464807-052f-4be0-be29-338529049094",
        "cursor": {
          "ref": "95bb8bd8-b348-488c-a0b9-81d162854b64",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6c9e1229-7c09-4b37-b0ff-91ca99c724a0"
        },
        "item": {
          "id": "4d464807-052f-4be0-be29-338529049094",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02123eb4-1b23-4419-9436-6a5745009ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a45071-d6c8-4974-b4e1-eb381f3a1ab2",
        "cursor": {
          "ref": "e492a877-ee4f-4d8d-8148-5f4c164fa613",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acc7e9e6-ab14-4030-933a-061de39021c1"
        },
        "item": {
          "id": "94a45071-d6c8-4974-b4e1-eb381f3a1ab2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f62084e7-e38d-493f-a503-7a35d70358df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982ea0d9-224e-42ef-aaf8-50997fe58a5f",
        "cursor": {
          "ref": "95208e29-3cee-498e-b7ef-204c9aa78854",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29e67435-cad7-43aa-ade9-bfe5d9827f41"
        },
        "item": {
          "id": "982ea0d9-224e-42ef-aaf8-50997fe58a5f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a6af3034-8442-4649-88d0-13a279984b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c2ef71-2a87-4231-9d07-0139f15186c8",
        "cursor": {
          "ref": "9468815d-1b4e-434e-8c92-7c651845af1b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cffa99f5-717c-4b1a-99bb-89f830b82fda"
        },
        "item": {
          "id": "75c2ef71-2a87-4231-9d07-0139f15186c8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f48f1dc-f164-4e7d-8421-e9877b0b67aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10bd323-3a77-4979-875a-6bcd7d7597ae",
        "cursor": {
          "ref": "2efdff29-6fe6-425a-8ae2-e4a9806f796e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "026b142f-bafb-499d-9206-89436341080b"
        },
        "item": {
          "id": "b10bd323-3a77-4979-875a-6bcd7d7597ae",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96c40677-6fad-4902-a4d9-b1a6d1467016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a6d2da-7fdd-4b61-a699-b4a2f7d4e77a",
        "cursor": {
          "ref": "ac5330d1-2cd9-461f-9d32-dc522bd5b61e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "09a3a607-c4cf-49c9-8876-ce9e6aa30058"
        },
        "item": {
          "id": "b9a6d2da-7fdd-4b61-a699-b4a2f7d4e77a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f425d949-7b8c-4aa0-97fc-52c248e79678",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 981,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08822287-eeb4-42aa-8d60-d4f5cd65572a",
        "cursor": {
          "ref": "c5fb9c3a-0da3-4715-a26f-7a390b52f67a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fefcb74a-becf-4bba-822b-74a63ab1de5f"
        },
        "item": {
          "id": "08822287-eeb4-42aa-8d60-d4f5cd65572a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8faf0b51-266b-437b-a50f-39a0aea93f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de11e92-a26a-468e-b831-9a884b0ba097",
        "cursor": {
          "ref": "c17997d3-a065-4fe1-96ac-eecd6945fd4f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "700a643c-2992-4060-ab4d-4bdd1ea9b051"
        },
        "item": {
          "id": "0de11e92-a26a-468e-b831-9a884b0ba097",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d08d3577-ed0a-460e-b82b-4bde1cfa3b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906f415d-1c71-44a3-949b-e0c440ac7128",
        "cursor": {
          "ref": "947ad883-7b42-489c-8b66-02e6cbb4b361",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "88cdf093-e814-4507-bc54-d044a8324e56"
        },
        "item": {
          "id": "906f415d-1c71-44a3-949b-e0c440ac7128",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dca5fbec-352c-4a5b-b710-4ad2f3766bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a2c05c-6ee3-4761-9eaf-2e6aef52609a",
        "cursor": {
          "ref": "57f9c3cc-95f2-459b-9d1e-8e831d992561",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5f3d6c64-d029-49d3-83b0-1ea04f4f5fa5"
        },
        "item": {
          "id": "70a2c05c-6ee3-4761-9eaf-2e6aef52609a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0cce464-5963-4f7a-b0ee-e60583eb174f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d13c46f-38cb-4585-8b4e-282478ee27ec",
        "cursor": {
          "ref": "ece999e3-0377-47a2-bf60-6c793b34d6ac",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a74fce9e-7e44-4e61-8742-02dbbb17cffa"
        },
        "item": {
          "id": "9d13c46f-38cb-4585-8b4e-282478ee27ec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b6f5f0f-e83a-4867-9962-8038a141a0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa04dca-6e83-4cac-b04c-b88353ba44a0",
        "cursor": {
          "ref": "e96362e6-6236-40fd-b2d9-a350ccaa7c23",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9ffe1851-9640-439f-9e29-e9f2b040b4b5"
        },
        "item": {
          "id": "efa04dca-6e83-4cac-b04c-b88353ba44a0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d70e7152-300b-4194-90bd-eabc46a96819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2fd816-86d4-439b-9263-e36367df965a",
        "cursor": {
          "ref": "1b0e50cc-6806-470a-8246-69a07df89cf4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00fcfd8e-a2da-416a-96c5-e9ca9468affe"
        },
        "item": {
          "id": "2e2fd816-86d4-439b-9263-e36367df965a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "372976fd-8477-47c0-8e9f-cf24004e44f6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 840,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248265bf-9b0d-448e-be4d-965db808a87b",
        "cursor": {
          "ref": "6797124b-bb29-442d-9cbd-846f645035e7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e09373f-5bf1-42ec-9d0b-e5f1e31a894c"
        },
        "item": {
          "id": "248265bf-9b0d-448e-be4d-965db808a87b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c6d58193-607e-46f7-928d-a21d2a2937ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c914cd1-8ad4-4991-b397-5b68a158151b",
        "cursor": {
          "ref": "8406f565-e83f-4eb4-b480-4514e8a7d4a8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ea44dedb-78a0-4743-a034-3a69ec3aeb5a"
        },
        "item": {
          "id": "9c914cd1-8ad4-4991-b397-5b68a158151b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "afc00321-de8d-4b46-a53b-8adaaa700a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21668635-e480-4539-9430-1dbe5aa40aae",
        "cursor": {
          "ref": "54e86b2e-3783-431a-b96d-2a3f1ca760d3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "16051a6c-ad28-4581-9cf8-31e15e705655"
        },
        "item": {
          "id": "21668635-e480-4539-9430-1dbe5aa40aae",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a9e9bb1b-96fa-4d7d-a93b-1d79f9731efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc844897-4c92-4cec-b4e5-567488f84ab1",
        "cursor": {
          "ref": "3600954c-d18c-4f14-a58d-156d0bccd1ee",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "200db7f3-0800-493a-8bca-de3f17dd4d9e"
        },
        "item": {
          "id": "dc844897-4c92-4cec-b4e5-567488f84ab1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fbcd87c-c2e1-47c9-92f0-48a3a230cfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0086d8e4-abb9-42c4-a05c-be07d07509b9",
        "cursor": {
          "ref": "71a1e37f-cf51-4997-a008-2d77e04d6721",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d66737cc-3c6c-4d8e-b794-2d3633de296c"
        },
        "item": {
          "id": "0086d8e4-abb9-42c4-a05c-be07d07509b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "60302068-c527-4ea6-b193-bd14f1ef3a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abec721-6e31-4ff9-a574-4d85b78f6210",
        "cursor": {
          "ref": "34248eb9-5e9c-4c83-86cd-c188e4a108b5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8897175d-3249-4e23-bda1-0e7e9a47bd37"
        },
        "item": {
          "id": "4abec721-6e31-4ff9-a574-4d85b78f6210",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "efd230ee-f926-4cd7-81cc-d537bc81a27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6977a76d-7cb2-44d4-b3e7-9f0d52043157",
        "cursor": {
          "ref": "b225e699-0df2-4645-9e17-2766ca1d7676",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4d1a1f5a-54ce-4b0b-aa88-54f61f58c936"
        },
        "item": {
          "id": "6977a76d-7cb2-44d4-b3e7-9f0d52043157",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7ea7148e-4d57-4d98-9450-49359894cef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1da7d21-2133-4ed5-9921-2493de0ce6d5",
        "cursor": {
          "ref": "74816742-d2dd-44dd-ae87-3672061070c7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "67eae2a5-0419-4385-9c70-ecde8ee43c09"
        },
        "item": {
          "id": "b1da7d21-2133-4ed5-9921-2493de0ce6d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c6f31d5-4ffb-46a8-99ec-89a135d12520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10dbaae-c5e8-472d-978d-4c79c0be5668",
        "cursor": {
          "ref": "643513ab-340b-4f5e-ad4b-16a982da11f7",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "efebf223-ca1a-47cf-b529-abf83de07eb2"
        },
        "item": {
          "id": "e10dbaae-c5e8-472d-978d-4c79c0be5668",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3616da4c-91ff-43c5-8fa6-7ebc68f83bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69f0008-e4f9-4f0f-9cc7-79d48ab8834f",
        "cursor": {
          "ref": "48a221a4-6376-4b3d-95f3-b74b767fb74b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3ed72fac-11ff-4aa8-a077-fb18d8effe36"
        },
        "item": {
          "id": "a69f0008-e4f9-4f0f-9cc7-79d48ab8834f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37a8acbb-674c-4e0b-90f7-23841c4eec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348af656-6cfb-48b1-a94b-24473e64805a",
        "cursor": {
          "ref": "00eadcc9-ff3d-46c5-8b0e-624f2bbe273a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b91cadb1-311e-44fc-8c4a-e3f6d46b5777"
        },
        "item": {
          "id": "348af656-6cfb-48b1-a94b-24473e64805a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4527d9e5-f660-47c2-be7e-934fefa3d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b8ea85-942a-4ac8-99d6-708baf09fb7f",
        "cursor": {
          "ref": "f5cdd92b-94b3-4a0e-8032-e77664891956",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6f5c98e2-0716-45d3-9974-d02c289a9f33"
        },
        "item": {
          "id": "59b8ea85-942a-4ac8-99d6-708baf09fb7f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e151fc79-6542-436b-9cee-adb0f35371cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aa6f99-a7e6-487c-852e-c366dc706750",
        "cursor": {
          "ref": "154de276-d09c-4067-8217-2fbe30e75712",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ff4f7504-da2e-4620-a354-0a225f0e6ed4"
        },
        "item": {
          "id": "b6aa6f99-a7e6-487c-852e-c366dc706750",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f958dbf4-1952-4fd3-970c-9239e55134e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4584da58-3bfa-4801-acd3-d5b4495c0bbc",
        "cursor": {
          "ref": "c4b81458-4bcc-4bf6-9bf9-c35accc33fbc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98752aaf-8be8-48a8-a206-43d44b2e1cc0"
        },
        "item": {
          "id": "4584da58-3bfa-4801-acd3-d5b4495c0bbc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "796390d7-29e3-4422-82c8-205055940fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b6062-0955-457f-ad3e-423321c346ac",
        "cursor": {
          "ref": "cad756f5-aee7-4bbe-9f5f-aca1398d7168",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bf3ea79c-c55d-4596-927b-d001af69ff2e"
        },
        "item": {
          "id": "223b6062-0955-457f-ad3e-423321c346ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "de91d7f5-375f-4eb5-ba03-f244bc7cc4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf35388-52d6-4ec7-a6a9-456ecf72dd92",
        "cursor": {
          "ref": "5e3dbc06-7ccd-48c8-8582-cef2f9008494",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ebb7cb40-9862-4ba4-bee0-3dab9ca968cb"
        },
        "item": {
          "id": "1cf35388-52d6-4ec7-a6a9-456ecf72dd92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "877be5e0-22c8-4c92-b2c7-0c1c7e9604c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb674061-a946-4142-806a-71278187970f",
        "cursor": {
          "ref": "6e8e037c-4a3e-499a-99e0-d83957ae5963",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99c1e50e-29c9-4b56-8413-abc3728b2729"
        },
        "item": {
          "id": "cb674061-a946-4142-806a-71278187970f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cab76b6a-b326-4ef2-9a32-054618b72e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed8f99d-1a58-4313-bacb-2a0f2268843e",
        "cursor": {
          "ref": "3bf2a1e7-c161-40f5-932c-3b11d6e9afc6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5aa320a9-b753-48d3-84d9-ab81d26b3299"
        },
        "item": {
          "id": "aed8f99d-1a58-4313-bacb-2a0f2268843e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "393d0c29-591e-4862-8b46-46a358cbc93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbd915f-1718-401d-b7dd-0717497221e5",
        "cursor": {
          "ref": "f43c696c-6c1f-4b3b-aae4-e617afdeabbc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6387b257-5832-4ceb-ba68-03e5e377bb78"
        },
        "item": {
          "id": "6bbd915f-1718-401d-b7dd-0717497221e5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a24f515e-167c-4afa-a43d-274e4473bbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdedbb4f-276e-4ba3-9576-16256fce4f5f",
        "cursor": {
          "ref": "1c53bb6a-dc41-4a03-989c-7d465300f80c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7c11beca-d04d-4684-be14-0c2348f38f82"
        },
        "item": {
          "id": "bdedbb4f-276e-4ba3-9576-16256fce4f5f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9e147fb3-9130-4a52-a2b4-07e28e93953f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f53f6-0cf7-4f47-a00b-7575291ed0bb",
        "cursor": {
          "ref": "b9b41ba8-c524-4f48-a4be-ce769100d702",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1e97764e-73c8-4f27-a9bd-c7f36273293d"
        },
        "item": {
          "id": "d92f53f6-0cf7-4f47-a00b-7575291ed0bb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a39973c4-c4a8-463b-a276-ba7efa785f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926f9155-ab77-4ba8-a751-a81376c43356",
        "cursor": {
          "ref": "48a54e9f-18f0-496b-82f6-77a7b8589e7b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "93fd1829-da6a-44aa-a666-387ce59c44a4"
        },
        "item": {
          "id": "926f9155-ab77-4ba8-a751-a81376c43356",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1530ab20-494f-40eb-872b-3c3a35203c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30b2280-1762-49fd-b243-9dd830d00124",
        "cursor": {
          "ref": "8c4e2f37-087e-4d49-83a8-9b2e3b838b66",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "22a5a2a3-8c9d-43b3-9f2b-7ec88657dcc5"
        },
        "item": {
          "id": "c30b2280-1762-49fd-b243-9dd830d00124",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd4f640b-d5f0-472b-8e0a-4ed008b4fc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a31af10-784d-4bb9-a6bc-f1056930f149",
        "cursor": {
          "ref": "8749edb1-7a35-4e91-a12d-a1347315fc47",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1ea9562c-4050-45d2-9b75-a157f831a845"
        },
        "item": {
          "id": "1a31af10-784d-4bb9-a6bc-f1056930f149",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c2e97ec-8951-4918-81b1-25ea18421a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1278b4-d9a5-444d-bf92-76448014da3d",
        "cursor": {
          "ref": "8c4d0de0-f891-4e1a-81f9-36710b8dc3d5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb96ac09-ff95-46f7-95bf-38d731940a32"
        },
        "item": {
          "id": "ce1278b4-d9a5-444d-bf92-76448014da3d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a070494-c597-4bcb-a3cc-30d0c04c27f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8868e051-2bee-4771-b8d1-e0d939ef61d2",
        "cursor": {
          "ref": "aae40c99-5a66-418a-a7e6-d7535117dd65",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ac0f3302-db14-490c-b536-10de9ddcdada"
        },
        "item": {
          "id": "8868e051-2bee-4771-b8d1-e0d939ef61d2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9abb931c-f319-45a9-a4d8-daa6978f744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18e32a4-0a6f-47f6-a0cf-2fa6d9e8680d",
        "cursor": {
          "ref": "28cc39b3-88d1-4920-b06f-de802cc8b6f1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a8fc9b6f-a8f7-453e-9306-6b2e44b8a624"
        },
        "item": {
          "id": "e18e32a4-0a6f-47f6-a0cf-2fa6d9e8680d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fcfb4ba8-46a6-40c8-ac01-70be5230d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a199e0d3-75a1-4825-9b72-57f0a45ac9fd",
        "cursor": {
          "ref": "e45dc7ab-f9bd-47ac-a21c-57872506ccf1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "29f94813-5d67-43df-b58b-abedde426131"
        },
        "item": {
          "id": "a199e0d3-75a1-4825-9b72-57f0a45ac9fd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "28a4add6-2f34-4bf2-a8d8-5c2993e62b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e09a30e-e2da-4e67-8516-850e713cf7b1",
        "cursor": {
          "ref": "8c615dc6-2439-460e-a8c7-16d4a70d2e7e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8190734e-8a03-49ac-99ab-82f72cae60e8"
        },
        "item": {
          "id": "1e09a30e-e2da-4e67-8516-850e713cf7b1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ba023034-cf27-427d-b038-645d65f14612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9812d361-49df-4b06-905a-b810cae6b380",
        "cursor": {
          "ref": "6afed416-9340-4328-a1e0-e9a17ce19dda",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca5e6224-9a9d-495f-9c3e-14bc1f5f5720"
        },
        "item": {
          "id": "9812d361-49df-4b06-905a-b810cae6b380",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa5ce64a-5b64-469e-b2fc-59009f009b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c2690d-2c07-457c-8fe3-dc1e8e642fad",
        "cursor": {
          "ref": "aaad3a85-9bde-4c67-8331-1d57db03f624",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "36e15063-ac18-4cc8-b9d8-ef6cb15afe41"
        },
        "item": {
          "id": "a7c2690d-2c07-457c-8fe3-dc1e8e642fad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38a5f8db-4653-45f1-ada9-5caf0cfbde75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b9d59-3771-43b8-9330-cf5a11f58ce4",
        "cursor": {
          "ref": "89ead463-2027-4660-97c7-c69543f24d32",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16425b7d-7433-4a96-9b80-8a7084542eed"
        },
        "item": {
          "id": "d79b9d59-3771-43b8-9330-cf5a11f58ce4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "425cc280-283b-41ca-86a1-5f0b02fd3f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adbc839-2a9c-42d5-857c-febe1327433e",
        "cursor": {
          "ref": "1c49c604-983b-47c3-a319-97840a9acdba",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "08a4e4d6-7b67-400f-93c6-883d8a3273bf"
        },
        "item": {
          "id": "0adbc839-2a9c-42d5-857c-febe1327433e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "39f46069-cdc8-4acb-b6d8-dd1d9f379c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084673b8-3a45-4a99-bd2f-28aadc3b3087",
        "cursor": {
          "ref": "087fe02b-5baa-46ad-b0ec-5979f5c14c5b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6183315d-dfa7-4a1a-8728-27b0130288e0"
        },
        "item": {
          "id": "084673b8-3a45-4a99-bd2f-28aadc3b3087",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "762719f0-aa65-4bd4-947b-5366ffc228fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2efdb-3737-4330-aa1b-ae857b2f83e1",
        "cursor": {
          "ref": "77664fcf-30ea-49d1-a708-b6e2fba1f3c4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c9ee9941-46d6-4c02-a99d-7705fef839bb"
        },
        "item": {
          "id": "42e2efdb-3737-4330-aa1b-ae857b2f83e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3c2ddf35-e15f-4832-8444-44c50aaa6829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd7d9d5-4b44-4eb5-a9a3-a4efa1aabdf7",
        "cursor": {
          "ref": "cbd7887f-edb3-4844-af1f-3a8c9a96f959",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4585643d-0b4e-4d4a-b3cc-3a478c1e71c5"
        },
        "item": {
          "id": "9dd7d9d5-4b44-4eb5-a9a3-a4efa1aabdf7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41a50c39-2866-4cb7-8ff4-0a3ee726f794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f2013d-0cdc-4661-ab37-c9f8b116054d",
        "cursor": {
          "ref": "851bc06a-81be-486c-ae8c-8246b2096156",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64f4b4ba-3692-4428-8140-6fd104139f6b"
        },
        "item": {
          "id": "47f2013d-0cdc-4661-ab37-c9f8b116054d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6b7d7106-75ab-4054-91ba-95e15f8112e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619db64a-d999-44ec-9d3d-7aa09f298ece",
        "cursor": {
          "ref": "75c6be63-b472-4ecf-9a73-86713c24e1ce",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68ddafec-3ea6-4bae-9080-84a8679637b7"
        },
        "item": {
          "id": "619db64a-d999-44ec-9d3d-7aa09f298ece",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "29037817-8277-43fa-88d2-09e020db5a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3024e2-56d1-4437-83e3-503b5a36d8fd",
        "cursor": {
          "ref": "3e142a40-69d3-41cc-a83b-aee5567d6228",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6c8a63d5-5ddc-4811-b409-e29811c02bba"
        },
        "item": {
          "id": "2a3024e2-56d1-4437-83e3-503b5a36d8fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7cf54960-87ab-4cf0-98da-86794604347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c27b29-adbf-4210-884f-296985f653b8",
        "cursor": {
          "ref": "4e719d3e-3ce0-4651-a433-3ed67911a89f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8741a27b-9090-4909-8404-c3a74f088046"
        },
        "item": {
          "id": "b5c27b29-adbf-4210-884f-296985f653b8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0e015b89-976c-4dd0-bd22-4a9eadd4e950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c362b291-7f48-4736-aff0-cec1b1dc49bd",
        "cursor": {
          "ref": "034e7e4e-a89d-446e-ad6f-631992977b9a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "121557b0-0899-429b-89ff-6f7c454f48f2"
        },
        "item": {
          "id": "c362b291-7f48-4736-aff0-cec1b1dc49bd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "060f9a86-bd8e-435f-b5fe-b4341ee43ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7071431-b1fe-4473-8e68-2266b0b0131b",
        "cursor": {
          "ref": "1911fe4b-ae38-498c-9a7c-17c394ac035d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7e8b245d-7576-49be-a4fd-d594107efb04"
        },
        "item": {
          "id": "f7071431-b1fe-4473-8e68-2266b0b0131b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "975bd013-299e-41a8-97d3-0e68311c18eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb122dd0-32e3-4dab-b518-c625d245fb58",
        "cursor": {
          "ref": "d70ec4da-52e6-4ace-b0ea-733dc55cc505",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6350ff63-6702-49fa-addc-d3709d3e5f5a"
        },
        "item": {
          "id": "cb122dd0-32e3-4dab-b518-c625d245fb58",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a5e30104-a5cd-4dbc-8a66-f4dd6c0d8b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8e5d3a-fb0c-493a-9fd8-bfae11965ecd",
        "cursor": {
          "ref": "947ebc74-a251-4e24-9423-c24870e71b64",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "876c17ec-86be-43e2-ada7-bbeb24321455"
        },
        "item": {
          "id": "ba8e5d3a-fb0c-493a-9fd8-bfae11965ecd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "22c1f18a-8e7f-482c-a3f4-8510cc0a2eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8b65b8-9930-4310-943a-2327c4b2f10c",
        "cursor": {
          "ref": "398aa122-59f0-4005-bef4-ca7e868dd064",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ceb144c7-61d3-4cbb-b4d8-53d112b090b1"
        },
        "item": {
          "id": "8a8b65b8-9930-4310-943a-2327c4b2f10c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e9091f7-5b87-48ad-adae-7dc51f114d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260c9f23-a753-464b-babb-525856562146",
        "cursor": {
          "ref": "68ebf988-c49f-4bf5-9c72-8ca8856805cc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "626bea91-e66d-4af6-bcf3-00745dca0dc2"
        },
        "item": {
          "id": "260c9f23-a753-464b-babb-525856562146",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0df1144f-fb51-4448-b6fe-68ba4c236157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f045178-5acc-4b5b-b4fb-a92a523bf12a",
        "cursor": {
          "ref": "d57fbdaa-0aaf-4c97-b701-2070d1390720",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b7b299cf-ba25-442d-b24a-b1d4039c081f"
        },
        "item": {
          "id": "6f045178-5acc-4b5b-b4fb-a92a523bf12a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "82d27aae-64d6-44bd-aa5e-9e30a0742684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4feac-c6fb-4e22-a3e6-0ff4a640bc05",
        "cursor": {
          "ref": "c7e7afa5-9c9a-412e-ab60-f383aa22f11c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9bb61e3e-7cbb-4f54-980f-336ac0f46b91"
        },
        "item": {
          "id": "46c4feac-c6fb-4e22-a3e6-0ff4a640bc05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "486e1b3c-d36e-4e98-ad42-ca0d89e20c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5654700d-32cb-4695-8e3c-c5d5a28122e7",
        "cursor": {
          "ref": "b75b5273-b30b-462f-b307-d7fd517f0b18",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "75641100-e3ca-47c5-9e25-283241612c1d"
        },
        "item": {
          "id": "5654700d-32cb-4695-8e3c-c5d5a28122e7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "67f4b75d-bff5-4292-b9fa-575981f40f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479dba12-d9f9-49ff-ad7b-4cb22b95f804",
        "cursor": {
          "ref": "f8e44a2e-3f14-4f5b-a520-23d13a1f3739",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f563a171-eb47-40d3-aa8d-8ce61c4f8570"
        },
        "item": {
          "id": "479dba12-d9f9-49ff-ad7b-4cb22b95f804",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1abd38fa-e9c5-4b3f-b7f9-0dc23da7d03c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dc9507-6c1e-4e95-83c0-3cf95e173745",
        "cursor": {
          "ref": "00381776-0864-4531-ba81-d59be3f5c6f3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9925608d-d7b1-4fdc-ac15-3680144884cf"
        },
        "item": {
          "id": "60dc9507-6c1e-4e95-83c0-3cf95e173745",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f97a131e-4cd3-43df-9109-b67b6d015f68",
          "status": "Created",
          "code": 201,
          "responseTime": 8076,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e4ed5e-087c-4962-bf1c-e921196f294b",
        "cursor": {
          "ref": "01f6494a-1b6d-458e-99ca-2f586f2adf48",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4bcfbc18-072f-4742-8f79-bd797dcc2803"
        },
        "item": {
          "id": "52e4ed5e-087c-4962-bf1c-e921196f294b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "10988411-5643-489e-9c66-afe39c7711cb",
          "status": "Created",
          "code": 201,
          "responseTime": 6519,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aec41c-e20d-4dcd-9d98-d7e1a32bee09",
        "cursor": {
          "ref": "a4bdeaf2-45fe-44a6-aff8-a23976d897c2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cfa647d6-9347-43c4-8b09-b81577fb0123"
        },
        "item": {
          "id": "05aec41c-e20d-4dcd-9d98-d7e1a32bee09",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7e0d9509-2405-4094-a91c-8cac5ed4fb53",
          "status": "Created",
          "code": 201,
          "responseTime": 5932,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a96d97-510d-45a1-b159-704c6256a686",
        "cursor": {
          "ref": "c9496004-d0b6-4a54-8e07-dd4bd1d44b03",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a80079fb-419c-4cc9-a621-bc64e68850d6"
        },
        "item": {
          "id": "00a96d97-510d-45a1-b159-704c6256a686",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2d9dd8ab-d833-4c73-b225-15b2e71bb3ee",
          "status": "Created",
          "code": 201,
          "responseTime": 5893,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "464c4000-5597-43cd-8b2e-fd3aa9791f10",
        "cursor": {
          "ref": "d45cc7fc-fc66-4b2c-9fa9-2bc8e41f25eb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e313b8b-1c68-4a0a-aa28-93baa1ccad5d"
        },
        "item": {
          "id": "464c4000-5597-43cd-8b2e-fd3aa9791f10",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "99c80c20-8043-42df-a1ec-689002fe5cdc",
          "status": "Created",
          "code": 201,
          "responseTime": 6195,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "74417fe0-b8b7-49b5-bb8b-2a3e88a6cf2c",
        "cursor": {
          "ref": "58a3479f-3413-4e74-b712-d4957f149087",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7ae5f9e6-9d12-4327-9162-8ff65b75a7af"
        },
        "item": {
          "id": "74417fe0-b8b7-49b5-bb8b-2a3e88a6cf2c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "96957303-3e98-4079-bf2c-aa67de9c227e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4b00d650-e3fa-47a4-bd89-a902a3f1b36c",
        "cursor": {
          "ref": "25f20742-0ab2-4079-ae68-c2f2e3da6a94",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a64977a-596f-43ab-9f67-347b57cadab6"
        },
        "item": {
          "id": "4b00d650-e3fa-47a4-bd89-a902a3f1b36c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5759df9a-1fe1-499b-a3bb-34af4716ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f608b30-98c0-4972-9f8a-4697b9f3c30e",
        "cursor": {
          "ref": "b7d6004a-f3e0-4943-afcf-5aabb6c22163",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "76160398-3bb7-4dd4-a3d9-ffdd4a98fe1a"
        },
        "item": {
          "id": "0f608b30-98c0-4972-9f8a-4697b9f3c30e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f3d9bf45-0d50-40ce-a26f-c4c8e3347f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b226d-a96b-4fae-bdeb-3acae722501d",
        "cursor": {
          "ref": "71029a35-a08a-4609-ae1c-d0c129f6530a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "279c942f-76ce-4e96-91d8-6b2b05b5c1d9"
        },
        "item": {
          "id": "6b7b226d-a96b-4fae-bdeb-3acae722501d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40138edf-3d12-4a1a-9334-3a3681f33976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ee8548-7bac-4417-a66e-b06b7abaf7cd",
        "cursor": {
          "ref": "24a60c17-3d1c-49c9-b200-4814e6489573",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2c4f13a-6203-4dd3-9587-590c1aa3e11f"
        },
        "item": {
          "id": "c2ee8548-7bac-4417-a66e-b06b7abaf7cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e90afe8f-d1c8-46cc-9e59-5053c71aaa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd27a60-f36d-4b5a-84bd-d963fb8d332d",
        "cursor": {
          "ref": "13783554-7088-49af-866d-ca9d62c6b4df",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c497ffc4-5018-4cb2-9b36-b003b20fa49e"
        },
        "item": {
          "id": "1fd27a60-f36d-4b5a-84bd-d963fb8d332d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b15bf56-8b85-4d42-a963-ea5183cff2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f40e8a5-c26c-4a55-ab25-54ce7c0c97ca",
        "cursor": {
          "ref": "3dcf7892-89be-419d-8f98-89a201dbc385",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fa810aa8-cb72-4c6d-a510-7817ece43a1b"
        },
        "item": {
          "id": "3f40e8a5-c26c-4a55-ab25-54ce7c0c97ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee401203-b4f8-4a99-be38-b4178a69ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77888f79-ea78-4cbf-a836-279bba554348",
        "cursor": {
          "ref": "6d505207-adaf-4a9c-9abe-c1b1d7f4fb89",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8f8d1a9e-7691-443f-8f16-d2daae07a6af"
        },
        "item": {
          "id": "77888f79-ea78-4cbf-a836-279bba554348",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2b18f27c-fd0c-4ca6-81fb-366bad5e7fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1af3b2-f737-4ef5-a47a-5f679f9b3f1d",
        "cursor": {
          "ref": "af40776d-cf6d-4ffa-9ed8-79ff07b1192f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f5c750fe-aabe-4c07-bdc1-81fd263c3eaf"
        },
        "item": {
          "id": "3a1af3b2-f737-4ef5-a47a-5f679f9b3f1d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d6ed9de7-f994-4c65-911c-f8b0e3daf226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed97f8f-05f9-455d-91c2-106e64c63c79",
        "cursor": {
          "ref": "bd2ed1e2-2995-4027-8847-25ea49e2afb2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e32d2ca1-7f22-461b-9518-4cf4440c54ee"
        },
        "item": {
          "id": "aed97f8f-05f9-455d-91c2-106e64c63c79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1a1d23a9-c16b-4c26-85ce-de5fa23c1ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa2e668-931b-42b7-b762-825ff2cfb1ad",
        "cursor": {
          "ref": "3eec4fbe-58d8-475f-b3b8-1693a4078884",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3344473d-3920-410c-bc49-51eb73d9a217"
        },
        "item": {
          "id": "1fa2e668-931b-42b7-b762-825ff2cfb1ad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62a18018-ace3-43ed-bebf-72d26a3e22a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a943ab0f-c95d-4a67-b100-4c461249786c",
        "cursor": {
          "ref": "f890fd6c-a9c1-4b27-a3d2-cfa05dd351d8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1d252e78-98d5-49a8-b653-b3f78cde2752"
        },
        "item": {
          "id": "a943ab0f-c95d-4a67-b100-4c461249786c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2fee9a51-2f64-4723-939c-e3086593bcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a31adb7-b2a0-4c86-b0ec-b0132ebf4f85",
        "cursor": {
          "ref": "8684ef79-3e25-4c49-a2d4-af15be12e06d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a122baea-7498-42b6-bd22-4f9f2b22a7b1"
        },
        "item": {
          "id": "7a31adb7-b2a0-4c86-b0ec-b0132ebf4f85",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6598ea0e-6c9e-4d5a-a16c-8895cc5e6005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf18168-2768-4781-8f55-56064b464c47",
        "cursor": {
          "ref": "5c0c0e09-2694-45fb-8715-83b252b19f2a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5cff07fc-204d-4d0b-8a5a-a6f3fdf4e584"
        },
        "item": {
          "id": "ebf18168-2768-4781-8f55-56064b464c47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e34ef44-d3f4-4d1d-bb2c-f9776986f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48d41c0-5d69-4d62-8d14-54f5c7a0181f",
        "cursor": {
          "ref": "158d60fa-751a-484a-920a-a1186ac37015",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a2057104-73a4-4f14-8e6a-a839da24385f"
        },
        "item": {
          "id": "f48d41c0-5d69-4d62-8d14-54f5c7a0181f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "815c1bfb-24f3-4e91-8fb6-19b80bc0fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac90ee-bc16-4d9a-9eb2-c5dac2d7e2fd",
        "cursor": {
          "ref": "1d9d8553-8353-4ab7-a3e9-6d4d456e93a8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea82c81d-973c-4b56-9192-8ad4823e83fb"
        },
        "item": {
          "id": "8dac90ee-bc16-4d9a-9eb2-c5dac2d7e2fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66f309db-b8b2-4594-8dcb-cbf41e754454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e78136-f4be-4cb7-97f1-9e80fced0747",
        "cursor": {
          "ref": "03324372-f4bf-437f-8fe1-3827975642b8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f13131df-c132-401e-8733-042bc4ac441b"
        },
        "item": {
          "id": "34e78136-f4be-4cb7-97f1-9e80fced0747",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "992d296b-8c7e-42c9-9627-38530be67cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8ef6ff-78c7-4879-855b-9e2182e2ff2e",
        "cursor": {
          "ref": "7fbc4eff-9822-416f-924b-8c1f8fed3ef5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cdf47ef0-d72b-478d-92e6-aa698fc351e2"
        },
        "item": {
          "id": "6c8ef6ff-78c7-4879-855b-9e2182e2ff2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b683f498-37ed-4eaa-abb0-400aa7479b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d78bf8c-4dad-419f-a0d9-c68d4c5567d6",
        "cursor": {
          "ref": "eff62e3b-fac6-4f4d-9302-86365c6b12db",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1a77ad64-c2f7-4d54-b73f-e5e8bfcc29d3"
        },
        "item": {
          "id": "4d78bf8c-4dad-419f-a0d9-c68d4c5567d6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "39f1affb-896b-4044-8caa-0ffcccd811f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60142536-9281-4311-988c-37c338eedb4f",
        "cursor": {
          "ref": "01afff3c-9d88-46b5-ad95-1d2397972ad2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9e1bf99-3497-4787-b96e-b84a8791ccbb"
        },
        "item": {
          "id": "60142536-9281-4311-988c-37c338eedb4f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9cc50650-cc60-4ba7-9706-8a2ba2236347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba7fe31-f4c8-48a3-baea-0c6993013d84",
        "cursor": {
          "ref": "f299a7ff-cebb-407e-8d8b-690d5ab2aefe",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4b979410-bcce-4c3f-b331-a50a81e75ad0"
        },
        "item": {
          "id": "bba7fe31-f4c8-48a3-baea-0c6993013d84",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb781cde-0569-4fd9-af70-7ad391f0049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf7df65-48df-4ce5-ad65-fd9768dff979",
        "cursor": {
          "ref": "864543fd-46b3-469e-b0cb-1ef3f6abc768",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc997504-ad1b-4929-a42b-b7289d35833e"
        },
        "item": {
          "id": "7cf7df65-48df-4ce5-ad65-fd9768dff979",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14fcce2c-0b2a-4d13-bbf7-0d62ff66a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c39d8b5-5949-48e5-8c2d-d7c1d20b1f71",
        "cursor": {
          "ref": "121876a0-9c91-4994-b7ba-b053a081adda",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7549bc73-f723-474c-a519-8fe78f9a9b8d"
        },
        "item": {
          "id": "5c39d8b5-5949-48e5-8c2d-d7c1d20b1f71",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "32c1f070-679f-4e1d-8b65-c47528e3e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b88c97-f6ee-4ee9-b3f3-f3e93a2643d9",
        "cursor": {
          "ref": "a83aa204-4f9a-4aff-bb13-85881f7d467b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4d0523b0-7746-4b7c-9f30-2a4e0eb9b169"
        },
        "item": {
          "id": "69b88c97-f6ee-4ee9-b3f3-f3e93a2643d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b123180a-4e27-47cb-872a-cf9641d9eae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc5af42-bcda-4915-9356-18302e9d9ef4",
        "cursor": {
          "ref": "6622989d-ef01-4834-b344-eb8cfa44282e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "916dca6d-6812-48e9-b05d-d6516de83acd"
        },
        "item": {
          "id": "ffc5af42-bcda-4915-9356-18302e9d9ef4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f82d0d9-a7a1-4897-a80f-ba3c6c20bff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75a1cf-f764-4a45-8b0c-ae66f3e78473",
        "cursor": {
          "ref": "3bd6f60e-af8c-442e-b7e5-430fbdc463d0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "191f8377-4ff9-4103-a274-479a2026966c"
        },
        "item": {
          "id": "9b75a1cf-f764-4a45-8b0c-ae66f3e78473",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5eeefafa-5ac9-49ae-851a-500a327b3570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fece06d-4c26-4b22-8397-63e3d2d4ab44",
        "cursor": {
          "ref": "395ab449-7b4e-4721-8b56-e9ea53cc1c00",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c0d4f906-6e23-4414-b08b-75fe1350fe11"
        },
        "item": {
          "id": "8fece06d-4c26-4b22-8397-63e3d2d4ab44",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2a56e340-e668-441d-af1c-ca283fcdd48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c11f95-71af-4d4f-bfaf-6839fc81d3a2",
        "cursor": {
          "ref": "a882e02b-dc9e-491f-86f9-d6119850b941",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "429d20df-762b-4708-b365-ce00080cbbfe"
        },
        "item": {
          "id": "22c11f95-71af-4d4f-bfaf-6839fc81d3a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "610e7b89-68be-450b-a51b-a33c453da36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fdf40e-23a7-47c0-b69c-9ddbae237b9e",
        "cursor": {
          "ref": "3b30ed89-3147-4529-829b-1ba3404648b9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b09b95d-6602-4a04-baee-5dc6060839c5"
        },
        "item": {
          "id": "36fdf40e-23a7-47c0-b69c-9ddbae237b9e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9e719069-d193-496a-8589-93ff727d6565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b4cbb-74bb-4ced-8b7a-27f87ca64639",
        "cursor": {
          "ref": "93218ce2-8e1d-43cd-9ea9-53c90cd265db",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34327f4b-2149-472b-9017-9ec5bb114cd2"
        },
        "item": {
          "id": "c49b4cbb-74bb-4ced-8b7a-27f87ca64639",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abb693b9-000d-4133-a08a-e28ad73b539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83d2747-696a-457f-bef0-b9c5544186bf",
        "cursor": {
          "ref": "9da149b7-d5ed-48ba-896f-b48f72454f41",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "74c7a939-057b-4a4a-a171-92255bc81848"
        },
        "item": {
          "id": "b83d2747-696a-457f-bef0-b9c5544186bf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27f3ca16-6bd3-4d80-af8f-74bb9f50f97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff8e38-28f4-4573-8862-d6fe9e14c2fc",
        "cursor": {
          "ref": "ffd0cb5a-d2a3-4e30-b15e-34c5d0568e4e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "63323863-43ad-4d7b-b948-5539f252098b"
        },
        "item": {
          "id": "26ff8e38-28f4-4573-8862-d6fe9e14c2fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c5188fe6-cb1f-47cf-9369-6c05fd2c00fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23497769-1c5b-4958-814f-ea675c676d6b",
        "cursor": {
          "ref": "7e8bb47a-1597-4e41-b95f-bef40eab8542",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "28751e56-dc5d-4f6c-bd97-b0fbf99151c3"
        },
        "item": {
          "id": "23497769-1c5b-4958-814f-ea675c676d6b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b1bef64-88e2-4ca8-a74f-6a5aeba256a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9847e110-336f-4f52-bbb9-1021eac0d7e0",
        "cursor": {
          "ref": "a0575f7f-69f3-45fa-bae6-3e431801ce96",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dbaaf683-49ea-4b25-b443-66a9652c869f"
        },
        "item": {
          "id": "9847e110-336f-4f52-bbb9-1021eac0d7e0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "21436ee1-1675-477b-80ce-6307e3106e04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f677cf4e-b0bc-4002-8763-827f3ab8abac",
        "cursor": {
          "ref": "9fd5583c-fed0-48e4-8b43-70d355959729",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "85d93126-89b5-4af7-8dd5-22d89bcf69fa"
        },
        "item": {
          "id": "f677cf4e-b0bc-4002-8763-827f3ab8abac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd050c70-925e-41f1-bda5-549fef73a908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b11431-fcc4-42a0-809f-4122447e8cb7",
        "cursor": {
          "ref": "46ba9423-8268-430e-b518-3cff0a4ed044",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f51faa13-bfee-4b71-adac-638ed31ab701"
        },
        "item": {
          "id": "43b11431-fcc4-42a0-809f-4122447e8cb7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "407dd41a-7725-46dd-b411-709cc8219e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2716af2-7609-45f6-9568-99a5e1b0ede4",
        "cursor": {
          "ref": "6fd400d9-a19e-4adb-bfc5-12fd6179bd8b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b179b86c-4be1-45ae-bea5-2a57182b9956"
        },
        "item": {
          "id": "b2716af2-7609-45f6-9568-99a5e1b0ede4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9bd7df38-a020-45d4-ac3b-60304530d0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc827664-f76c-46c7-9077-c6125d163da6",
        "cursor": {
          "ref": "f9584aff-6c6f-4784-ae7b-2fb0167c372f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4733d2b-33d6-488d-a451-31b00b0eeb1e"
        },
        "item": {
          "id": "cc827664-f76c-46c7-9077-c6125d163da6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d112d46c-a271-4a1c-940b-ecfac07f8e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7db2330-e0a3-45da-9c34-497f231c694e",
        "cursor": {
          "ref": "05353495-04aa-4536-a0eb-b59ce301d8a7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "130ab4a4-eb69-43e4-a42d-422a56a5190b"
        },
        "item": {
          "id": "a7db2330-e0a3-45da-9c34-497f231c694e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "89f6713c-283e-4001-83fc-5070e47a31ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb0f7b-f574-4bca-acec-1c987cabfe08",
        "cursor": {
          "ref": "6b58b10f-f70c-4210-87b5-8c980892422a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8a0a96ec-fcd1-41ae-b5be-8a7c253b89d1"
        },
        "item": {
          "id": "41cb0f7b-f574-4bca-acec-1c987cabfe08",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e2c3804-037b-4706-be6e-fdea1774acad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9716f00-6dc6-4f7e-b0a8-bfefaeda6667",
        "cursor": {
          "ref": "6552db96-2b8e-4a22-8853-1ff47b243973",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7fb1d222-a07c-4339-8982-17fd72ff4cd7"
        },
        "item": {
          "id": "a9716f00-6dc6-4f7e-b0a8-bfefaeda6667",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "850a9ce2-28d3-45f8-9ec6-ec7cb8c675e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f94a6-33cb-42a6-beba-4709c228ae7f",
        "cursor": {
          "ref": "aaf60892-0b4d-4cec-9766-c0e587f1a033",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5266b21e-e168-4eed-9a58-734996b506eb"
        },
        "item": {
          "id": "e56f94a6-33cb-42a6-beba-4709c228ae7f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea83b384-a6b8-4c78-bc99-5bdbdfcfc070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2ceb36-cece-4df3-ace7-b4da9610c5b5",
        "cursor": {
          "ref": "c76b2c67-fea8-4f7b-90dc-de3129921355",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d0369777-9001-47e1-a1ba-4132aa66d8db"
        },
        "item": {
          "id": "0e2ceb36-cece-4df3-ace7-b4da9610c5b5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1ede205e-fe34-4fb1-9f94-ede2f90850ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ac9869-a9a8-4516-b0c1-3aca8c8c004b",
        "cursor": {
          "ref": "591fb084-5abc-455f-a681-2432093c3967",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ae1b8ce3-5e70-49e0-8f5d-2a82dcf3a31d"
        },
        "item": {
          "id": "09ac9869-a9a8-4516-b0c1-3aca8c8c004b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aac3cec9-e66d-4f32-9d1c-82c4c76bb92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d846799-dee2-44fe-818f-2ee236fd27d4",
        "cursor": {
          "ref": "2ac49748-6564-4f0b-97a1-d921215ebcc4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7dc0810e-87c1-45fd-88de-35c962524afa"
        },
        "item": {
          "id": "1d846799-dee2-44fe-818f-2ee236fd27d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c0fef9d2-34fb-4801-b265-6a4912029cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db46b4a-50f3-483d-b79c-b70ffa4dcae9",
        "cursor": {
          "ref": "011e9e7a-7baa-40fe-856b-e1b1416c81d5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db869673-dfbc-459d-8eb7-0955b6d178d5"
        },
        "item": {
          "id": "6db46b4a-50f3-483d-b79c-b70ffa4dcae9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64ac7361-539f-4541-805a-4031b102051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705c8473-0be2-419a-a7ef-4b2bcb29e0e1",
        "cursor": {
          "ref": "3fe198d4-8911-48c7-ac72-e6c9ea7a901a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6800ec2d-1703-4c2a-8b7c-58b54ec87d75"
        },
        "item": {
          "id": "705c8473-0be2-419a-a7ef-4b2bcb29e0e1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0da9112c-3a64-4f43-8e92-a2c4795c41b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8bf88a-9bbb-4d3c-9aac-19da7859f724",
        "cursor": {
          "ref": "0e5dc5cd-ecb5-4570-ac52-5bb357c453dc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2b2a8c4d-e8c2-4879-9116-f2b9b51c0d1f"
        },
        "item": {
          "id": "ab8bf88a-9bbb-4d3c-9aac-19da7859f724",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d971b877-b6b4-4b14-b92c-930e02760afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b2057-54b9-4561-926b-4253f812bb12",
        "cursor": {
          "ref": "b5bd6ae4-36b5-4027-abf4-2f748d76a8e8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "34bbf163-afbb-4d08-9160-a62b9063c689"
        },
        "item": {
          "id": "cc8b2057-54b9-4561-926b-4253f812bb12",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60755595-5321-49d4-9a69-ca899e21dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd63c91-5b3b-445e-9c3e-9dc1fcb1c06f",
        "cursor": {
          "ref": "7a6061b9-9855-48f6-a259-88a8af75c51a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9fd8d6f7-a467-424a-b6e5-47f906daa7a5"
        },
        "item": {
          "id": "3cd63c91-5b3b-445e-9c3e-9dc1fcb1c06f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45e12837-f3b1-408b-9e3c-1154d5c12147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bdfc23-12a8-4bf8-ae7b-15f5549add76",
        "cursor": {
          "ref": "975bb48a-01a7-446a-b8ec-15eeff74940e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6f174a35-895c-46ee-b2ac-ca4567c856f5"
        },
        "item": {
          "id": "11bdfc23-12a8-4bf8-ae7b-15f5549add76",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e00a6bd7-9639-4eec-a7bf-1ebdaceefd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9de360-92e7-471b-8a6b-65a8d106d19b",
        "cursor": {
          "ref": "2328a8b7-67c2-4b96-b0a3-a9054a583060",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e4a3b774-9bf3-4a9a-95d4-1420d94469d2"
        },
        "item": {
          "id": "7f9de360-92e7-471b-8a6b-65a8d106d19b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d014d5bc-4aa2-4652-a021-718be22498e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9bf54a-0bc9-4edd-a9c4-948f53a414b5",
        "cursor": {
          "ref": "a043a252-ac26-4af5-a7c3-c3637ea9fda9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53472d76-1552-4f80-b713-72620c7bd05d"
        },
        "item": {
          "id": "0a9bf54a-0bc9-4edd-a9c4-948f53a414b5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9a858f85-cbab-48d6-87dc-e28d5f182f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af72153c-a8f1-473a-a7d7-7811db228c7d",
        "cursor": {
          "ref": "739767cc-431a-49b5-aeec-9d2e3ce46a04",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "02ec1805-1563-4b53-a3c4-2fde747b910d"
        },
        "item": {
          "id": "af72153c-a8f1-473a-a7d7-7811db228c7d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a78ea69-8b7d-479a-b3c4-b176eb94b1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2870e9b9-653d-4161-9142-fdfd0b2c48a3",
        "cursor": {
          "ref": "f11495ae-36f7-4b81-be52-22c2db47b258",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d221ad53-399a-4ccf-b4c7-6f923ccfd5f8"
        },
        "item": {
          "id": "2870e9b9-653d-4161-9142-fdfd0b2c48a3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98b1ffa8-9528-4dc9-a288-05af37ed5b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895618c8-38ff-4efa-9dba-f3be485a872a",
        "cursor": {
          "ref": "df1f38fd-8059-406b-ab73-6f614bf1144c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "17e18359-0684-433c-8503-83b6c48a3938"
        },
        "item": {
          "id": "895618c8-38ff-4efa-9dba-f3be485a872a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3d6c119c-49ca-491f-a211-c1f09ab48775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcae503-0177-4136-8734-9e6b131beeb4",
        "cursor": {
          "ref": "b12fc8ee-7b74-4f89-8fd3-069be759417d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ff66853-d297-4af0-8582-532c67d03d1d"
        },
        "item": {
          "id": "bbcae503-0177-4136-8734-9e6b131beeb4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d965b72-5043-4d8a-ae96-83acc9f381e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b1a85d-b33c-489a-b8a2-b73300724917",
        "cursor": {
          "ref": "bb52250a-7195-4a9c-9df9-d14fce3d8e05",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e310f221-9903-4d7d-b8a9-0d5be2ec277e"
        },
        "item": {
          "id": "74b1a85d-b33c-489a-b8a2-b73300724917",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f2a25481-9413-4d60-909a-db58f3dae209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d798e-cc3a-4a7b-b48b-c443092e66be",
        "cursor": {
          "ref": "4ec1dff5-321c-4275-8c64-0541ab68996f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05dcf843-00e1-4c13-8635-a0807327d9fd"
        },
        "item": {
          "id": "4c5d798e-cc3a-4a7b-b48b-c443092e66be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "971108a6-bf58-43a1-b4cc-2f106c43203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8b06d4-ff21-4386-84ff-25660c496ee2",
        "cursor": {
          "ref": "072e401a-b29f-4a41-9f73-e84a15a9013c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e44a0345-ff1e-4f60-907b-75b3f5635338"
        },
        "item": {
          "id": "9c8b06d4-ff21-4386-84ff-25660c496ee2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "55e456c8-35c9-4a4b-8f58-c1292302400d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237b3421-1e62-48cf-b365-64a0482dd22b",
        "cursor": {
          "ref": "1b3750af-8235-4ee7-a0dc-04d2b7d404c8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "afacb770-5606-4ec2-a04c-fadd4e3869d0"
        },
        "item": {
          "id": "237b3421-1e62-48cf-b365-64a0482dd22b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "84bdc5c7-f2a0-4aaa-b141-85982fd0c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefbefaf-efa2-4284-941c-a6b0fab33e96",
        "cursor": {
          "ref": "9e3b9dd6-d91b-4813-bdc0-036280ef7030",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "895bcea3-a953-4086-a5df-14c8c8da8161"
        },
        "item": {
          "id": "cefbefaf-efa2-4284-941c-a6b0fab33e96",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "110c5bf8-c2c7-49b8-a12f-4fad82dcb52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf22b74-3d98-470b-bde5-470b2f90b118",
        "cursor": {
          "ref": "d88d1d85-463f-4555-b895-765309e847ba",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b1a8c9f-9c54-43c9-a1f3-e8719de1d90a"
        },
        "item": {
          "id": "4cf22b74-3d98-470b-bde5-470b2f90b118",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4cf610c-7f61-4834-aa40-87c21b42aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d1584-819e-4d76-bb33-949f9f0572ff",
        "cursor": {
          "ref": "897432b4-da24-46ba-a030-a18abe802ada",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "136329b6-c05e-47ff-9e48-410567b6bda5"
        },
        "item": {
          "id": "443d1584-819e-4d76-bb33-949f9f0572ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0fdc8b47-1f7a-4b3c-8014-d6bc705d33c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5426f42e-497e-49c7-b96f-89bae9c61a7b",
        "cursor": {
          "ref": "4d141738-aa0e-4a24-887e-c1eb0260edff",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a147a123-f086-4d33-8f52-de3fb9e698a3"
        },
        "item": {
          "id": "5426f42e-497e-49c7-b96f-89bae9c61a7b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae78fa18-b68d-4526-ba8d-625d63de3608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd40480-d512-458d-8843-dbc434250118",
        "cursor": {
          "ref": "477716be-8958-4aa8-bf59-43401552e4f6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "40e72915-2036-4bf0-a65a-a0a7b7a7de00"
        },
        "item": {
          "id": "2cd40480-d512-458d-8843-dbc434250118",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f18930fd-c448-4ce5-88e6-b1e61dc46366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c71d0-0650-4fec-ba7f-c7047b8f9eb5",
        "cursor": {
          "ref": "3fdda18b-5be7-49d4-a8b7-4fca8af23be2",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b55613a7-dcec-4076-9e31-336e429f7466"
        },
        "item": {
          "id": "432c71d0-0650-4fec-ba7f-c7047b8f9eb5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fb383b70-cf91-435e-99ea-4c69b81bf6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf91d2-a2be-4b05-b20c-5659636b8d4d",
        "cursor": {
          "ref": "01960d3e-98d1-4144-8c11-cca6844265a8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8d3f2178-0874-4ebf-a17e-00e994fcf603"
        },
        "item": {
          "id": "c1cf91d2-a2be-4b05-b20c-5659636b8d4d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "245b70b4-2d6b-4f00-a4d9-5fa5928f47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15687adc-c32e-4c7b-8141-71d985dd0f24",
        "cursor": {
          "ref": "de243f6a-eccf-4899-ba2b-e6ee16cb6b46",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7bc4dd0b-6356-4d9e-988b-96705db85308"
        },
        "item": {
          "id": "15687adc-c32e-4c7b-8141-71d985dd0f24",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4ab13940-135e-4903-b485-69147e099fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466bca58-784b-4549-9971-0abcc89e9edf",
        "cursor": {
          "ref": "7723f463-209c-4b1f-aeda-788d2b37df71",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4dc0f8e0-40ad-4b5a-a093-67810586e43d"
        },
        "item": {
          "id": "466bca58-784b-4549-9971-0abcc89e9edf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "531239f9-e467-40c2-bd17-640359e18470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24d034-9b7e-409c-a8dd-4767e36f2ae1",
        "cursor": {
          "ref": "fd15318d-3d05-4d04-972a-305e83c7e330",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cc05dbd3-8544-4a37-816c-856e3743c70b"
        },
        "item": {
          "id": "fa24d034-9b7e-409c-a8dd-4767e36f2ae1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b80c766c-8920-4234-afe1-dd2850febb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb41dcf-628a-4d52-b1ea-d7c48859ecf1",
        "cursor": {
          "ref": "ba119943-8a59-4ecd-94ea-53f5bf343047",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68e6bf82-f841-45c3-937d-a470d19188f4"
        },
        "item": {
          "id": "7eb41dcf-628a-4d52-b1ea-d7c48859ecf1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0020c1a3-6ffe-4ee4-845d-edbe23baaace",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b94f5-4e06-4419-94e9-cbf4250afeae",
        "cursor": {
          "ref": "76ca738b-def5-4e38-855f-89d0b97ab7b3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4014f0d2-f999-4734-a48a-aa32c44c8816"
        },
        "item": {
          "id": "876b94f5-4e06-4419-94e9-cbf4250afeae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "78a742b9-5e1a-4191-b91b-84200b4fef00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7e086b-997b-4b79-806b-3ebf4525f417",
        "cursor": {
          "ref": "153410c1-7f44-4e17-bcda-927f34a79449",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b51a4f9d-91f3-46dc-995c-28771117560e"
        },
        "item": {
          "id": "3a7e086b-997b-4b79-806b-3ebf4525f417",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "61dcf575-23ed-4205-b593-89ef905c4ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d914b02a-1a02-4eaa-8ca3-fdf0832de885",
        "cursor": {
          "ref": "e7d4a910-1454-48b4-ac40-95dee5967b86",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4b52756e-a754-401d-a56d-eeaabaaf1529"
        },
        "item": {
          "id": "d914b02a-1a02-4eaa-8ca3-fdf0832de885",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6d727627-ac35-49ed-9c50-c6995a6fdb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0572407-45fd-4f4c-994c-2bd217389be6",
        "cursor": {
          "ref": "7b7cab71-d975-49ff-82a2-98d241c6b7d6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "78e4c580-1e75-4fe4-b2d4-dcf762d1b739"
        },
        "item": {
          "id": "f0572407-45fd-4f4c-994c-2bd217389be6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "560f5f93-8d8b-4a33-b63b-e53ad81447a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660227ce-16b5-473d-801b-3938a17c3ef9",
        "cursor": {
          "ref": "49976d37-2dfd-46d4-96c5-ee8a05e51618",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "00642639-cfc7-4e8d-85be-b0b66cfe46f6"
        },
        "item": {
          "id": "660227ce-16b5-473d-801b-3938a17c3ef9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c775a94b-86c6-491c-ad17-26a327f5ac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93caacd-1777-4309-8a2f-ba895d465efe",
        "cursor": {
          "ref": "b53b85cc-9b4d-4f2c-9124-ea2d2f289441",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f0021723-a0f1-49f7-a99e-c57289c1c310"
        },
        "item": {
          "id": "c93caacd-1777-4309-8a2f-ba895d465efe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12a56bf3-df1d-489c-aec8-43e4ed957b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f3a55a-6dc6-4f03-a86b-31d45016635e",
        "cursor": {
          "ref": "7c4770be-d74b-40d7-b0c1-4441b92debad",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a48d26e9-90c8-48c3-a008-922df07ea05a"
        },
        "item": {
          "id": "b7f3a55a-6dc6-4f03-a86b-31d45016635e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "146d846e-e6bf-49f6-8170-55796b88becd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e4e48a-2ff3-44a5-8025-b7e65d60ab5a",
        "cursor": {
          "ref": "2d85556d-e31c-4588-9ff9-be5b0fd717d3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6b86454d-11e2-4271-a4b0-241679e9b320"
        },
        "item": {
          "id": "41e4e48a-2ff3-44a5-8025-b7e65d60ab5a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f7851e2e-c1e7-4a77-ba89-06698a60d022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7d7522-a236-48b2-b994-0b40c1e63f2c",
        "cursor": {
          "ref": "f496fac2-e56a-403d-8c1b-cfdc46b1a74c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8c9df574-1f6f-4df8-b91e-146de2313a27"
        },
        "item": {
          "id": "4c7d7522-a236-48b2-b994-0b40c1e63f2c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e42ce4d8-7a5b-4293-a966-9d7353ce3ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d39cd22-caeb-42b0-afa0-06c5993d89f7",
        "cursor": {
          "ref": "ee6ab298-670a-4ed2-95c2-c445f398edd2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d5a0e1e8-2753-4d06-b8e2-87f6bc2154b8"
        },
        "item": {
          "id": "0d39cd22-caeb-42b0-afa0-06c5993d89f7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "60d45fc0-4be4-456c-812f-9254d55ded16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27e9a41-09e0-4092-ac2a-74ce03362254",
        "cursor": {
          "ref": "65f8fd9f-a8c8-4427-89c9-77bd7112baca",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cb063c2a-c764-46c9-a46c-16aaeed765a8"
        },
        "item": {
          "id": "d27e9a41-09e0-4092-ac2a-74ce03362254",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de4580ec-3e69-4b42-adec-82453bcbbf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f6dc2d-e47e-465c-9d1f-e54411b5fcf6",
        "cursor": {
          "ref": "510e1691-a000-4789-b682-8949c5279de9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dc5527c6-ef89-41b9-ae43-db58402b5e38"
        },
        "item": {
          "id": "74f6dc2d-e47e-465c-9d1f-e54411b5fcf6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14d424fb-b47b-479f-86f3-2144563a3640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d129a2-f43d-46cc-831c-dae47827fb6e",
        "cursor": {
          "ref": "86b97ecf-65d3-4a3a-ac21-022d00a545c9",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73b7dd49-1bea-4c40-b0be-88cef7ae992f"
        },
        "item": {
          "id": "d0d129a2-f43d-46cc-831c-dae47827fb6e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e7d70a9c-f3eb-4eeb-b857-363f7363801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdabe62f-d3a7-4a00-9604-d3baf481d73b",
        "cursor": {
          "ref": "cd248121-a520-4f73-86cc-1140cfcb686c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "802b3f45-84fd-4b6f-8908-be25cc38c164"
        },
        "item": {
          "id": "cdabe62f-d3a7-4a00-9604-d3baf481d73b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "63fc2d2f-e9dd-4f74-8340-8230860a56ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c674f2-c81f-4369-897b-2dd2809b3e65",
        "cursor": {
          "ref": "d3578f89-f13f-432d-a611-21602034ee7c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a4e28067-7518-47c8-af85-3eebee86e9b6"
        },
        "item": {
          "id": "55c674f2-c81f-4369-897b-2dd2809b3e65",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0fe0eb83-97c7-42ae-b8e5-381c347177b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa83372-5bab-4c7d-8bba-eeac0842b1d3",
        "cursor": {
          "ref": "089e6ce2-155e-4521-9dcf-1f4580fe113e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "763ffa84-425d-47f5-8829-9c9be53c1963"
        },
        "item": {
          "id": "eaa83372-5bab-4c7d-8bba-eeac0842b1d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3fa4453e-2a0e-4e19-86ee-edf397cb2524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7f5f8a-cbf6-46af-b96d-ed07de6c62e3",
        "cursor": {
          "ref": "b37b09d0-767e-437b-bbfd-f9de04afcc40",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8eecff0d-4906-4d2b-a1aa-900b13b1c445"
        },
        "item": {
          "id": "bf7f5f8a-cbf6-46af-b96d-ed07de6c62e3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ffde1bb-d8a4-4e24-93aa-b29e54deddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3534f53-ca08-4fda-93ed-906339a43922",
        "cursor": {
          "ref": "ef2cf44a-2918-4e61-82b7-44cdddf3d0da",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f120b182-5f6e-4ad6-8f23-c0ee44277612"
        },
        "item": {
          "id": "b3534f53-ca08-4fda-93ed-906339a43922",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "49418170-94b4-4d53-aa2c-15a082354e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a45bcda-7f90-4882-93c5-8836ad4f6293",
        "cursor": {
          "ref": "07dcde1d-4a3b-49b9-9e3a-cbe77ee420bd",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c7a1e6d-16d8-44b2-b6bd-06498af135a8"
        },
        "item": {
          "id": "1a45bcda-7f90-4882-93c5-8836ad4f6293",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ec5c2fa0-1f15-4a8c-9164-868edeb606c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5d8899-d1a1-4339-91ae-8d4ed76b46f6",
        "cursor": {
          "ref": "eae16370-4dd1-4ff8-8944-0b4e0d3f6518",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a8e16e3e-5f02-44a5-aad9-322e884840ac"
        },
        "item": {
          "id": "9d5d8899-d1a1-4339-91ae-8d4ed76b46f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04d94adf-5eaa-4482-8931-c29013f20e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97263d7b-0abc-4df8-a947-2315fc60506f",
        "cursor": {
          "ref": "0da89f95-8983-4e60-b83a-c21cdc8450c2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3587b33a-cffe-46fa-83c6-1262ce87e0c5"
        },
        "item": {
          "id": "97263d7b-0abc-4df8-a947-2315fc60506f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b9b4bb92-dc68-4edd-be29-21be2f590259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9640026f-a0f8-4bc2-903d-66c065f52a8e",
        "cursor": {
          "ref": "ac0860b3-7daf-4b2f-b450-30a973f7d974",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "28f8a7a7-cab5-4c46-8c62-14ce09798c5a"
        },
        "item": {
          "id": "9640026f-a0f8-4bc2-903d-66c065f52a8e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4ab3870c-7242-4b64-9b0a-cd0f476305d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2032bb74-a027-4c93-9c50-f3563d13b19e",
        "cursor": {
          "ref": "d5630910-72cd-46a6-ac6d-4af0838ebb89",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "543382da-bd2b-4e47-be49-1f5c9cafdfbb"
        },
        "item": {
          "id": "2032bb74-a027-4c93-9c50-f3563d13b19e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9905407a-0652-4a90-9a1e-11ef41fd609f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3aef83-d997-4689-b789-cf749aa05ee0",
        "cursor": {
          "ref": "7196d628-d342-49f4-8ae9-240d7a2aaac3",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e213b572-528c-4448-984f-c78c4347aee4"
        },
        "item": {
          "id": "0b3aef83-d997-4689-b789-cf749aa05ee0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "06a4a660-dfee-4137-bcca-077a6ae86f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3130bdd6-2c6b-43cf-b0ce-174005d56382",
        "cursor": {
          "ref": "2127041c-7f1f-4ea2-ac9e-c7c9b606e1f5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0054b613-451d-4968-ac4f-53123d9ecaf7"
        },
        "item": {
          "id": "3130bdd6-2c6b-43cf-b0ce-174005d56382",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7dae4ba9-adc6-461c-bae7-76d75b0030a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bb7bb7-b88b-4e1c-9d41-5a829e4bb394",
        "cursor": {
          "ref": "09c41b79-bfd1-4072-b7c9-87c8f3a8e424",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a21002d9-9156-4b7c-8fae-3b39c4651415"
        },
        "item": {
          "id": "96bb7bb7-b88b-4e1c-9d41-5a829e4bb394",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4e38e706-d747-4c9e-a530-741576c3183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8def6c3d-ea52-4efe-8bec-ba9016020320",
        "cursor": {
          "ref": "dd4c2d86-7f5a-45b0-abd3-7b8fb3c4d54e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8f9bef26-b309-45e3-ace4-13e337d10384"
        },
        "item": {
          "id": "8def6c3d-ea52-4efe-8bec-ba9016020320",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "96efab26-dad6-4d64-8888-55de4c158a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8319f440-45d5-4774-8ed9-01ae1f7b901a",
        "cursor": {
          "ref": "362f4deb-2850-454e-a7b3-fe219b4b30e9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1d69cd0a-736e-47a6-8295-f2809a871c36"
        },
        "item": {
          "id": "8319f440-45d5-4774-8ed9-01ae1f7b901a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cdeb8bb7-a615-4373-8d21-48f62d0abf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829e6c91-dd4f-425f-b52a-523a1a7ae1f9",
        "cursor": {
          "ref": "f9f047e9-22a3-4fc4-abb0-b73319c3e966",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e6bd6069-6fdb-4008-a1d4-4a13d55a20e3"
        },
        "item": {
          "id": "829e6c91-dd4f-425f-b52a-523a1a7ae1f9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f49d5eea-79de-4a04-946a-bcbf65d3b37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f440edbe-5120-4d19-8418-096142be8ab2",
        "cursor": {
          "ref": "bb0cc909-fa6a-42c7-b6ce-118f21345885",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "860cc1af-bfec-4a17-96e3-54626657a0d4"
        },
        "item": {
          "id": "f440edbe-5120-4d19-8418-096142be8ab2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "217d8cb3-d5c6-4386-8154-c126a1398e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88bdec2-ae96-4ed5-a3fd-8a95db60d371",
        "cursor": {
          "ref": "98511f0c-4336-4f7f-a72b-20da6c53f5a3",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "300b5464-819e-4d80-bb4c-78c016eeb6e6"
        },
        "item": {
          "id": "e88bdec2-ae96-4ed5-a3fd-8a95db60d371",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a64f6de2-67e5-48d3-8681-42045e1c317a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a68677-967f-4da4-8379-1920084080be",
        "cursor": {
          "ref": "79ad8b2c-a89e-48ee-94c9-270bc2452a45",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "872e2542-2250-47bd-83c5-ea387ff13d65"
        },
        "item": {
          "id": "d3a68677-967f-4da4-8379-1920084080be",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d7600549-698b-4640-ad63-9490a8a4b79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c5c609-0504-48cd-a074-c09e6e29e073",
        "cursor": {
          "ref": "11a64fc5-338c-49ed-a9ae-ce073bbec841",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bf4e4a13-8c4f-41c4-afc5-9cb1e01f765a"
        },
        "item": {
          "id": "c4c5c609-0504-48cd-a074-c09e6e29e073",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5690d3ea-6ea2-4199-84bc-fc6d7f841fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f2678-442c-4d9c-9a23-4f1133d56f24",
        "cursor": {
          "ref": "12cbddf2-744a-41c2-8892-9e651f0796d2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a9fa9fdd-c16a-4a88-a746-b3b6a72a8325"
        },
        "item": {
          "id": "dd6f2678-442c-4d9c-9a23-4f1133d56f24",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c24c7c2e-242b-4ce4-85ce-cf75f4bfb17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40fbaa2-634b-4710-b16c-7ada99d3096d",
        "cursor": {
          "ref": "1fb51af4-3f2b-4da2-a891-4689f37c4b53",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c640f0de-ac6d-4462-922c-d14fff3fee63"
        },
        "item": {
          "id": "b40fbaa2-634b-4710-b16c-7ada99d3096d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7d68d9b2-0f5a-441f-87c3-ab1fa93a296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be2788e-b0f3-459c-b823-3225e24fec89",
        "cursor": {
          "ref": "b70a39a3-0617-4740-9eb1-65fe1a8c9f0c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "706b5c27-8886-42f4-89d6-35da85a73688"
        },
        "item": {
          "id": "2be2788e-b0f3-459c-b823-3225e24fec89",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f83d79f9-ec00-47f4-866c-7e1f71b2df18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5daaa-5ec8-4c1b-b2d9-7589742c0ab7",
        "cursor": {
          "ref": "fb88ba33-e075-4c86-a7cf-83ad01a21676",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ac0773a-f0a1-46a7-a01c-392941195e8e"
        },
        "item": {
          "id": "1aa5daaa-5ec8-4c1b-b2d9-7589742c0ab7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1bf0895a-a0d3-4bbf-b051-0884c06f0dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e9cfc-3986-4ef6-9be9-84825457b4cc",
        "cursor": {
          "ref": "de91fa8f-0320-4d9d-b1e1-d8a52728762a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c9c25a7d-0920-460a-b0d9-b64e348830ac"
        },
        "item": {
          "id": "d66e9cfc-3986-4ef6-9be9-84825457b4cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f3b9c85-23f4-449a-91ec-33fb653e9df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a94153-055c-4658-848f-d3db601c04d8",
        "cursor": {
          "ref": "5d9a9228-5ca4-4a97-8458-61a74464a66c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "38308a06-5d43-49c0-9e0f-0556ea95b013"
        },
        "item": {
          "id": "40a94153-055c-4658-848f-d3db601c04d8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a1346cc5-c804-4a1e-856d-a2c8fdd9fb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539d5da1-8263-4065-9a4f-1470c795baec",
        "cursor": {
          "ref": "9bc89721-315f-4499-8fb2-080233b95101",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb4150de-8528-4053-a345-939bd10f0200"
        },
        "item": {
          "id": "539d5da1-8263-4065-9a4f-1470c795baec",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7ae4cbdf-dbdf-402d-81ed-53f5f6df31bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f7d6c1-0b89-4ef8-85fa-b94bafc6bcc6",
        "cursor": {
          "ref": "9f897867-30ed-484c-90eb-799597c9fb93",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2395f0a-154b-4eba-b217-ac76a38d383a"
        },
        "item": {
          "id": "c5f7d6c1-0b89-4ef8-85fa-b94bafc6bcc6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0226ac0-c72c-4ed7-bfc4-2891e89a4618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6214f436-692b-4ffe-94e4-7b1cb59c087b",
        "cursor": {
          "ref": "97fc3e8a-4f97-4f01-b75a-faa4be112211",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "23cdc361-99b0-48bb-b61c-7cd7972b3bd5"
        },
        "item": {
          "id": "6214f436-692b-4ffe-94e4-7b1cb59c087b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5860f56a-9c0f-4912-a1f1-fdd70a51d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d543342-d62f-4889-9d6c-254a818f9e77",
        "cursor": {
          "ref": "ca8c4f9f-2bbd-453a-bd21-db622fc7dc8a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d5c227a7-83bf-41c3-a7b3-4f8bec5af92f"
        },
        "item": {
          "id": "9d543342-d62f-4889-9d6c-254a818f9e77",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fbb377b6-1335-4b8a-bd59-c7e58fbbe268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4705008-1f66-43f5-b826-a8b9ba9be5b9",
        "cursor": {
          "ref": "d450e218-ef22-4634-9195-c8a6e9c6b906",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8174a0b3-a10d-4c8e-8a1a-c24c4dfa21da"
        },
        "item": {
          "id": "a4705008-1f66-43f5-b826-a8b9ba9be5b9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9ab00d1-d16d-4dcb-b610-400c8edd73b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ae3ba-6515-4e1c-9bf5-d5d7de2326d4",
        "cursor": {
          "ref": "1dc394d5-6938-4f31-9d3f-f9ce75f34ddd",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a335a971-77f1-426d-b05b-f928cf522628"
        },
        "item": {
          "id": "7d8ae3ba-6515-4e1c-9bf5-d5d7de2326d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5b4b55f4-cd68-47cc-9410-ae5e1ff863e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64598603-e2f9-4b91-b9d5-b6368e3b2947",
        "cursor": {
          "ref": "e735a911-7a35-4a1d-a6c8-848dc3f6c7f0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "be1ff878-8c55-4b05-ab9e-ac5c46640201"
        },
        "item": {
          "id": "64598603-e2f9-4b91-b9d5-b6368e3b2947",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "44b1e477-a715-4912-a959-66d86465217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80a348f-64da-42af-bfab-15ae512d2c79",
        "cursor": {
          "ref": "701cd128-bd0b-4722-b1b2-5824b8d04ca1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b4c525d2-fda6-499c-9a20-b3040dddc8c6"
        },
        "item": {
          "id": "a80a348f-64da-42af-bfab-15ae512d2c79",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "170467b4-9b98-45c4-81a3-eb9f7e0de34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2356505d-9815-47e7-9705-8ac95b4abdd2",
        "cursor": {
          "ref": "dca56bd8-e3bd-42da-bf0b-d942a2eff706",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "abc9c3f0-f146-47ea-9d7b-28dc34675d03"
        },
        "item": {
          "id": "2356505d-9815-47e7-9705-8ac95b4abdd2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b1c8475f-24c7-4575-b5fc-fa7643b39752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce81531-b929-4d0c-9939-fcb160e67f12",
        "cursor": {
          "ref": "6995d65b-8c71-4fb6-95b4-620b5d48a10b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d62dce71-a9a1-495a-8e7f-b2a0c07aa800"
        },
        "item": {
          "id": "dce81531-b929-4d0c-9939-fcb160e67f12",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dcd15701-61c2-4fec-804d-6035e7151b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500a33b-6873-4619-b1d6-4f4ef9c494d3",
        "cursor": {
          "ref": "6ca9fcc1-2777-4a3e-80e4-88096ee055ac",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8c953b1d-d7b7-4a0d-ae3e-c5118a582d2a"
        },
        "item": {
          "id": "6500a33b-6873-4619-b1d6-4f4ef9c494d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c23b85cb-5b91-46c6-83f3-4a2980d0fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb76d6-fb06-4c10-931a-ff911ebf28e6",
        "cursor": {
          "ref": "9856c88a-87e5-4310-90c1-2b2c49814206",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44a5473e-6107-459b-bcd6-ce3663d17485"
        },
        "item": {
          "id": "4abb76d6-fb06-4c10-931a-ff911ebf28e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "79adf28b-f79d-49d5-874a-0518cd4332e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2babcd0c-dfd9-413f-8ce3-fcb4b5c6e9e1",
        "cursor": {
          "ref": "d873ecd8-05aa-4999-82ce-ee38f05187dd",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eb191f4a-d895-47a5-ad25-c9efe3238000"
        },
        "item": {
          "id": "2babcd0c-dfd9-413f-8ce3-fcb4b5c6e9e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9de5d30e-cdf2-46ee-a6ac-ffa2620ae275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a905d7-19b8-4b55-b3ff-5de242467a13",
        "cursor": {
          "ref": "b7b0ed75-8a0d-4d3e-8bc0-3dcdc11240d7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1f26a03c-1226-41f6-8df2-d048fc1a2b42"
        },
        "item": {
          "id": "c3a905d7-19b8-4b55-b3ff-5de242467a13",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb2f3d37-0686-4ada-ab70-204a3b09122e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e933e73-f79e-4cc5-8741-4cb69d336ee0",
        "cursor": {
          "ref": "aad5d9a7-cd56-4906-9f25-2b6539e88802",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e56f3c4-6803-4ad1-be18-aa1a1e8fa556"
        },
        "item": {
          "id": "5e933e73-f79e-4cc5-8741-4cb69d336ee0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e4e67713-dca3-45b1-ad9f-5014353546b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c3b138-7425-43a5-95a7-66607adc5216",
        "cursor": {
          "ref": "47826920-209c-4b4e-ad37-27e9c8dd1067",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e4672ccf-b807-45e7-82f1-3d5327c90ff4"
        },
        "item": {
          "id": "35c3b138-7425-43a5-95a7-66607adc5216",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8497dbe3-a68f-4814-b451-096e6ab2f6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaca003-11e6-4393-a5ab-8f067bedd095",
        "cursor": {
          "ref": "f1f5beec-5d11-4483-acff-4a87a71bc22c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7cc5c09d-2fb1-44c5-8178-62e27ecddfa8"
        },
        "item": {
          "id": "dbaca003-11e6-4393-a5ab-8f067bedd095",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c8f7c17d-86dc-4c92-9825-b58aaeb4a369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a057ab8-d7a0-41ae-b2ce-5daef88cbc86",
        "cursor": {
          "ref": "0fc1f37d-2ac7-43ba-9249-3aeaf92e171d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4be7e63-92f7-4616-96e8-cc33b0a81f85"
        },
        "item": {
          "id": "1a057ab8-d7a0-41ae-b2ce-5daef88cbc86",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93ad325a-e2b5-43f2-83e9-ba4583ad669a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de162fd2-5c62-4625-abf4-bd466abb4e86",
        "cursor": {
          "ref": "2fcb458a-661c-469d-92d4-1e31257f3305",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b3d7870-3c12-4046-adeb-d2f5d58ce16b"
        },
        "item": {
          "id": "de162fd2-5c62-4625-abf4-bd466abb4e86",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e0284e0-dd52-41ba-8fa5-ff3abeb0e226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debe3148-b4d0-45ca-9d39-68d0b0d6ec39",
        "cursor": {
          "ref": "1ea3dccd-5c74-4853-8eb9-bd0ff721d306",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bf107559-0f46-4287-812c-6653e0e8e6ff"
        },
        "item": {
          "id": "debe3148-b4d0-45ca-9d39-68d0b0d6ec39",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5b40afe8-71ef-4905-a168-05d2ebe95392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1eb813-3617-47df-adb5-89cfe45b2596",
        "cursor": {
          "ref": "f7a3aa59-2414-4274-9b87-5d078337b5fa",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5cef9bcd-3c17-4a3e-a7b5-ab17bd054225"
        },
        "item": {
          "id": "ef1eb813-3617-47df-adb5-89cfe45b2596",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f2af6e91-f414-432d-8e0f-c2f01aadc1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c3e87-d001-4021-92ca-958761184399",
        "cursor": {
          "ref": "cd87d1a1-336f-44aa-b8c5-742e251bce65",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2a5caabd-1d0e-41fb-90e7-9eae6a5ede7e"
        },
        "item": {
          "id": "5c9c3e87-d001-4021-92ca-958761184399",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eefead50-b2ee-4f31-81ca-5ef001c4bd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef07ae27-826e-4756-a23f-d5731a09c83b",
        "cursor": {
          "ref": "ed1781e5-25a0-47de-a892-ea260bb92ded",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b7810a24-d719-401f-ab94-024fe0a5d80b"
        },
        "item": {
          "id": "ef07ae27-826e-4756-a23f-d5731a09c83b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7799bb92-71f4-4c2b-a0bc-dd9c89d40289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328262f7-28b9-4a8b-9fba-3a974cdc2682",
        "cursor": {
          "ref": "4f40715a-2780-43a6-8dc8-29efde97f1ba",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92f534b1-fdaf-4a72-98e0-a7a52f87f040"
        },
        "item": {
          "id": "328262f7-28b9-4a8b-9fba-3a974cdc2682",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3839f8ae-c731-454f-84fe-4208a794bfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c683fa8e-4400-4cc8-b003-308cb930d482",
        "cursor": {
          "ref": "bb6f561e-411a-4acc-980a-77d55a74f2e0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2fd59607-5561-4e5c-a709-3a28a98430c4"
        },
        "item": {
          "id": "c683fa8e-4400-4cc8-b003-308cb930d482",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5fbd7c5-8a77-4f97-b3ad-ce5874f06e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6a0b21-1045-462b-a87f-4ef266e84611",
        "cursor": {
          "ref": "d8eeebee-4c24-4dbb-a4d6-44aa3652f8ca",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8df94da5-9074-46ab-b032-0da031a0772e"
        },
        "item": {
          "id": "ed6a0b21-1045-462b-a87f-4ef266e84611",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5690b04-2562-4f72-8cef-9dfa6273615b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c58d1a-77df-486f-a4bf-69e81868022e",
        "cursor": {
          "ref": "4d02d3da-77d2-4a93-80ec-472a47d0573c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb3b492b-ae9f-4c0f-9d3f-6a9308cbc40b"
        },
        "item": {
          "id": "08c58d1a-77df-486f-a4bf-69e81868022e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "87fc356a-af91-4f6d-9755-29d1e204e626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a8824c-68bc-4585-b8e9-1b49163fc5bc",
        "cursor": {
          "ref": "12373525-ca6b-44e4-8b75-61c53b75055f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4312f91c-d1d1-4c2d-aa22-02722fa781a6"
        },
        "item": {
          "id": "33a8824c-68bc-4585-b8e9-1b49163fc5bc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92f2d3aa-eafc-44d3-80e7-94e3b2c051b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4b21b-a674-4e6d-b99f-8da098e7a167",
        "cursor": {
          "ref": "da14dd69-64de-468c-a5a8-b34ea7149ab5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3b0b16d9-344e-4af8-8765-29200e662f56"
        },
        "item": {
          "id": "7fe4b21b-a674-4e6d-b99f-8da098e7a167",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd9c73cd-71b3-42d5-8cc9-d0acd4e7cff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70716bcc-fed4-49a7-aa24-b1162aa0f627",
        "cursor": {
          "ref": "ed6c892f-21c5-41d7-86b9-ab5668b382e1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e6bf2e7c-5218-4025-b827-30971374086c"
        },
        "item": {
          "id": "70716bcc-fed4-49a7-aa24-b1162aa0f627",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "00562b64-b431-45f0-a9c0-7febf95377ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a75f46f-828b-4615-97db-72003cdab4d7",
        "cursor": {
          "ref": "d58a3a26-1bef-4864-8998-ba1f2df2971f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cb1727e9-1416-447f-8819-54b34fd25b0c"
        },
        "item": {
          "id": "1a75f46f-828b-4615-97db-72003cdab4d7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e3b3236f-3bbf-4f71-bef7-cf63c60170f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7de5d46-9590-49db-99b3-861084d400cf",
        "cursor": {
          "ref": "762f8c90-5bbd-4d86-a2cc-aa555399e905",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fdaf6c09-ef94-49c6-83fd-4520d2aba135"
        },
        "item": {
          "id": "b7de5d46-9590-49db-99b3-861084d400cf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71960cb3-c324-4c99-bc85-a30b81bb3d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4baf00-b56e-4edd-a2ff-bc97190d9e01",
        "cursor": {
          "ref": "ee4ab7f6-68d2-4b33-8650-d9435966cdfc",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c8a7743c-1aad-4cfe-8fd0-ab6673cdf63a"
        },
        "item": {
          "id": "8f4baf00-b56e-4edd-a2ff-bc97190d9e01",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3bfc610d-9cdd-4929-89a3-b5783afe6707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a721c5-d8fe-4337-8d4c-0b415c375528",
        "cursor": {
          "ref": "246ae886-6021-4a0a-9efc-7e0a04f1846f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "941a0ebb-ade6-42d6-88cc-5c0a639c1c2a"
        },
        "item": {
          "id": "c3a721c5-d8fe-4337-8d4c-0b415c375528",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31e8373f-74dd-4b32-90e4-283b8b5539a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c833c06c-072b-4dd5-a750-38dc98b1005d",
        "cursor": {
          "ref": "a0ed4431-0804-49aa-8bfc-96d063a2cc3f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "656f16c1-51f2-4263-9f98-d067f62fc293"
        },
        "item": {
          "id": "c833c06c-072b-4dd5-a750-38dc98b1005d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "35dde046-d2ee-43c8-9efb-de7c89f44f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81215b4c-26aa-414c-986a-c563e9a8d95a",
        "cursor": {
          "ref": "50f76ebd-c98d-4d3f-b782-c5177e7ca01a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d3c0c3d5-3ed4-4c28-a321-66bcfed7b60f"
        },
        "item": {
          "id": "81215b4c-26aa-414c-986a-c563e9a8d95a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13dc60c4-523e-4aff-97b7-191c64c73138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95e2d07-1ef8-4ba7-8ebf-2f763f41d57d",
        "cursor": {
          "ref": "49b2c988-991e-4a46-b98b-3d1a44f7d3b0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e0955cfa-e633-4218-8b8d-6d3849e8a724"
        },
        "item": {
          "id": "f95e2d07-1ef8-4ba7-8ebf-2f763f41d57d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c844b145-865a-493f-9dfc-5ead9661cc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6b589e-56e0-4b77-9ad0-ee95ede658dc",
        "cursor": {
          "ref": "daa51cf6-a813-440e-ba7e-5d0df2708298",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "08cedb0c-18e3-44e0-83f8-8c0227930729"
        },
        "item": {
          "id": "bc6b589e-56e0-4b77-9ad0-ee95ede658dc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "817d4505-f128-4e66-868d-70496107cec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025a8db-232f-4601-a927-c1312ed14ac9",
        "cursor": {
          "ref": "f517cbb7-d417-46d5-837b-14efde0e88b1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b5ee84da-4a21-49ff-8ea6-da321ffb7089"
        },
        "item": {
          "id": "5025a8db-232f-4601-a927-c1312ed14ac9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbc175a8-b6ea-48dc-97f0-66405d06c39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08259785-e846-43db-8c9c-f8c02d9883ee",
        "cursor": {
          "ref": "48810dd1-7219-4ff0-8fe1-bd248fcf8300",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "afac95d7-01ed-403b-bffb-c71bfd1137c1"
        },
        "item": {
          "id": "08259785-e846-43db-8c9c-f8c02d9883ee",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "62ecc5c2-2d95-4dad-85bb-85182356369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dba6754-7420-4be3-9fc0-8ecae1f6816a",
        "cursor": {
          "ref": "482f853f-9ace-4e88-b395-215de2f80b9a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "03a6daed-8bbb-4ec3-9f75-8d6499a07b52"
        },
        "item": {
          "id": "4dba6754-7420-4be3-9fc0-8ecae1f6816a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6d76c5fd-864d-40df-9ca0-e833a8875edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2b4873-a9b1-4065-a29c-366697b51d94",
        "cursor": {
          "ref": "8fdeaf50-a9ac-4b10-81b7-519f41adde3b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f64097f6-1d69-459b-97e8-11df98dcc68a"
        },
        "item": {
          "id": "5d2b4873-a9b1-4065-a29c-366697b51d94",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "358aad37-c2c1-4d88-9521-dc08fd1986dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e1e402-7daa-48ec-9c36-83fc14d2b92b",
        "cursor": {
          "ref": "5ca8fd50-e116-4284-a548-e8db34d11719",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4c5c6379-9d0d-4f34-ae97-1ce6a2cdbd5f"
        },
        "item": {
          "id": "e5e1e402-7daa-48ec-9c36-83fc14d2b92b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a12a9d91-9949-454f-a2d5-12a674dd8790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f6351-1587-4a25-90e7-8f66e190b149",
        "cursor": {
          "ref": "c7cf1d3b-d827-4265-86dc-78d989f5db79",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a36f7ee0-cde7-44e8-a80c-0f9b139ed353"
        },
        "item": {
          "id": "9f1f6351-1587-4a25-90e7-8f66e190b149",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "88e7792a-03f7-4d23-b5eb-3de80a88269f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d51c4-f16c-4b4a-950b-6d1b7a370a28",
        "cursor": {
          "ref": "89f3c942-310d-4844-9f2e-1ea29ceaea62",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a404e789-088e-4da5-a48a-bd202fabdc21"
        },
        "item": {
          "id": "d49d51c4-f16c-4b4a-950b-6d1b7a370a28",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95a8c4a1-6066-4bae-966c-a82e745cd24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb0a15-1518-4df2-8aae-6b402ea47ab5",
        "cursor": {
          "ref": "3ef7a65c-4a70-432d-903b-e5d4fe5cba41",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b3bc72a4-0995-401b-8ea3-ee0b41846f13"
        },
        "item": {
          "id": "10fb0a15-1518-4df2-8aae-6b402ea47ab5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8f1f1894-92b9-4754-8c4d-d9179acd4be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c2a8fb-a8ba-4187-b89a-d62077f75900",
        "cursor": {
          "ref": "574a8643-8372-4ec6-b0fc-512397af6a60",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2be2851e-3fe7-4a71-b31d-c3321ab0782e"
        },
        "item": {
          "id": "06c2a8fb-a8ba-4187-b89a-d62077f75900",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c3152837-7949-40c1-9675-1e11cfd2e1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea022d-dcbc-40f0-af84-832cf446d007",
        "cursor": {
          "ref": "29e38bf1-d87d-425c-86c1-8b232929c1a5",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9b4f85d3-a515-4f5c-96ed-b426766fcc63"
        },
        "item": {
          "id": "c0ea022d-dcbc-40f0-af84-832cf446d007",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d1fe8cf9-8221-4509-9654-1bc482fcd320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b67c80f-3c59-47cd-bd63-aaa851d502bd",
        "cursor": {
          "ref": "a52a9207-92aa-4894-b827-80b3e1657a63",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bdfd6bac-8028-427d-8ba9-14fe0eab7ed5"
        },
        "item": {
          "id": "8b67c80f-3c59-47cd-bd63-aaa851d502bd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a95b8759-d51f-4dae-81cb-1ac5c4e04cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a813d92c-6f62-48c0-a29f-2d0bec6579d8",
        "cursor": {
          "ref": "7249155a-1939-434e-ac9b-fb37f78cfcce",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5a4394e2-6075-40a7-b2fc-3ee650e3eec4"
        },
        "item": {
          "id": "a813d92c-6f62-48c0-a29f-2d0bec6579d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3e26b986-0b15-4c47-8340-7ee83f43aa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda9da47-89d6-4554-be94-81e4881f7f0d",
        "cursor": {
          "ref": "7fc4d2a5-f717-4a74-9cbb-d6d96d95dd5a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c6730f3f-0188-48a9-ac65-25e2e29a9fd8"
        },
        "item": {
          "id": "eda9da47-89d6-4554-be94-81e4881f7f0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e07821db-f3b1-4018-a4a9-ecbabfefdc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321fdf8e-febf-4917-a13a-55acad97a7d6",
        "cursor": {
          "ref": "81fde64b-a3c3-48c2-b47b-d3e5dff98ca1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e77e77c9-05ec-48d6-9fae-b422ceae3698"
        },
        "item": {
          "id": "321fdf8e-febf-4917-a13a-55acad97a7d6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a5b3bdb5-292f-4293-b13d-8633bc1cce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7871979e-1d9f-4bf7-bdf1-9f2dd9879a1f",
        "cursor": {
          "ref": "4fcf5204-f6ad-433d-b795-52944cae3331",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6ff34658-de99-453b-b2ea-642fc8096f20"
        },
        "item": {
          "id": "7871979e-1d9f-4bf7-bdf1-9f2dd9879a1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a0f592f9-3899-41de-badf-011b0eb2b84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb1d47b-6682-4717-a329-9d8821facf1c",
        "cursor": {
          "ref": "a0c5c2b2-5a2b-490a-a1ea-27b5381f7938",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5ea766c1-4846-44d2-9577-37a5ac1597b0"
        },
        "item": {
          "id": "0eb1d47b-6682-4717-a329-9d8821facf1c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "92be56c0-52fc-46ba-91ee-ac08dd980119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ea21d6-39b0-463b-898b-c424a0da9f8c",
        "cursor": {
          "ref": "af8856d7-bcec-4293-aaa4-e8c0b734b131",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "504040cd-afdb-4074-b43d-17ce31993a32"
        },
        "item": {
          "id": "13ea21d6-39b0-463b-898b-c424a0da9f8c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bf85706e-04cf-4481-b828-b5454812e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dcfc53-0537-4292-8439-95793bcd6666",
        "cursor": {
          "ref": "45a51316-05c0-40b9-8bbd-e4f661754dd6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1b1ffbaa-d2d7-462d-b8ef-21118aa1ae05"
        },
        "item": {
          "id": "15dcfc53-0537-4292-8439-95793bcd6666",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ef8e4843-f2ae-4978-926f-c2e3276f817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0391601b-c178-449e-b673-0d80623c88e2",
        "cursor": {
          "ref": "e898925b-66cb-4c80-afeb-ad49aad8a512",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "efbcb124-5eb0-493a-a569-09d18988cc63"
        },
        "item": {
          "id": "0391601b-c178-449e-b673-0d80623c88e2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6864e7b9-3382-4228-a404-02b1b191efc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350b518f-6783-451d-9569-ea9087ec4ef9",
        "cursor": {
          "ref": "9274289a-1dd6-41fb-97ec-ea209fd06116",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0a51be59-7f49-4be0-9dd0-eef1bbc3350c"
        },
        "item": {
          "id": "350b518f-6783-451d-9569-ea9087ec4ef9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a87d8b20-1aca-452e-a11b-02845b720b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1d4325-525d-4e0a-8a03-1bb020d00fd8",
        "cursor": {
          "ref": "8b10c8df-7042-4a77-a3ec-2e53aed071f1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ae9aecc0-32e9-4fda-8913-0d0414f26498"
        },
        "item": {
          "id": "1d1d4325-525d-4e0a-8a03-1bb020d00fd8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e9de9af8-3b46-44e2-96b1-62799073c236",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33b0f1c-b838-4af6-b0a4-a9781e2030d0",
        "cursor": {
          "ref": "d87c6235-bebc-4923-8fae-db44aea5000e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9f855e49-44d6-43d3-a619-b823caa04734"
        },
        "item": {
          "id": "e33b0f1c-b838-4af6-b0a4-a9781e2030d0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f71043c9-8500-4f89-9feb-fd1827f34c0b",
          "status": "OK",
          "code": 200,
          "responseTime": 585,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5e8dd1-3e68-4075-80e7-1d15ede424d4",
        "cursor": {
          "ref": "874e4cca-e0b8-461b-bdcd-ea11886cf90d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c18f8c2f-1d45-4240-ab6a-0b494e05a021"
        },
        "item": {
          "id": "ef5e8dd1-3e68-4075-80e7-1d15ede424d4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6bcd7435-d826-4c7b-9f6d-53a65ad6f4d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1582,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f9cc98-cb84-4b3e-bd78-1d2a1ffbf013",
        "cursor": {
          "ref": "1481d186-dd2b-406f-8d07-525d38a28918",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b11c4e47-6e6f-4494-b0f1-c944a93d95ee"
        },
        "item": {
          "id": "14f9cc98-cb84-4b3e-bd78-1d2a1ffbf013",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "08b2cc83-339f-43f6-b90a-a347ca4958b2",
          "status": "OK",
          "code": 200,
          "responseTime": 1807,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e3a89c-0b78-4f37-8843-6bc1ecf88349",
        "cursor": {
          "ref": "7fb354fa-ba60-4431-a922-46de48ba7c17",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c8a399f3-b058-4780-8239-56aef61c4554"
        },
        "item": {
          "id": "e9e3a89c-0b78-4f37-8843-6bc1ecf88349",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6dc16284-3f5d-43b8-a239-f1591e22694f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e3a89c-0b78-4f37-8843-6bc1ecf88349",
        "cursor": {
          "ref": "7fb354fa-ba60-4431-a922-46de48ba7c17",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c8a399f3-b058-4780-8239-56aef61c4554"
        },
        "item": {
          "id": "e9e3a89c-0b78-4f37-8843-6bc1ecf88349",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6dc16284-3f5d-43b8-a239-f1591e22694f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d83478-463a-460b-bfd2-eb48bb1eb00e",
        "cursor": {
          "ref": "71fbec02-3b33-4274-b5b1-e6305f32263e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "38f7e682-9867-4385-a766-b3c5d988a324"
        },
        "item": {
          "id": "06d83478-463a-460b-bfd2-eb48bb1eb00e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "390c7336-3d0a-489c-a44c-efbccb274c62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8be793-e76a-42a2-9258-d95ca70be266",
        "cursor": {
          "ref": "0511cc24-7c77-465a-9e2d-4bad6699f838",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "402652bc-11c7-4007-993b-1afcfb801892"
        },
        "item": {
          "id": "4e8be793-e76a-42a2-9258-d95ca70be266",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2bb49ab3-2bce-4e1e-a81a-0434932af422",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}