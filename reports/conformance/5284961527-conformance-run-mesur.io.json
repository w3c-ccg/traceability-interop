{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2de9dd91-4f1d-460e-82ef-b7109236656b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "30383d9a-6501-4157-a3b0-f33ae8ee6c67",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bc9de6d-f4fa-4fae-8471-d5bc2ef90c40",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40190800-d40f-4263-89a8-6a68d9d71af1"
                }
              }
            ]
          },
          {
            "id": "68fc922c-1acf-4c77-a033-43da8b1db9b7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14d1f42c-f65e-461d-beee-6c64e5196e46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "22b4f3f2-643b-407c-8d0f-d0b7fbb51193"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6dc35d4b-f76c-437f-a929-96db5a89ba16",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5d47cb1-cb07-4f1a-8c74-839d225cdd6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b31d8e5-0534-4c08-a21e-a2fa4e056292",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ee7631a-8d26-496a-9c94-44e45550d82a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db529ced-2891-468b-bfac-7f0c83b80acc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43fd10fe-c844-4c2c-a84e-6c36f246b08f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97e7877a-e7b9-4856-ad41-16430c60aa94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c00a22be-0015-4ee8-bf44-10c524c0f3a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56259dfd-b931-4223-aefb-af0e7618d6e6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eec1beda-db98-44c9-8557-e0a408e32fe5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "77386622-b85b-4899-94af-d6ccb403f1d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57ec04bb-1ebd-4bd8-b1f6-08f2c2dcbab6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ecdc3cf-5bae-4ae7-b981-bf1de07b252b"
            }
          }
        ]
      },
      {
        "id": "6a4b0161-16e4-4e86-955e-f8d4f142d235",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "52b08fd7-859d-418e-abb2-3f66edc4922f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e97013a1-7d11-49d6-8a63-821979c2e10e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c5ea05b-9150-430e-83d4-f30b3318f71f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee682b6f-2d0a-4c09-8154-fdf9777ab42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60215e21-daf9-4235-b6d8-b916425224c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637e0bf2-e16f-45fa-9d71-379ef689710b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fdabbd-3ccb-49e9-8749-b5c64ad83c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7cb9eda-ff39-418a-b608-dc48a3fe5373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89c3a75-de52-43d3-bcd5-88738d1900ff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370beec1-6da3-4a2b-a274-51acf4f00e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "829757fd-c944-4d0e-b4ed-89d1d78bf62f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bee8f8f-950c-452e-b122-d1a2bb9dba76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d16c8ee2-43b2-40f5-8c6d-53cc895c1146",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e748a75a-e96f-4288-9126-c3175ba9e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a3cc9b5-c3f1-4a7e-bb3a-2553d44e5930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa25248-84e8-4fb2-aac5-c49f11b9405b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ab6a9d-3ea2-4c28-8efb-fdd9343c4107"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86ebaa02-e1ba-426b-9e91-990229422adc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4dba53e-e597-4341-9b4d-bbe220c75185",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0878433b-8530-49f7-8aa5-82dd7230ddc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f09eb0e-0be2-4a9f-8c44-89d3ed1bab5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daf806f6-6fd9-490c-b8fc-2ffec524cc30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1844c8d7-ac31-443a-a1a5-65f94a19c3eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea4d692a-12ab-4ad5-8bcc-cad9911ce32b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eee8ca42-89c0-4d4c-a6e3-179db5707ac0"
            }
          }
        ]
      },
      {
        "id": "3c03ecd4-7795-413a-94ca-9fcc98d55d8b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "28d2823d-7f02-4541-870d-dcc74efc1b7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69861da2-4822-464f-96ff-a815ff313e89",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3bc3a199-4dc9-45d5-b0c5-1770029374a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8705a5d-e8cf-4846-9bf0-1a99da1cfff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e50bced-c838-46f3-9432-327f40ac993c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c5d51-fa58-49b5-8e3d-ed99ae06017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dafa0b8d-a2bf-41ad-ad0c-6657967505f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a052201-f149-4c3a-b953-ea5945108c99",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47655777-b53b-474f-ad02-49b4b22830f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dad4f2-bac5-480a-8354-5ae85d11e2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02d6ce4-cded-412a-9ad2-142d4f475a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "399c7cdb-6f8d-4533-97b1-ad3c3f97b918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce8c6ef-85a3-47fc-ac6d-827b7764b860",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25c6e0c-e251-424e-840f-b0cc922ecc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9236f87-bbbe-43a8-a96f-5846c2b852ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a22a7b-36f0-4a0d-8b87-6134136b3857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25989702-a956-43b9-9c6c-56258ea2069a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f9f3d6-c023-4a58-9f76-5676fb0a9736",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9adea32-a1dc-490d-9790-78c050a56604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39313c9-6d4c-4fba-a519-7ba2c2798800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128be76-f741-4276-93d2-7cdf4dcd655c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd5621a7-b0a6-4a22-ab10-c72ca36e123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a4282-8f48-4f63-93b5-b02cb61ce7c3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90914d-f6f7-40ff-bd69-7fc5fbfbe746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a014faf-89ec-41aa-9735-eace420dfe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4203f3-290a-4e60-b2e1-f46e00afc181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61536b7a-6f9c-4a2f-86bb-1429289b180c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04628bb-ec25-4ab3-aabc-90b0333409db",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fadbe36-3557-4bb2-b77f-2189082a6569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49197d74-c725-4648-9d01-2a14787c74ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb3cd90-29bd-4ec0-a6e1-485fa2560ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9439dd03-7511-40b3-88fb-ba24a65ea011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785a8b7e-3324-4baf-9f76-672118f0dca5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376d88f-ddc0-4c4d-98f7-68136b4f0998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2c48e1-d826-435a-b99c-8d2ea8699132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74b1ae1-3e9b-4dd4-924e-2a45a77000d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f8f542-fb86-41c0-98b3-e75813b2db2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb767f-ed13-4265-a017-df2bcfaa6d72",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836def76-3bf9-4515-a7be-516af67ee8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee62cfd-a735-414f-b0b6-179f28a8eb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480bfaf3-8485-4ed8-b6a3-2fe641199dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad56517a-de7d-4e4f-9d28-e0584e68fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086dbf76-b01e-4f77-8d1f-fe54e63cb3cb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4287dd4-a393-48e8-af8b-6831e2957228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0f5cd-907d-4dee-a2b3-85205cb87f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de0b360-82df-4051-81a0-b02a7047a301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13c11fe-100c-4231-af53-0c19690b236d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae358aa-6a6c-4772-b572-5ca5367c0db0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150e644-b252-4ea0-adf7-c2ee21079ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b61108-92f5-46a3-80a8-5bf33e9aa617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72ff9fd-ee80-4217-9452-264ad682aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35b37e47-abc5-4835-ae85-a6ef4d5c77ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370aaa6f-a8f4-410d-9ba1-f321df62e60e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d189f9-2544-4e2e-a972-d0d0827f4ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a602ec62-95d2-438b-a7e1-c4d1de4f1d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e644f49-98aa-4b88-8b4a-1cadd55f6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0acf0dad-dd85-4db7-90bb-309f554bd2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef3304c-f821-4b37-8246-f92ab05560c4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1deca7d-dd60-4c54-93ba-400f436813f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b81b9d0-d167-4d2b-8974-f6b3ee7c27bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc14347-9ec7-429e-8e80-8e9e3cbaa265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6db3544-8737-450e-ba2a-68d0cb58c8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de914b15-398b-48f0-b229-d28e3b0b5f80",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f58dd5-9e23-49c2-a851-60a4f27272de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facd9326-dbf4-47ea-9641-609096ff6188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a86a04-2c16-4273-98d6-300d26e3d076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1cac4ad-dd11-416b-9b8c-3a5e500c5080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eadb99-4159-4000-8a1c-17fc6e90ef4f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829764c-25ce-448f-9934-f690010866eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752c06a3-295a-40b6-89cc-2b6146203ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423bbe55-31cd-4497-9f87-597720852e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b3b140-f228-4664-8c75-9d40214f8d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8bb2a0-72d4-4e91-b2e2-4ed05198848c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0224af-867e-4b91-b10b-af2e7caf4aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff305022-a2cf-400a-b31f-df32f37a6f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0f51fc-3f8f-40a2-a95f-9583f115dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8580688a-0fbd-4f2d-a499-80b22672490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926e6269-fb37-4170-a659-fa68f17f923b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e208a5-6b84-4484-bd28-9004b54510d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81291a01-af14-48d5-b8ee-d55601b9d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1ce8e1-84a7-4671-a279-d8155396106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f092108e-a952-47be-a8d8-219c72aacee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f4fb11-f363-4bd4-8e98-c8828dcc3c13",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0534c0d8-36a9-4c43-9efe-2ba56955d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6012eb68-e9e9-432b-bc37-720d7322fca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393fbb44-2c59-4fec-aee6-9732cad80b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708e9157-065a-4a66-8bf1-f11b5573c076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b48eef-d449-414b-a9aa-788db7a28910",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba116edd-197b-4357-b67f-4a692c6d7d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567004a2-7575-4f24-a45f-fc12985389a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fe141a-cdfc-439d-a75f-c3e138067e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f36236b-f669-4680-90a7-79f91daf3994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a68438-bbf6-48f9-9398-bf05f3e238d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e9b7bf-fd11-4fd8-825a-623db11ad006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e6644d-238b-45da-88cc-eec0ce46d8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3f5988-a852-46c6-a3b8-f4d2e4e8d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baefa350-9b64-4f96-a83d-5c41d6c361b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed03875-ecfc-4d65-9639-6e76266223fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c0e197-2635-44f7-986a-c93533e402d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83613fb3-ed94-4a91-9bb6-3d154314d369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95fa80c-1701-4a42-ad7c-59346c49cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a6428f-f49c-4adc-9861-cb905c544f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a3d3af-291f-4247-8f21-25fe5736d9c1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8450d26a-28eb-41d0-9784-0d68f0049912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acfbb53-f4e2-42d8-adc5-0719781bc7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb0b20a-0297-449f-96e5-a84ad32ecf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c007d0-4af8-455d-9390-6d6a1dc566ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd0e98d-583e-473d-bd67-9aee5a89592f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e1c83-d1ae-4142-8cb5-1bffff11ea3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bf0add-3863-4806-9751-3f258a2064be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9a3c62-aeaa-47b5-bc64-1e9b5264ca04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18ee14f5-7c4d-42a2-bd6a-bfb66e9b11c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe7cbda-6881-4264-9e46-e28aa52ea615",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ec4ecd-5a33-425e-8fb8-fb8f93b04db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f2b23f-1197-4791-bc9b-d64c3afba7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e058f89-2bfb-4c14-bdac-9d1508f5af87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c780547b-b3c6-4f62-b8f4-8af9e7d8d32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0515aa02-f631-4605-9617-2378805f9473",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39128db0-b657-492f-9253-278bc0aa7179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbc38a1-32ff-48fb-a8f1-309911a51475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129beacd-ce77-4a49-bd90-a959330f522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7695e5bd-ebad-4fe1-9000-b2ae78507c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf5b0d8-440a-411f-97bc-03764ec862b6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647156e6-53fc-4604-9995-45822548db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1250db34-343f-4bde-b493-09e89f94dde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236038a-3bb9-4359-9186-e18bce75be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "251dc446-d3db-4886-982b-a47d2bfed4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd008d10-5acc-4a18-8792-2bbf6758842f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd330149-c974-4e6e-bc95-1e43f89c744e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e169b91-fc66-4c4b-bbde-86057de03aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61237a42-d915-47c5-a5f1-386a7dd5e345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19ac1e3-906f-4efe-b2d3-7962d84e098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd29632c-47a2-49be-869b-90491b8aa2d9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c1ee5e-c0e7-40af-abf4-46a098cd91ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b97b0d2-f59d-4d86-9a87-5522a1b378fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c1a96-28db-4bfc-91aa-c84e412d9204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e0023b-1e85-4418-b562-37588f58b9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b775ee7-9586-413e-9511-fe1af1fec34d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6d4183-46fd-45fa-a450-3424c4e7f2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e6cffb-55a4-4812-95ea-b90ef317de24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fdf63b-c9b8-4f7d-a8ca-2f7c82c8b444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e0b233-1dd7-406e-8869-db04a951ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a287c0a5-6f85-440d-b31a-35a3df8ef393",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5d3ca2-e53d-457b-b332-8917d9f1ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea833c04-18fa-4049-9940-0517853ce470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c6059f-c6fd-4adb-8271-a5df87da5d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29b3e9b-4d02-4735-a6b8-2fc57176946e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e0872a-e78c-48eb-a895-2a5121f202fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8c6858-767f-4f3f-beeb-246daf6bc8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03138b25-e4bd-498f-8cb2-14732a7fcfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50650cb4-162f-42d3-8235-cb0f58eb67aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b308fdad-10aa-4272-8525-f44c08627c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26224efd-c85a-482f-826d-e286bf35bf98",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e42c8f4-cfa9-4a6b-8aa4-085efee90139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551909a6-9e51-43ca-85d6-e12f76bae6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0961f6-49d5-4394-b4c2-cf6f54f9d031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d975760-3dd9-4d30-9d0a-ef76e934122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05efe21-f627-4b29-965e-5fd660c61524",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73078607-6d5f-4596-a417-bec516983df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd26c6b-2b59-42da-b71e-a9c75a01140a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b0ee2d-d81a-4c2e-84a9-224d93a2887b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2970adf-1d30-4a9c-a4b7-4287624fe5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51574eae-2088-45e1-b627-631b0098935f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c8e4f-ff62-4158-beb3-a7906a48625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72615645-e012-40ec-a8ef-6a7cd0d09b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d30e2d-8a8a-463f-a17c-44ff8fcb70e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "515b3331-3e46-483e-ac23-1fd7bd21f35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91068017-ac04-4f85-9951-21167be8e1ed",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f342de-1281-4c2b-8b97-1294125a2df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f65bcd5-0c49-4585-a806-6ef5b006e5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ee61a-048e-4a4e-bd01-e414a63b3705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51566c4a-e0c4-4446-8d6f-d7a4e25bc795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30202c99-61b1-4af5-9f93-fd0a685bf345",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ebb6b5-f308-44c0-8e30-7b307fffb75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86c743d-768f-4c94-8300-3d45cc8be170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a86688-0323-4e0f-a99c-9c4b5d4ac2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6350f89b-bc0d-4610-ad2e-007ffd39f751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8163321b-ed68-4e2c-8325-fc08e146e222",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e669247-a86d-4f47-b31d-a1cd88f7bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5abf17d6-8f9b-4c77-8b72-96015881594d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a822e7da-765e-4610-b703-b8f255b95421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "090da844-f8cc-4d14-9953-affcbf89c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c7ea82-f685-45c3-b072-4122c801f132",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73136410-423e-47da-a600-0a9fd61e83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fdce77-7c4c-4c8e-b249-db27cebd1fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bea9b1e-5a0b-465b-a0cb-70911bbf213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e9fc8f-9f07-4844-a850-8ebb2e5da9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0114050f-39fa-4090-863c-cdc75cac81de",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e67098-6afe-499f-9a5e-c2e1fafb4a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29806055-cd1f-412d-ba7f-c1df49db9b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153d6310-db8e-4c14-aa49-b5634fe1e69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3a549f-e00e-4448-87f4-76c4deabbec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d0309d-a455-423d-afd1-31b4591b3f22",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12912ce-3cc5-4c6c-a158-4d867f9fd13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0c8d58-2439-4821-9b02-e7bdbc75eb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4c358-58c7-4fb2-94f2-497ce36581de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ade7986-600a-4802-b5c5-69bcc3a8240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b33b439-4f25-4964-8a86-223d488b393f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b53a3-645e-4991-99ae-e2361e42bae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9623d27-a9e7-4326-b254-348453458268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf9fad9-2421-49d8-858f-53f1e832a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aedc4b4-744a-4916-8695-32faaf3741ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fc83dd-2247-4fe7-93ab-15ffa3e229ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6899fb35-d321-412e-887f-4bde40a6532c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cee41c6-9f3a-44ed-8dec-7450e0163710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0608f28b-af4f-477b-bcdc-7a8e5a50af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8c10f7-f4cf-4873-b7b3-de08113d4b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56eaf8a-0332-491d-bfeb-931350cadbf1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04554ac7-37b2-4cf1-99d5-a32ac13569a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f20588-dd94-416d-a3bf-1c3644cc8748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dec4562-b104-4def-aa61-0e822736aeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "38f767e5-1485-473a-b42b-47aaa03632e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e406d2-d728-49ae-b94e-0dd80442b636",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc93d52e-1363-411e-97cf-db52a2d1a76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eae0b58-a38a-4335-9b20-9dbb39f3b901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db5743b-6268-4085-8530-75dfb344d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a88df0-ff65-4665-a2c4-486c7288d487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0598b-704b-489b-91d8-dbd4fa88546d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8a1335-5d44-4651-b00b-80213cc52e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48087acd-0daf-4bff-bf1f-b9834e7fef34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a573088-7f0c-4004-b678-daec966394ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f5c131-47c5-4e54-b775-81137bd6315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa221b4-eede-4a85-a847-286018fb613f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32038858-4cec-4760-adba-759576a8b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba3b7b8-c0cb-4b5b-9a79-09d131714cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc6e8a-1a9d-4930-ad3d-30a26de8efd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f042d55d-bb6a-4589-8c93-3258a4c5854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8757c8ce-1ac5-477f-8e28-6aa72ccf7241",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce69b68-aab4-4c9f-9248-7aa8bb67e5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c548bfbe-d542-4a99-b451-d1a60c04522b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d439ef-9a30-47b1-bc87-6741aa226957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "183b38c8-1c3a-44df-a0de-817456d14211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1e60b4-f3aa-48fe-a1c9-c9eca03f050e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4a84ac-2f50-43ec-8f54-c00cae160961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c9eb3d-98b0-45d5-9b19-2ae256bed465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b480e8eb-1a55-4dd1-8535-d7f45e8edd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d27fb7-ec00-43c7-bbfd-d375a0d5578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf8e4a-b56f-4b8d-9222-0cf757211bf1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219055d4-938d-4877-83c7-c21b40f021d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7800eaad-e9c1-4763-b10f-0d3c992e5c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93206f60-880f-40b2-91da-3c5d42961ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81cff1c9-ba22-4491-8e7e-a6ee03f07138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd9a683-6897-4586-88e1-52ef18fae904",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6821bcb4-d19f-47ac-ba8b-885317fc8dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89f86ef-d2c5-4a0f-82e4-8cfe6d9108d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc03ab8-8ea5-4c13-b5f3-526d867e44f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b701640-6595-42fa-9cea-00dce981cb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883d351f-9c9f-4328-89ea-d6512bb8e52c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111773f3-0e9c-49b2-90f4-fc834a40d16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5b0ea7-4704-4dce-a4e5-174420f09255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7660e-acc9-4553-841b-e98020a28675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3146b424-6d87-4a8b-85a9-1359660f9174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e661c78d-5ffb-4289-bf0a-c0984f212ec4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9890f345-d483-47bf-8f4f-8cf20a9e4211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be22d9ef-798f-4816-8c3c-10fd42389fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e352c7-fb0d-42a4-8d51-193035c25aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "63482bf6-c499-4956-bc7b-3a21a69f8283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fd2ec8-39de-43c7-8caf-ee0e3b3ead55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bb4654-4713-4d68-863b-4c8cba687438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4102d301-cfe3-4a28-83e1-c737265191ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed4a6f-a1cb-4fdc-8473-c8b3db27ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3ba8e0-a56b-4878-a5bb-83780dbcf16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0220c166-9487-43ed-8f5c-6ca52edc0960",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7fd725-e32f-457a-91c0-00f6aa56f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72945c6b-f051-405d-a590-cc987f5bbcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cabdb77-c2ae-4e74-8376-6d3e2b547496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43948c8e-889a-4584-8073-72a5ebba0540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bb3199-6ad4-4e6a-a8d4-b9b6a171bc64",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e29ddd9-c24d-43b3-a083-254683633585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3769a26-959e-485a-8948-8b3334d489f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae48ff-55e7-4e26-ba11-bac27142bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "756973de-777b-4ffc-b147-b4a50152c4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1aecb4-d341-47eb-9bb9-ccd0d727f3e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364f91c0-65e1-46a2-9720-4ace8612fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77d057d-34d7-4eb1-af12-6219cba5745e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de0c63-e429-4dc9-b0d5-51e8cdf1bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "420c1906-37c3-4f06-a313-450719111855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406110cc-26b6-4801-89f9-90e3ceb50da3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34279fe3-3fa2-4e3d-841c-23ab9514f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c806f55e-7341-4539-9806-d2f5cdee7864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3394787-c86e-4349-9b76-3206f710c463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc8baed-1a15-41f9-aaf9-84ae088c1c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e6ee4a-f710-4724-ab87-7f0fe55a20f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e69a305-514a-4094-82a9-3d1015e31bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e91ff-4590-4d72-a3dc-71c331c8352e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c19763-3399-4762-a449-1977eafdc68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5342bbff-8aba-44c0-a99f-501ef5968b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5a672b-ebd4-4186-9458-b9e317ef1f3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba2bb50-df6c-4d17-baa1-726c604c428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57e3692-536a-498f-9c61-7051e13322c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1992422-0585-40ad-956b-09522896c72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dca87bf-f722-4774-8ee1-7f09bb6b83a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eefc0b-e6ed-46da-aa26-d84e60e3d487",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4790127c-d1ca-48cc-8edd-fb5ca05c2fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35ad20b-99b5-4694-a807-0c3c1934bfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41cb2b-c32f-4938-bccf-f27866804413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ffc0d6-70f4-4b0a-8d43-84bedfb0f224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48ec319-f963-40be-86d9-fa86e2281769",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d370b4-f905-4ec0-ac01-925cca036247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a92d475-5ad8-4aba-9747-a1a748ffd79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c742651-34b0-44ec-a9c1-39f2ae361b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62f6efb-fbcf-4815-a890-9ac11ec84743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7de0873-d476-4c7a-b3ae-c2416d1ee4ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c21dc49-88ae-4064-bdde-6980365baf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ad3f2b-d6c3-4b51-b63e-68652c53716f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a29a8b-1bdd-4708-adbe-8118eab2901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2461e145-1850-4a05-9d81-24a74f00a364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a876beef-7d04-4c67-9449-013d99c82474",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fae062-59e6-43ef-899b-8022847f6cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e85c56-0a39-4104-b76a-e3dcae376f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ae4371-5031-4d70-8bd7-6703cd151c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ce5933-d8f4-4bf3-af3f-2190cc3d04d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88256526-1a70-4562-bd64-61f941dc12ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197cf9ee-3e88-42de-8b2a-92188daac222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce3c937-ad4c-4e5f-8d54-11b66bf161cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7522c82-7c32-41a4-9d7f-8c9cc3acb7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb78219-a6d9-4165-8418-335022f3f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf87f930-69e8-4084-96d1-ccd2b106fed2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47715ac5-2932-4d45-ad8a-f9551d4955f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d401d5a7-49a1-4f96-97a3-a90c21eb18d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73bbf67-5cca-4aae-bd4f-00eaace617be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b26f1d-7335-425a-bdd2-37ac5852e806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc16629-38de-4f03-8270-cce3b1506254",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c63f7c-a481-4498-89ba-7905fef4c1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aff6ce-b4c0-4a25-956d-f07dd8ef6d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1b28fb-6158-46c9-87a3-ffb4e6c8f820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef24f03-8b96-4ad4-a914-6f6a1c5862ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205d915f-5839-4a59-934f-51b2138da50f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9032c609-22eb-48ac-9c06-ada4c5d957f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a42be23-6db6-458e-9c03-468b60c25115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24e2c9c-cd65-40bd-b917-148622e3a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb904e8-05b7-4467-9e0e-b53439999fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ef1cd-71f6-4702-ac79-9e65f04bcdee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d51f7c-330b-4109-aebe-aa6ab5a3ef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7bde03-5a98-4446-af79-2a663e0bb7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a69113-e2e9-476c-b41d-ffddde9448a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0b85ab-89ce-4c08-a3a3-dba445d96a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3911826a-01ae-42b7-b057-789917eaf9f7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b5ed7-8a0e-49a2-875c-d5b6cb08faa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f115855-2c33-4b48-bd27-ff0dc4d7ced3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018253e4-25e9-45fa-b4f2-abd0e9b87cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3c6fed-f669-4763-930a-c18f72f9eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74724b6c-9d5a-40b7-9238-ff740a15bf06",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f65a3a-854d-4473-b7ea-cd346d767156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a02a6b-d452-4aba-a58a-495ed0b3154e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3cbc3c-852c-4cd1-8a76-d706c8ed26e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3edf5533-1b2a-42c4-b09f-5644c6b20042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b57f9f-fe58-4803-aad3-1534a585e0ad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5794e5-f693-40df-af1a-da6fa0aef1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c254c5e-74f9-4fae-ba96-3f8f28c5d0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e89dee-ba3f-4492-8110-bccaabe481c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0850ff-24eb-4e66-bdfa-c98e21750592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989eb929-1b73-44a3-aa71-827d4ccb65d9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba76aa8-eb24-4470-86f6-747596dec32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4209c5e-b1fe-4217-812b-ce5d065969bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7c11b9-3b19-4202-8e6c-040f5c25ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e7bebf-7b0d-4445-9d83-6cc60fc24534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bb1bc7-9fed-418a-b8a6-d82582559cac",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f2427e-8dbd-44fd-b00e-99bc1f58f69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6887caa3-8710-431a-bd7f-934442240fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01199a5-8e01-4cf7-9d24-7822f4050d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8aac449-3007-49d6-98bc-7cf74cba52bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca59011-fc0a-456b-95ff-55bb584a6a47",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae604d8-2732-4924-8dc0-ab20b7757117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2819dd6-7fc0-45d4-ae60-ce411b43be95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678726bd-ec25-43da-b6df-c7ae08a63a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0980ffc6-0803-4247-a602-896b01ec6edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938470a4-0982-45a6-ba15-10a9fc567a00",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b232f1-75aa-4151-a5d3-9e272fe9b56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b60b3d-953f-4002-8983-9f1c9e51b2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc5d9ed-bf70-46b2-88b7-8e3ff36c1d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5afa8dcb-5225-4f71-8071-b41260398004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851656f7-2782-4062-8402-dea0232e1061",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fca741-7262-47fa-853e-dc51cc93c743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c41bd2a-aac3-4214-b09d-780f255b165a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5cf4ca-3863-4aff-96bd-bfb9807c1a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3b6f22-766b-4c1c-8d44-b62dd207175b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ced671b-b544-4b37-9904-4b98cfee3278",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dac2b47-8f83-490d-a28a-87bb00ee3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dd14d8-0e5a-4a7b-80bd-acc935cb3d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e2c35-258e-4459-b62f-b234fb2202dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2a86c7-6f41-4013-a81e-3b0640b1c225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8127dc05-d546-409e-9523-6a440285922c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff78ab5-efdc-4831-8531-5faf9a07dcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef82d19-cbf0-420f-aaa7-8a3be616137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8498a340-6c93-41a3-a649-efb9d79ab698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a8638f-3767-46ca-b4b8-4cb49883cee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847b0205-b816-453c-a280-ec6ba686c51c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5080e8a8-be39-459e-8365-b14b92227698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b4e31a-3904-4d3f-a870-fdfafe1ad7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f1219-b869-4960-86db-d7d0319d2bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b89d2fe-61a6-4dae-8cf5-d8ddcde5b060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec41c6e5-b1a0-4f1c-887c-150ede763792",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8824041-50cb-4bbc-b2ba-92b04394a9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c0bd8-5982-4b6e-aec9-076d1762faf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad248725-e9ee-4812-9d57-d64ac0ea734a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2683d6ed-2c98-4d18-8f86-3cb1b14ec8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c445e224-2ecc-43c6-b0a4-8ddc6354a81b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8beedf5-9386-48e6-9236-9bceed4f8e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c956d937-bbba-4d40-97b6-f1eb235b34cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d19807-9f10-4abd-89ab-67651afa6107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f2eb37-4feb-4414-a108-7cb7d2f29f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151c6c37-4db0-40e5-b908-cfb2aabe8806",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9231c31c-0cd1-4dda-aee0-e9fca6ea4532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e486d5-788b-4fc8-8ddb-7131f6f5857f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dcc6da-74be-4981-8958-1c7cd1da48f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35031ec7-5c0f-4343-be1f-69c9c22e19d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0405f66-72eb-499a-b33a-2e6c1bf4c32e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac05d50a-80e6-4d7f-8323-53d3c56578d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986c34a3-9f58-4bb2-bc8e-3bf29730d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53391f4d-b26f-4f15-8191-a93f3bbb966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb16779b-97d4-408f-b7dc-e49610de0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf102ced-1a93-4381-8b71-5e2a1d5118f0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13759f48-aa1e-4e17-a2b9-98ff844221ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a6afda-2db4-4b8e-99dc-4b17bb0a63f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf8ca30-7753-46c1-8e94-d846d090d70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf92f4b-8ea3-48b6-8bc2-15b4f607cde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d82a45-80ab-453e-babc-bf0a27e134d2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec950248-e149-4b09-af42-4ec1d5381a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b3df5e-2f84-40f4-85dd-f3550a9a6f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41be224c-cf7f-4377-9969-79f472ac7a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87659757-374c-4df5-9931-a6e2ddfefeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10eeb9d-9095-4d75-94cc-80b3d0edb43d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca5dfc1-e881-4800-972b-f06ba5c9ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4564a29c-3757-4816-a1f9-68832bda7a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af670942-9b4f-40d2-9740-f8219d07a258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d566af01-7952-407e-9ba3-693c403dccec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b7528c-d957-4ccc-886f-3227d12d7b14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb56ae56-7a8a-4bbc-85f9-e3b6b94dcab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9a5e60-c727-4c7e-bdd1-b556058e67a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd13bd1-5ca7-4c20-88f9-cc12731a9ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6434bc-9e24-42b2-a0af-4a7c36364acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c12cb4-99f0-4527-be37-fcc51f3656eb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb3ff04-9497-4806-842e-fd1ddcfc724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6394812-7b6a-47c4-968b-1fcac920f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9ff713-9e9c-487b-b834-68f3503ac65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "629e3683-0096-4e25-8d11-88d90da97b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684a35a6-8ad2-497a-ae96-fb27b09ae290",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3c195b-9bb2-458b-b819-875b5d1d4429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c7bd99-90fe-4a7c-9635-b85cc8c9169c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2129033e-3361-455e-9243-bcaabd0e1c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6feff110-d009-47c9-91da-6b49bd1249a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba07e535-583d-48b2-85b4-e85d8996c178",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241cdd62-f015-4833-ae1b-6e5ae78a9bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d05f9ab-6b21-4acb-8d55-aa5c1f69261d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a110f1a5-9673-4959-8b3e-de62bf08c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f605ccb7-6ebe-4f5d-8ebd-8a6456649328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4893fe7d-a4a3-4c21-b58c-70343533d0a4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad382b5-53ee-40f5-85e7-3efb645026da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd88412-d785-4dbc-aaba-b449912e7b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d9d001-d317-4eb3-9c0c-75457c2b5bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28d00695-b887-4a44-9533-8c8bd07730bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb4e658-f693-43d0-8001-f5d771faa207",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39b3221-0334-4870-a90f-13e68b1256e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffcfd4b-eecf-475c-ae01-c420f539d815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462653c-551a-474f-9e51-c7aa35332e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "504362f1-6dc5-4a9d-a3ea-1b96d0f61211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995ddf10-09e8-441f-881e-77d842c87e83",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d9ccff-b49a-4fbe-bb3a-387e7339126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16c51495-a953-49f8-8008-d91b416342e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9418c1e9-4ed0-48e7-85f0-cb476e6bb6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfc93e8-3af4-4d61-bb7f-feb2048595e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "964d5307-ae1d-433c-9b43-3461a83172a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d036e49-0117-4d54-aaec-cd42ed3c7d7a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b57c2b3-f21d-4a09-9c4d-413dc492ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1756c7b3-d922-437d-b62e-5e755b40df21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b10834-8e58-40aa-8218-7ba58609cbae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa0fa832-ebad-42db-8b99-1781c9b0613c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6422fe1-c6b1-4cee-be56-bb4142d1518a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feb9ec49-02e8-4739-a72b-1ffa343ac2af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0934037e-04dc-4b77-b16e-46a7b54fa813",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2775458-5d47-469f-afcc-fc99eb7b5b6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2122d58b-0d5b-4c58-b34a-027a4ae1d44d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54c170e6-c5d3-46c2-ab4a-abd42be54001"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71702344-344a-4bd2-a466-d6252ac32c77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca871810-8e2a-47d9-b60e-7076f90ab67e"
                }
              }
            ]
          },
          {
            "id": "74d8ff5f-6873-433a-8143-0bb2f75220da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6a93714-8031-4b83-9fb3-9ef733b9d78d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b238b38-6456-403d-b5b4-cacb1f216471",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ac5227c-fb55-4c10-b6e3-f1a434cf0fba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4a2dd8f-17ef-431a-9bfe-ef7b3eccff26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0fbe4e5-08cf-40eb-b03e-f17eaac07502"
                    }
                  }
                ]
              },
              {
                "id": "3907d821-c0a6-421e-9d23-c33dc9438fee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a461dbf4-2266-4a1e-82c3-c87cdc4a8f7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a092a720-a2b6-442f-9375-6a2324a91ee9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2eaf7e3-f314-427e-bf25-018ece737bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12c2c22e-317f-4baa-9d65-b84308c13f0c"
                    }
                  }
                ]
              },
              {
                "id": "bbdbbe8c-21bf-45c3-98ab-32732bb0071f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7176dd7-bba6-4e1b-8c79-6bf3db4ed360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "389f9575-393c-4b1a-b52f-7f14d1118671"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d226a34-4daf-4d59-8c22-3db105a377b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc37ff0b-90f3-4275-9c82-a7449b992bd9"
                    }
                  }
                ]
              },
              {
                "id": "0eee7791-f3c7-4270-87ce-f6c74e26c8e1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "138ade59-3e6f-4034-a9ba-9fcac076af22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a89fb1c-2396-4d0d-b90e-8e7444ef174d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b28ee45-fec0-4904-a4f0-5f98d007573c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e063a59d-6a97-4ddf-8a93-f97ff2b9596e"
                    }
                  }
                ]
              },
              {
                "id": "ea65f48d-e214-4402-a804-508c3e3b123b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdaa0100-aff4-43be-99e4-2cdc80c9f6df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32af3084-deb6-4e36-9c6c-efd265090a90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c860ce-df16-4081-87b2-3bf5785bd87d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df92ad8c-b5b4-42fb-be3b-63ee27b26729"
                    }
                  }
                ]
              },
              {
                "id": "aad95613-14f4-423a-9608-87ae1d08bf0a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "365b4308-bb36-4b1d-a121-dc65c212033c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "593933a3-1368-473f-919a-338ca07eeadc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d128a892-c859-4e86-a6b9-12543ebd089d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f6a14be-d3f8-4345-847d-d45ee92840a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7615b87-b814-46e2-9ced-7184eb4d94d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d09e89f-e32f-43c5-938e-2d524616e67a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3bdc5c0c-eeb5-46ca-bd2d-96001ddf0edd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56779f09-8754-41be-b91c-40b62826be89"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83d99fc7-fc5b-41e7-8f16-71ad8039dae6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9fc63f1f-cd27-456a-aadc-b488cc9f319e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97759822-bd05-4f0e-a424-f9e67ab5b90b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a50ed8d-7784-4a3a-b327-45d3a4ee2e33"
            }
          }
        ]
      },
      {
        "id": "14b73744-334e-4ca6-84c1-8bcccd60dbff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aed5d1e9-3f54-4437-a444-b41ee26b1bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "438308a9-12cb-49e4-9c12-42ee2e9f815a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a735f80-ebfb-40e5-b504-97585d2bff12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38607138-6a78-40c3-8300-929fa7b52f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a792dcd-59b4-448d-9c43-e5a3d710145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578fc94c-f076-445b-b25a-6ddf8ff4cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f994b1da-c943-41f2-ad38-f36404376869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bcaa73-bc29-44a2-b17d-ec5416eebbe6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ef6884-4f59-4314-bf78-24bdd1cf4c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be79e7fa-d5be-45ae-a9a1-8926515bbf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d961f1c4-ae95-451d-8a00-cfd28ca43108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a21919-b252-4f9a-859e-971b0d586481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e1d97a-87a2-49ca-a567-7a7055bf903d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55d9a11-3002-4175-b23d-e8d4523ee479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c404d4a4-f8cf-4f17-83a5-602e2de557e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c994effb-5842-409f-846b-7dbaddfdce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1f7db7-ab05-4670-b490-42503c805d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c929af-5028-4144-8bf6-e8efeff2765e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003bde64-a371-4bb7-a315-4fccd1145854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724ca782-f997-4435-a7e4-535e4a5ee87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dec104-ed03-40e3-b793-31a0b283eb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcc2ed2-e28c-472c-bc8f-0cae599728bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72014fba-27b1-4793-88f2-85c0062da525",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18b60c0-8174-441b-9836-dfeff04511d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23913b2f-79a9-4f8b-aee7-eb30913c2e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0966376c-be40-4c4b-98f8-b6261b9b4455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ce94c0-25e2-4c79-ad72-2a6def5945c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b718d4d-098c-46fd-8e24-81ddd25c1329",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052a7ec0-3cf0-490f-9dc5-b342334de5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31182ab1-4aa0-48b1-87a9-731be68bf0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6346c6-96b9-4ccc-9509-11f4861b1cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a28c52-7624-4c91-855e-c764cbe68807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0dc235-f512-4358-92cf-d79efde3c1ed",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543198a-42c5-449d-871f-119b54ab8829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d71ce5-5929-4f7a-8f32-41a931867b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7af502-2bd9-497a-985d-b3b3263ed41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9243ba-b330-4598-ba14-cd1bc8861935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f848c8ff-2d7b-4d8d-adb7-8d5c9d74f756",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc609b8-066e-47df-9fd0-ed3ad639f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa6ced4-5bae-4803-b238-97ae2867169d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b56d2cb-4c05-48e0-9f74-ab327fcc95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e559cbb-dc28-49e8-9d1f-d3cf9c557a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febffe4d-fdc4-46d7-b3a0-7512eb5d671d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba241616-6d30-446d-80ea-1d270d940922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a791adc9-802f-44de-b1d9-6f89660c0422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ad617-e4e1-4a91-837b-8f5aea3a8d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac549d05-ab0e-4fb5-956a-0e6a50b42826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b90946-fc93-46b9-91ff-b6442b83d90e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8991357c-dd96-4218-87b8-8f62eeb85758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da5f6f-13b1-49ce-ad21-6ebe7062e27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6d1838-2a15-4abc-8e8e-2fa7f0cc5af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d63b111-dde3-4aec-a08f-eea6684ba4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbed748-4426-42db-8035-814c6ac5a9ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185f795a-584c-47fd-8ff7-70a7bfcf2b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fda01d-31f1-4e3d-b42e-0501cc4c5cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e5895d-4a2d-4bbf-9cc1-233600c50e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6c3879-fd9b-47f1-ad6e-cef6d9a485e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c374865-bf00-40f2-9960-48cff061af6f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503c6a58-fd72-48c8-9f6a-e2617f7bf5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705ec45d-adf2-4279-8734-b1820fea3eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ee6d99-2375-4738-9ec9-9d97f5f13f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "784daa6b-e46e-40a3-9db7-76488154bac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7451ac7d-1e85-405f-b929-c25101381379",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dec9ed-20bd-404c-b9e3-ae1415cc32e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc7d8af-97fc-4c95-a347-be1efe77aec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73448ec3-a17c-47d2-8066-236ae3f9a125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d16028-e32c-4bd5-bce8-1d60afddd1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202cfb7b-d6dd-4dc3-a027-20db8076ae2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe5ad88-4650-41df-94a7-f729c004d5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07fe6a7-ec8e-4d2b-9c38-0e4b07259f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ebcc2f-31a7-4280-9c34-66ac39154802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf2862e-0e0e-4811-96a6-9323d03d3d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e0987-cdc3-431a-a6ce-91184bf54d57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882bc20b-eb17-49c8-ad50-fd2baf2c758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560213a1-6c26-4fc6-8cd5-2d14a27ba4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db27a4d8-51ac-49e4-a2ce-500346aec92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "21de25b4-ae54-477e-ad16-50f1395c2781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b5d7c1-ed7d-4994-bd38-55b7c545302f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4a2f82-5d43-4f44-9521-5f14e1d9fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452c1956-b4cf-4645-9202-e7a7cd1c7977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d090ec4-75cd-4dc9-9ab6-11d4307810f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "768a64f0-b933-42e2-b670-a066645ff899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbf7618-9ead-41cb-b803-eaefa833feef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5774fb56-60a2-4f6d-a42f-0dd222dcaf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df62cebe-6aa5-4736-93c7-6b8c377798a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e85de0-39b7-4f6f-a88d-71b102f3712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2950faa-8691-4ac3-8d5f-3b273ac61eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4256296-8445-4c5b-ba86-53505333ac5e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbddba7b-b1d1-4652-b7e2-2319aefdc516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86381a9e-3a04-4fce-97e1-e3d196807c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350973ce-80d1-4090-93d1-06c1f4474904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9debd518-d36d-43b1-b27a-f54705c7d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf5b005-ee34-43fc-bf69-2c69ff0b150f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653e9d5e-4223-4d1e-81f1-4c508a8b11b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe41585-dd70-4666-a872-24187fa84000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42e4e68-a9de-48d2-95be-91c684d182fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52fdf9a3-fa05-40bf-a6b9-541053e73125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f454328-6272-4fdb-af59-3ba4f3e483fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7636a14b-b903-4dc7-b49c-d8b497ebb164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3621a7-23ca-45b7-9b9c-431736f7442b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3183dc-ea81-466c-bc95-780d40b2cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f566ff4-ea3e-4462-a559-637884d19cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0739443-80b8-410c-bf2e-77b72d1e2194",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda6017e-bc64-43ec-b846-0d3e4b046e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c777328-671e-432f-a10e-19d039c49316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43342f0c-b133-4127-a26d-ee899a5f94b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417be3ff-4275-467c-9811-8fa05d5f361a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c0cb1b-c789-4a1c-b96f-4afbee82987a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9ed047-32e3-4cd7-a358-b83437202ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a9d8bb-deb5-4929-a333-734695639019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785ff89a-b35a-42ee-9e3e-4f5217edffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca07d00-1473-4c23-9b49-e64d4f17d50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3656717-4301-49a8-9272-559355c8d910",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb40eee0-b7cb-4460-ad21-067156238730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285fd951-ff69-4322-81b6-29e45c7aed38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e944e8bb-4d03-4f47-9926-4624bfb0f403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa198c33-87eb-4c57-a2b7-0d5e4cb7be60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7504ae-a317-4463-95b9-7a592e29dfe6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b0f3f9-95e8-47ef-8e30-9eee195faaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cbd218-7c97-4745-a563-a957fbdfa3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5963b2e6-8967-4ee0-9092-88cdded0149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e97363-9910-4ea5-a984-feb98e8e7264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3cc2e9-0b12-4a90-be0f-7a30e03cffa3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788452a7-4989-4bb1-8b7b-6ecaa28f2885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04a4c9a-e240-4d33-a640-e528a783be25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac458dd6-c0b8-4840-8469-daefcee6be4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba7c060-2a4e-4d3f-be34-c8b64bfec7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f086db9-9089-4505-8f0a-1026bb151d19",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5605637-d243-49d5-a242-ec7aa8a6f2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0606a450-d413-45f8-a354-37e33102ce5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150b30ad-8ca9-4bb7-82a0-3090f93f8053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80edf192-3efe-4692-ba5f-482e860c0a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af41d27-0a48-4c5e-9fed-a5fb305ca42e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f9a5b1-0a8e-47cb-85de-f9f1f5f8a900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8804fd22-4f3f-4fa3-bdf7-c1f1beebfe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f19c0be-0cc2-473a-98c9-1f6d933ceace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9e0256-68c2-4a7e-bb5f-402d1b794261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b327073-eeee-4218-8356-894bf7e5c554",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34934958-76b9-48ae-a98f-54e467b50bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85dd5274-a4d0-4b0f-b4d7-a799a818f502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2b4220-5ea7-4e13-b92c-d13c811a2a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33d45b7-1a7a-4c45-b80a-0dabcaa580d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905c64e-6347-43a0-a807-e4a1349bbf8c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d1f71e-0991-452e-8b6a-0577655bfa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76448f3-a598-4d63-91f2-c947b1cf40f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6770a36-6aba-49f9-bed0-c567431cfc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873e53c3-c4d6-45bb-8268-a61bc0358152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ab84e-b5b7-4fb6-809a-b32e88efe9e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b15cc69-885a-4796-891c-312c50402143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcac6a63-72eb-4822-92ff-f4885cf5e7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c414b488-00b5-47cb-b8b1-65a704611f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6dfdc9-6f29-421c-b4d0-9e76b4ecf6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19318f0-d86f-4988-99dd-1ba2efd43b8e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba37312-ceb1-4b89-a78a-c6a854e6b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af19be2-c78c-44b3-b220-88f4c4d75968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c346718-6c60-4def-a4ca-fe46192b9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d79c545-930e-4441-8d00-6dbd8b8fbe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934f1da4-500a-4f56-8af4-684ed25e7676",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba10d79-6e9e-4161-b222-b7a4e343338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12f5533-f0dc-4afe-a13f-6329010c7dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae9928-0d01-4050-9b89-a427dda60026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac06431d-4443-47d4-82f1-dcda399666cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a16e58b9-be51-4016-a966-84fc01a864fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a82daa6f-1d33-4702-a55a-830e716e8794",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a98b9b-ee2d-4976-ab62-f517676085a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3e63ef9e-3e06-499a-9c6d-3481fca7c82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89be6cb5-2749-48b2-997a-dfbb77183944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "279885b5-63d5-455a-9a73-7572351c506f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802b4ab9-46d9-4522-8b94-2f6f2a929b78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ebc5208-df51-4e6f-8a33-8f07512eeb10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c853586-4192-4c88-b4b3-b2b72ee7161a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b49b6a-7838-418e-a7cc-97b129fe9d50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8056aed-0a87-490e-b376-3dd895770c6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69877254-4d5a-4383-b6a2-eb9ef49b30b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82d61012-df04-408a-bef6-037b6a50bf65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f075315-7191-4180-b74c-8430378c0fb8"
            }
          }
        ]
      },
      {
        "id": "4de50e66-12a8-45c6-ab34-7cc6c8f830a4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2fbd611e-b766-4aff-a399-5e28ee8d2c8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e73cdf9-594e-4398-bcf7-3a831b8bdc6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72aae024-80f2-4fd8-ad1f-d544e941d186",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630886da-9cd3-408e-949c-1a9f47dfe1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff13ff4-f253-4ac6-b173-b468fa464ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c493d50-b05d-4f73-92fc-d3618b2e3639",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984b65ce-485a-48d7-9c05-ce1a78bdd811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cea245-c659-4f01-88cf-7f4073f6c480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824d324e-2ba6-43f1-ae9a-212329cf0015",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1c929-3e11-4fc7-a562-27b4821ecf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8a5e9c-5fae-4575-849e-20aef371b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725dd7d0-8c96-46e7-b7a2-856e0f351dd7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b8b578-8f5b-4cab-a662-576928121957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44292274-4339-4dd0-9ad0-cf0e5cc10c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f380df-6e02-4e4b-87af-4a0a5f5af99d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c9a969-0bce-465b-9ddd-d7990723466b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ba634f-b3cf-44bc-9a9a-71490a86ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b98578c-1310-487b-92ad-54dda6e383ee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6e34fe-8877-4963-803d-016fa0d1ace9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dba934a-46ed-4bbc-b1d3-7ff569e6bf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dc29ee-9a70-4bc5-ae3d-6bea127df3bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8bfaf8-4541-4ba0-9e89-7b6bab58b2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b6b9c0-0bbc-4611-8072-6c2e511a9c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a646ca00-1ecd-4c5e-97d4-bf8fe136bb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342209b6-9d3f-4267-a1fd-846c926484c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c708da-35ab-4dcc-8a9d-a59986d26531",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d02159-df75-4f8c-8146-409fdb57de03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7f7b89-28c2-4b62-91da-34093157b05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3bdfe5-0b7d-4502-8039-364210d8b5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115581a0-d989-4dd2-a4be-769910090f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c404b1-2a14-4050-8f92-4b1e41d8bb79",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b162cc76-e2cd-472d-8b5f-2f9fee53e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056fef84-77ab-41b8-b8a8-a5de667a7ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f4f81d-5476-4137-82d7-e48d20fef9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fda27b-ee4f-42a2-82f3-8afe92c1d6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ee4bb-0f0b-4b5b-89a1-08a019da724a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c55196e-2b6e-4b7e-8b37-4920b038fae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1933d68c-7318-4506-8470-4d7fb2f8e7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41c4912-6f99-4ec5-9989-4b180e792256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e87ca0-defd-4fff-b7ac-c0df38bbbc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc76a01-c3ca-4687-90c1-c67420a5b96b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880334ae-789f-4492-b52a-9bd03dc3cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfaef38-5d0c-44f5-8123-8d57541825eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e022e5f-5573-4e81-b123-e4446d535d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a125b03-d454-45e5-8a18-4c40a64a5518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad50ead-48e8-4d14-bbce-5c86aec20048",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d27a4b9-a5d5-416a-860b-a79c9fd49f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dd67d4-dbe0-46e5-befa-b2233256c21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5745c262-85ca-4c68-b0a2-f5a3a304287f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610b4c7c-7ad5-4aa1-8335-65566bb32ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2638d03-14fc-4d89-8e29-b6aaff3200b5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba2e5e-d8d6-4d9c-95f4-0b463000dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51ac1f7-e5c8-430a-9cfd-6d4f27169e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa2740-6fde-4faa-b78e-69d770656c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31f4d67-cb73-41eb-a7d0-4c43832d5524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62829fe3-7381-4e62-a577-e3ccb3a10e5d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10a0c26-0028-46ee-ac7e-708933caf895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0758e63-a1f6-4b76-a9a6-ea9d6c174266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6203bf8-661c-4c3f-9787-3e5bab8479ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63670d3d-6e70-4c1e-8eaf-64e30f81cc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030688cb-0bb0-48c7-b38c-10a0a1a7d46a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b8513d-fc0d-4001-b9bb-c4bb6ba4ae85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d52de59-ab0a-464c-915d-8a41a211f36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca50f80-e23e-4a0d-938d-defeae2bd826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f127fc-0f9f-4616-a1db-ad94f79dd2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819f23a6-5e1c-4789-adc4-483f1ed3bad8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64084a56-27a9-4910-8c03-67e2157e9be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed28b421-544e-4145-ac0e-6c3e35c7bc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c1a7b8-7e1e-404d-a10d-116b2beabd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8d5d7c-cb96-4de7-88c9-1aebe72c18df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa66e51c-6434-458f-b41a-66eb34beab56",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907afcc4-956b-42ed-8b73-71d36f366956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ec8fb8-d0cc-486d-9fe1-00b851bbb893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5079a78-1f9f-4b83-a5ae-d230e2abf024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc72036f-fa82-43ea-a5c3-877d30af60c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f0d068-b793-487c-8e6c-bb3c01d344cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa7a4b5-e3ec-4b46-8282-135d68102173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ddb884-c25e-4234-aebe-d888b9ae9437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eb7366-0429-4cf2-b018-56da107a4c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749011f1-2612-4ed1-a685-93de724e414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eee4f9-d009-4b2f-acea-7993ec0fb64f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61113e3e-fbc2-4e61-8be9-780bcc8cfe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99287759-f262-42f6-b9bd-2faca1bd6493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a59332-718d-4414-9a18-85bd5c6d99dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38027cb5-54b2-434c-a368-678b2cc11fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab51988-dea2-438f-90a7-37b3901c9bac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3048bda8-8244-4793-b9ca-91d6637b9553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fe2f06-c758-4f77-a9d1-fdf535a6204a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e56515-6ea3-45a2-ba50-5fc6b59a4566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d5502d-c327-437d-934a-4d7efd4c63ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999856d1-a702-466e-86cf-8af632728a44",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db12b1a-99a3-4f34-9376-6e3bbdc43671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498fcb5b-789d-4892-b40c-29d1a99c1bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad13ebb6-e934-4237-ac74-cb50d368a1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e4b1eb-d3f6-45fa-aa33-1ffeef74ee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011ca98d-3186-4db0-96e3-6be0531e2469",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee28961-4239-4c39-a9df-e47fe6170515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cea4f8-f1b6-464b-ab98-a2ff9372f798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814fc4cf-bb6f-43ff-9416-86746bd972da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143f7429-2f81-4337-a2bc-03aca51f2cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e246fd-3759-4e55-ab78-65111d3969b6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb33830-31b9-4e9f-a68e-cf85b33caf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb33541-f3ab-40d8-8697-1db558154efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ced41c-02d4-42c7-ac00-2b816f7bc696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9905ab89-cc65-4879-b590-ae8925d3ac1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8d62e5-a571-46b4-b7b6-202a63f3c604",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb757c-e2a1-42d2-8638-a2acc7bde41e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03e2c5a-e071-45a0-91f4-19b6cd98596c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b1b7bf-1964-4a38-9520-233415471627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d529e1-b977-4a66-9c44-10030380f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d683c9-bba5-4444-b9c3-705b7e396cb1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb5f9e4-bd8d-4570-8eda-a629eafda4a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14c40df1-ac5b-4eb7-a2d3-a62627f357f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0387777f-11fe-4395-aa42-86599e26a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca58a613-1801-409b-8865-44f94b08452a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66633039-73fa-4033-b944-1a0568224a8f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7ac7c-ba84-4558-9a2e-91026e4f3d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1a742c-4a6e-48bc-be03-e42c20d37813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fe36fd-a4e4-4868-9206-957aebc00d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ced4a6-8652-4889-8201-7dcbd576a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c45b38-ea09-4d7f-aaef-344ae44eb3e9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d371dbc9-9bcf-4fa0-9654-a84ac85d88f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a231ad33-f8c9-42b3-9bf7-fb785dac0f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61c10a7-944a-46b2-928d-cfb362cd1d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e08cb0a-d2e6-4697-94d9-a98c51da802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bf4e29-34c3-4793-a431-1794567849e3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7186ce2-60cc-41d7-be53-269bb5f5b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfd5572-e19a-46f8-ac67-084d2acef6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858236f0-97e2-4fb4-a45e-4a688038d21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f276163f-7403-40c9-b58e-c64e45e83f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c3591f-e4aa-4998-b577-4edf3023c1aa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac16e83-af52-4e64-96d4-cccdbcbed809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75210c73-32fb-47fc-b6d0-4a76e2196b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f24d14d-559f-41b3-83d7-9a94a5a518f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a670e5c3-0537-4d64-83ac-e50756f5138d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714a9972-56c7-4c5b-aeb2-647133807f5b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3e11ca-ff77-4b78-a68f-801236e6a426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b2e13e-6369-4cfd-8ad0-4903054b3470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b123efd-2191-422c-8d98-8fb333ecbeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99887d04-48d0-4e61-b89c-03b27918f95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d405b8fd-37a8-432d-ba23-bfa7002a7f4a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add89b99-a732-4520-9f6c-96dfc8b1a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bdf92a-5e6f-4ed0-b365-8c8ffe609194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39763049-64e7-4656-8846-d2677206d5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eede46eb-fde2-46f4-8063-16f350a357c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1667d4d-e9d5-4ae5-9f6a-739bcab2e1e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c991cd-c02a-40bd-b78a-87873467cde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5c1f65-fa5b-4e02-9ec4-4af98fa754cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70a2a75-8632-440e-9aba-526606822c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f727551d-0a01-418b-b90c-081de94afc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9b6c5-551b-41f5-92b8-4d9d9b3007d6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f598e4f-7d6d-4648-9869-2ff4a851a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b38d04-0438-4187-a768-b89d9ebd2fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d740318-c9d0-49b3-8b00-c3ec0bee243d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac177f03-0a9d-47f6-9d7e-8dbb6e8987b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce81272c-3e11-486f-a14e-4d54541daff2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a508fb0-5052-41c0-8b5a-a730786702b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c066cd-5d4b-4500-816e-f6735e990a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d07cdbe-9772-45b9-b08e-60076773cee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b5e1a5-4484-482c-8fb5-f36ac0d80836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac5428c-5148-44a5-aa58-e97ef448d75d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7a4f4e-006e-43e0-b29b-4ff9e7d604d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e186436-d527-4264-9327-39cca5d5060a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d4f34-9cfa-4b1d-a400-610c562ce0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1607cf0-1125-4ff9-a23a-6c54f4671508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d5dbfd-03ca-4b4c-9464-d3844611714e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0f5fa5-5703-4e12-9588-fee6bcc86cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6093cc4-3d6b-475f-8266-37214fdbf63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bb28f6-ba1a-462e-a673-8f23adbb297b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eebfdcb-ca7b-44e1-b17f-22019204ed66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159fce01-2426-4fed-953d-33ea2ae61502",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e7f403-60f7-49b9-86c2-8882560b6cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a59ab6c-41cd-40f3-8be3-06dc6400ad9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef026a1-5644-43fe-9195-509d4952fe92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7746a331-bf2f-4ee7-9e21-1c40e83a2e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce10983-b9a3-4d77-9e37-9df623eed5ec",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd239f36-6e81-48e4-9112-739ef5fe10a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40881791-5167-40e8-85ee-53bec88be77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f92037-91a0-42c3-b463-a29c397b9bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8846e62-9e50-460c-a920-8060caa4eb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602a1dc1-7c3c-4857-b798-1b37d00581f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f340c76-eb54-4458-81e5-8545452fb6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2ca2e9-1f21-41b3-bacb-2c08a3387eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02dc92e-1f65-471b-abd3-759f17dca255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40796671-a3d8-43b2-9562-68d0f35d5da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f168213-c73e-4fbd-b270-c75c55db2a72",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef5001d-8555-401b-b83f-402b69bbd4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48dc90e2-4773-4ea8-bdd7-cb9fac493c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d6e6b0-c6f3-4c48-a92b-7030260dfff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf16f77-5a90-46ae-ab74-3edf98831e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8262ed53-2d35-43b9-a6a9-6dd82e2d5e01",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e8f011-cede-4aa0-9a46-37c521c361e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09c5685-a626-495f-9086-293b659b5d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197dbe81-8394-4356-b4c0-1313989a57fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd33125-f0b7-4bdf-b607-0fa18396a6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdd9f7b-b589-422e-9a7f-28770ed92b0d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d52ad8-18b1-4304-a441-55e2be917851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c90c0c-bf49-4160-b3c7-263716ca9464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd21ce2-7c70-4cc2-bf7e-1cef5404c5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3aa96f-e903-470f-9ffd-0a09fbe1c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d3247f-4dcd-4738-bbc9-0fa684176256",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f414c58-65a6-4d08-b984-2595e7ffa27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91595fa6-4591-4039-a730-62a412227a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677c9ae3-4c0f-4c34-9aa6-39006fd340f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faff10d-8872-40f1-86d1-1a2eda9a5890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bdc37c-2f8d-44e9-a809-ccee3437ffa0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed869da-1332-4bf3-a838-7a2029998d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae6a8eb-17a0-4ca9-8757-496f5b429634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78577dc-d7a4-4950-b9a5-ff7e0c9f055c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3176ea93-3a4b-41c9-a55e-cb1257822895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3278226e-b015-4d97-b3a2-2c97bc184953",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1236d8c-7bb4-4d54-a05a-5aeef049cad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45337a1-205c-4006-a5ed-938238d41707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917e06f3-cee5-4e12-85c9-5e7b00933548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c612cbe3-24db-4913-a35f-77c52ce64f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383b4b7-bee7-413e-a35d-03b255121faf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28806b20-a351-47b7-a7b4-3f7d7ff4e05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f7eb4b-44ff-448d-956e-96e3b791faf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307244f3-2f13-4510-93f5-d7ac4b19f532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcb8c48-b331-4d32-9707-533da5f89b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a568394-3ef6-4e5e-b13c-4d702806532b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5969b-355f-4779-8a2c-22b069561bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384dfe6d-3461-4f51-8dc7-5560b8071b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1883d96-447c-4cde-b27d-d6fa4d1f37a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb82431-5a26-4b6f-8d54-b942345428ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c257109d-af2c-42d0-a8d4-9bbc901e7a89",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e03c375-6c60-434c-bd2c-db708ffdb39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed28b89-2258-4b16-b3a8-f226de497ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa18d74-11dc-4f17-96d6-c334c24569ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d403b7a-b581-4fe0-b820-4ddea3de40a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4d1beb-9e54-4cc0-9e9a-af508a1cd33f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e471643-a161-436f-ad5b-32b5475edb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cdbe0f-9517-4200-87b6-4e7d33895b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a6652c-a6b3-46e8-b29b-aceb9b344483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d2eeab-2f5e-434c-8c61-aee9913d2d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df35ede4-31c2-4fa1-afa9-6e4f7e96de3f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29447848-b621-4429-9ece-a056ed80f4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce217ea-9d6f-4951-93f8-2c29bdb2c590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029aa56-608e-4659-9499-705fae2317ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4287eaa-1371-436d-8b1f-4540b5ff4074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56732c70-c3b2-4177-9ce7-d0fb93c43789",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6fcffb-c86d-451c-8b68-7119399b24d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4af800-cce3-48d7-b519-16c8f7552246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587143af-da1d-47a8-a939-86c844edc499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad10dd-5b89-4c18-b373-50d869028fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cad991-de9c-4eb0-ac56-2bb1dbcecc0c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782d2237-d7b4-4a06-9590-951872d93e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affb7e6d-4927-41a9-84f0-05280c1f9d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78227a9f-9735-46bb-9e31-ec93dd363d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602649b7-f0b0-4409-bf0f-d601291d4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e62d82-7f34-42e4-b74a-ca37d2471eac",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2712d615-b093-4e92-a00b-033667ac3be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e58b13a-5519-4139-afba-a302ed80df27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7983e5b3-015a-4e28-98db-1a03a71a424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4fd497-1d92-46b3-8d53-a7d25672bf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fb930f-0ffc-4b01-b69a-ea0fa7662d0d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66124380-3b9f-46b4-80bc-d33197bdfd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77df897-0674-454d-82f5-d028880f5303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603fb0f5-8340-425e-ba9d-7a3f09970175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19905000-905d-4fa1-98d4-eb9de3c2b1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a21d30-af95-4d0b-ac55-51089879e467",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16355603-310c-4fec-8e71-0d119c1a5017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767e80f8-efe0-44d5-b765-a47a4de7305d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244f3951-a130-40da-ac6e-9181993c76b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79881b13-2e1b-4694-b9d2-85ad49a9af7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cdb859-631f-4d23-a16c-c8d1cfa57b05",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b42619-d1cd-4ac4-89ed-fafd5f6ca669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c823bd5-8dba-4bb4-9eb4-f3460321e7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3684f2ac-5a1e-4cdb-8deb-58d5e5f83b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9f0aab-8c67-45d3-aebd-8dc94a527f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d8f228-55a4-4d2d-9cea-7af5e8f0f27a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8911d9c-53be-43df-99f5-d6e5c675a122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826e30a2-6056-45a7-9105-d11fabf41b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21477f3c-2af8-46ae-9e12-42a7280d9d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4035d936-89a4-4af9-8da8-810d45bd174b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf1bad-d28b-48a7-8275-9f070397bb4c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf81f0d-4149-47cd-98ac-4ed288842bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a940fde-af75-47a0-a309-e4af4248bd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13a2d2b-7021-4ad6-98d7-f33a5b3de480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb80a0b-c037-4c4b-b5e8-6fd424894462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5dafe5-1407-4c91-86e0-4399ede31c46",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be477c4-3f1b-4483-b9d1-f311297c1f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187a7b0-a107-4a88-b923-5ee3157de098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac86a5a-c983-4dd6-a72a-f37f74481f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1122397c-3d9a-4564-81a7-7c59f407e3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc09324-0690-420e-8edf-33e8843dc73b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91883c0d-dd5e-4c1d-942d-f5137275df59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da06cd41-876f-4588-88a3-9a8193cb1d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06597059-7592-419b-bf28-9e612b173639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f75d32-a62a-41b5-b2aa-e9829710ea59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eff833b-31b2-4724-b2f3-4728d0f3969a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7d9523-0d6a-4386-b6c0-b6c5a8d88359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4b5514-3ab9-4c4d-8902-117f9225bba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9edce1-642f-44d6-a244-76ae70874482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5586c821-6bc7-45eb-bb40-090ceec49b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318b64a5-6452-4d7c-9f5f-24bbdcd95346",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cddbef4-ece0-41a0-a549-e76dcfd9f96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9914956-3d89-4613-9a84-f3b5d77ac4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517af3fa-dc2b-47ef-be3f-526ca590210a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f66e8e-3394-479b-8d50-1f731df46f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789e657e-40b9-44ae-95c7-35274e16ae19",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d60c396-f5b5-4b1d-869e-31e73a3fd174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b561d6a7-1616-4dbf-ab9f-570c13ad6cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851c386a-e94f-4cd6-90cd-1ac91a52804a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d34f45-8553-45c5-a464-67e5ca44bdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81335a0-4e55-4f14-a7af-736e9c8bede3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8769b59-b8f1-4e26-8bdb-6d45f05b3067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fe2964-1717-47f1-8c64-06322c5dc024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9fbda8-39d2-461b-abe7-24c6fcf14de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19929ff-2501-4aa2-8bd0-8c4fa278eca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ccc081-9143-4604-84e8-68ba33ce571c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6135eddf-6a22-4bb0-b100-6e4e76ec8e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4800c508-e98c-4153-86d1-969c95296931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8106ee-7294-4c18-9df5-f6ce16a08f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29e4e20-640a-4511-8cd6-8090045dfb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b12882-b4ce-44b4-8321-e3590e58f937",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b3f9d-b362-456d-acdc-03bc5a4b4ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07d0948-4edd-4e47-aa78-a47fc210ab09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac5b0c2-f98f-49bc-91a3-43157e3f3101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a22bfae-9965-49c0-a3c6-2c44deb29d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a47781-4714-41c0-9410-4b94852365a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290586cd-42ae-4190-bc01-dea55f847e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e17fb9-894a-448c-88de-b93db914edd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3898cc75-1406-40a6-84bf-1d31ad60ed52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7c9aa5-d5b2-4f1b-b82a-aebc065b54ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a296fae-1e24-4d8b-9142-4a5142016090",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88115f3c-a9dc-45e5-b49e-4c477f9f8405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb938bc-0c5b-4bc5-88ef-fcab55d2323b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064adb3d-c836-4282-b52b-8657924520a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83863051-09b0-4fd1-9271-77d6ba6df367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4525889c-83d8-48fa-8dd0-0609df873f22",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd384762-b5da-4fa3-b851-2417dc623c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f14a939-1ca8-459a-ab44-edb2be37a593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d95449-ad4a-4530-a2c6-05050f597502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0542188e-b65a-4d01-a0ae-b73c70e467af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18420d7b-dbaf-410f-b868-19d779427441",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27f1f6f-a95c-4795-8ab9-cc3551b55d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497f3769-4479-48ad-a5c0-3108b1ecb88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8616931-4603-4475-aebe-df7fe1c134a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197649d8-e4ea-4130-8651-f165de4e5b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac255909-5211-4064-a6bf-6e2b4014dd2f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7edb88-3560-4ddb-a771-6c43429c0885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88990170-78a0-4dd9-88a7-ae2c70bb9bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f664d-7811-48e4-92dc-5078c8f6325b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2920f19b-9ed3-43b7-b639-7b6af40517c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03748a6-e3e1-4814-9663-62a277b95288",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ff247f-68ad-4656-80ce-ce8c9749c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc3bdbc-3dd9-4f21-8824-2c321b99d392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359604ad-85df-4b0e-afa7-f7f0e78053f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa05a0d-4987-4865-8533-32ed5e36311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf04aa-9e95-4a1f-a951-2b629e1fdcf6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af7c799-ced1-499d-8af6-603df61cb259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3963d763-1c8a-4102-bad3-fc0856df98b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8413db0-f7b1-4004-901e-d9b14b3fae58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6987ff3e-87f6-42dc-ae24-bb726105b584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768383a8-63a8-479a-aa72-1b90259b4834",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd41d0b-8462-4207-bd9f-f364eb4f3b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c70de39-f8ad-4bca-9c66-76f4b11a49d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bde32e0-4063-4a48-bc2d-6c1d2fad55cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22c6480-5a2f-45a2-a6ca-d13ae47bdc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866af13e-d1f8-4986-930e-78019e415d35",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee3e7fc-8049-45a8-be46-f92c442c395c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6934035e-8a6b-4ea4-8b2a-51858e89183f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232927b1-8e87-4374-9ec7-2d189f7fe834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9e1ef6-88a7-4b69-8a69-8fd7b870c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc230f-6db1-486e-9e77-0fcab00b3429",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88ff63b-7645-49d0-bad3-00bad519077e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78cabd4-48e5-482f-bf37-55cd179c1a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7da926a-4793-4b37-a988-d3a34aac6a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ce43dd-693e-4d34-8e4c-ea68b75b22db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139d64f6-ea1d-4b95-841b-823c396aba9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e33058b-29c3-4575-b648-c7c1bd4c554f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b801fcdb-d34f-461c-ab38-27f73ecfba9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b033f57-3408-4227-9346-0282a861f816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb863061-6b6b-4375-9111-7906d2ae8dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0c4e03-63b2-494e-8640-5bcbb7c52687",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32284d34-465a-4014-ad04-1e963adc1e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c796337b-722e-4c48-9abf-6afcf76c1d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a321492-3030-47b7-8126-c01316f2b384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a415f004-a343-4f2d-958a-38aaa923c055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c118e986-74e5-4d1c-b72a-68ab43f0b65e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b96106-0cd4-45a7-b7da-1f5162fa3662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a41230f-bf45-4765-9b2d-9d6da4261157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50714da1-a45b-4438-9415-a560051612bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5912aee-de2d-4eab-949a-f754aa289cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07418ed3-5fda-47b1-8ab7-079a4f15694e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5ed19-aaa7-4e64-90b6-fcd94cd68098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bf2aef-9df7-4216-ba60-815179bbdd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6274b5b4-6073-4372-ba22-8cb052020e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e34a55d-fdae-4075-8a9c-53c373a1ae5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da77df77-7452-40e7-bf53-69661b3653ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80544ec-1626-4ead-b548-d68caf806532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617ebe4b-c218-41e9-9bee-a2f2c56c3055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7eea66-4994-41b1-a584-f57b5dd5651c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f16ac2-27d8-4d3a-ae30-db508e568426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ef2dd-9367-4cb1-a2d1-4c43f8d2f163",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcb5cde-68b3-4b50-8590-f8480507b8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbcdbc1-e8b2-4e2e-9854-34192cd389bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6dd701-f66e-4e99-9594-bbd5cfc82547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6efde4-19b4-48af-a88b-4300636d1549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16be0ae-8b92-4599-a901-8362f8ca1128",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d73f3f-c01f-4225-b5cd-2b663bd75fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccdf692-ede2-4501-bd3d-3f3fd67c231d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4907e-1489-486d-8198-0b92a0617f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e831e44-c239-4d03-8321-ff080729d0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734efbf-b70b-41f1-b6b4-e7999e9ee0d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59ae4ab-71ee-4974-9555-440c94007a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ea53b8-a3e7-4bd9-aeff-6aa958707419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4298044-5dfe-4402-b789-5e685480c491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc40c24b-bf2a-43c9-9c6f-0b60d870444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ebe43-9217-4179-b4c0-d956359ff113",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e89180c-c950-4dfb-8e40-ded24f3d0a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24364c2c-24ad-4e5d-8070-909a18eebb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba65b29-8119-44e9-b4cb-141ca638f41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c5fa4a-8ad8-468e-a732-f04048f35445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba934ae4-0c8b-46ce-96a2-6037a26c3393",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3789801d-4ebe-4fa8-85cc-4b660dd351ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b3996f-af2b-44b6-80f8-b1598e3bad9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88040bc4-bdc2-4d8e-b613-9222a6ee60c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cf3367-c7f5-483b-b695-66b1b84e6044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc15771-8276-492b-bd90-9aceb8bc1e00",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20f768f-2d8f-47dc-b033-c3f6c0724dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1e93fc-db17-46fd-8850-e8569c3c1542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a38920e-ea66-49dc-b924-da002db1315c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dbfe96-3143-4a2f-b55e-9bd43a173e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede996c8-95b5-4c6c-b0e7-0d2d75620de9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b37f5c-3509-4edb-9e80-f64a0552757f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e708075f-a451-447c-b52b-0d9075ecdff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f9a96f-76fa-4929-8e41-8b614ae5b3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8243f5f8-e15e-46e9-b534-0c8d703b58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6b2723-d317-4a74-880f-f02d3fec8f31",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ac7e55-432b-4b93-a309-0ddc42dbc454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc23d33-18b9-43ad-a545-aa0f6843e185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267422c-66c2-4540-a5a6-af90b7940a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e89de04-8dd1-4624-8b23-fd8a2356127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a753c01-cf16-409a-b3d9-2a21ac0a9d61",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb7891-7c25-45c7-bf5f-96ddbb6b53a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05cf7505-ad59-4928-b140-ef7e08032613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a376a-2cda-4c9e-ac64-42cbda64e010",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9515486-bd81-4a17-b56d-5cfca365c211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1ff7f5-ef2c-4dac-9e17-371e8d281c7f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b4f8f-dc33-421b-b648-7fdc537721dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ede3909-3978-4bef-96be-555b57574ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a150a6-1203-4613-a062-35e483294807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43010486-aa0b-427f-9986-97a2e4dec86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f75f7e-4447-48f6-8c13-7db71e0b03be",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b95131-bde1-4867-a88e-44a3375f1ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ec5fbf-34ba-4b47-a911-0cb8445624e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afce711d-c689-400c-a24e-2d5e82ea61c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a78adb0-ba9e-4355-bf27-1bb6a134fdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179b25a-fae1-4a20-b72f-00fe84dd755d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca292023-fe92-432f-882f-bc154f087239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e181f5c3-892c-468d-9c77-cca0877abcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1a49c6-87cf-4633-ae80-dcb1e9eaf7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302c8142-064f-4677-9935-5daf83f0185b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4664c6fe-474d-4162-a3d6-1ba9e6f27281",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3170999e-ff64-422f-8424-84fa107c74a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb73363-185d-4748-9192-f6c390599cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a6198c-ba0a-407a-a1d1-c40791552173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9437e26d-c3cb-4e7b-9dee-a03917cf911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8625b4e4-af50-426a-9cdd-e2f6fe4ce759",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4820605f-410a-4893-bd31-2043192c9546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba367335-585a-44ae-a3bf-565dd49646eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3436b8f-7188-4814-93dc-2d4ba85015c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f773f30a-4836-4318-8ab7-007efc0ac715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49efcd81-1d09-413f-94c2-d23dea993c20",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81e384c-8775-4ab2-a9fc-895fa10d76b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df2ccf23-0d95-43af-8a42-3e91386b0443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5934864-d579-41b0-9e50-839a520b87e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf69a1c-29bf-4ca1-b28d-ec1e4f66c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e29d24-350a-41e4-b34b-3045caa06263",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee64032-f282-43ff-b205-7dc3c4dfd670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195817e4-4ea5-4d6e-859f-b6ff88ebaaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48c9803-08ba-40f0-b221-0ea3d10b09a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d914b1-6b70-49ee-8943-9e5deeeca69a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c3c2137-9f46-461c-a5a4-211aff8fe101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c05d6a-0f3e-45e5-8f2d-d73fca30b587"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68a15e61-af94-4efc-9406-46b9d332ac0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cec7fa79-c2f2-4906-b21b-d7ff15ef5769"
                    }
                  }
                ]
              },
              {
                "id": "f0179206-a774-4eef-87c0-5ca9215077f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93803df8-cdab-482c-a6ea-71032a8cfdc8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0c5397-2f50-4790-8768-ab33f9e5462f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "059b5ac5-21f6-4171-82f5-20ce0b488b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a5548-19b4-46e5-89e7-513c350671bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f029f18-3060-4cb9-9f20-904269b3c137"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bccfb50a-b3f7-4386-9bd4-cdc738ed99bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e3975f4-56a5-493d-adcf-de5b6b617cd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1af36c3-15de-4ad0-aaa9-e538d80388b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd40a030-5ee9-4a83-a5b4-1fc9ec03e5a2"
                    }
                  }
                ]
              },
              {
                "id": "75678a75-919a-4f0e-97b3-2340b9fa85c4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cd6e1530-105b-4faa-8847-9ec61c6e4191",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb72173-d162-4f51-aaac-a63047c4f8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1005dba0-9944-43ea-a960-af4b88b261c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50ce99e-4c9b-4072-aa56-731ed9475259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07edd3f-602e-48fe-bbca-042a449602a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1340cf2-10fa-4062-be3a-e8c3b7480352",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c34de656-34b8-4967-a5f6-af5b3776b22a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8582a33e-0378-4332-a07b-e085a622bafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93f6ae0f-aeff-45ed-8bd2-37886af7d4bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b139ecee-08d6-40cc-8a1b-6c9c1ab77c3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3a9975-eef5-489d-a409-3744b7f29eda"
                    }
                  }
                ]
              },
              {
                "id": "a388fae2-039d-45a1-8356-b995a1f40ea6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "981eecdf-b148-4d55-adad-465e6d2ccbbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04865011-0cda-4061-a40e-8e31cd989d93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdbbe5de-9879-4cdc-98ce-f242925f7871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "668fa734-a1ea-47f6-9525-fe717be5b286"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16f56304-6879-4ecd-8def-4fdf78686bbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7c5dce99-fa53-401c-b84e-38631cc06ff4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c3b512d-f8d3-40f8-844b-004ee04f6732",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa6332c0-eca3-4a9c-9e96-3a178f1675ba"
            }
          }
        ]
      },
      {
        "id": "0d05ea64-a4ba-4ed9-b625-5b1af390d915",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "64a33a8e-6ee0-4ad7-b7b1-338380775604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bafe00cc-cfe8-4c9e-a07c-09aea76d787b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52bc8beb-259f-413c-84b8-3fc064cfbe30",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b9ef9-b48a-41ff-9c1b-05bc8588eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa234b68-f80b-4311-985e-339836329c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44376fb1-1ea9-42e2-9509-342e42722c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55b62e03-d392-4ac0-86d6-266bad7e269f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b39b3ac-fcfe-4437-972d-09919fbbdf15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6e5b906-fcd8-4768-8928-409732b1f877"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "629b233f-b6c5-4c77-bdc2-eeeb01d80554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "254c4d9a-1b78-4f75-aa98-fda4303c79c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "064896d0-b803-491f-a8b4-51bf357e1680",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2f161d0e-fb14-486e-ad5c-0bd7c8f272a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78d163fa-a34c-4bee-8706-f4b621ed22be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f14d0f28-3100-4afd-9f58-2e92d4ba3333"
            }
          }
        ]
      },
      {
        "id": "80f134ce-c113-4459-b18d-24bc6a9c81b9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6d8f41a9-d469-4190-abe5-7bbe66482f89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3560b890-7953-4add-8b55-9684cd7e32ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "881ddc72-77d2-4d79-8d34-ce02a870450a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0295d7-40f9-40bc-8ee3-9b06888869b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e06829-63f7-4b34-afde-ccf5ea0db492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42004c63-c5be-40a6-a196-71a537844900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89bc6ab7-f6c6-44b7-a9f1-2cff34bb368e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6b87de-bb56-4ba8-8757-6dc28c10c118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b887637-4369-4b15-86fa-dd43e637bf7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c837129-2a82-4e96-9ec1-d062214cd29f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c799e6a-be5c-404e-9750-d5a6f9f2b0a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71ef027f-0931-461f-bacc-d4362b6afbf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cdd27cc-7d9b-41c3-94b2-56eddbfc5af6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beb36229-c8a6-4aab-91cd-1feb37c08a35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "603bcc84-c4c8-40d6-82db-676009e29fcf"
            }
          }
        ]
      },
      {
        "id": "d05bd04e-5f89-4991-b666-2921e7b3ce7f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ac20d9db-1413-43da-9b57-42adc13405f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd5e061e-6edf-42b5-bf17-d9f929c4f766",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfa29ac9-83e0-44c1-839b-6c2ac2ac2278",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f9c899-ce7c-4f28-9585-2ae2de43158d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66292063-a6fc-498a-9771-bfdbb943791c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a062729b-4bf2-45fb-bd8f-94d1ea871b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f143e6e-ef0a-4d94-975f-7d0de4e9c113"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f37f7b59-c8ea-4675-90bc-8f5b6d576b20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6556ad0d-fef7-4e42-87d9-f7d93e960c68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03386261-e3ac-4149-bb8e-720299639fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "649ec2fb-d6fa-4aa3-a6fc-661461e7db7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fea4de1d-901a-4cf6-81da-6178e41efc4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24350969-9881-4e9b-b60d-50d5bae8e2a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be96fa81-360f-496d-ae06-f173b25660fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccf2fcd5-69c9-4d29-b144-443b22b44f17"
            }
          }
        ]
      },
      {
        "id": "4923e3e5-f2cb-4cbc-ba84-eef6dba90348",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "199e2360-c42c-4afc-abeb-98c25415c712",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c18d97d-a96e-44a2-a8c8-54266f571ade",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f71f60b6-6945-4043-943e-fbd002b82278",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80b0f0fb-076a-4942-8e03-fd5f6e5ac681",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ba92c1d-6383-481a-871c-35f561e76bd8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.243902439024389,
      "responseMin": 7,
      "responseMax": 261,
      "responseSd": 21.835617008383863,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686876166000,
      "completed": 1686876182214
    },
    "executions": [
      {
        "id": "30383d9a-6501-4157-a3b0-f33ae8ee6c67",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ff34dbd-0738-4026-b7c2-fd25c1bf7363",
          "httpRequestId": "ced2753a-69b0-4677-ac6f-f5ce6add56f7"
        },
        "item": {
          "id": "30383d9a-6501-4157-a3b0-f33ae8ee6c67",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eff5f7da-b518-4607-83e5-4f6c3aab35cd",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "68fc922c-1acf-4c77-a033-43da8b1db9b7",
        "cursor": {
          "ref": "c9d14a7d-4c2c-4d6a-ab26-3351aa7176bf",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54ac05e2-b9c4-4b83-a5e7-9cef708615fe"
        },
        "item": {
          "id": "68fc922c-1acf-4c77-a033-43da8b1db9b7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bfd834ee-5208-402b-9a64-c2e55a6d6438",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "5b31d8e5-0534-4c08-a21e-a2fa4e056292",
        "cursor": {
          "ref": "fdb233f8-e44f-4b7a-b059-9162e7c1140a",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3029338c-cfac-4ec8-850c-af99305b9cbf"
        },
        "item": {
          "id": "5b31d8e5-0534-4c08-a21e-a2fa4e056292",
          "name": "did_json"
        },
        "response": {
          "id": "8bd2c752-2899-47e6-a4f6-405d50390590",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5ea05b-9150-430e-83d4-f30b3318f71f",
        "cursor": {
          "ref": "afad6d2e-646e-4b21-a0b4-0f625edf67cb",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bfa9d58-aeaa-4f22-a816-22c1a2b54c22"
        },
        "item": {
          "id": "9c5ea05b-9150-430e-83d4-f30b3318f71f",
          "name": "did:invalid"
        },
        "response": {
          "id": "c7f54579-a178-439d-8e6e-4cb973f2998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5ea05b-9150-430e-83d4-f30b3318f71f",
        "cursor": {
          "ref": "afad6d2e-646e-4b21-a0b4-0f625edf67cb",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bfa9d58-aeaa-4f22-a816-22c1a2b54c22"
        },
        "item": {
          "id": "9c5ea05b-9150-430e-83d4-f30b3318f71f",
          "name": "did:invalid"
        },
        "response": {
          "id": "c7f54579-a178-439d-8e6e-4cb973f2998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637e0bf2-e16f-45fa-9d71-379ef689710b",
        "cursor": {
          "ref": "01f018c5-67f9-4229-9a21-206535d7c163",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0c0b4b6-dc51-4557-a10c-81f9cc01bae9"
        },
        "item": {
          "id": "637e0bf2-e16f-45fa-9d71-379ef689710b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f7282e38-09e6-4ac1-8f3f-f6a9a2b28b22",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89c3a75-de52-43d3-bcd5-88738d1900ff",
        "cursor": {
          "ref": "84d47c50-53d0-4e07-944f-60477708c7b1",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "af64a9e7-0a52-40d9-acff-e1cec6054f94"
        },
        "item": {
          "id": "b89c3a75-de52-43d3-bcd5-88738d1900ff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3060b0ef-8681-41f5-b8f8-3828212204ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c8ee2-43b2-40f5-8c6d-53cc895c1146",
        "cursor": {
          "ref": "4f298709-b36e-4afe-abb8-2d23280cbeb1",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d41762e-09c9-40c6-9d6e-f4cc4303e659"
        },
        "item": {
          "id": "d16c8ee2-43b2-40f5-8c6d-53cc895c1146",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0cbd1b4f-3c43-4070-bec5-0160ee32f20e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dba53e-e597-4341-9b4d-bbe220c75185",
        "cursor": {
          "ref": "86dc028c-c202-45ea-be82-e3c5743b92dc",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2653c7ea-344b-4de7-bc2e-1eb844074fe7"
        },
        "item": {
          "id": "a4dba53e-e597-4341-9b4d-bbe220c75185",
          "name": "identifiers"
        },
        "response": {
          "id": "edef7fb9-37e1-4308-b97e-d6b7ec6cc288",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3a199-4dc9-45d5-b0c5-1770029374a8",
        "cursor": {
          "ref": "c07cdc7a-f46e-4c20-b646-430bbde8e6b4",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e5deb4a-da94-4702-8f69-7fe26e722f1d"
        },
        "item": {
          "id": "3bc3a199-4dc9-45d5-b0c5-1770029374a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea9790f1-458b-46e6-b300-6ee39e66f995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a052201-f149-4c3a-b953-ea5945108c99",
        "cursor": {
          "ref": "cb9f5ba1-6774-4912-9004-317b6703bf5c",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8270419e-a8d7-4724-8c73-c356beb7826a"
        },
        "item": {
          "id": "6a052201-f149-4c3a-b953-ea5945108c99",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "92052490-c579-4714-a66a-4e8bc8c4b1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce8c6ef-85a3-47fc-ac6d-827b7764b860",
        "cursor": {
          "ref": "288adbc0-237e-4875-9fb7-b3e183c47923",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f254cd72-33b7-4560-bd7a-7b2e264851cc"
        },
        "item": {
          "id": "9ce8c6ef-85a3-47fc-ac6d-827b7764b860",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef22abfa-c031-4cad-822b-333830bcec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f9f3d6-c023-4a58-9f76-5676fb0a9736",
        "cursor": {
          "ref": "e2d2aeaf-69a3-48c2-a484-974ec47b3483",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1f0a752-692c-4189-a4bb-c1dfc6856489"
        },
        "item": {
          "id": "85f9f3d6-c023-4a58-9f76-5676fb0a9736",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e92fd3a5-fa57-4b97-9d00-d23b22406d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a4282-8f48-4f63-93b5-b02cb61ce7c3",
        "cursor": {
          "ref": "edfb4fb9-cac4-4a35-a665-471d716cd633",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc6c5f0f-29c0-45cb-814e-53a8b7582c7d"
        },
        "item": {
          "id": "ca2a4282-8f48-4f63-93b5-b02cb61ce7c3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2bdce293-8609-49b3-b650-5ccbd36cca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04628bb-ec25-4ab3-aabc-90b0333409db",
        "cursor": {
          "ref": "6b53f130-f144-483e-b9e3-e31fb10d0021",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff3a8474-f120-4b61-9880-953d1bdc4847"
        },
        "item": {
          "id": "d04628bb-ec25-4ab3-aabc-90b0333409db",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8bf9eeed-c0f9-4b50-b1b5-eeff17978760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785a8b7e-3324-4baf-9f76-672118f0dca5",
        "cursor": {
          "ref": "fb0d35a9-4863-4a88-82a4-652834b6b0ab",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a3e29155-ee74-4fd3-9f02-299be3c774a5"
        },
        "item": {
          "id": "785a8b7e-3324-4baf-9f76-672118f0dca5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8951daf-9776-44e5-98b2-e533d7b8ba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb767f-ed13-4265-a017-df2bcfaa6d72",
        "cursor": {
          "ref": "a7c46f13-9096-4120-a7b0-e57aab768fb3",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0cada638-0a62-427b-9606-80422cdb00c8"
        },
        "item": {
          "id": "14bb767f-ed13-4265-a017-df2bcfaa6d72",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8e54dcf3-b81c-4bd7-b77a-bd07cf1ca1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086dbf76-b01e-4f77-8d1f-fe54e63cb3cb",
        "cursor": {
          "ref": "50e29636-9ffa-4e9f-a901-83ae8598731b",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fe2515a9-d81f-47a2-913f-14be65133280"
        },
        "item": {
          "id": "086dbf76-b01e-4f77-8d1f-fe54e63cb3cb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3ad69b98-0fc7-4498-90c5-de9e3df2ddd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae358aa-6a6c-4772-b572-5ca5367c0db0",
        "cursor": {
          "ref": "24d71748-222c-4821-a993-82516e19056a",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f5f7d632-2907-49b7-b416-cc5dedcc8aeb"
        },
        "item": {
          "id": "2ae358aa-6a6c-4772-b572-5ca5367c0db0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06d6cad6-dae3-4709-a25b-938f9d32c6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370aaa6f-a8f4-410d-9ba1-f321df62e60e",
        "cursor": {
          "ref": "23ad8e0c-23af-4322-8e15-5b450e406ebd",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cbc567d0-fa24-4e3b-a605-f1180ce84496"
        },
        "item": {
          "id": "370aaa6f-a8f4-410d-9ba1-f321df62e60e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e3277d95-3e45-468e-8374-47649a85f0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef3304c-f821-4b37-8246-f92ab05560c4",
        "cursor": {
          "ref": "7480f056-6060-4a48-8f1e-fdd405a75c9f",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4922f157-63c0-4029-ac6e-7c4973420fd0"
        },
        "item": {
          "id": "aef3304c-f821-4b37-8246-f92ab05560c4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6b3dd81e-6561-4fb6-829a-43d125571ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de914b15-398b-48f0-b229-d28e3b0b5f80",
        "cursor": {
          "ref": "3593b3ab-582e-401b-8a27-c87642f04c6b",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "64036f13-cbf2-41a9-be14-bb72b3569c54"
        },
        "item": {
          "id": "de914b15-398b-48f0-b229-d28e3b0b5f80",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8666860d-4109-40bb-b2f5-85dc6fa6b4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eadb99-4159-4000-8a1c-17fc6e90ef4f",
        "cursor": {
          "ref": "66ffc091-2292-4bd2-b8ab-fd614cd0c9c1",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3d28af51-4cd0-4436-9122-47671a0ef906"
        },
        "item": {
          "id": "b4eadb99-4159-4000-8a1c-17fc6e90ef4f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "83e9aea1-5ab4-4920-aaef-5a4311b15411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8bb2a0-72d4-4e91-b2e2-4ed05198848c",
        "cursor": {
          "ref": "b9b4a89d-e54e-480b-893f-d98290677da8",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "775beebe-338d-4fe1-8363-e365a33155bd"
        },
        "item": {
          "id": "ec8bb2a0-72d4-4e91-b2e2-4ed05198848c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "115cafca-6157-43ca-b2df-684aaf92a87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926e6269-fb37-4170-a659-fa68f17f923b",
        "cursor": {
          "ref": "271d4d4f-3814-4def-94bf-d0a37e641574",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6136e61d-909f-4859-82e2-c30f352c38ac"
        },
        "item": {
          "id": "926e6269-fb37-4170-a659-fa68f17f923b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ce820f1c-8025-4e2e-91f0-2c58bff30328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f4fb11-f363-4bd4-8e98-c8828dcc3c13",
        "cursor": {
          "ref": "8609a5b1-b2e2-42c6-ad72-f9e1dcc5b104",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ab9548c7-de9b-4419-a7c5-121fc0882458"
        },
        "item": {
          "id": "04f4fb11-f363-4bd4-8e98-c8828dcc3c13",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d634b12-beec-4e2a-910a-07e7e0fe9889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b48eef-d449-414b-a9aa-788db7a28910",
        "cursor": {
          "ref": "330b7b92-e8e7-41eb-8bd6-51453437c99e",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a5af543c-6c8c-4f63-a61a-f727376f55cd"
        },
        "item": {
          "id": "b2b48eef-d449-414b-a9aa-788db7a28910",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7fbafcf3-274a-4e9a-8053-fb812fe5cd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a68438-bbf6-48f9-9398-bf05f3e238d0",
        "cursor": {
          "ref": "6a2dcc57-1c50-4700-b98e-c752ceb52eb5",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b773599e-4438-4ac3-800d-da98a1a89486"
        },
        "item": {
          "id": "f3a68438-bbf6-48f9-9398-bf05f3e238d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f5e48137-31c6-40e6-835f-593fd37a95fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed03875-ecfc-4d65-9639-6e76266223fa",
        "cursor": {
          "ref": "7a4f5c4b-7bfb-4e70-b40a-b87992ea667d",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1145385f-a57b-46d1-b0de-52aa747e561f"
        },
        "item": {
          "id": "aed03875-ecfc-4d65-9639-6e76266223fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "090c3202-34a6-4c02-8742-6a41fa248130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a3d3af-291f-4247-8f21-25fe5736d9c1",
        "cursor": {
          "ref": "326bba6b-3317-451c-a09d-80e6b43340c4",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "075924d6-1817-4365-8198-a86eb1fb58b9"
        },
        "item": {
          "id": "e7a3d3af-291f-4247-8f21-25fe5736d9c1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d6917cc-d7be-4132-96e8-a5f5c3a121b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd0e98d-583e-473d-bd67-9aee5a89592f",
        "cursor": {
          "ref": "0edff7c3-b9fe-46d3-8984-6f952290aa71",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e91d1bd0-4b8c-4b67-88c4-05e1ca36672e"
        },
        "item": {
          "id": "ebd0e98d-583e-473d-bd67-9aee5a89592f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ee53389a-a1ff-4035-b3ee-b4f2d70d17c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe7cbda-6881-4264-9e46-e28aa52ea615",
        "cursor": {
          "ref": "4edddb1a-164d-443d-990f-e40b4f9d29e7",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2c2c6ae3-7a21-43d9-b632-2c2c8df351d9"
        },
        "item": {
          "id": "cfe7cbda-6881-4264-9e46-e28aa52ea615",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e1dfc9c9-3959-4336-8bfa-3d63abfcf234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0515aa02-f631-4605-9617-2378805f9473",
        "cursor": {
          "ref": "6f83cf0f-b340-4f0e-b6b9-f2e4176655a6",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f03592e1-619e-41dd-a615-72929f4cd861"
        },
        "item": {
          "id": "0515aa02-f631-4605-9617-2378805f9473",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fcacc691-0cf8-4520-9499-ad99d3b75261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf5b0d8-440a-411f-97bc-03764ec862b6",
        "cursor": {
          "ref": "d73f44e4-d192-463c-bf39-004f63698872",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2a2fe37c-6876-4a11-ac79-9632810e50ee"
        },
        "item": {
          "id": "7cf5b0d8-440a-411f-97bc-03764ec862b6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3891625-6b1d-4552-a31c-1868eee16560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd008d10-5acc-4a18-8792-2bbf6758842f",
        "cursor": {
          "ref": "423a1793-55a6-420e-a860-e47701e5cba3",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4abffe5d-863c-4cae-bc2e-168029049c66"
        },
        "item": {
          "id": "dd008d10-5acc-4a18-8792-2bbf6758842f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8cb6cd16-e22c-4ae2-bbe4-ed82d04b321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd29632c-47a2-49be-869b-90491b8aa2d9",
        "cursor": {
          "ref": "75936104-7b98-4fd7-9e91-4d36f03ddd93",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ecdbfa98-5304-48a2-9570-e900ab22ffa1"
        },
        "item": {
          "id": "bd29632c-47a2-49be-869b-90491b8aa2d9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a2af546e-21e7-4a7c-8ac5-106542d60435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b775ee7-9586-413e-9511-fe1af1fec34d",
        "cursor": {
          "ref": "3713f7be-221d-4095-80e5-09d571dae46c",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3e096fb2-748b-401d-856a-478364876d51"
        },
        "item": {
          "id": "9b775ee7-9586-413e-9511-fe1af1fec34d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "37af18b4-d0fc-4b9f-997d-423b0f5ec91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a287c0a5-6f85-440d-b31a-35a3df8ef393",
        "cursor": {
          "ref": "d2bfdbd4-6cbb-43b9-af40-687ee6d87565",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24ac95a9-7e9d-466e-8100-9e1a1b85da8e"
        },
        "item": {
          "id": "a287c0a5-6f85-440d-b31a-35a3df8ef393",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d18f249-08a2-4bd1-8eb1-461aa724835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e0872a-e78c-48eb-a895-2a5121f202fd",
        "cursor": {
          "ref": "79e0fea2-f81a-47b0-b6d4-e093089fc8fb",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9eeb11e5-b334-4e93-889d-ce12aced47cc"
        },
        "item": {
          "id": "04e0872a-e78c-48eb-a895-2a5121f202fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3663d296-6ad7-4e24-b0e4-54d2423c8e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26224efd-c85a-482f-826d-e286bf35bf98",
        "cursor": {
          "ref": "6923e27b-ce58-40c5-85ac-02e5f506a46e",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b483635-b76f-4b8b-a68e-885a1de87604"
        },
        "item": {
          "id": "26224efd-c85a-482f-826d-e286bf35bf98",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f0b94d9e-ec88-4984-b1b0-006efe95c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05efe21-f627-4b29-965e-5fd660c61524",
        "cursor": {
          "ref": "7d0907fc-7c8d-4410-b11c-0680f5b10259",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "690698a1-db55-4454-b76b-d9c06268a965"
        },
        "item": {
          "id": "d05efe21-f627-4b29-965e-5fd660c61524",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "963fab70-1ff0-4f8d-8921-77fe6a534491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51574eae-2088-45e1-b627-631b0098935f",
        "cursor": {
          "ref": "65111ec1-ceb1-4ea9-ab62-eed28fbaf27f",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bde6f380-66c3-489e-ac54-26f3baed8a49"
        },
        "item": {
          "id": "51574eae-2088-45e1-b627-631b0098935f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a1a51df8-9afd-46c3-9c27-4245fb170e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91068017-ac04-4f85-9951-21167be8e1ed",
        "cursor": {
          "ref": "d397f747-d84d-44d3-8e49-6ff75cc1883d",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f218b202-5a33-4293-8a2e-02fb1848705c"
        },
        "item": {
          "id": "91068017-ac04-4f85-9951-21167be8e1ed",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6835cd9b-5461-47ca-9cad-99210a8d9347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30202c99-61b1-4af5-9f93-fd0a685bf345",
        "cursor": {
          "ref": "525b99bb-a519-4c58-8067-dd02fe0b98b1",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1fcb68f6-1f14-4d0f-acea-41306eecd5c8"
        },
        "item": {
          "id": "30202c99-61b1-4af5-9f93-fd0a685bf345",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "40cd6837-9523-42ee-994a-2a742d05c171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8163321b-ed68-4e2c-8325-fc08e146e222",
        "cursor": {
          "ref": "d5a2471b-3889-4c2c-b941-fda6681aa28d",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3da20c56-ad24-42d0-95c2-5d63e9a78467"
        },
        "item": {
          "id": "8163321b-ed68-4e2c-8325-fc08e146e222",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5601368d-b2cb-426b-bee7-13fe2e17480d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c7ea82-f685-45c3-b072-4122c801f132",
        "cursor": {
          "ref": "6e231a22-4490-4013-aac4-306cd0352338",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5d7a3340-d1e8-4921-9807-8b11a456060a"
        },
        "item": {
          "id": "a6c7ea82-f685-45c3-b072-4122c801f132",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "baecba78-ef4f-405d-ac1a-dfebf20cbc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0114050f-39fa-4090-863c-cdc75cac81de",
        "cursor": {
          "ref": "19f6edb2-c62e-42fa-a11d-602881d83dfa",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0511f42b-b53d-48e5-95f2-0978e0d82b65"
        },
        "item": {
          "id": "0114050f-39fa-4090-863c-cdc75cac81de",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2069acb0-61f7-4366-80c7-3eb7c436f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d0309d-a455-423d-afd1-31b4591b3f22",
        "cursor": {
          "ref": "0a9f1c4c-7bf2-4958-a3b1-802d698436e7",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7757acd3-93dd-4682-bb76-98062cf4d7e2"
        },
        "item": {
          "id": "f4d0309d-a455-423d-afd1-31b4591b3f22",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e977b087-308c-40d9-950b-e754af4cee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b33b439-4f25-4964-8a86-223d488b393f",
        "cursor": {
          "ref": "21798aff-da26-42ac-a824-d469c3499e18",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fc99bc0c-3047-4846-b6e1-59287493919a"
        },
        "item": {
          "id": "8b33b439-4f25-4964-8a86-223d488b393f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8b3ee9be-ca6e-416e-b0b3-9ce648c85185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fc83dd-2247-4fe7-93ab-15ffa3e229ca",
        "cursor": {
          "ref": "5de16c15-5327-42e1-bbda-41e770548d9c",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba106a75-b58f-43bb-9b10-065f62a20c16"
        },
        "item": {
          "id": "85fc83dd-2247-4fe7-93ab-15ffa3e229ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3e2c9d2b-ebac-4b7b-8320-7d22894c1a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56eaf8a-0332-491d-bfeb-931350cadbf1",
        "cursor": {
          "ref": "66118bc1-8e58-47a4-9363-c3a371100110",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "23d8fe9b-1468-4412-adde-e98a1ed259c0"
        },
        "item": {
          "id": "a56eaf8a-0332-491d-bfeb-931350cadbf1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "82c78164-0c88-4700-ad3f-60d5768a799b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e406d2-d728-49ae-b94e-0dd80442b636",
        "cursor": {
          "ref": "8ee884a0-e41c-4303-a206-b58b5f4808bb",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a9fbe225-9e60-42e7-a8c7-f1b814f7847a"
        },
        "item": {
          "id": "80e406d2-d728-49ae-b94e-0dd80442b636",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "43e43a8c-d4f8-4ddd-b816-c53c0ef6485d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0598b-704b-489b-91d8-dbd4fa88546d",
        "cursor": {
          "ref": "4681cac4-1c0f-444f-a782-4dc3daf449ca",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ddba401f-9008-4081-b1c0-9985465b6222"
        },
        "item": {
          "id": "a3f0598b-704b-489b-91d8-dbd4fa88546d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "faba933d-e34f-4e5e-92e8-3f51c5233f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa221b4-eede-4a85-a847-286018fb613f",
        "cursor": {
          "ref": "44a0275f-6382-45eb-9084-3278463b7d2f",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "39cea135-554b-43b9-87c2-57b36308f3bc"
        },
        "item": {
          "id": "6fa221b4-eede-4a85-a847-286018fb613f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c2b22ef8-61df-4121-9f5a-6bc58d35f769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8757c8ce-1ac5-477f-8e28-6aa72ccf7241",
        "cursor": {
          "ref": "b869a31f-47e8-4428-8f44-48279bead8f5",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c66fcc72-ef49-4988-9406-ba9ffb403443"
        },
        "item": {
          "id": "8757c8ce-1ac5-477f-8e28-6aa72ccf7241",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d260357e-f4d1-4e77-9fa6-a6fa1808b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1e60b4-f3aa-48fe-a1c9-c9eca03f050e",
        "cursor": {
          "ref": "0f418e03-79d1-423e-9bde-36deff54f732",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2468c5ad-0596-423b-973d-68ce110a460f"
        },
        "item": {
          "id": "6b1e60b4-f3aa-48fe-a1c9-c9eca03f050e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7d10f628-b86f-4267-9192-f92245897ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf8e4a-b56f-4b8d-9222-0cf757211bf1",
        "cursor": {
          "ref": "d6b10a66-f5e1-4dd0-a1ec-5cbb68cb6ccb",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42163f52-2d02-49b1-bec4-0a4f7ad0233f"
        },
        "item": {
          "id": "1bcf8e4a-b56f-4b8d-9222-0cf757211bf1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "534c8c9c-1131-431b-81b9-ab8581d222d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd9a683-6897-4586-88e1-52ef18fae904",
        "cursor": {
          "ref": "df913e83-1a88-40d5-ad07-7d0983159c37",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e3168fc-83ec-4ad6-bb4f-2a31d72a220a"
        },
        "item": {
          "id": "5dd9a683-6897-4586-88e1-52ef18fae904",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fd9a68f4-2c9d-46f9-9786-5821bfd17f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883d351f-9c9f-4328-89ea-d6512bb8e52c",
        "cursor": {
          "ref": "db9105e1-75a6-407f-bee7-eacd8f9569f4",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e11f4235-98b0-42b7-8e89-ac3631157b38"
        },
        "item": {
          "id": "883d351f-9c9f-4328-89ea-d6512bb8e52c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6b898d2e-1d58-420f-b273-821c997238b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e661c78d-5ffb-4289-bf0a-c0984f212ec4",
        "cursor": {
          "ref": "81d0cefd-14f4-4788-8bfe-f9d20051f097",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27dd97d9-9606-45e2-ab05-38efb53bfbba"
        },
        "item": {
          "id": "e661c78d-5ffb-4289-bf0a-c0984f212ec4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6362e97-6b82-4e1c-b33f-f4225b2b5ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fd2ec8-39de-43c7-8caf-ee0e3b3ead55",
        "cursor": {
          "ref": "bc9aa182-fc92-4a1a-bf9b-5a4678ba8c34",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0dfee9fc-50f9-45cd-8c76-52c68d13701c"
        },
        "item": {
          "id": "e7fd2ec8-39de-43c7-8caf-ee0e3b3ead55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "868df0b0-4c87-47a7-88fc-0627629d8193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0220c166-9487-43ed-8f5c-6ca52edc0960",
        "cursor": {
          "ref": "37e2c05f-60b9-4a8c-9cca-d31be1743464",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "57ec1d19-64d8-4a4f-9c81-f047299501ba"
        },
        "item": {
          "id": "0220c166-9487-43ed-8f5c-6ca52edc0960",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "64692de6-d4eb-4514-a5e2-002dd161cf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bb3199-6ad4-4e6a-a8d4-b9b6a171bc64",
        "cursor": {
          "ref": "a171b378-2e48-471b-b049-3e0d14ae942d",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a5556449-1946-4800-ac32-9f98748bc3c4"
        },
        "item": {
          "id": "58bb3199-6ad4-4e6a-a8d4-b9b6a171bc64",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "423ac4d2-c402-4745-8f58-5de57efa4b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1aecb4-d341-47eb-9bb9-ccd0d727f3e4",
        "cursor": {
          "ref": "c7901904-b692-4033-88ae-0e0067300326",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e9f96ab9-9c03-4685-ad31-791c493adfbc"
        },
        "item": {
          "id": "5a1aecb4-d341-47eb-9bb9-ccd0d727f3e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fda03b77-b41a-49f4-b01c-7112d3c45966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406110cc-26b6-4801-89f9-90e3ceb50da3",
        "cursor": {
          "ref": "a5513b96-945d-4dfc-b1b7-cf834aa25579",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e4aed293-cf18-466b-a8f8-0b2a4bc74b6a"
        },
        "item": {
          "id": "406110cc-26b6-4801-89f9-90e3ceb50da3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a09466f7-cf09-4219-9af0-1b59bca197e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e6ee4a-f710-4724-ab87-7f0fe55a20f7",
        "cursor": {
          "ref": "f0e6e934-ed68-4be7-9341-978ef23bf622",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6b182d8-0c8c-406b-a4c9-363a5087d28c"
        },
        "item": {
          "id": "84e6ee4a-f710-4724-ab87-7f0fe55a20f7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fb239c98-3597-4096-8b3d-8758129c9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5a672b-ebd4-4186-9458-b9e317ef1f3c",
        "cursor": {
          "ref": "5a7c1a9a-8524-4384-b6cb-128b4e5528cf",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9df3ba88-25eb-4a03-826f-4babffec5a8a"
        },
        "item": {
          "id": "3d5a672b-ebd4-4186-9458-b9e317ef1f3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "25ae518a-e07b-4230-82f7-a2d252327b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eefc0b-e6ed-46da-aa26-d84e60e3d487",
        "cursor": {
          "ref": "78bf8fbc-d5a9-476e-8c30-ad1df77c5769",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60999a6f-4af0-4ce1-924c-86708a1a8782"
        },
        "item": {
          "id": "00eefc0b-e6ed-46da-aa26-d84e60e3d487",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a52790d6-bf58-45bc-ad01-4e848678c689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48ec319-f963-40be-86d9-fa86e2281769",
        "cursor": {
          "ref": "b9474fdd-ac4e-46bb-a1cd-78bcef43c577",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5835a56c-cfed-4684-8874-c1c4804cb7dd"
        },
        "item": {
          "id": "f48ec319-f963-40be-86d9-fa86e2281769",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "44feba61-546f-4ac8-a8f4-e4023a6d15e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7de0873-d476-4c7a-b3ae-c2416d1ee4ea",
        "cursor": {
          "ref": "b572001f-93db-4fcf-a6bb-85ef8b72d917",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "acb880aa-fb4f-4b77-ab7f-b9402c97286d"
        },
        "item": {
          "id": "a7de0873-d476-4c7a-b3ae-c2416d1ee4ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d09cc06f-af59-4de3-89e8-47f6f5082d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a876beef-7d04-4c67-9449-013d99c82474",
        "cursor": {
          "ref": "2f6d54bf-1e6a-460d-b979-4045c7cc0977",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e1e51d4-c21a-48b6-b675-4e0dd6c66865"
        },
        "item": {
          "id": "a876beef-7d04-4c67-9449-013d99c82474",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4fc97515-51b8-4642-a7f5-67361230ed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88256526-1a70-4562-bd64-61f941dc12ae",
        "cursor": {
          "ref": "623c160f-f3c8-45f4-9c45-946d0d9158bf",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1cbaeb94-def9-4e32-93d6-85e2870103fe"
        },
        "item": {
          "id": "88256526-1a70-4562-bd64-61f941dc12ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d35364a1-c258-435d-b099-547fa6eb0dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf87f930-69e8-4084-96d1-ccd2b106fed2",
        "cursor": {
          "ref": "2d45148a-aedc-45ec-bd61-e6216f087b0f",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a5c2c99d-85c5-45f8-8c07-8455b8dd7b8d"
        },
        "item": {
          "id": "bf87f930-69e8-4084-96d1-ccd2b106fed2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "941fe504-3b23-43a9-a9e4-165d568a60f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc16629-38de-4f03-8270-cce3b1506254",
        "cursor": {
          "ref": "ea584efe-19b7-4669-a042-0a1f1c329a18",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1468fd8f-a5ae-4707-9ee1-49d125b839dd"
        },
        "item": {
          "id": "0bc16629-38de-4f03-8270-cce3b1506254",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "987c5bac-e9ae-4917-92e0-5db429afc29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205d915f-5839-4a59-934f-51b2138da50f",
        "cursor": {
          "ref": "5f34f375-968a-4c00-8cd2-858cf99d85bd",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "acec9be2-15c6-407a-bc51-3f0428524bbd"
        },
        "item": {
          "id": "205d915f-5839-4a59-934f-51b2138da50f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "44ffa49a-c253-4826-831f-d6732beb37e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ef1cd-71f6-4702-ac79-9e65f04bcdee",
        "cursor": {
          "ref": "eb81380e-b1da-46ff-8624-e7cdc7b4bb69",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce5ccbb6-e168-4bca-8249-0448f92b530b"
        },
        "item": {
          "id": "929ef1cd-71f6-4702-ac79-9e65f04bcdee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "914e1bc1-75cc-4d22-9920-f378f9fb5340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3911826a-01ae-42b7-b057-789917eaf9f7",
        "cursor": {
          "ref": "7b072325-16ca-4ac3-9be7-5e810f870633",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b4561c98-9c18-49b8-82da-daf66badce50"
        },
        "item": {
          "id": "3911826a-01ae-42b7-b057-789917eaf9f7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cdf07e89-eb71-4d13-aa59-b6db7006ed31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74724b6c-9d5a-40b7-9238-ff740a15bf06",
        "cursor": {
          "ref": "edee2424-4f23-45c2-af15-701ef1d4f6c4",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d62bdf88-cc67-4086-a8af-42f78b48e780"
        },
        "item": {
          "id": "74724b6c-9d5a-40b7-9238-ff740a15bf06",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ef32672-84c5-41c8-a78c-c5335a38cca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b57f9f-fe58-4803-aad3-1534a585e0ad",
        "cursor": {
          "ref": "5aeda98a-f784-40a5-9d03-28de088007ee",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "328cbad4-886b-466a-95f3-bcf92de3bcbb"
        },
        "item": {
          "id": "b2b57f9f-fe58-4803-aad3-1534a585e0ad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bc2594b4-1a80-4ffb-9fc1-5d89da03244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989eb929-1b73-44a3-aa71-827d4ccb65d9",
        "cursor": {
          "ref": "8bfc687f-3d6e-498c-9479-2f0a1b97953d",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "907b83d5-6e1f-4b1c-a11c-30b2f5116e8c"
        },
        "item": {
          "id": "989eb929-1b73-44a3-aa71-827d4ccb65d9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3b2c8daa-6298-4d42-8b1e-7c9c2ebf1a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bb1bc7-9fed-418a-b8a6-d82582559cac",
        "cursor": {
          "ref": "e0d75535-8c11-41fe-a00f-7e9e46b449c6",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8af42b1-70fd-4608-8668-ff764a237ef8"
        },
        "item": {
          "id": "59bb1bc7-9fed-418a-b8a6-d82582559cac",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5f51503b-670e-46ea-a43a-021262aa2682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca59011-fc0a-456b-95ff-55bb584a6a47",
        "cursor": {
          "ref": "a44b6e6f-877b-4af3-ae41-ad09419f6f72",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2bd5b7e-76cc-4579-83d3-5bde0564d69b"
        },
        "item": {
          "id": "aca59011-fc0a-456b-95ff-55bb584a6a47",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "071754ff-9681-4eba-9356-d9ef2fdce85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938470a4-0982-45a6-ba15-10a9fc567a00",
        "cursor": {
          "ref": "4b2f3b44-29d9-40b6-9ccc-e477d7c6f234",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0e9a56a4-5d0f-45c3-937b-c81229294046"
        },
        "item": {
          "id": "938470a4-0982-45a6-ba15-10a9fc567a00",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "57e19d4a-77a4-44b1-bcb4-a23a8fbdefe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851656f7-2782-4062-8402-dea0232e1061",
        "cursor": {
          "ref": "943ff2d8-b738-438a-907c-b71120f3cf7e",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "682e4192-99c4-4a3c-9a4c-5fa7ca9b1a87"
        },
        "item": {
          "id": "851656f7-2782-4062-8402-dea0232e1061",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1a7ec010-07d4-4580-bdae-d827dad16b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ced671b-b544-4b37-9904-4b98cfee3278",
        "cursor": {
          "ref": "3cfc7eba-0329-4f34-b0b6-520da389098b",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "08e052bf-3670-4ea7-a1f4-fe92c35e9d46"
        },
        "item": {
          "id": "2ced671b-b544-4b37-9904-4b98cfee3278",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bc161e8f-02ed-4ac7-8907-834bc4a4120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8127dc05-d546-409e-9523-6a440285922c",
        "cursor": {
          "ref": "3bbee685-5baa-4a27-a86c-36381a4a7bd5",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d0fdec4b-286c-4aff-8a3c-cd1662e096a9"
        },
        "item": {
          "id": "8127dc05-d546-409e-9523-6a440285922c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c576d31b-8792-4c5f-823e-645bc0847e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847b0205-b816-453c-a280-ec6ba686c51c",
        "cursor": {
          "ref": "84d8fb1a-9306-4e63-876f-7bdb17794c6d",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf3e10f9-e555-4243-a191-13e4db77201c"
        },
        "item": {
          "id": "847b0205-b816-453c-a280-ec6ba686c51c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7754630d-6e8d-487f-bb54-bf430db511a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec41c6e5-b1a0-4f1c-887c-150ede763792",
        "cursor": {
          "ref": "84ebb766-feaf-48c5-92c4-8456c31ed1f7",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2705b3a9-0d46-4879-b60d-7a104f7afb3c"
        },
        "item": {
          "id": "ec41c6e5-b1a0-4f1c-887c-150ede763792",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "29bd96a7-8754-4ba7-9c8d-13f9225577c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c445e224-2ecc-43c6-b0a4-8ddc6354a81b",
        "cursor": {
          "ref": "c878bee2-f8e7-4300-a3f7-c560e3f70a97",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb597b61-21d4-4ea1-a7b5-c6923971c1d4"
        },
        "item": {
          "id": "c445e224-2ecc-43c6-b0a4-8ddc6354a81b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d060ee84-1bff-4564-bd8c-68f5e314b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151c6c37-4db0-40e5-b908-cfb2aabe8806",
        "cursor": {
          "ref": "9d4951e3-a18a-4936-8623-c4c9ebbd7fe5",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea858731-065c-4fe2-8370-3823285d432b"
        },
        "item": {
          "id": "151c6c37-4db0-40e5-b908-cfb2aabe8806",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2a785425-5a52-42dc-883d-e86b8f783502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0405f66-72eb-499a-b33a-2e6c1bf4c32e",
        "cursor": {
          "ref": "a4030a43-d4c3-4f28-8e89-93b4ae399306",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "76ca9246-8e2a-4b11-b24b-0b1bfadbad20"
        },
        "item": {
          "id": "f0405f66-72eb-499a-b33a-2e6c1bf4c32e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "105d72a8-0a8a-4c21-8853-837464d9bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf102ced-1a93-4381-8b71-5e2a1d5118f0",
        "cursor": {
          "ref": "ce8cdfc1-cb9e-4972-aaad-772c9960a9df",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e762c7f9-7474-42f5-b7e4-2a3af818009f"
        },
        "item": {
          "id": "bf102ced-1a93-4381-8b71-5e2a1d5118f0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fc21b5d8-12c8-440b-a340-7f87a217be8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d82a45-80ab-453e-babc-bf0a27e134d2",
        "cursor": {
          "ref": "fc551e6a-ac3b-4706-8338-d8d282f94744",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72f4acb1-689e-48a0-b703-77ac5d34bf4b"
        },
        "item": {
          "id": "56d82a45-80ab-453e-babc-bf0a27e134d2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c1af5990-c2ca-473d-8544-6bad85c965a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10eeb9d-9095-4d75-94cc-80b3d0edb43d",
        "cursor": {
          "ref": "91e81a2a-4747-4351-83a5-2dd697eddf1b",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "326df9c3-6b64-4520-acc1-b4338248be03"
        },
        "item": {
          "id": "a10eeb9d-9095-4d75-94cc-80b3d0edb43d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e233dd5-718c-4df7-abdf-a6efe866e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b7528c-d957-4ccc-886f-3227d12d7b14",
        "cursor": {
          "ref": "63902333-9250-4e58-9f45-87148b07ae42",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d7b15d9f-bf52-4164-9556-8d38eb38edd6"
        },
        "item": {
          "id": "c5b7528c-d957-4ccc-886f-3227d12d7b14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "28996c7c-0484-4a8b-a174-8b3c946df058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c12cb4-99f0-4527-be37-fcc51f3656eb",
        "cursor": {
          "ref": "359478ba-112c-4216-9488-2dc653630eb6",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "58d5d0ce-a0e2-498f-8169-ebc5d502a83f"
        },
        "item": {
          "id": "e1c12cb4-99f0-4527-be37-fcc51f3656eb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d65fdfe-ef11-4b33-bd02-410cd8cbba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684a35a6-8ad2-497a-ae96-fb27b09ae290",
        "cursor": {
          "ref": "8e95b5c2-122f-445f-8316-bb089bf56a36",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2fc893e8-fd96-4293-be68-cf82ec328e17"
        },
        "item": {
          "id": "684a35a6-8ad2-497a-ae96-fb27b09ae290",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2f9acd89-aa2a-4301-b430-77db016e41a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba07e535-583d-48b2-85b4-e85d8996c178",
        "cursor": {
          "ref": "84c2d85e-0740-4fdf-b904-cc31d4c17be5",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "77c2efd8-3477-496d-b57e-f4c1796e4042"
        },
        "item": {
          "id": "ba07e535-583d-48b2-85b4-e85d8996c178",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "38f959c8-5e15-4ae3-89e1-6e373a6fe480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4893fe7d-a4a3-4c21-b58c-70343533d0a4",
        "cursor": {
          "ref": "5f934146-52d5-443f-bc6b-b578be3cefd3",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "07d1a66e-3542-467b-a253-49fb2b00f2c3"
        },
        "item": {
          "id": "4893fe7d-a4a3-4c21-b58c-70343533d0a4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "318cb47b-4a19-49de-bf1a-5804f3f7eb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb4e658-f693-43d0-8001-f5d771faa207",
        "cursor": {
          "ref": "a8c2712b-f521-4c0a-99eb-2cb6a903cb65",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ec87bd7-9742-4e22-aafe-202c1dcf465e"
        },
        "item": {
          "id": "7bb4e658-f693-43d0-8001-f5d771faa207",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f6ab862-9f8f-4164-b28f-ee0a01ef6487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ddf10-09e8-441f-881e-77d842c87e83",
        "cursor": {
          "ref": "9234e4a7-5da6-440e-aa3b-4460756c7375",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "761754f1-7a86-4373-9883-d9d13c0c6750"
        },
        "item": {
          "id": "995ddf10-09e8-441f-881e-77d842c87e83",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "88a5ca83-c23c-44e2-aa63-b85fbbd1d6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d036e49-0117-4d54-aaec-cd42ed3c7d7a",
        "cursor": {
          "ref": "95511e87-7f6b-4b96-9d2c-5d216f0c2036",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b59c2c97-a5b6-4382-8762-fa825e5ddcf3"
        },
        "item": {
          "id": "4d036e49-0117-4d54-aaec-cd42ed3c7d7a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "669c6e85-846e-4199-bf5f-40f9e3c113ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a93714-8031-4b83-9fb3-9ef733b9d78d",
        "cursor": {
          "ref": "031c2846-23d3-4cc6-91eb-41ad052c0685",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2308898d-c05c-41bf-81b0-8a8c26ff5711"
        },
        "item": {
          "id": "a6a93714-8031-4b83-9fb3-9ef733b9d78d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9f553a44-a1c6-404b-9d97-800c4de84aa5",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3907d821-c0a6-421e-9d23-c33dc9438fee",
        "cursor": {
          "ref": "d39b310d-3fd2-4cd5-b82a-1eb48a99797a",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bc170905-d032-4bad-9fd1-cd08b48301a3"
        },
        "item": {
          "id": "3907d821-c0a6-421e-9d23-c33dc9438fee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "509526f8-3ae6-4cef-9a5c-f4002291ff6e",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdbbe8c-21bf-45c3-98ab-32732bb0071f",
        "cursor": {
          "ref": "bfb9ceb6-6837-4661-9d63-69221549fd33",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fbba469d-3eda-43e3-a54d-e2cf6b46aad1"
        },
        "item": {
          "id": "bbdbbe8c-21bf-45c3-98ab-32732bb0071f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3479ef48-992d-4791-974c-20c7c52c8f27",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eee7791-f3c7-4270-87ce-f6c74e26c8e1",
        "cursor": {
          "ref": "1c080fb6-8d42-456d-91f3-1d02ab280232",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e3653788-f4ef-44b6-a9e2-5c06caf4b68b"
        },
        "item": {
          "id": "0eee7791-f3c7-4270-87ce-f6c74e26c8e1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8a0cdd4e-183b-4275-9013-8569623744ff",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea65f48d-e214-4402-a804-508c3e3b123b",
        "cursor": {
          "ref": "71c33b45-5f66-41b3-99e0-6b628d8a5031",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df1461ca-35e6-423d-9270-33ca1aed3dcb"
        },
        "item": {
          "id": "ea65f48d-e214-4402-a804-508c3e3b123b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "73836032-4ecc-45d3-9d9c-f9083766d3d0",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad95613-14f4-423a-9608-87ae1d08bf0a",
        "cursor": {
          "ref": "d61e1d97-5cac-46da-ae56-50ec0b259d0e",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "24312854-8859-4b7a-b2df-9822115288cc"
        },
        "item": {
          "id": "aad95613-14f4-423a-9608-87ae1d08bf0a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "800fc522-39cb-4694-8637-100984c9b7aa",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a735f80-ebfb-40e5-b504-97585d2bff12",
        "cursor": {
          "ref": "d4be7817-07c8-4b9f-ab94-c49a91c8a188",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a19dc817-848e-4cc2-8f65-3bb54ad3cd11"
        },
        "item": {
          "id": "1a735f80-ebfb-40e5-b504-97585d2bff12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "769dc18e-3ac0-4332-9e69-ce546db61a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bcaa73-bc29-44a2-b17d-ec5416eebbe6",
        "cursor": {
          "ref": "42c38219-65d6-4016-8e3e-f14de53b3a97",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3a0b7983-7ddd-4ba8-bc96-09153ae0c588"
        },
        "item": {
          "id": "34bcaa73-bc29-44a2-b17d-ec5416eebbe6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9dbd974-1e9e-4eb9-9806-85230f051820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e1d97a-87a2-49ca-a567-7a7055bf903d",
        "cursor": {
          "ref": "70700e28-433a-43be-92b6-b3ff684428f4",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61903b25-5243-4bef-971f-d7a2d9fdb200"
        },
        "item": {
          "id": "66e1d97a-87a2-49ca-a567-7a7055bf903d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5cbd872-071d-45d7-baa9-32677fc8421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c929af-5028-4144-8bf6-e8efeff2765e",
        "cursor": {
          "ref": "effe51a7-bb82-4a70-9add-16cc8c8bbe41",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "990aef11-92d4-451c-a637-cb39e5c0aa0f"
        },
        "item": {
          "id": "b7c929af-5028-4144-8bf6-e8efeff2765e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bd73b9bc-0aad-4d8f-8dd5-91ce0310a0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72014fba-27b1-4793-88f2-85c0062da525",
        "cursor": {
          "ref": "f24971f6-3f5c-42ba-be63-5e22f6f9ac0f",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d2c913c9-67b1-4286-afb2-4f5b6d63eec3"
        },
        "item": {
          "id": "72014fba-27b1-4793-88f2-85c0062da525",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "782b3429-49ac-4652-9238-031c4a71f375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b718d4d-098c-46fd-8e24-81ddd25c1329",
        "cursor": {
          "ref": "9a7754b9-ec5c-4043-b796-3b4f857782e2",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fbc09c43-cb7f-4b17-929b-b141567e65bc"
        },
        "item": {
          "id": "6b718d4d-098c-46fd-8e24-81ddd25c1329",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13ae1a1d-4a7e-462d-b397-d710502e8d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0dc235-f512-4358-92cf-d79efde3c1ed",
        "cursor": {
          "ref": "c02a6a23-8d9c-4caf-af56-894d5ecb6e9f",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6d08514b-6ee6-4054-81e6-778276fc1907"
        },
        "item": {
          "id": "9c0dc235-f512-4358-92cf-d79efde3c1ed",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc55c97d-33e4-4771-ac29-96d075aa8718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f848c8ff-2d7b-4d8d-adb7-8d5c9d74f756",
        "cursor": {
          "ref": "79699192-7ade-40d9-b0fd-bd372b7204ff",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "348957c8-3b69-4f80-a96c-96d8867013b3"
        },
        "item": {
          "id": "f848c8ff-2d7b-4d8d-adb7-8d5c9d74f756",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1bc17b27-b69d-40d2-9122-bc2abc1c90b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febffe4d-fdc4-46d7-b3a0-7512eb5d671d",
        "cursor": {
          "ref": "7bb487e3-9231-4440-bee0-48e742219d7e",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "213cc9e1-1e4b-4ba0-884d-7fd88d74b1da"
        },
        "item": {
          "id": "febffe4d-fdc4-46d7-b3a0-7512eb5d671d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "33f8f609-b97f-4d41-b5ae-1e4ba9b4dcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b90946-fc93-46b9-91ff-b6442b83d90e",
        "cursor": {
          "ref": "3380b55f-837b-4fcb-92ee-ddd417f1ad19",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "86e1fde9-e590-4356-887f-f0079ffa6d38"
        },
        "item": {
          "id": "f6b90946-fc93-46b9-91ff-b6442b83d90e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7afadcca-12c7-4979-908b-7926cfe4938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbed748-4426-42db-8035-814c6ac5a9ed",
        "cursor": {
          "ref": "8afdb8cf-99e1-431f-b0fc-fe5c462f493a",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc66ca4a-04f3-4d09-aabb-9c33691231c6"
        },
        "item": {
          "id": "7cbed748-4426-42db-8035-814c6ac5a9ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e3919f9-ac7e-4fcc-8276-5e0e3366faac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c374865-bf00-40f2-9960-48cff061af6f",
        "cursor": {
          "ref": "d844c1e5-6f54-44e7-a4e3-8ec2c8c26882",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d190fcb5-54f2-496a-9fc5-36918cd578fc"
        },
        "item": {
          "id": "1c374865-bf00-40f2-9960-48cff061af6f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9dec034e-bbfc-4b8f-82af-59c6d2b04b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7451ac7d-1e85-405f-b929-c25101381379",
        "cursor": {
          "ref": "289c2db9-1b33-437e-a1c7-14ae69fdee79",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "248ec5f6-52ca-4477-92a2-9c4ee2a6594c"
        },
        "item": {
          "id": "7451ac7d-1e85-405f-b929-c25101381379",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eaf058bd-c5e6-4cbf-969b-b92f40833a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202cfb7b-d6dd-4dc3-a027-20db8076ae2d",
        "cursor": {
          "ref": "e41c9120-38f5-460f-b1fc-923c0c957f58",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83ead102-a7ee-4816-acd0-5cd523343223"
        },
        "item": {
          "id": "202cfb7b-d6dd-4dc3-a027-20db8076ae2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "250ee5e0-e02f-456e-8f85-606aa29ccd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e0987-cdc3-431a-a6ce-91184bf54d57",
        "cursor": {
          "ref": "e48d6092-48cc-437b-bc00-7200cf60a588",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1cb63abe-7340-4578-9391-185408a81554"
        },
        "item": {
          "id": "4c9e0987-cdc3-431a-a6ce-91184bf54d57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a5f2f70e-676f-4a3e-b390-987a9ea4d34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b5d7c1-ed7d-4994-bd38-55b7c545302f",
        "cursor": {
          "ref": "2718071c-3041-4543-b38d-f3220121f34b",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3fdf054a-6bbc-42c7-98bc-c42d1bb60efe"
        },
        "item": {
          "id": "f9b5d7c1-ed7d-4994-bd38-55b7c545302f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3540e2c6-a3a9-489e-a965-c00d4cb29849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf7618-9ead-41cb-b803-eaefa833feef",
        "cursor": {
          "ref": "a4c6c07e-56c6-4c25-8440-61c850ccfe7b",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "00bb9114-da50-4f8d-9f9f-9ecf4b156472"
        },
        "item": {
          "id": "3dbf7618-9ead-41cb-b803-eaefa833feef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4560cdb-99cd-4d34-bb7d-95fba5549ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4256296-8445-4c5b-ba86-53505333ac5e",
        "cursor": {
          "ref": "1d7675e3-c69f-43e1-be5d-af868763b08b",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fc998253-3224-460a-8685-664b0889a4a8"
        },
        "item": {
          "id": "e4256296-8445-4c5b-ba86-53505333ac5e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8232508b-71d8-4b4f-89e7-9f618600ac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf5b005-ee34-43fc-bf69-2c69ff0b150f",
        "cursor": {
          "ref": "8cbd031b-f0b1-4565-838f-53557e9ddc9c",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a3996fa3-897b-443f-942a-3d464a51021a"
        },
        "item": {
          "id": "5bf5b005-ee34-43fc-bf69-2c69ff0b150f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e7301e95-eb89-4da9-ab97-43271cfc21b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f454328-6272-4fdb-af59-3ba4f3e483fe",
        "cursor": {
          "ref": "616bd11d-9990-4906-93d2-37162bf9ec9b",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "52988c98-8a50-49d3-b507-963f88ce87a0"
        },
        "item": {
          "id": "6f454328-6272-4fdb-af59-3ba4f3e483fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85452d51-e526-4af1-b4db-5374abdbbfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0739443-80b8-410c-bf2e-77b72d1e2194",
        "cursor": {
          "ref": "5e5ebe1b-c01f-4c42-bc04-bf88fac7205b",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b50d949-6cf9-4cee-8817-90db15cdb257"
        },
        "item": {
          "id": "b0739443-80b8-410c-bf2e-77b72d1e2194",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dff3c014-679f-46dc-af43-e73bf760e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c0cb1b-c789-4a1c-b96f-4afbee82987a",
        "cursor": {
          "ref": "1e6ee549-2dc7-4947-8778-b8c8d7ae5264",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b7f3283c-f3b7-469d-8f41-652898aab49d"
        },
        "item": {
          "id": "a0c0cb1b-c789-4a1c-b96f-4afbee82987a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "838716b3-3a6c-4824-bc53-cb4a063ba80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3656717-4301-49a8-9272-559355c8d910",
        "cursor": {
          "ref": "1cc195f4-3dde-4903-92ce-d964f61d09bb",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f2a95ea-d43d-4714-bf98-bbf569fb162c"
        },
        "item": {
          "id": "f3656717-4301-49a8-9272-559355c8d910",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8bbcb0ad-f76a-411b-b7c8-74d521c2615f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7504ae-a317-4463-95b9-7a592e29dfe6",
        "cursor": {
          "ref": "f08193bf-0601-401a-8691-2fcdd4793e28",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "31df57ec-f0da-43ab-a18f-22d973c333f7"
        },
        "item": {
          "id": "5c7504ae-a317-4463-95b9-7a592e29dfe6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d9e08a4-cbee-4d7d-a72b-cd6901acda14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3cc2e9-0b12-4a90-be0f-7a30e03cffa3",
        "cursor": {
          "ref": "2483c027-3a62-444f-a3ee-7c90729ab70c",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2502114-3d49-410c-a233-3af3f78326ed"
        },
        "item": {
          "id": "2f3cc2e9-0b12-4a90-be0f-7a30e03cffa3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b954bf6-4848-4f8a-9650-f04c1b61714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f086db9-9089-4505-8f0a-1026bb151d19",
        "cursor": {
          "ref": "146d3152-da18-4e4c-9480-639dc68ca738",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "242c4d7f-4a04-4f77-8756-27f57499a204"
        },
        "item": {
          "id": "1f086db9-9089-4505-8f0a-1026bb151d19",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8de1ad9a-3482-460b-9148-8d2570402c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af41d27-0a48-4c5e-9fed-a5fb305ca42e",
        "cursor": {
          "ref": "19bf27e5-9d4d-4f93-bb74-9c65b26e2910",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "945e4d4c-aaeb-478c-99fb-a89f73d3db14"
        },
        "item": {
          "id": "7af41d27-0a48-4c5e-9fed-a5fb305ca42e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5d57f09-c71a-4770-b280-ac102a040f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b327073-eeee-4218-8356-894bf7e5c554",
        "cursor": {
          "ref": "be057a91-943a-4933-959c-e77f788668cc",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a8d7c43e-0d07-45ed-8e8a-a15ba3b0955a"
        },
        "item": {
          "id": "8b327073-eeee-4218-8356-894bf7e5c554",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e387360-ef9f-40b3-be45-5477238e13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905c64e-6347-43a0-a807-e4a1349bbf8c",
        "cursor": {
          "ref": "8ece5820-b00b-40b2-8579-23e72ed3a9e3",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d94df9ba-fb8b-4dff-a7ca-cfda050db8e7"
        },
        "item": {
          "id": "7905c64e-6347-43a0-a807-e4a1349bbf8c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e5f2a29f-09ea-45a9-acb2-8821436552f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ab84e-b5b7-4fb6-809a-b32e88efe9e5",
        "cursor": {
          "ref": "26e79b9c-39ee-4c0f-86dc-732012e475b3",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "80d14e82-c445-4862-8f63-9cef70d37d09"
        },
        "item": {
          "id": "b68ab84e-b5b7-4fb6-809a-b32e88efe9e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e04cd664-e367-44c7-ace3-7316885045f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19318f0-d86f-4988-99dd-1ba2efd43b8e",
        "cursor": {
          "ref": "b0fd90eb-ec42-43ab-b4ed-1231f1ab3ba1",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee595fad-a969-49ee-b696-f95089171637"
        },
        "item": {
          "id": "c19318f0-d86f-4988-99dd-1ba2efd43b8e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "11d9356c-0af8-4357-9454-cae77b0930e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934f1da4-500a-4f56-8af4-684ed25e7676",
        "cursor": {
          "ref": "30bc48c1-fa71-417b-ab78-62c72d220885",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2fa887ac-4d18-4e68-9e16-2bb331360879"
        },
        "item": {
          "id": "934f1da4-500a-4f56-8af4-684ed25e7676",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c7a214c-e549-4827-88a6-fd3ccad832de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82daa6f-1d33-4702-a55a-830e716e8794",
        "cursor": {
          "ref": "c8a7329c-b54e-48af-9b07-8936611fc275",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1dc1490b-3c25-4b01-9d6c-786139273051"
        },
        "item": {
          "id": "a82daa6f-1d33-4702-a55a-830e716e8794",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c1bc211a-aa43-4b50-9492-ec951f7e7576",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aae024-80f2-4fd8-ad1f-d544e941d186",
        "cursor": {
          "ref": "6b8c5300-d0ec-479d-8432-e66fb6f3ad55",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e10e84b4-c608-4386-8761-d6f6fb60f4d6"
        },
        "item": {
          "id": "72aae024-80f2-4fd8-ad1f-d544e941d186",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "60f3cf42-86bc-4d50-bede-b06658a88b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c493d50-b05d-4f73-92fc-d3618b2e3639",
        "cursor": {
          "ref": "719b7d26-be3e-434c-b3e7-314d7cedb2c9",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f3ca8eba-4b9d-4a49-bee6-b41e9663785d"
        },
        "item": {
          "id": "3c493d50-b05d-4f73-92fc-d3618b2e3639",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30e930ba-2947-4b6e-bbe9-98455c22d20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824d324e-2ba6-43f1-ae9a-212329cf0015",
        "cursor": {
          "ref": "3b1a7dab-1747-44f9-8bf2-e9cf69128792",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d61eec71-bf75-4559-9806-79385d8dcbec"
        },
        "item": {
          "id": "824d324e-2ba6-43f1-ae9a-212329cf0015",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f4e20a7d-a084-484f-b505-d0eb7aa412c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725dd7d0-8c96-46e7-b7a2-856e0f351dd7",
        "cursor": {
          "ref": "49c1664c-1af0-49d1-9fe5-93e64e05b775",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6deb2bcb-3fd2-40a5-8d86-fecb97c70e68"
        },
        "item": {
          "id": "725dd7d0-8c96-46e7-b7a2-856e0f351dd7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5b1d3c52-1284-45b9-8c9a-133ced3edbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f380df-6e02-4e4b-87af-4a0a5f5af99d",
        "cursor": {
          "ref": "d66fc10d-0fb5-4395-8a64-e18db3728a78",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "52fb01a6-4b2d-4026-bc78-7ad7f94b033a"
        },
        "item": {
          "id": "e7f380df-6e02-4e4b-87af-4a0a5f5af99d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "51a4a53a-69a1-4b5b-a5aa-7a5436ee9ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b98578c-1310-487b-92ad-54dda6e383ee",
        "cursor": {
          "ref": "e99954a7-489c-481a-ab43-4a799f5c9db4",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bf33e12f-a45f-4969-85f2-a5cfa7421bec"
        },
        "item": {
          "id": "8b98578c-1310-487b-92ad-54dda6e383ee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5500a0c7-0c65-4238-a049-deb60a421fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dc29ee-9a70-4bc5-ae3d-6bea127df3bc",
        "cursor": {
          "ref": "866034e6-8de0-4ec4-8f70-dbaf292b3913",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a83f269b-49bb-4c97-a2e0-5c813bc83921"
        },
        "item": {
          "id": "e0dc29ee-9a70-4bc5-ae3d-6bea127df3bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5384e064-80f4-409d-aafd-7c0b08e4edf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c708da-35ab-4dcc-8a9d-a59986d26531",
        "cursor": {
          "ref": "051a15f5-b3ec-4e50-94da-014dab517cd4",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e52c6294-de17-4ce9-b67d-cb65500a1c07"
        },
        "item": {
          "id": "63c708da-35ab-4dcc-8a9d-a59986d26531",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "90fc5db4-33fa-4ed5-a157-602ce4f8b6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c404b1-2a14-4050-8f92-4b1e41d8bb79",
        "cursor": {
          "ref": "a270c066-5b52-4708-a463-8f973f09fa5d",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "78611c41-b901-4268-bb23-ed561cd40e33"
        },
        "item": {
          "id": "53c404b1-2a14-4050-8f92-4b1e41d8bb79",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1c20c68-505c-47cf-acca-d52cb1fe23ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ee4bb-0f0b-4b5b-89a1-08a019da724a",
        "cursor": {
          "ref": "d3cdb193-2d93-435b-a03d-bff10b71b8cf",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a5318e7e-50ab-418b-90dd-01265e1fd4d0"
        },
        "item": {
          "id": "b74ee4bb-0f0b-4b5b-89a1-08a019da724a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b7a0982-9bd0-48eb-82dd-41bab27f7631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc76a01-c3ca-4687-90c1-c67420a5b96b",
        "cursor": {
          "ref": "ae57ee37-63bf-4a41-ab37-597437808e65",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a8fad2ae-1776-4ecd-beac-a6b91400f614"
        },
        "item": {
          "id": "cdc76a01-c3ca-4687-90c1-c67420a5b96b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e2c2d192-9552-4580-9c2a-d1ab8cf74856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad50ead-48e8-4d14-bbce-5c86aec20048",
        "cursor": {
          "ref": "e0f94ea2-ba77-44e9-bda3-b6cb58270cc8",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "43ffe627-1640-459c-97ac-68151c23613d"
        },
        "item": {
          "id": "0ad50ead-48e8-4d14-bbce-5c86aec20048",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cca5b57a-e1fc-4ffe-b333-3ddfad293821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2638d03-14fc-4d89-8e29-b6aaff3200b5",
        "cursor": {
          "ref": "0c01c43c-56e0-4c8d-b2d4-8dd82d217d3d",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4a54980a-7f62-4eb0-9d24-d67aa69dcb63"
        },
        "item": {
          "id": "b2638d03-14fc-4d89-8e29-b6aaff3200b5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eb917c50-042f-4083-bfc8-d3fc0d02bdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62829fe3-7381-4e62-a577-e3ccb3a10e5d",
        "cursor": {
          "ref": "d54a31b6-abb8-4c90-9338-02ec316f8a2d",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d756d90f-852e-450e-bc4f-502d2a98252f"
        },
        "item": {
          "id": "62829fe3-7381-4e62-a577-e3ccb3a10e5d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bb3a670b-8424-4fa8-9911-b6d493879708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030688cb-0bb0-48c7-b38c-10a0a1a7d46a",
        "cursor": {
          "ref": "a2e7dfdb-b593-43d9-a852-da1bc9fc3d05",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "51dd23cb-825e-4e6b-837b-de2244d28e27"
        },
        "item": {
          "id": "030688cb-0bb0-48c7-b38c-10a0a1a7d46a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "392092aa-1920-4328-9c49-4aaa5fd8aa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819f23a6-5e1c-4789-adc4-483f1ed3bad8",
        "cursor": {
          "ref": "88231124-0624-47c4-9333-a46369a9a576",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e044ab6a-aec1-4ee0-aae1-737e6485492d"
        },
        "item": {
          "id": "819f23a6-5e1c-4789-adc4-483f1ed3bad8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0e911f9e-a62d-41f4-a65a-3e48e51b0985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa66e51c-6434-458f-b41a-66eb34beab56",
        "cursor": {
          "ref": "4d527f5a-55c1-41bc-9001-1b4b71d8526f",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e2979d89-c1d7-4066-b9c6-675cab662b30"
        },
        "item": {
          "id": "aa66e51c-6434-458f-b41a-66eb34beab56",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "622a3781-8985-4cd8-ab4b-e5937ac48102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f0d068-b793-487c-8e6c-bb3c01d344cc",
        "cursor": {
          "ref": "438f4434-e799-4ab8-94a0-bf6cfdd7e24d",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "992fb7af-cc10-4598-b879-e5a1bb424bbc"
        },
        "item": {
          "id": "08f0d068-b793-487c-8e6c-bb3c01d344cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7e7e9f53-f81c-4429-b76c-b25648fbe10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eee4f9-d009-4b2f-acea-7993ec0fb64f",
        "cursor": {
          "ref": "e8f0c28b-a503-4860-81bd-abe2858d013b",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b68f87e9-3528-4813-80af-36cd256d76d3"
        },
        "item": {
          "id": "12eee4f9-d009-4b2f-acea-7993ec0fb64f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c8f4b5be-e594-4ab0-a201-fc438b7188bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab51988-dea2-438f-90a7-37b3901c9bac",
        "cursor": {
          "ref": "0b017c4d-36a9-41f2-b44c-a90708a25886",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c14baa1c-501c-493a-b448-dbd033aa6a74"
        },
        "item": {
          "id": "fab51988-dea2-438f-90a7-37b3901c9bac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a485cd25-b413-4287-b5a6-cfce09772470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999856d1-a702-466e-86cf-8af632728a44",
        "cursor": {
          "ref": "7d1ed55c-8885-4c08-95ed-8d1965f9bb26",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "465c2774-d860-48a9-9a3c-68b8dc7fd580"
        },
        "item": {
          "id": "999856d1-a702-466e-86cf-8af632728a44",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19fa9a31-19d5-4ee4-820b-2ee01e753087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011ca98d-3186-4db0-96e3-6be0531e2469",
        "cursor": {
          "ref": "cd4f6b2c-c832-4f15-8093-8316e1864e00",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "76455c36-ff5c-4aa4-9206-0109a582270d"
        },
        "item": {
          "id": "011ca98d-3186-4db0-96e3-6be0531e2469",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "23e3ea56-4236-47ec-9597-c9e262a3be5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e246fd-3759-4e55-ab78-65111d3969b6",
        "cursor": {
          "ref": "f4185c42-a2bd-42ec-951d-7a0c8db4e3ed",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8dc26877-5508-4718-b08c-d7e1bf250ce9"
        },
        "item": {
          "id": "29e246fd-3759-4e55-ab78-65111d3969b6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c311ae16-5eb0-41de-a5c1-5caa2959e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8d62e5-a571-46b4-b7b6-202a63f3c604",
        "cursor": {
          "ref": "ed57e3f9-d95f-44cc-86de-439bc5b22005",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0d4c0682-02cb-43eb-a448-de9d79e87652"
        },
        "item": {
          "id": "5d8d62e5-a571-46b4-b7b6-202a63f3c604",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a7bc43b0-17f5-41aa-8738-48836a71be36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d683c9-bba5-4444-b9c3-705b7e396cb1",
        "cursor": {
          "ref": "1d1b7315-11ba-4751-9913-7e45c4b00726",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dbf10d5c-2f45-42f0-8ca6-611cfb991260"
        },
        "item": {
          "id": "f7d683c9-bba5-4444-b9c3-705b7e396cb1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "39e049a1-9525-4e29-a310-4a99d017a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66633039-73fa-4033-b944-1a0568224a8f",
        "cursor": {
          "ref": "cd2d07bd-01b1-4234-8126-21abca3eb1d1",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5ab755bd-0101-4cf6-b26c-97c603807995"
        },
        "item": {
          "id": "66633039-73fa-4033-b944-1a0568224a8f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "63a0e311-5b09-4870-b68c-d13229231e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c45b38-ea09-4d7f-aaef-344ae44eb3e9",
        "cursor": {
          "ref": "db5dc36e-2f20-404b-8866-9b160fcc56ce",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5282cdea-c4c0-479a-b9f8-7df9086f9244"
        },
        "item": {
          "id": "e9c45b38-ea09-4d7f-aaef-344ae44eb3e9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a8512858-dc46-4e9b-9291-cb1b77ace86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bf4e29-34c3-4793-a431-1794567849e3",
        "cursor": {
          "ref": "c1df09fc-0ca0-4149-99dc-09418d86898d",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "60171ca7-8388-4aec-8ae8-7c4f971e1348"
        },
        "item": {
          "id": "20bf4e29-34c3-4793-a431-1794567849e3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d3d9a07f-ace0-4017-be74-e97ddf83dc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c3591f-e4aa-4998-b577-4edf3023c1aa",
        "cursor": {
          "ref": "9993877e-21dc-48df-9ae8-dedb46578399",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "362f4e52-9dbb-467a-800e-36280eb12482"
        },
        "item": {
          "id": "07c3591f-e4aa-4998-b577-4edf3023c1aa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f7aecb2e-3893-42c2-af74-ff177416a506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714a9972-56c7-4c5b-aeb2-647133807f5b",
        "cursor": {
          "ref": "be2f5081-1332-4d98-abae-d39db670df02",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "09b2d58b-f4be-4028-9c18-54ae5a518e28"
        },
        "item": {
          "id": "714a9972-56c7-4c5b-aeb2-647133807f5b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "89540701-4564-4880-9936-65f76aeb4625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d405b8fd-37a8-432d-ba23-bfa7002a7f4a",
        "cursor": {
          "ref": "8f849f08-d244-4a49-b2f7-7aa39fb5837d",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a8b6b2d9-559d-4ba0-a2a6-85d53ef4c794"
        },
        "item": {
          "id": "d405b8fd-37a8-432d-ba23-bfa7002a7f4a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7bc7d8fd-0f90-49db-8a92-c0e1c1d5c210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1667d4d-e9d5-4ae5-9f6a-739bcab2e1e1",
        "cursor": {
          "ref": "d5671d46-01c6-4676-84f2-5ea766322cc2",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4275bf30-7c0b-4214-96bc-965b2337bad3"
        },
        "item": {
          "id": "a1667d4d-e9d5-4ae5-9f6a-739bcab2e1e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ff5c401c-f808-41fe-9ff0-ff195885f8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9b6c5-551b-41f5-92b8-4d9d9b3007d6",
        "cursor": {
          "ref": "60c44657-ff6b-45ab-9c01-bb7c76716044",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b11dec79-7ff3-4310-b8f2-976e93f89d3f"
        },
        "item": {
          "id": "72d9b6c5-551b-41f5-92b8-4d9d9b3007d6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3e57772f-af82-4816-890d-27a14b673a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce81272c-3e11-486f-a14e-4d54541daff2",
        "cursor": {
          "ref": "f169353e-719f-4db9-b7b6-8b956eb41c85",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "55dcaf21-a96f-4cf3-9f54-7b8e6f4071b3"
        },
        "item": {
          "id": "ce81272c-3e11-486f-a14e-4d54541daff2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e109c8f1-3de9-4113-942f-c0a9a5cbd7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac5428c-5148-44a5-aa58-e97ef448d75d",
        "cursor": {
          "ref": "b407e375-6518-4839-a929-4664e95863a8",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a1e41954-58b0-4ac4-b557-033bd0fff7d6"
        },
        "item": {
          "id": "1ac5428c-5148-44a5-aa58-e97ef448d75d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6508e465-678c-4773-b3cb-3172399c225c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d5dbfd-03ca-4b4c-9464-d3844611714e",
        "cursor": {
          "ref": "2424fb5e-6573-4eb6-a7a6-a2bff5490111",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "31170bd0-7e0a-4129-9d41-8ca3e8db44bf"
        },
        "item": {
          "id": "c8d5dbfd-03ca-4b4c-9464-d3844611714e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "63b45943-c837-4de1-852b-b10276937518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159fce01-2426-4fed-953d-33ea2ae61502",
        "cursor": {
          "ref": "6bcba8d6-4fbe-4a75-8f65-9bbc5a7aeb3b",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e19b099f-9dc5-4836-8b13-bd04784d3f22"
        },
        "item": {
          "id": "159fce01-2426-4fed-953d-33ea2ae61502",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "95c1cd7f-8b3e-4410-9b99-bb4236b055da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce10983-b9a3-4d77-9e37-9df623eed5ec",
        "cursor": {
          "ref": "330e5274-632e-41c3-984b-263a43675fd5",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "66017d79-8821-42e7-bb4c-a1d757066aed"
        },
        "item": {
          "id": "dce10983-b9a3-4d77-9e37-9df623eed5ec",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66eaef42-a98e-4253-ad57-6b474ff1349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602a1dc1-7c3c-4857-b798-1b37d00581f7",
        "cursor": {
          "ref": "5ac90c0e-7373-4bd7-ad82-5916d0b6f11b",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dc689ee0-af2d-4570-867a-4673d43de13b"
        },
        "item": {
          "id": "602a1dc1-7c3c-4857-b798-1b37d00581f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9981e8dc-9e3a-49bb-b672-fab0b2765aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f168213-c73e-4fbd-b270-c75c55db2a72",
        "cursor": {
          "ref": "1a7119a5-1a4c-44e1-9331-aeac82ac733a",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0108827-90bd-4cc4-af4e-1ce94d927489"
        },
        "item": {
          "id": "6f168213-c73e-4fbd-b270-c75c55db2a72",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "910f9f7a-9d1d-4c4d-9cc9-1d2d06e2684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8262ed53-2d35-43b9-a6a9-6dd82e2d5e01",
        "cursor": {
          "ref": "1c585ff9-e39a-43d5-9cd7-8fd94dd47d1b",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acb8f87c-cd52-4130-b8c6-7ee3fe467ec6"
        },
        "item": {
          "id": "8262ed53-2d35-43b9-a6a9-6dd82e2d5e01",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1c61eca8-7a31-4940-acba-ef477c4e3270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdd9f7b-b589-422e-9a7f-28770ed92b0d",
        "cursor": {
          "ref": "3dce25fd-6918-479d-a072-07922d1edd82",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6fbf4fff-6ae1-4763-b22b-a3adbe7fa763"
        },
        "item": {
          "id": "abdd9f7b-b589-422e-9a7f-28770ed92b0d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c4acba24-75ed-435d-bb29-1edd1541d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d3247f-4dcd-4738-bbc9-0fa684176256",
        "cursor": {
          "ref": "7600f798-3431-4b3c-9ec6-8bbf83095475",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9d5238d8-b471-48db-8b3e-50e4a42957ee"
        },
        "item": {
          "id": "d7d3247f-4dcd-4738-bbc9-0fa684176256",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d92d011a-f8c5-420b-9371-38a0fb2b5b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdc37c-2f8d-44e9-a809-ccee3437ffa0",
        "cursor": {
          "ref": "98409133-3245-419a-a73b-bd6824f56467",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e31e7eeb-b954-459e-87b4-13fca5ca456c"
        },
        "item": {
          "id": "d6bdc37c-2f8d-44e9-a809-ccee3437ffa0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7c6729d5-8f92-4137-af2d-e6ca869c953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3278226e-b015-4d97-b3a2-2c97bc184953",
        "cursor": {
          "ref": "c0cb50e9-690b-4810-82b4-e3f1663efd52",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c05c9973-e5fa-49f8-84c5-bc394ff0b07c"
        },
        "item": {
          "id": "3278226e-b015-4d97-b3a2-2c97bc184953",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "54ee53cc-4d7e-4bcd-bc29-4227a1b006bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383b4b7-bee7-413e-a35d-03b255121faf",
        "cursor": {
          "ref": "e78d507e-ce82-4894-a12e-e6baf97116f3",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "72a1b1da-3ff8-40fb-81f8-b08b61e1e7f6"
        },
        "item": {
          "id": "f383b4b7-bee7-413e-a35d-03b255121faf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47b53fad-4c32-4654-b82a-3f1eff039f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a568394-3ef6-4e5e-b13c-4d702806532b",
        "cursor": {
          "ref": "9585cbda-7a13-4408-b5f2-c0ff824eba96",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d21825b0-0dc1-4649-b4cc-0de283587024"
        },
        "item": {
          "id": "7a568394-3ef6-4e5e-b13c-4d702806532b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0f2a4153-94b0-431f-ba93-4b15d9dfe723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c257109d-af2c-42d0-a8d4-9bbc901e7a89",
        "cursor": {
          "ref": "7bf5c0b2-0c21-4eb5-85b0-6937a6c3ffb3",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62b99401-4cd0-4783-9081-ed688c2bd9b7"
        },
        "item": {
          "id": "c257109d-af2c-42d0-a8d4-9bbc901e7a89",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cfa84e47-3e66-40bc-be8b-cf3f7156b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4d1beb-9e54-4cc0-9e9a-af508a1cd33f",
        "cursor": {
          "ref": "4a596c01-f428-41c9-906e-9471a59a5962",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ccb7ada9-93d7-41ab-b62a-11e76939e160"
        },
        "item": {
          "id": "3d4d1beb-9e54-4cc0-9e9a-af508a1cd33f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "408fb756-a1cf-43ca-ae26-993341d4f5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df35ede4-31c2-4fa1-afa9-6e4f7e96de3f",
        "cursor": {
          "ref": "0cd7dc74-c7d8-432b-83b9-d731a6487316",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "888680fc-c554-4318-8f11-26d5c9dc874d"
        },
        "item": {
          "id": "df35ede4-31c2-4fa1-afa9-6e4f7e96de3f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f3ef4723-9ace-4a66-9b88-115523ff529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56732c70-c3b2-4177-9ce7-d0fb93c43789",
        "cursor": {
          "ref": "72d84204-2959-495e-90b5-c7070fc341cc",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "09e29bf6-6e56-4a3a-9cb2-b71dae806fb7"
        },
        "item": {
          "id": "56732c70-c3b2-4177-9ce7-d0fb93c43789",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "572f5d84-0451-4874-830c-419a8113ee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cad991-de9c-4eb0-ac56-2bb1dbcecc0c",
        "cursor": {
          "ref": "5bcb58d7-e596-4ce7-a9dc-1a2b0e0fd957",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ee8d7ef1-7e4f-4ba5-bc02-636b170eead9"
        },
        "item": {
          "id": "48cad991-de9c-4eb0-ac56-2bb1dbcecc0c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7cf4f3ff-95de-4d36-93b7-4b70e4cecf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e62d82-7f34-42e4-b74a-ca37d2471eac",
        "cursor": {
          "ref": "1d69752b-9e35-4c8d-8242-60d7a4b3ff34",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a1eff63-647a-4e23-b753-c42897b5d20c"
        },
        "item": {
          "id": "99e62d82-7f34-42e4-b74a-ca37d2471eac",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1e3dc440-e36b-4d47-a613-7b002f47723a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fb930f-0ffc-4b01-b69a-ea0fa7662d0d",
        "cursor": {
          "ref": "b9de1bab-4ece-4cda-9a11-f7928385d825",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4a1c1b5f-3f60-4768-83ab-db3ff9693f83"
        },
        "item": {
          "id": "02fb930f-0ffc-4b01-b69a-ea0fa7662d0d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b479ee07-e99b-42b8-9abc-6a65deac1654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a21d30-af95-4d0b-ac55-51089879e467",
        "cursor": {
          "ref": "395760ac-13aa-44e6-9e7b-e2e33b008620",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc9e1f5c-622c-4f99-b090-b0374902f716"
        },
        "item": {
          "id": "f6a21d30-af95-4d0b-ac55-51089879e467",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9db9911d-84ce-4a2d-a245-53084aeb35c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cdb859-631f-4d23-a16c-c8d1cfa57b05",
        "cursor": {
          "ref": "ef61183e-ddee-432d-8932-4dbceece3f45",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "50afc90d-0b8a-42e9-b226-080f75a91f84"
        },
        "item": {
          "id": "f5cdb859-631f-4d23-a16c-c8d1cfa57b05",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8938aed-4dd2-47c8-9828-468c46b86a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d8f228-55a4-4d2d-9cea-7af5e8f0f27a",
        "cursor": {
          "ref": "7978013c-42ee-423d-a150-949c91a17058",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6d1b385e-5fdb-4a0f-a1f5-d72906c78e08"
        },
        "item": {
          "id": "a5d8f228-55a4-4d2d-9cea-7af5e8f0f27a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "926f8985-f419-413f-916f-1c25f2616437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf1bad-d28b-48a7-8275-9f070397bb4c",
        "cursor": {
          "ref": "fba57ec6-479c-4181-8e9b-00015a116f39",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "916861e2-af4e-4cb9-9fb1-7286f0b0cde2"
        },
        "item": {
          "id": "5bbf1bad-d28b-48a7-8275-9f070397bb4c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "99bdaaba-a7bd-4bed-9f5a-1567cd93b056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5dafe5-1407-4c91-86e0-4399ede31c46",
        "cursor": {
          "ref": "19496706-d271-41c3-b8c8-06ee73c58de3",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf48c919-cff6-4778-9c88-6a0ef007d0df"
        },
        "item": {
          "id": "fc5dafe5-1407-4c91-86e0-4399ede31c46",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "97f1e94e-ed0d-4048-b5bb-c73204d9149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc09324-0690-420e-8edf-33e8843dc73b",
        "cursor": {
          "ref": "6bf16a1c-75b3-41b4-a405-689e372c04f2",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1e154df3-e733-4c6f-90e4-8379a9424b73"
        },
        "item": {
          "id": "8dc09324-0690-420e-8edf-33e8843dc73b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3d860f6f-aafe-4b47-90c4-5a92ec7315fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eff833b-31b2-4724-b2f3-4728d0f3969a",
        "cursor": {
          "ref": "d721f374-4d2b-448a-8d99-2da1c45ccc7a",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d121ac8e-5f0d-40aa-af17-07e85631404d"
        },
        "item": {
          "id": "0eff833b-31b2-4724-b2f3-4728d0f3969a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4bad262b-c6dc-4ca1-b9ba-6f8854fe4928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318b64a5-6452-4d7c-9f5f-24bbdcd95346",
        "cursor": {
          "ref": "ad2a5099-f0c1-4815-8b4b-d13bd4809f59",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "546c6112-9d35-4300-9e32-c01e158cd5e1"
        },
        "item": {
          "id": "318b64a5-6452-4d7c-9f5f-24bbdcd95346",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "644b316c-abbb-4ac4-80a3-6517d3c7c197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789e657e-40b9-44ae-95c7-35274e16ae19",
        "cursor": {
          "ref": "404403e1-7092-459b-b2dd-cf8872b11fd8",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2c3f4a97-9eaf-4481-b9d6-f4720ea9d201"
        },
        "item": {
          "id": "789e657e-40b9-44ae-95c7-35274e16ae19",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "61346385-a9e6-4005-bf8b-0db1d989fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81335a0-4e55-4f14-a7af-736e9c8bede3",
        "cursor": {
          "ref": "72c260d2-5b23-4967-abce-f8501449c7b7",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1bc026c6-7dd0-4e24-9fc5-6c4baeb49b67"
        },
        "item": {
          "id": "d81335a0-4e55-4f14-a7af-736e9c8bede3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "91563e15-b29b-4e7f-9c4c-077fd7dde7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ccc081-9143-4604-84e8-68ba33ce571c",
        "cursor": {
          "ref": "83104f74-2b8a-47d1-bf89-dd6888a35f5e",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d8baf187-1130-4005-8ad1-112ec1e7b154"
        },
        "item": {
          "id": "33ccc081-9143-4604-84e8-68ba33ce571c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "db843e64-2283-448d-b499-0abd87a40555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b12882-b4ce-44b4-8321-e3590e58f937",
        "cursor": {
          "ref": "5b18bb65-189d-42f3-84f4-80920d9cd467",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a0e27581-5638-4b7b-b856-c55975b07177"
        },
        "item": {
          "id": "81b12882-b4ce-44b4-8321-e3590e58f937",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4769e235-f914-4144-8909-a0f1257e94c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a47781-4714-41c0-9410-4b94852365a8",
        "cursor": {
          "ref": "cb523056-00ea-47f2-b98b-0a7c8a1d8e4a",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1df619ee-1abd-4cc1-9493-30372044c389"
        },
        "item": {
          "id": "67a47781-4714-41c0-9410-4b94852365a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d239b7e-d873-4b05-bd0d-55ecfb4529e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a296fae-1e24-4d8b-9142-4a5142016090",
        "cursor": {
          "ref": "4a0de92e-44c1-407d-a7c4-be75f041ae20",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "73b6429b-4452-44f1-83bc-8a947a5109c8"
        },
        "item": {
          "id": "2a296fae-1e24-4d8b-9142-4a5142016090",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f18f35ab-c433-41a9-a6a4-bb1e72dbed64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4525889c-83d8-48fa-8dd0-0609df873f22",
        "cursor": {
          "ref": "7146a43f-cb63-44e8-896e-afbd435e3612",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "01c3522a-9e04-4720-9c01-6176b6f71dc5"
        },
        "item": {
          "id": "4525889c-83d8-48fa-8dd0-0609df873f22",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7673bac2-462a-4c4c-9307-72b970bbbd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18420d7b-dbaf-410f-b868-19d779427441",
        "cursor": {
          "ref": "2b32a393-28dd-4caa-ae6a-80bb9e9093c8",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "799b0af9-1b01-491f-b377-f06f311253ec"
        },
        "item": {
          "id": "18420d7b-dbaf-410f-b868-19d779427441",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "67742f01-94c5-4dd6-a214-b7d8521d303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac255909-5211-4064-a6bf-6e2b4014dd2f",
        "cursor": {
          "ref": "f705ae87-f2f2-43cd-bd1b-e45bb425e3a1",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c6aaef67-2766-4539-a62b-bcbaf7c757f7"
        },
        "item": {
          "id": "ac255909-5211-4064-a6bf-6e2b4014dd2f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a0dd240b-f56a-4c33-b5d8-1d8a8f5daf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03748a6-e3e1-4814-9663-62a277b95288",
        "cursor": {
          "ref": "f78226eb-d4b1-4763-a52d-590a931ec668",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b84627b9-9214-4f64-af0d-9d17470277e5"
        },
        "item": {
          "id": "a03748a6-e3e1-4814-9663-62a277b95288",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "34ed7b4c-33c7-4ef4-989a-cf6159b7dcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf04aa-9e95-4a1f-a951-2b629e1fdcf6",
        "cursor": {
          "ref": "a010e49e-b674-40fb-a50c-dc6c42d69235",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "01cef0ee-9823-413a-883f-ac245c1944c8"
        },
        "item": {
          "id": "2edf04aa-9e95-4a1f-a951-2b629e1fdcf6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "15886162-009c-42da-a680-449482465283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768383a8-63a8-479a-aa72-1b90259b4834",
        "cursor": {
          "ref": "c2a47c91-58ad-47bb-bf83-8eb74b776d6d",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7241897f-bd02-4465-ac8a-7b7eb079e0fe"
        },
        "item": {
          "id": "768383a8-63a8-479a-aa72-1b90259b4834",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "36e650a7-3d52-40ac-be68-70c9d7846eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866af13e-d1f8-4986-930e-78019e415d35",
        "cursor": {
          "ref": "2c4632f7-f074-434a-a18a-3e95f780ec99",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "83107a32-f299-43d1-b744-17b06d4e1db4"
        },
        "item": {
          "id": "866af13e-d1f8-4986-930e-78019e415d35",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "becccaee-a199-42b1-9bd3-d9e477e1f374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc230f-6db1-486e-9e77-0fcab00b3429",
        "cursor": {
          "ref": "3908d8a1-3151-4538-8012-35bf102d40a0",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2a31576-9759-4220-ad15-12ba4d759ef4"
        },
        "item": {
          "id": "cfbc230f-6db1-486e-9e77-0fcab00b3429",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e2851489-4c4e-46ce-9d63-80071b821503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139d64f6-ea1d-4b95-841b-823c396aba9f",
        "cursor": {
          "ref": "17520cfd-61c5-4bf5-ab47-c2117bc22c79",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "13c94aec-6942-4d17-a79f-6e4339633284"
        },
        "item": {
          "id": "139d64f6-ea1d-4b95-841b-823c396aba9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56e03a81-87ae-4f6a-9df6-6892ee8d237a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0c4e03-63b2-494e-8640-5bcbb7c52687",
        "cursor": {
          "ref": "85e80711-4a5e-424e-b1d3-914b91f35e76",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a6fb371f-438b-4ded-a9a8-bc29098fa2fc"
        },
        "item": {
          "id": "3c0c4e03-63b2-494e-8640-5bcbb7c52687",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "361c2e4e-b6fa-4267-b2d6-886bc1a062f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c118e986-74e5-4d1c-b72a-68ab43f0b65e",
        "cursor": {
          "ref": "5dbbc1ba-7c99-4ad2-a0a4-91f73413f974",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f7f4ff4c-e666-425e-bee6-a56930ce8d1c"
        },
        "item": {
          "id": "c118e986-74e5-4d1c-b72a-68ab43f0b65e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2c50c69-4c76-4836-9390-4f97815bdd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07418ed3-5fda-47b1-8ab7-079a4f15694e",
        "cursor": {
          "ref": "97a9cbd9-285b-4efd-a583-db691038bef9",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e3d50bba-623c-49f4-a610-6df35cc53623"
        },
        "item": {
          "id": "07418ed3-5fda-47b1-8ab7-079a4f15694e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9fc32802-18b9-4bb7-9e1b-3c16d1fb375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da77df77-7452-40e7-bf53-69661b3653ba",
        "cursor": {
          "ref": "d186916f-8012-4ea4-887d-eb9bd8c9f25a",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5275da54-5a16-42c1-b260-687832c5535c"
        },
        "item": {
          "id": "da77df77-7452-40e7-bf53-69661b3653ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "83e5936c-c7df-4ab3-851e-279bd598c06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ef2dd-9367-4cb1-a2d1-4c43f8d2f163",
        "cursor": {
          "ref": "ed6b514e-8866-4aaf-9360-6d81697a02ad",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "328b407b-74fc-4ccf-929c-08b0e042a22b"
        },
        "item": {
          "id": "835ef2dd-9367-4cb1-a2d1-4c43f8d2f163",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1adfd6ff-83b5-40f7-9a63-b27eba70a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16be0ae-8b92-4599-a901-8362f8ca1128",
        "cursor": {
          "ref": "2b1dcd54-2492-456f-8f0b-30a73dbf9e47",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1c3b929b-29b1-445e-b33c-5b8416de844e"
        },
        "item": {
          "id": "f16be0ae-8b92-4599-a901-8362f8ca1128",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e1d074e4-34ea-4bac-8ec6-1d660f4bfd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734efbf-b70b-41f1-b6b4-e7999e9ee0d3",
        "cursor": {
          "ref": "d145fcc2-ca15-49f2-85e9-a95a66969ba4",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5e00012a-22d3-4f32-a888-f7ddf4fcc9ad"
        },
        "item": {
          "id": "9734efbf-b70b-41f1-b6b4-e7999e9ee0d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1cd2a5cb-3e0c-40de-b1c5-7238fe0f3058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ebe43-9217-4179-b4c0-d956359ff113",
        "cursor": {
          "ref": "544c3cd3-2a37-4c38-9c44-0a2f59288d74",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "318ae812-1fc0-485b-aea5-845a45e8a3eb"
        },
        "item": {
          "id": "ce7ebe43-9217-4179-b4c0-d956359ff113",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d4b11219-37c3-41e9-9284-7d5426ba74ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba934ae4-0c8b-46ce-96a2-6037a26c3393",
        "cursor": {
          "ref": "1e540d19-c0a0-46d3-a3b4-7637ed288b2e",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d063315a-be12-4c21-b579-62e280a664a0"
        },
        "item": {
          "id": "ba934ae4-0c8b-46ce-96a2-6037a26c3393",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e81de570-c9bd-4c54-97a7-36cc416725c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc15771-8276-492b-bd90-9aceb8bc1e00",
        "cursor": {
          "ref": "b996eccb-9b35-49c1-a13b-cd88f7d395de",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bad39c47-caab-4d93-8c83-94ba707a669e"
        },
        "item": {
          "id": "2bc15771-8276-492b-bd90-9aceb8bc1e00",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "de21a27d-1e3d-4dd6-96f6-733d0ce393bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede996c8-95b5-4c6c-b0e7-0d2d75620de9",
        "cursor": {
          "ref": "7508c1cc-adfc-4c8a-b8d7-9934496ff98a",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "20317e0e-4c21-4845-8473-176a9d68a952"
        },
        "item": {
          "id": "ede996c8-95b5-4c6c-b0e7-0d2d75620de9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c5c06953-5bb6-43df-841a-456d4147c900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6b2723-d317-4a74-880f-f02d3fec8f31",
        "cursor": {
          "ref": "037e2eb4-40cf-4d81-9b1a-bb01028e0037",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "335fde80-0ae6-4c7b-9894-7bdcf1a6543e"
        },
        "item": {
          "id": "7e6b2723-d317-4a74-880f-f02d3fec8f31",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2976a3be-85bc-4329-b29f-f983aa7065da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a753c01-cf16-409a-b3d9-2a21ac0a9d61",
        "cursor": {
          "ref": "c95af9ba-d382-417d-a5fe-5a0d092d72ca",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "70206242-6f5e-4efb-a317-4f153a00792d"
        },
        "item": {
          "id": "0a753c01-cf16-409a-b3d9-2a21ac0a9d61",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "62391c1b-5da9-49d0-90bb-f2b536945a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1ff7f5-ef2c-4dac-9e17-371e8d281c7f",
        "cursor": {
          "ref": "5517a360-a219-4408-8f19-fd892dca7515",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "09eacab3-9886-4bc7-b676-91bc24c2f8d3"
        },
        "item": {
          "id": "fc1ff7f5-ef2c-4dac-9e17-371e8d281c7f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3592b553-87e7-4fc0-b14f-5150f6fade2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f75f7e-4447-48f6-8c13-7db71e0b03be",
        "cursor": {
          "ref": "23dccec7-3f68-49e4-81b7-7cdd4a827a9c",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca8a2fc9-4195-47ee-b0d8-9da10f5b556e"
        },
        "item": {
          "id": "c2f75f7e-4447-48f6-8c13-7db71e0b03be",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0feea0fc-a58c-4170-822f-44ba316b19bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179b25a-fae1-4a20-b72f-00fe84dd755d",
        "cursor": {
          "ref": "c1279ab1-4e8e-4345-9f80-129cb20cd328",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c76d0213-8a2b-479c-9524-abd60a879e12"
        },
        "item": {
          "id": "3179b25a-fae1-4a20-b72f-00fe84dd755d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f9a96e5e-9e3a-450d-bf49-bfd0314434d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4664c6fe-474d-4162-a3d6-1ba9e6f27281",
        "cursor": {
          "ref": "8b5accfa-a8f7-40a8-be78-4a32a21fcaaa",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "988b8840-5c9f-4999-af33-4cc42cc306a8"
        },
        "item": {
          "id": "4664c6fe-474d-4162-a3d6-1ba9e6f27281",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52ce936a-680d-4f7c-a2d5-afeaa15016f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8625b4e4-af50-426a-9cdd-e2f6fe4ce759",
        "cursor": {
          "ref": "817311c2-6c99-4982-bc27-e33b4ba5be79",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4baf5ca3-181e-4e0c-a011-d682d4279603"
        },
        "item": {
          "id": "8625b4e4-af50-426a-9cdd-e2f6fe4ce759",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3157b92-4389-4c46-aba5-366ff0aeddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49efcd81-1d09-413f-94c2-d23dea993c20",
        "cursor": {
          "ref": "65b57209-85fa-4e68-93dc-c90dab18408e",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eacb5685-47a2-4ba7-ad77-be13aff219f2"
        },
        "item": {
          "id": "49efcd81-1d09-413f-94c2-d23dea993c20",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ab7ed737-ed05-4ed8-94e3-7dd96858c94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e29d24-350a-41e4-b34b-3045caa06263",
        "cursor": {
          "ref": "6c23def1-460e-497d-899b-cf6461f99d88",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "93183537-c13d-42d1-bc9f-bdbda57a0eb4"
        },
        "item": {
          "id": "d2e29d24-350a-41e4-b34b-3045caa06263",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d44fb66-314b-4371-953b-7453d64c9421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93803df8-cdab-482c-a6ea-71032a8cfdc8",
        "cursor": {
          "ref": "fd00df15-4025-4032-a0a1-2fe262d885aa",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9c40868b-d131-4074-b78a-b1dd740864df"
        },
        "item": {
          "id": "93803df8-cdab-482c-a6ea-71032a8cfdc8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "695d297d-3508-47ab-abbc-dfdaeab8316d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6e1530-105b-4faa-8847-9ec61c6e4191",
        "cursor": {
          "ref": "98a55e7c-01da-4e6f-afbe-55e924d59286",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c570af60-467f-49a4-89d8-b2840f168e1b"
        },
        "item": {
          "id": "cd6e1530-105b-4faa-8847-9ec61c6e4191",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a8256953-0088-4470-9cf8-04d5720ecbaf",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34de656-34b8-4967-a5f6-af5b3776b22a",
        "cursor": {
          "ref": "309edb1a-c5c1-4ea5-9a70-2fee1a24718b",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "59ee443c-15ab-460f-8876-72086117f408"
        },
        "item": {
          "id": "c34de656-34b8-4967-a5f6-af5b3776b22a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f67d6224-2b01-4732-8f76-802016a67679",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a388fae2-039d-45a1-8356-b995a1f40ea6",
        "cursor": {
          "ref": "e71d1de3-fdef-4a76-8f43-0ff732d0d540",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2357a724-7d2e-4b62-82ce-147610423aa7"
        },
        "item": {
          "id": "a388fae2-039d-45a1-8356-b995a1f40ea6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a5c7010d-a58f-49c3-95f1-3001d7a06166",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc8beb-259f-413c-84b8-3fc064cfbe30",
        "cursor": {
          "ref": "a348e4c2-d569-447e-9f3d-058dca046e6c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3697e840-2c60-4b0b-88f7-affa5ae37e07"
        },
        "item": {
          "id": "52bc8beb-259f-413c-84b8-3fc064cfbe30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd5c9ee1-c9a2-4142-a75d-1464e136270a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc8beb-259f-413c-84b8-3fc064cfbe30",
        "cursor": {
          "ref": "a348e4c2-d569-447e-9f3d-058dca046e6c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3697e840-2c60-4b0b-88f7-affa5ae37e07"
        },
        "item": {
          "id": "52bc8beb-259f-413c-84b8-3fc064cfbe30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd5c9ee1-c9a2-4142-a75d-1464e136270a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881ddc72-77d2-4d79-8d34-ce02a870450a",
        "cursor": {
          "ref": "9b34bebd-5216-477a-8c57-608ee41ac731",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "933201f1-b453-4a93-9aca-1b2fb5e1910a"
        },
        "item": {
          "id": "881ddc72-77d2-4d79-8d34-ce02a870450a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "070e830d-d52c-4e62-90cc-82e6c6c07660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa29ac9-83e0-44c1-839b-6c2ac2ac2278",
        "cursor": {
          "ref": "db9991a3-7684-4e8d-af17-dd229163f5bf",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2ee802e-cac5-42e8-80dc-f58770635556"
        },
        "item": {
          "id": "cfa29ac9-83e0-44c1-839b-6c2ac2ac2278",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e438eafd-6fa3-427a-aa5b-b86453f6449e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}