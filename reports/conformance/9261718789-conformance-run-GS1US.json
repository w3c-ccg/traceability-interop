{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e06bbcc9-a2c1-4148-8826-a933cc02a0e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "24d60cf4-3a6f-4b3c-b1ad-754b13637f5c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dd72672-5621-480b-adb0-e33043bdbe27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "08ed664f-3665-4408-9921-bef462bcd15b"
                }
              }
            ]
          },
          {
            "id": "37998186-b31c-4da8-9aca-c51f191c3931",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "928df580-011c-42df-8d12-141c75218f7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e205299-305e-4e99-931b-72a77e75159b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d46251f7-c4c8-45a2-907a-5286f888ad9a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c4a6587-6b25-4a72-baba-99ead7052016",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de72f035-a4c3-4aaa-b398-eecec58de5e8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8066d3-707a-47d6-b6e9-dba2b0baa990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c73eeda-e96e-4b42-b424-90393b4f90c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b6c6f8f-831b-4608-aaa9-1e1c2fc594b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a5562f6-5278-4c45-8cec-1a887c9b97f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00bc53bd-4f60-45cb-b066-1995da5c8eba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "111ff330-c56e-42e5-a855-d18f8d1f47a2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93cff1ec-0333-4e81-a58b-d8b48e072feb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c475ddba-1093-45c6-97c7-f9aeda9d196f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38650bbc-d308-41fc-b838-1bc4e3930ffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93bdbb68-24c4-43cb-bbb7-78428d1d4477"
            }
          }
        ]
      },
      {
        "id": "12e8b1bc-df8c-4508-bc60-cfdb37018bab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3b552265-6bdf-45b5-900b-db55152f49c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68a47927-3855-44a5-b02e-5efab25de28a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19fa684a-1517-4a0d-9552-edb16d18e117",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd656f-914e-467f-a101-b92e27426d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa0e0794-d284-48a1-9dca-9e5ed748a504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facbbe96-5454-4364-99fd-faef909a95a6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49576a37-f737-4d91-97cc-ecb91ee65cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f65901b4-0a03-469d-a3b2-ea8ae4bc4181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3704b7a-f4e8-4162-b5ec-75cd40cb1e28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318c2a77-73ff-41d4-9643-579988f5aeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2eeb86d-a6ca-4417-91c9-3f6d4e29ebc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90e20726-6de5-4b36-b7dd-6ec365a63180",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17dcc32f-337f-4150-b58b-2f385a796448",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6498691c-aaec-4b63-a518-687601e5deb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61d7ddd9-15aa-4233-a2d6-8837a6e8fc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf72a69-0969-4a82-b9eb-26e830768c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f853f8e8-9f3a-4739-90e8-09bb0308364f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43727a45-9a80-477b-9808-cb0ab6eb4f44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acb17dd5-dfa2-4e70-a64f-e13e36794daa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa50ce4b-c2e6-472f-a840-85b31b8ef0d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "39d5de3e-c4e7-44a0-99ef-ca12bf28326f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c32ddad-02e3-4b92-911e-efb140dea8e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69755792-49e5-4676-85f9-4c90f366313a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0ae5c99-02d0-4a09-9877-43bb436dbfd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac166387-4dd0-4f56-93e7-0f53f6772e96"
            }
          }
        ]
      },
      {
        "id": "b60bf60d-7231-4c44-8011-1145c43c31d6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "559a4da4-fe31-43ef-a199-8324aeb9eb8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e06f3a94-a859-43d2-b1a5-09a042e2902f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "115eca29-e726-41a4-bebe-e6fe605d3983",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d13fe50-994c-4e57-a540-578ac7331945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad89a415-d881-4994-9c96-31b8639d6f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194699b9-e7ad-4cfe-82c3-fd95e3cb21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "725c4e0a-8f9e-4bb5-b053-a3a5ad16a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db1d5a-5bec-4290-9dc0-c867148a8ab2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ab5110-8905-490e-a9ca-cf39d11e7129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f46706-cb81-4d9c-bf8f-758232784d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531aac6-2096-402f-9008-3167c973018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4144aca9-dfa6-4058-9eb3-9db93a90cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60a276-6fa5-4118-af88-188e5aca31eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd0511f-7a28-4901-9b43-fc0a9c40cc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1eb2f24-e3ec-4fc8-9ac5-150911f62ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc5716d-8b54-44d0-838c-25b4ee37c9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06fe4410-cf57-4499-a4c9-6f2e4cfdc016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42589ad9-73f8-4813-b41c-43863e206e98",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396c6643-7b01-47ed-bfb2-af1208520eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219f04df-a984-4a31-abff-7d8580059434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfaba10-cf24-41af-acd0-4814f5abbb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff81e7ff-e26f-4874-a449-64eb069b28d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97e624b-04ce-46ed-b05f-9244f87567f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e329d2f-870f-4bae-8e86-4988e0f83910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947d1d0d-202f-4558-b757-6cf5bdb02da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8c55df-4272-4303-95db-9e51bee8a20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80850250-bd3c-4b9a-83d6-be58d828cf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ad9262-84d5-4028-8f9e-d96a0946b4ab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c03491-11da-46eb-b7e1-612d9de61ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf95a4a2-440d-4796-8c32-d4c2a3b4d0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b670967-a80d-4117-8e63-e761bac6a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "497314f3-03e6-47ea-b265-50f6cfb4e2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f671f-1e2b-4a36-b83c-4d915fcd9d80",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26ca3ed-c05a-4682-afe5-0d1e0658acbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9abad44-67eb-49a0-b4eb-24941a7813bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c17d81-6b0a-4399-8549-df3aaba4bfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e83ce48d-2bc4-4365-a6a3-9e43263b63d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4664c066-3572-4d49-a9e5-0e7d45e93861",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a21077-a4fd-465a-82a9-ec084c4c74f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f454fb6a-14db-4db7-a9c6-ba910dca83b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b5193-477a-4dfb-9b4d-7b1b6f720bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f53d5fce-7bba-4907-9f5b-ab0f664914af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c38939-377e-4725-a0c0-24f5c29831d2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58cb121-903b-4a74-982f-0a451da2e039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344236e-ca89-4aff-8a2b-c1647d7961b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448c5f8a-7aec-401d-a386-adcaaecb673f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c43cbf8-2f93-4eab-9a68-14da2027f01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2083b0df-faf2-4313-8850-bdeeba56f5f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139054e5-fa73-46c8-a436-537147973fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9651433-16b0-4d35-bc27-b2b6fd7feff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32270bff-4b94-4365-817f-acd5fbd828f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28267df5-279a-421a-a2c0-c8518f77beb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0070f8ee-e2a3-4494-9564-2afb1c55bc2d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c4c8ed-6370-4aaa-ad34-8be1447791aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0961038c-6c7c-46f0-948d-8a23a3326606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5805b8-f83b-4724-a1e5-1ee40c2bb746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec60b01b-baa7-4ebf-a6f4-4d7b9bc7074a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8843445e-b8cc-45f0-a26d-17670f8b79eb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17924be2-8f91-40b2-a06c-603217921173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a13d5a2-4356-444b-9e79-4371bfccb02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1f5437-24a8-46cd-bf05-f832cbbd7d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d30499-5be7-4547-a321-e1bebc33d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad62f60-bfe1-47fe-86a6-075c21a16e8c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba5c06f-ffb5-4a1b-b3ff-300df70fcaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77c48f6-f2e4-47db-bb7b-1aa0b130f761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c0126d-864a-4a16-a4fe-f17bd08d1081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d15ab9e-b8b4-48a9-b379-96df3244491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d29f70-1778-412b-b49d-91021440ff50",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e83bfd-92d5-4f5e-988b-d4764127ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d871ab2-2592-4b78-8565-ee44f2db216b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276addd9-93fc-419e-9116-adce2d11b6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f23e10-d77a-4186-9a48-0e4713ddcde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5594ddb-5481-4986-831c-0d43c993cf63",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd40ced3-bbfc-4bf1-bb9a-daba515037a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc72941a-6ca0-4a8f-831e-09a8efecbd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4fd00b-249a-424a-aa78-5596148729c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c846b4e6-0cdd-44bb-a434-500c55695b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df65972-b99c-4cdb-aac7-023bc67fcd85",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9826ed34-b0cb-468d-9923-7bf49dc63e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1995b0ba-a105-4f2a-b324-ed9c89603ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18295104-e11b-40f7-84ae-88ee4e067e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d83248-3244-4e66-a982-156976a9a561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e279a178-7c7f-425b-b765-8739879a4209",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1e9fd-37a3-4b41-960d-859a8adde97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49c16c2-bbb8-45b6-babc-02ffaa601036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307ba7d4-cead-4887-8c68-6ceacb64c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad92b1a-1754-4224-b6a3-100d94017fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9762bc-f76e-4bc5-8c40-c8d3194b2184",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb8db4-5bd6-4feb-b7f7-fc60b99ec94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd80f394-6e3a-4fb4-a7a0-fcbfe927c3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fae5f33-c74c-4b47-a769-1487abb89b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1099f1-5129-419c-93de-71a86a76061a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f4dfdb-4a77-4909-b2e1-71f97bb2ebc9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dedf751-3b96-4d0c-8645-c464dddc5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b3520a-5541-4203-acae-43ea2fa9d2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7ab026-66ef-4c2a-a0cd-fa54d9868550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d02bed4-0a6e-4316-a868-995216f8504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a4d8f-62d2-44f7-bcc3-f7e7f0623cc4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31ea6c0-2213-4242-b34f-b6dfe05d194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f261fe-9146-4a1a-9ea5-fe20849ef2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b58485f-9f14-4bf2-9d41-0377c9565194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2219c113-bb9e-4f46-b3a0-10a5139e1b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f7cab2-2b0d-4593-918d-a7c2b6d97033",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b0da2-9e04-4568-b49b-72594063df9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894844df-ecf1-43c6-a193-b859ded30941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0112ce-25ec-4e9f-bb37-0a38fb818085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b62bbe-7616-464e-b4e2-502ac55a28b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2851ce55-ed8d-4ae2-9c65-41fa46b5862f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9b74c-81fd-4860-a402-405ff9a6c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dea73f1-8d62-419c-b370-38a3cc3dc71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1407d0b6-3cab-4ca0-af6a-d697af1694fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "462c3d3b-073c-4a14-a57c-67f78f0bf722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c359fc8-f7a8-4518-bb9a-41db0f1ebdc9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0fd4d-4d84-4a2c-8f32-930468661bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151bf1f4-9b69-488c-a4de-431a9f1ccd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abfe72-d0f1-4089-a828-ef1025b1dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e3fdf0-06dc-45b2-989d-77ed34481859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15931f03-8a83-4f17-bd81-1311c853339e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad267175-4d5c-4ec1-9ce1-13196e0e7414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f1536e-978e-4e43-8569-26d561cf4dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdcbed7-c13f-4a1f-ad89-b29f1e19244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "497ad32f-7f42-4f49-b9b5-364fdca2863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7633e1b-d1c4-44ee-81d8-884676280f4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19d9444-0b98-4566-83a7-ba4b11c13de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab4b4d-fe16-4010-8843-98cda35f32bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8bf74f-1ef9-4c31-8e7a-1dfbbb89d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "151999cb-3143-4187-9574-ab992a1d889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4032af-98cd-4af9-800d-59fd7b424276",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3eb0b3-1d8c-48ad-9b59-26ed6595ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2119e2e-bec9-496f-9d89-c09673f8a330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef48270-fe51-4e7d-b492-55a3b7f217f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38076d74-2376-4b21-be3a-51252360e135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e8f871-b247-40ac-aa39-8c42f01edef0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9dc34b-52a5-4dba-8a6e-a6ae3e0bc194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c230038f-c36f-4acf-982e-8ff7fbbf97f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64342290-abf6-47eb-b5bf-cfdc729ec93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fdbf75-2c7e-4dc3-87a9-b7e17b7a2726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b99cac8-f82f-42c6-a8a8-745559f16e15",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122e7ac9-490c-4477-8785-ab4e88809be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d2cd0a-057a-4a83-9d6e-70b121cec5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fed0d50-2d13-4a10-be62-6663f25338ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "741acb16-2a18-43f4-8c67-34380dc37c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b6098-91c8-4ffd-ab4f-9494d14baf59",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3787bb8b-524e-4af4-8fae-d11c6c5f8238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d89d51-7606-40eb-b659-26dbf4781a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b82b7-f7be-4957-8381-7871e746ed88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d08fc839-baa0-4687-9128-c325f67c64bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33286841-ca7f-4eda-8a6a-58ee80a8b4aa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb12fabb-c9cb-435f-9c62-b89286852fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700ba6f1-38fd-411a-b1ac-1e7d6a98c06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f558a4-e909-416b-97bb-e85f8f6a3205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83d9d84-aabe-41e6-bff0-9af11146e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01cae84-97fe-44d7-b236-3cd24a6dac63",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132ab98-968a-4de1-9b3c-307034ee6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406a3f07-40e2-4556-ac5f-ba42439d80d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb7b9c3-0876-4707-b977-1d100a4dec27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f551b828-8028-43f0-9207-cb8ccd41c597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9669e631-4542-420b-a635-3fdbe1734244",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3bbe45-c7f8-4837-99f9-e497df0ab629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8514f67-c701-4588-91a3-71888bebf0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870b30d5-ae6e-413e-b10a-bf36289eba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ddb791-8602-4e64-ba7f-0a6d136fd42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f2074e-39d8-47f5-a0c3-c99e0fb6b7e3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6bf627-1e75-4748-8c38-21fa0d01d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae564b3-c088-42cf-a9fa-44ba2506acb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848594ae-286f-4242-9b57-beba5492d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "555cf917-687e-4d6c-a5ed-c7a79d059a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d38eb4c-5f19-4515-ac71-3cca465c2ec7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dc1f01-da6d-454e-bedc-c256dc1517dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b0089d-d36b-4bd0-82f9-6a86cdb756fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54182a3-0f7a-4c14-aa4a-133f68a170bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "263fe843-9813-4d38-970d-4dad1a2ea86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf182048-9d1a-4ad8-9bdd-9b2aa4fa052c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f0b860-59f5-4085-963b-8515ca3c9071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc50fa3-d641-4b9f-8534-9fd9a77ed40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d84b059-ae57-48bb-8656-fc439c60ca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c913853f-a734-4447-a287-87da06ef8dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3be49db-6c0d-4fe9-905b-6f01e5499149",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2231dda-4b0b-4777-bc61-3a15adb5ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9c85d17-02db-4c5e-a827-396c104b181d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6077aeb0-2392-4bc0-ad04-0748fca142ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7a01ac-c0db-4b8d-815b-e9d5f6d6be0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35aa3b1-f860-4466-a40b-7263863bc88e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fbcbb8-3728-4ae2-be2e-c0b1f559f225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b484d5-2c6d-4380-ae36-fa92b6bd4f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0278fff2-0c85-4a67-8d54-9aee23a640aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b83ea2-a635-4c09-955d-e204809cdcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930a66c4-a600-4e3c-8b3a-def64869b6ed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c27ef1-19d8-4151-ad47-f57a29bf5b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797159c0-a040-4c62-b735-f637cd22475a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d49704-ecef-4f1c-9b6b-fcc127ae5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e717de-4911-4b2e-8df2-a5a983889e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722a8da1-9a7d-4f88-aa56-124e58eb6de0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2e3515-e6a1-43f3-94ec-4fc1523f59af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b705465-3964-4f92-a1a8-e7410e0f07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2e91fb-bb82-4eba-be6b-7e51746e528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "318e240c-7086-4700-b080-367be71b3022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4a09f5-a229-4c3e-984b-3c8ac3ad0e47",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147a4684-c07d-4fd1-b035-c2acf0e7e66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345547a4-b235-4bd5-926c-7f96edfb6fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bc37e1-9bfa-419e-bcfb-e8ba3f3b645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1011e8-fca6-4fe2-ba72-0b96d6ccde49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3d1650-3325-4316-9e11-0b5702d610d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c16e6d6-ece6-4587-bdee-c60ecafda37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fd28d6-d721-4f5a-9708-dfbe831990ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa861b-255d-415a-9865-e5cf79ac613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97f3e1b-437b-4288-9f80-d6082426c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296781db-1d99-43a6-b613-0a782d0fb4a8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bb41c6-eaca-4f85-a092-13f946610b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dbce54-f339-4dae-ba45-ea6ed696b417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37af4f42-9fe7-4860-9d2a-3786fc25de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d2185501-367c-4487-a04a-12569905fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a07d493-66be-463a-9255-e10b854b641a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d05b53-b3cf-4ab2-86ef-bdeb8b6cbaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66737bd-7770-4931-b5e1-3aeb3925c92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a574b7-5f8d-4b49-97a1-ca48f22a70a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de28e154-5cb3-4712-bd85-8a6a12a70f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444f1943-bbe6-4cc6-9260-b87b9d1dfabd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efce673e-0f53-4eae-b31a-94b3a6de8c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600771f5-5706-4bd9-bf53-4723d7f88fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84abf0c5-ea0f-4393-903d-b5f61c92bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43f6d12-3b6a-4e82-ba27-3bb6a40c7031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faac7bd-8bea-4b41-ad02-c778e9a41449",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2202f685-34c8-4807-a435-ac02b2537e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26efb46f-0941-4728-af50-a537b7a11078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baa4daa-0980-4b71-8c30-5ef2051b8b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ea95a8-1836-4edf-a37e-c80e56e1eb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70a3495-c092-44c7-b442-d860136a4150",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c92e06-164a-409a-9deb-acad94b6e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb72c14-4900-4c0e-95b1-6f42e97e89c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea65706c-361e-4649-b2d0-fd91f74199c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab26fff-0c62-41c0-b8bc-f8f5319f3691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f43ee49-31ae-48b1-a3e6-7ca8a0a7538a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1794d50c-d2ea-430b-bded-a642f626ac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325f609e-43c0-4ea4-9e79-234b16702342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de17fa44-9424-4be6-80cd-4737471d8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38c3438-77b9-4259-ad3c-d2c4cc79ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9af334-7cf1-4876-a4f8-9d4094adf59d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87387f29-c363-44ba-85af-f8737e637270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94bd1f1-d3e9-4f30-ad97-5412ebd912e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac2bc4e-12b8-4f37-813c-c14542cf2206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14b8fe4-1588-4061-bf4b-4b8ce34e2bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc851d0-c45e-426f-a4d9-e0885dd68df0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45535d49-bc01-43c6-8c1b-0d51e653fea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f3509a-a3e4-45d0-ad72-f315186184a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f418d-1096-4844-956e-d45c61101120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8918c03-b1cb-423d-abaa-b2a4eac3b42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f772a-5b05-466e-9533-df2864bfabcf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca3b73d-6e78-48a9-b6c8-2163b52fdafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626371d6-10d1-4319-91d9-c7fa35a2e824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92b39e-6066-4d7c-940c-6bad91f4e0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7185c432-ccc7-4b6d-9612-7be9174905e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a75c72-523d-42b1-bc89-3b47cb49e975",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac8848e-c0e0-416d-8801-7973839c368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffeb99e6-0582-4528-8d15-0c14b2ce3cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0c4c65-9a2e-42c1-824b-d64bdce81285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c97bcc-7321-4bf1-9333-682ac521f55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62f0bac-f5fb-4d7e-bdd6-ca242fb49e60",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54170ff5-86bf-4697-bd64-ceb72223d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026bacc4-c2da-4924-ab49-2d969a45fe84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7242c4ad-1b87-41b4-b714-bc8a4a2632c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6adc304-4659-43df-b6cb-4b78f342a57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3216bc7d-f9e9-4fa3-abbf-feeb6a389155",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902789e3-40dc-4f93-8c16-f6e85c9c600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303a1e45-ae2f-4653-a905-3a9afc9a187c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ed76cc-2e48-4729-b031-58afffc946c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "834d5565-d926-44c0-91de-7117b54fcd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3874929a-2d02-46c6-8f02-6aa905385fc5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ace26a-57a7-4a97-bca7-a3e904677388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee2ea1f-16c5-4548-a951-f98d2557fd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3811c17d-513d-40ac-8cc5-afcfb728b623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b7aa9c-c83e-4014-aec5-6e00ad6088c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfabcf19-0b84-42c3-a320-8f4daea0b8ed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2cefcc-de7b-44bc-8a0f-ac7148c6d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f03449b-ae64-4006-b929-8f5d58449f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ef32fc-a950-4b54-aba7-4681eeba7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "806c9298-4c71-4695-98d4-a738143901cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c9b38e-765f-486c-8521-f6f54b28cd84",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7d6e7b-79ca-4a8f-8946-6d6b7ed03569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0578e94-64cb-45a6-bd95-7c84c3910bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aacff47-d6c4-49a5-9ba4-5bae0b80cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "426a4ac7-3b0e-4851-bbff-a07b49a9a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21d0452-551d-4782-ad7d-308dbb5ad29c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb4125f-22e7-4ccb-884d-72ca6b174129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176205f4-99c8-420e-ba10-ef51a6c4e458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfc1481-b13f-4ea7-b95d-248fea4614e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd96e91a-47fc-4ff7-8e6f-9875cff3e083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632b4e2-5d98-4bba-8dfe-ca48fdbf0145",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027fb012-901a-43a4-8e45-082b3f7974b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a2a33c-1956-4820-93f9-0c6e427e8f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690641d6-6bd8-4ec9-85be-16be0a60df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "978ae8f4-e5cd-4576-aabb-93b629f692bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10093cb4-ce3f-4a79-92ab-c521b427bfe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238820e5-110a-406d-93d6-de64e2af9b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bdca1b-193d-4fe8-9179-c0e181914300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5764caa1-35ad-48e2-b239-111ef50fd431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69e5f789-7568-410b-9d10-1b29be0dd859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8ece3c-ba16-4f0e-84f2-1637544608a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8183e071-9288-4976-9379-385224a87246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7690f51-b3a4-47e7-b6aa-99a505357db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c5a77b-059d-4046-9aea-8d9d5e631d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61015b8f-e0e5-4808-8dd3-b951685bda8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6906af6e-4f89-439f-8e3d-ed94b211d693",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf36b68-b09d-4c37-a4d6-b66427e00e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d7d452-b3e0-4707-bcdc-fa698569a16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e56cb9-148d-4b0a-a058-3169f1272b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5781ea4d-c323-46c7-acfa-b88688a8323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3577877f-6b01-4383-9b1b-c04511832e0c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed17f259-f400-4785-a16c-9cae2f3a09ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae74b986-775a-4aed-97e9-25391f8aa4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8c7295-1088-4ebd-9aa7-12b262bccc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7412cfa0-7deb-4089-be6c-937528f01532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb6064e-ec22-4043-a131-0181dd38e336",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d43dba-8764-49e0-a8a7-6b606b88ba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fe4f44-ad4d-43a8-bcf4-8e964a1cbcbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908037ea-16a1-4d8e-bc57-d820415ee11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4f6c0d-788b-4fd5-9b2e-495784c2278e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89903c26-216b-48c7-85f5-b1a82768eec8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60feb1bd-63cc-48c8-b5b1-a054364dc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc4340a-fba1-4cc5-bf03-d5a6b90a71f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2168148-cf1f-4f07-951f-21402bf55ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1365f8-c779-463c-83a7-cd251e74d05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ab8ad8-3353-4396-ae41-e38ec96e60a5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b03d36-69fd-41a9-8316-51654c800537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e486f8-fe16-430d-a5f4-637bffaa8a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb65e335-72e7-4378-9afe-ee30c7cfca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a70236f-7da6-4e68-be4d-5eb5779b7dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1882022-4138-4f75-acc1-828c2de15891",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e58c18-11c5-47c9-a3d2-b728fccf8358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5718ba70-8acf-4e81-a7cd-6686df83f9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd26c2ac-bec1-4d06-963b-aa9e860211d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e35a51-c1fb-464d-a929-5de400d93bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c42d87b-29b0-422d-af75-bbb40fb1e0b1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545531e-6a18-4fd6-bb27-650e9e363bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1990d52-7e0f-4dc9-a5fa-db8ed6e1dce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b938a-7e29-4323-b7ac-f6266a6448c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58dd3900-b7fd-4a4b-aaa0-b12a1b7d1cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fcae4e-a7b4-4788-9ebf-6f90e4c47cde",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9860ac-65fc-4e30-90c5-cf7c2df41956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768778bc-8b78-48b7-a11c-8770841abc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc794ec-c1cc-4626-b08f-b4c619502e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2837d54-c041-4a1a-b727-9eb2ef189caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1387f6-ecbc-4026-9149-f5674fc268cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d7e7e5-c060-4fa2-90f5-c8314e9b5f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0933ff-ee4e-4cd5-ad51-6c55a7c339e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2067b3-6dea-4826-a565-85638353482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2636a35d-aaa2-4efd-9fd0-b5501e198e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0629a90-4d12-40e6-a3c9-acf2717e216c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f3463e-de73-4b02-91f3-76f3f175f994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00886f0c-8f9a-4373-9272-8e7dd90bc2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4484794-92fc-4254-92d1-237725458207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7743607-bdb1-4257-b8f1-6d0bac579840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a6f37-6a91-4dd8-a764-8816ca754142",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd68a55e-e3f4-4693-9c18-b01586f27a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a65a9c-9883-4630-904f-a528dc4ec5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dff804-eeb2-43c3-812a-28d76704cf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19bb6e37-2fe5-48e4-927c-0abf48b14d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e62850c-10b5-4c2c-a2e6-186b66955fc9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd6139e-ee6a-45ab-bd36-e428eb54b672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40e03af-9f2b-4c9e-a00d-bfd818789700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4c5e0-f2e5-403b-b788-a8b8a06d9842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ead19a0-195a-4b5e-94ea-89c77781eb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1f7ec0-dd02-4a50-87a1-451afe24ce46",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb7694d-7f81-4072-b239-22cdeaaa0493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a4a111-d177-40bf-91be-4609b526022b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afa434c-dcb7-41a3-81a6-33588956eeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a975e489-030b-4694-9e37-0e93bc78a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a16830-a8ee-4c82-a9f1-1c883a7db429",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0e6c12-b0c7-44e6-b249-6d35c21b4897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71040f41-1b64-414c-9609-65bed2a55aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05681230-9e3b-459b-9642-1fb6fd478121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56f00e4a-62a9-4197-977b-65de403a75bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4516cea-ff62-4d3a-8288-dbbde81a7898",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7f6ae9-8e66-4a51-80a9-3e014a7414f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39231882-83be-4c9a-b6df-04f231c6f537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeef9593-98b6-4e9e-b22e-cc076e755cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "506bab0a-44d8-4144-911c-63da7b289098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a514af-fa85-444c-b858-b5363ff93050",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9caf7ac-3ecf-4713-a764-6d767ec7de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72641ed6-dd88-4c19-87d1-d4dad20ef82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c52cd5-aaa9-44c1-9d57-c418c461adce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ace5335-08a9-48a0-8134-81c1aec623f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef826fdd-7140-404d-a3ed-507612e487db",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb1d80e-d816-4b07-9a48-b0e22b8bad69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b1279e-4a42-4372-9573-276b786af6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e664be-61c1-4a8e-b352-5e8d5a0d5226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b71d084-065f-423e-9845-107b7c2be195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e31ca3-70af-45fc-be83-268a9046cb6f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab5065e-a08b-47f5-841b-eb89e7246fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911f165e-5607-4a19-96e5-8e9708d4a81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad5430c-80fa-4592-9b18-c25305376a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b07faf1-4338-41a5-aee6-9a20537be894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f309ea-fc94-4d79-bdf3-fdc88f77c669",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d160122-1684-42c4-bab2-db4a19f9f7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a96838-5277-4f48-893d-d0bf1cc5622a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7550b86-8aa6-4fca-8783-f1298b7404e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4578336-c58d-4754-9da4-7f552da451f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c661af-4a90-4761-9acd-e7de15964fde",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295abbeb-8acf-4d37-a570-506711ab7ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6293c57d-7786-4330-b28a-a2036c73e9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025d9b45-93b3-4a40-8f0a-cf94989e5c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89d19be6-60c4-436b-b093-ee84bc070876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e70fd9c-11b8-4ede-bdb9-062741e32613",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adddabdf-8b64-487f-b05d-dfd9833d541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea66c370-37c7-48ee-9ac0-ce221ce7ca18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ddb021-3c22-4011-b6f4-1dd3595099d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f62e065-226c-4ff4-b953-d2adf035391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b121fc25-2614-4a54-a86b-c4e13981f2e8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7776b1-16dc-48ea-9858-12754bd486c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3563aa0-57ca-48e8-89fa-d746b732f128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14daec96-1f21-43c5-9abc-86e49ec2b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "542db03a-fe5e-4c62-b8e6-97b91110ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b795551-b544-4c98-8e8c-793e73ff1c72",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86bdb66-1ecb-4232-b5f9-ebc48bf08c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0f2d82-508d-4624-9b5c-4b719f34ab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8514e01a-446c-4c64-aa61-2865d0618dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb489be-d1f6-4665-85ba-f0a30feb3752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47829460-3635-4aa1-8941-875cfe9c0827",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4532769-572b-4f88-95f0-ed0c58e76195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053933b6-d279-4fa9-8dec-c7b1cab69a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec8c623-bd3e-438b-b3c3-54fe0f7cb2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e30201-f43e-4815-8440-03899d578a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49461c5f-83bb-4461-99f4-d58b2d609bad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82395e66-4b53-4579-a71d-c4c26768c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25686c9-f01e-47f3-b479-31407ba81e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223e8e2f-a85b-49f2-b65d-2d6b9b683180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b39537e7-d492-4fee-8433-c2976c102cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973d8c6f-1fdd-4e58-b924-dfa9bee4e57e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d1533-38c2-43aa-8e40-c7651a3e921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b914e6d-72b9-4f86-a0c3-30c0796868f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620e1503-40f9-4c1a-8371-48019ba84a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c42dddab-59ea-4ec0-a19f-ff629c0d75df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a48263-4e72-4f62-a664-71ca4972929d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be10237-ec94-4f47-bd3a-ae8a3be9fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e606297f-2a5f-4721-a969-c764ddfe1db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3874f7-bf88-4aa6-8718-2dc54b13a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2b5820-78fd-4dd8-ae7c-323b42f9c174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d91767-c720-4a53-81b7-7e0219f975c5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ae6d4e-f1e6-4fe1-82da-36f3d7c2009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2a604b-1182-44a4-a6af-2c6893ab1ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4f7fc5-7020-446d-afd0-ad3602ecc983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f55b4c5a-eeec-4edc-a17b-198cebfa57df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22402ddb-7a63-461f-a4a5-3d86b7150239",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eac3da-c0f0-4dd3-be29-df2b888a8c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d57f2f-fc2b-411e-b8b1-4b940d8f58c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3ca7f3-a8a9-4f50-8765-0a6ac943fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb69fbd-613a-4c6d-bc52-3eee4496641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d521986e-b498-4f74-87e8-fa21d52d2453",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57204af0-bb43-4d04-b4b1-80e885c29b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4205c87-c513-4baf-8a04-6d7cc6e2ebb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae54cb-a270-44cb-a82e-21afc11726f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20243bb5-08ec-40ec-8537-0b4296623aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a28bcd-e76d-4b27-8b46-cc2a70368646",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b92a18-0621-4d00-9166-8f7f6eac0c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33194902-5c3b-4c32-9dbb-b20558312e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f3109-c8e4-4358-9fc9-062920350a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94bf9ff-bb6f-4822-8eee-8c839eb60666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2a5b5e-e1f9-4b9e-8c85-d86748710cec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7280f1-7528-4e63-a8c0-3cc52c02c07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a4b03ca-952b-4726-9ed0-2bcd0c62f375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7527f1d3-6cfc-472e-b5ca-2f2baa046a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c40621e-beeb-424e-8118-8153887527a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69a409a4-dbd0-4e8c-849b-63bcae1c0e39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5571aed3-2535-40f4-8ec2-9c0f4efd682c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef9c635-6f0d-4628-9de9-85724dc1c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97960c04-959a-4f84-b195-3b0087a75b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c70a464-426a-4b50-b072-82bcad12a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0963d68f-7495-4714-ab79-070da7c14a28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6e95f8-3081-43c5-a420-bdb5f13999f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47377b1c-94ac-4a76-83cf-e284ed3fbf2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c0fb431-0a8a-40b6-805d-2cee79b82179",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a44d04-90aa-4925-a95b-311b1fd6ffcb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83f02426-cf66-48ef-a6c7-b3a7eecebcac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f9ac2e7-39a1-46a4-be5e-55d8ec680143"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96992d65-0d4d-471c-9d20-2886b4a42d8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10d59f2f-e7dc-40c9-b6b4-965bc89f5330"
                }
              }
            ]
          },
          {
            "id": "14439332-f2da-4d6c-b042-3ac613c4c74b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0363d1b-b977-44b9-8ca2-772eb107cba7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4a4581a-e30c-4e1c-b3fd-3ba1784ce7fa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a740b8-79df-4a49-bd0b-a825b5cfc8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e44572b-d6f9-4860-8427-e58e0a85f805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15298fad-0fc2-4483-8954-e79d52400114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3477e631-ff73-4911-a981-58089631e537"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f8d95dd-147e-4020-810c-18115b763fcc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63c8da4f-41dd-43d3-b354-5fcb79babd1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4813aa8-30db-4653-89b7-ba76854bce4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee281e3-3b5e-4689-a4c1-1b150a377fa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8c5fd4c-b1ee-4476-96ec-319d196a69ae"
                    }
                  }
                ]
              },
              {
                "id": "201d8e83-9ee6-4c38-af31-4cd64b6cdaa2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "528e743b-e55b-42c3-b1e0-ea7eebc9ab9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c533834d-5d54-487e-8b7f-e5ef6cb72f80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7379f0c-47e6-4067-988f-ca504fb392f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93468590-f84d-42e4-b940-c27022faa3f8"
                    }
                  }
                ]
              },
              {
                "id": "62281158-91af-4300-868a-a161e519d9d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37a1b61-c2c3-4955-8884-7a85be6dcfde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbb68029-7fa0-4ba8-a90f-398f8b5194ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33a62163-c424-4776-8071-881d6477efc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d41a6a04-9fae-42c5-aab0-ad21375919a6"
                    }
                  }
                ]
              },
              {
                "id": "45b6712f-7fb4-4424-bdf4-3b1a7a3f8d6e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df6e936-01f8-44f8-9218-f468198f40ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85c9657a-829e-47a9-a0bd-85d4425bead1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a179756-ad3e-4717-8f68-619d641c937f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0488fd3a-2e94-4561-95ba-72a99e03aaae"
                    }
                  }
                ]
              },
              {
                "id": "62156958-0b5a-4f75-b380-3df3d8e5edd6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0f20360-aa78-4f9b-a06f-5f925d34c321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef97fba1-620b-4158-b61f-6c2cacf11018"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a18b75f6-2dd3-4221-8ead-cb52ddabda99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ddfb7ec0-abde-4ff2-ab3e-d44e3300b9da"
                    }
                  }
                ]
              },
              {
                "id": "00357ee6-e39a-44a8-9439-90ea402cd49f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b98ef987-1088-414f-9a2e-1f545e736d3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56001b9f-9062-4931-9969-e54f2c6eb945"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ba28091-2db1-4200-920e-34f7073c0f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbdbe9db-5b76-450a-9fb1-c8d3ef73fa3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "161a6de6-ed99-40c2-b933-a438f0b82a94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edb5b4b2-e68a-40c8-be9c-7e4373b0e453"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad8e250a-c392-410b-867a-b2501647211e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "603b3053-39e7-422c-800a-333d5c531e47"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba8523bd-8572-45c9-9f87-7a81f788a7ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2f075e51-a732-4664-b258-686f2105ec47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "731af1da-f975-4595-b940-0e77af156c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81835dfb-976c-4b4a-be0b-6bae9697ac99"
            }
          }
        ]
      },
      {
        "id": "b9aeb41d-0c13-45ee-9c8f-7c3d208bfeed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "12a5b94a-af00-4b2a-a539-617c80247dbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5eba2a7-4d00-4b66-86a9-a1bedf4f22da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "283919c2-b638-468a-bc32-471b14aa5a0e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61991fe6-9700-4b2e-9d5a-cddc1b21341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7991e9ae-bdcd-48e3-b7d3-c584946d8841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deedb0e2-a034-4b84-a04e-d8547452917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d5a992-30ea-4c41-8669-4aaa17558900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e206632a-1ad6-439d-a82b-3932a4e61174",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee759d1a-da7a-455e-b4a2-bf50ccc587f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50544883-eae8-4694-8e06-4b9087da5f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7c8f09-3a77-4cdf-b18a-49359e3c990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f318b465-7726-4db1-bda3-d4897e113caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a902ff-5366-440f-a262-e37ac00755ff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664e4365-22be-4f75-bd92-1c213eaa905e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2641b7d-24ad-45fb-8bce-76956bb9039a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76a521f-1e26-42ea-9050-b8a4c78540eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da9ee2d-8541-45ad-a42d-c60781da477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a134df-4925-453f-8551-bb782c28ed75",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6551fc-ed41-43fb-aba5-357fc15043fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c83d52-8aac-453a-ba82-8339eeb9017b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af11976d-402f-4596-b974-8fae96292d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cbd58e-c6e6-4978-940c-a15185f4d966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73feaf00-66fd-424b-8c19-fe84b8f51a8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd74e7d-2214-4d26-b5d0-353a00224e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501426e-f87a-42df-9d5f-49da9cac213e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e188db90-b9d1-4dd8-ab9d-c2a95b3021cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bc73c6-6a44-4ba6-80e1-f712e9ac199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3f9ed4-6391-41a0-8b6b-5eb9cafe3c63",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c47ee5b-7a23-4c63-87ee-3b0f4d4c7781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43240ba-10ad-4f85-80c1-8fefe87293c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bb507f-a71e-4552-b26b-7deb362a5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82621b7e-18f7-4f4a-bf9a-1536a3767474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db3ac1-bada-4b06-826f-76ec767640fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6272ce-ed33-4b35-b342-a9808eaae9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f36c884-d5db-48a0-8149-bb263d4b8005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fc0b82-b6af-497a-a8cb-5ea6af5fd009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d99025a4-e552-4018-8f35-20ab1e5c801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45055b17-ce3b-45b3-a9bf-1bdbcf05fa83",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55a1ebc-d8ab-4dae-8758-83cbe6d477c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ae30dd-0de5-4862-8678-fe64770f3b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efebbc79-e8bd-4f44-a020-fe70734943d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4999fe1-6bb2-4cd0-98e6-a2e75a967154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba72a4b1-53b1-45b9-abb2-b832e8e259d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e8cfbc-2381-4cfb-a431-1f7137f1d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d05bbf5-17a9-4048-a69b-6e5721b0c8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc5ddd-4832-4f4f-9aa7-0fe2a581fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55462a71-53ce-422d-a28d-e79e10b726d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d298f43c-d200-416a-a3ea-13758b78094b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ce9280-f410-404b-97cc-54d28f09ab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f059b58-5496-4089-a5de-c567e0745d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f84d0d-44ba-45cc-91c7-666ac118bd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "578917aa-c4b8-4b6f-9bd9-be00e5126517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9abc8d-5080-4e9f-a497-6a5509c6e9a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eedd01-9f2b-438a-adda-df9c3ee90cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5abdb0b-621b-4825-b212-63b2d26097db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a28e513-ac74-44de-b5c9-305633b925f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4af0ed63-ef6a-473c-9ed7-7db3d0157c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e7b0cc-f206-4953-95cd-aa919777de42",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47abafe-7ec4-400d-830a-2fa7149ec5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0857e6-1c37-4bfe-8c9d-4d9e7a1ef5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dace2e-2c4a-4cc6-bbb0-685c5a976dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "390c4274-1850-4a6b-b737-48a10d235b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f7c5b-c7f7-473d-96b3-5fc71fe504a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d6fc1a-0179-4d2d-88c1-4336ad362d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac5e6dc-6e9c-4426-8c6d-775de84d36ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16cb3f5-c8eb-46f1-9efc-c51e989171cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9cb8cb-6984-48f1-9326-2b1578bc0989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84c7404-d208-4f55-905c-db59decce7cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6a72cc-ac83-4820-ac92-95c5eb4996a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda8540d-24eb-4b1e-8dea-db53db79bfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3298159-a484-4709-9839-05ba84907763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3239fcd-6747-4da3-9196-e15de0d26e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cebe09d-75cf-4bfe-999f-9b39b8581e63",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ba84ba-4927-41ee-8f27-c8795ddbbfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38eb78f-7d27-4793-955f-7e8898d677af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43f04c9-7170-4321-9da5-f6f192fdf0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e28e67f4-1ddd-4d92-abdf-bf1d89a7548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df3cf2b-8e8a-42b2-a7e0-1cd24418cbba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb679e6-eed2-400f-9035-921e803ef1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd67bd8-2d04-4f4c-99b4-502b86dcd390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711cfa3-56a5-44ec-b96b-a25766505b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7841c31f-8425-4c98-ac15-fefa006f960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a52aa-de0e-46fb-8817-3aa2b0ee2920",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0660f4-9841-43c4-86ec-98c8c5780dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166d426a-f4bb-4dd8-882a-205f4afa265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a01a89-4edc-4c42-8506-4491c85fd19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde3b812-f7fa-417e-8eb4-4641ca05448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd9776-2426-4f38-b199-0723af44791d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a9b0ed-a6ef-4745-b086-1be4f6514e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59049966-b3da-45e9-bb4c-99cdc2899a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff4db58-ac89-4082-bc35-0b9861295455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced326a3-7979-4932-a511-51c8d379ea70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297ecb1d-1687-4a4c-8757-104a2413bf21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9308ff9c-b541-4fa4-a74c-d98dc3a34644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85a33c3-1a93-4b0a-9e4f-821390888842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f803a7-ad72-408c-978b-e07ec98bc37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc94a9a-f81e-484a-8ae2-a97f2b7cfa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c05965b-be0d-4e29-9c18-2b8e06e68c42",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950c7b81-c5ac-4c25-b7c5-f1d2f138c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e561ab8a-cb22-4519-8871-d352cc956990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b359982-e4b0-43f6-a72b-a68dde8f3f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6e4778-6bc4-4d7e-8759-9a6bc9ae6bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d8986-dd60-4904-8e2d-514e85fd1fc6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b35b11b-973c-4cc3-92b8-5e9f801c1c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0070446a-3965-4298-9a6e-400754eaaad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcffde92-3c3a-47e7-9763-1b8cbcf86f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac641558-0b77-4a53-ba66-48a27dfc7e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130818f1-0b05-40e5-add1-1ac280a33061",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b1b48d-658d-454f-93b3-78442cc5299e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14869301-9ac9-4fee-9f6f-2977522fca32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ebe599-ede0-4c6d-b449-8451048efb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9120ac09-4dc5-48af-a0be-393b3507ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4316479b-4701-43c5-8a54-7153a8c970af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd072238-5612-4269-9634-a664c09d78c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82ce063-7cb0-416b-be1f-6a9c9bb251fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd7d06-0f4a-4836-89e9-fe048d9b7826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0565e1-55ec-463a-9f2a-85bf7474210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f903ddfc-3f8b-4a8e-b430-0f25f02cd5da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f7d6d8-9951-44b5-9b1c-86bd34733f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042bc7ad-34df-4209-8ee6-d5c9e11a1bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f45a85a-2de9-4dc0-8d3b-a7d605b6c831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e94424-530c-4d9e-864b-50e455b2518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e67d68f-0cdf-4e05-9740-fd5f6c8f12ca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd96e9d-3804-416c-848c-e340af194213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1800f492-2c2d-43eb-892f-be97bfbcd32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00b2f9b-ff37-4fef-a50b-edae7ce9d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4a9260-e712-4bb0-8721-a962fc61cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d96d51d-5b36-4c86-add5-6c65b21382f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b5e759-cd4b-42c2-9b28-1394fd45be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e233fd96-d9ad-401c-a8d0-43ed9b603f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44622cde-158e-40ee-8b2e-dff691ad747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf786874-4e13-44e4-ac41-029a7bcae1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b2ac1-c2eb-4997-a9d1-e5ab4c59d659",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc29e33c-69ef-457a-a8f8-32456d0ea6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af80634-0057-4b39-8a22-ea33528f75f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd3bc70-fc85-4a44-b64d-81b8aaac3957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c5b473-a25f-4cc8-a19d-c52bdb10598c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5133d3-3cf8-468a-8d8a-8f5a45027c40",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af61e1f5-8863-477d-ab80-e36d13e6bc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b2ba4-a386-4cb4-ab25-1a1ceaf30c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219e9c69-5437-4f51-a353-cc72f00c4ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03cac17b-157f-419e-822e-d8ac1c5408d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ce5ed5-a594-4dea-93ba-95cbd7fb3d6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca84368-4020-4c36-8710-658155c56c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f19753-346a-450b-b4ab-d3d48d86f1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe8b48f-d182-4302-a62e-ef24b7e1e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f097467f-bfe4-4c1f-9030-62612f1599bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c00b12-8b8c-41fe-a0b9-9349266db3f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce3616-c928-46da-be91-7f852baf4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b540b4-0583-450a-aa2c-fb58b7ca720c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c030c0a-8925-475d-96fc-931706bc8489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4167e476-a34e-40f9-b19d-e7779e23112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9962860f-e568-41ca-9413-59808c54df5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b7e262-0d59-4ec8-afb7-37486fdecb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af15603-712d-41a7-98c7-d3e0e34c2ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f64044-9219-4f10-a130-d1ac86bceb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677ccc77-2a73-4133-92f7-48121a0b94c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29938ba-848e-4327-a1d8-6cbf7c5b25cb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9435d1ac-e8f4-4fb5-9af8-9893ea2e9441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea191868-8978-4ac7-bf75-b21d4dd5ea0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711ddcf9-85d6-440c-9695-6e06c7b24816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62112cfe-d8cb-4f27-921e-b06b24d66524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeaded7-fdcd-490c-8ad5-7a0a32b08809",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e7c13c-7c51-4ee5-827f-a6833236a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae28431-0d45-4203-8daf-43d97a5d75aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966f115d-f00f-46c1-b651-b7a665cd3177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74c5fef-bafe-4057-9201-976a44001755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a39aa2-9f88-4ec0-8644-b5eaa2bf5711",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03824ae-46be-45b6-ae4e-3b5c066b7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6da007b-90d3-46bf-8e17-87cc579c4e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ad216a-d54d-4a9f-95ab-654c6e00cb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b68d81-7ccc-4b46-9f51-83dfa59a60d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b275d-aa54-4317-941c-90e475a9d0b2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe7e5af-a80b-4137-89ce-f9d0c7f36660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7321ad-c3ae-4107-9cd2-176de69fb160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5af2740-a27b-4db3-bdff-efd7e6e05c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3b78e4-37e4-4bd3-91bd-4009a44bc3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c55497-208a-4a6c-8cd7-15e0473be705",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be810bae-c68d-48fd-96c0-1012f73ab2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3784cf-e634-459d-89d8-9344175e1754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711323b0-71b0-42be-b2ec-876004fdd0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a04164d-311a-444b-a759-565480383c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c472ab43-fa91-43c8-8f62-5974e997cf62",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d12f56e-b843-4373-90f9-590f7fa1c47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de75bad-2343-47f6-9781-c7ffb373fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bebf2f-fe64-443e-942a-2b35ad8d2f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8e44da-509c-4880-aee6-a1bf5ab45363"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41bdef09-c574-4cae-9c57-04d0f9c1444f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8df0f715-05e5-403d-a248-f5f44c17b89a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbfa238-a63e-43e9-80d5-e478e8d658c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "607473bc-e812-4dd5-a6b8-1b8b69fb0b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d989ba0-886b-4aec-b372-73d892aa53cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b49b1674-dc07-4871-ae49-1cc2d73ca3a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7f5fe5d-ebc8-4219-97f9-e7049188ef79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af11165e-da66-4b3d-9b08-01bacee5593e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "486a9e3d-5f3e-4ee1-a194-b15fb36df808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9cbc7a3-e400-413d-97fd-00b2240e57fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e33a9bfe-4bfc-4507-ad72-b840cf4375f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e697c374-105c-4451-97a0-81313ede514c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d42bd2c9-4dc3-4c7c-88cc-c19108326124",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edb44162-7653-4870-8d38-f22392914c82"
            }
          }
        ]
      },
      {
        "id": "92e16262-ff67-41a6-adb0-f5b0dc951c81",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ce0c56e7-1cf1-4049-8eb4-f512387ac1f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b412d921-d43e-4b35-aecb-4d239809b68d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe66238e-2ca9-4a0e-8074-522573679b31",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c94e6c-912f-4222-9a71-8023a0e6a3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405018a4-d92d-4976-ae5e-da199fada4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50c7d41-76d2-499b-93e4-fbf20f72b0c4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a1dd8-b91c-42fb-9501-3672020308f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ce253-00a0-4612-940d-8cc92cddb53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a10f01f-dff7-4b3e-85c5-11c47de1f22e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aa339d-4c8d-4f64-8d69-1f1c0597c205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e7db1f-14ba-4bfe-a3df-d9ae85cd0841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9870e504-a9ed-42d3-a66e-08d5764eaee0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ac7269-89be-4fc8-991e-a7067bdfcb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ebad31-1228-4ac4-9910-544ad0aab3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0652e71-6347-477d-958f-0e81ce6358c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f6643-f47b-45a7-a1cc-93cecd9d1432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d5bcc7-4ffb-4f0a-ac59-0252c09ed48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec03fc5-8eb2-4980-83ce-6f34cc0b7f0d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cef5ab-b18a-4b9a-9087-c54825a5a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb9ee3c-f7fa-4b6a-95bc-ba18f082b152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff865cd7-fe46-480d-af50-246de12eb66c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114abc65-655a-4c7f-a08a-c878c520ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9aa6c57-e824-4909-9d7e-b44ed62e521c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8e76b-d82a-4841-9fe3-0472d2f6b824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c30349-0993-4a0d-b4ed-1831f43acdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ee6f6-922b-4317-bc6e-fee7617faed6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f5f9e9-be40-4b89-8975-0868242a34ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31aa474-f043-4858-bf60-6faac7856980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a943f89-802b-43d2-a554-dee5ec151b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3375c287-7edb-458b-bfc8-9c7c2b83b119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d2bd70-8833-452b-907b-7bb4f4a65536",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2839e7f-880a-4eee-8c05-0df6f716f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9684b65d-6931-4b4c-ba29-cb8328029fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f99e47-3bc6-4f44-bc08-a7fbb97f2108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278df0bc-5bda-4b7c-bd5f-00eb458c8d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba56819-5bce-46be-9357-897e052f8be0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b7c94b-b196-4ddd-bcf2-8e9c989e0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fba33d6-7590-4c41-a03c-2baebb73153d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90053b64-7871-4d09-a67a-91060aee3ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7624c17c-843c-4dca-87c3-18705c598cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaef215-ad69-4a4b-a425-f1b64496f862",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8c78d7-55f8-4172-b920-0e8753234ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f185ff-63ad-4320-9c39-2a97b537ecba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d6ca70-2aec-47ce-b617-b5886ebea7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474d4c77-f614-426c-a301-54407280fb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e66d79-1e99-4cb6-b76f-ea3ccbcf2da5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f62c4c5-31b2-45b9-a8c9-e2f14c37f500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a1ec65-8f72-4cdf-bb93-34f222be242d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90496e77-d9be-4eb8-b656-ae3f1a46091a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9d723-e064-463b-8f27-6f28db25d724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964d81b6-49da-465b-a80c-3359d2e17fb2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cdfe06-79a3-409a-862b-ac65536d96ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c810836-ff48-4755-8f1b-181bf9c65629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6d287-76bb-451e-b518-cb55e76e9732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afc194b-5304-499d-a096-212510ae7686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d42626-9099-4a15-a502-2a7028c3acd4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58941f6e-cb93-4351-9fab-70ad9de173b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dc9f25-a7d5-45c0-ac5a-facd1758f564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447fb89e-9f8f-4fa7-bea8-072979dbc207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22881188-696b-448d-99c1-2d18dfda58eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce387024-4a7a-476b-be12-24c6bfc4e17a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08bfaf5-e6ca-4af9-8cf8-e277e6719638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0754a9b1-7d4b-4164-b694-caac07ab9c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e525965-8af2-4dcc-9c33-9c32e302ba97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f1181b-35ef-4214-aebb-e2f2acee92d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefe6b98-801a-4f93-914c-852584833fbe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa98b0-bc5b-4efe-abf0-9bd88599b4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063bf55e-bc69-47e8-b9e3-e0670728b251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c3f6c4-a853-4b72-9135-f5d0307a5755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e66510-ebff-496d-ac83-349237d08f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf4d821-8c42-453d-9812-3ab2fda33ed1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00305d08-1e01-4ced-8b08-33a524ce58f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393004f8-7009-4f23-bdaa-c91127d9fc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe25cda-0ca6-4642-aef5-e2eba9e0196f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a49d33-3af1-4e5e-be3d-3fac29cae153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea412f3-4f71-46e1-bd2f-972120ce5e89",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae13048-53a6-49cf-a689-2d265c59dcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89349d81-7f33-4c41-bbcd-4852f3757930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d13a13b-1654-4b5f-9c15-2d83d0da06ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c58dab-39b4-49ac-9e05-fb36f91c0c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f9cc3b-ede8-4f42-ac1b-b947fd3e6411",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8caad8-ddd2-44d4-8875-3ed56974d57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681f6254-5f60-4c05-a010-ca9aa6e20081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c0e54-0121-4958-9ce1-72e614ea4062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe7675c-cf80-4346-b1d7-32f436bb3de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b91adaa-cab6-4643-945b-5285018ef91c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3378cae-53d0-46b8-9a01-2af2f9f08d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2124f54-8b20-4825-b36a-95ffae7290d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82172366-59ab-4ab4-a452-da164825df3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11813935-18d0-4047-aa3d-0f154893713b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1635a6-137f-4962-9f8c-01c0f53bf86c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6937fba8-63be-44c6-a783-ed562a768df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19f045e-ed88-42f4-b79d-cb4beb68c40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cab6eb-1d80-4e86-96da-602952965641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb01049c-f3b6-4cff-baf0-385424c55da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e939be66-d59a-44e5-9641-ecf7ec40f30e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fefc964-feca-4364-8b8f-3f7a36bce4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1868f1b4-5773-4933-83d4-f701d15e8436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3769e9-31f7-4f73-a135-8e11e411dce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bc766a-7600-4b83-bdbd-fa3bfb12774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a12d2eb-7f88-461c-ae85-84f2d5fe5eac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc61d73-47e4-4b6d-8b84-23e8583870e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed12f81e-bbf3-4b7a-8504-6e7d34b8d6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cfbd47-4caa-4917-921e-0322b663d891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ecc77b-6047-4784-b284-e8b7fd3f7286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d3344d-4395-4540-a89b-f9becede9bb4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586601b5-b8f1-4547-9127-5ee42bb4cc7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faeb5ab2-fdb9-4696-ad54-7798b845bad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56008862-04ee-4eb7-889e-c571be4cde1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6150d137-95bb-43b8-9460-bfb2cfc74b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592235e3-45fe-4910-9694-a6b803064ab0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91a8e2c-c71f-4489-9d4b-21bb5f09ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f7814f-1d1a-4d2a-9d03-e2a54fd49ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7b679a-20b2-4f46-88d9-1eec1155b2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f34951-b98c-407f-b5cf-522a9e12b8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f24eda4-c7fe-42b3-a589-81d5d2c6fd59",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6dbea5-5cb4-4f1e-ad02-cb96189ce436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eab6cff-3817-4bd8-8f97-faae4eaef9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6810782-fad2-4d32-b11a-56f7af20176d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606ac653-b5e0-40ad-b251-a3612a5cac2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6222c101-e5f9-46f3-98ec-12a66e28b4f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80412f7-a03f-4d16-aebc-37b3b5036b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449f014a-c265-4f15-9dab-6de757801ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037c723c-37f8-4d0a-927e-324d99c451c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99ba353-2edb-4d03-afbb-f0ec897b0f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd8df31-b962-4d62-8146-95962129e137",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa8c818-1351-483a-bf96-c7f68b7db922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d5a166-f86d-41af-aceb-a80fe8913218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6726bb15-a81a-4d20-89c5-b188519b7108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d92afaa-5f78-43af-b5d2-a537ebfc37ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53fa078-1e35-4497-94a3-7e103ff676b1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6676ad1-dc82-4425-888d-d614e287a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4c0411-9a2b-4c78-ba20-09e366b8f762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb333c9-dfae-4c25-9722-51429f4f8a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde5fa07-ec75-4eda-a326-7cba19afbd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b644cc99-68eb-4db1-b69e-24678196b3fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce8006b-1d2f-4ef3-adeb-071a76b44aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad19da6-29bd-4646-b6da-aadcebab407f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa1219-1dba-4999-852c-2850677e49f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a2247f-f6d4-4a03-a688-dc6c56806b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19235823-8dba-45b5-bd2a-f5c3ab51bbf1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07df406-7f6d-4e8b-9980-f30ee4d7bad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eba15cb-41c7-438a-b1d3-7d270ea0b69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d01a7e3-942f-48d1-8fcd-a31fb50b9a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d293fa3-9e39-46b5-b2c2-c19a6af982bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aecd415-e93d-432b-acc2-368b8b46d843",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0db82a-e7c4-43b2-a913-75810a3820bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844b6407-34b3-4040-8451-4980461c2e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7899a9-d0ce-43e3-8a33-5e895c9a1140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b630c1-db3f-404c-aa19-3b4837eaf4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb313927-95ef-4927-9306-cf0594378b2c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601afb3e-72ec-4ca6-8650-8059766a68cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f210fa-1f7b-4495-b842-acb846b4f8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff5453e-0283-49b2-b5e0-595ba2d67663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c62c31-4b62-4f3c-8084-8f7875d3c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd3d06-891f-4aed-9553-706bdf0a0a4b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7e6c11-49a4-43e3-8b1e-f544735474b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b800080e-a4d4-4597-80ab-9e5d3b7836fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b8c91-8ba7-4288-9ae5-9eb1645a6092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aaf8e7-dc91-4591-b2c4-469ffb209683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd613cd-6a1a-45d4-bba1-fee7f722330d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cde50b1-14ed-4955-bb21-9fa9280b4536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1d3666-5c64-4d33-b057-5269b4b3a3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c243e21-0440-4b41-9138-380ce8bb11af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88406e5-0ceb-4b3a-8562-acdfa2ffde5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ce1faa-96f1-4192-89e7-31d638c9a4c8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5bde9c-693a-48c9-8db6-646d18b5071a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54a3a34-9b8c-40d4-8882-449ccdda6296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d93165d-0d9b-41ee-9aaa-2f414e18e715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73821cdf-11ad-46d9-8965-60f62073e4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f39f575-2fe4-4530-8a6b-02578e60e655",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf982cd-ffae-4eb5-9849-f286cb4a41b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88977610-7cb1-4642-a5cd-65332a38dcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15abe628-7ef5-43e5-9b5d-9b3a6e60223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e04778-384f-4839-a3ae-cc06ed2ba1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f8e4d5-2122-407c-9afa-e83d8373d4bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae24858-1d0f-42b2-b7eb-aedf8e52c167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fce916-dc17-4f75-9cb9-4e0496ceaf88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9e0276-a6a5-4e5c-a8fa-add64ad91456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c6bb15-8e74-40c5-bd73-13e335a1bd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4cb149-d44f-4ac2-bacc-f2221a45b396",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcdce2d-14f1-4d96-a305-5307936c4d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9e68ef-639a-46ad-9153-190076201c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a929e7-bb06-4a6f-b587-a9c5cf5b757e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648b057c-1d6f-4e8b-b7aa-b75e3c7062db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf870bf-a438-457c-8209-3ad4c3cf9631",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6aff65-f56a-4ee5-9007-637d81eb44cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0311e3-fb41-4ebe-9282-970c4ad5cc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0282746-26ee-4cf7-9726-1d2663bf25c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2bfec5-6110-45bc-a863-21e2ce5aacdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf236be-a24a-48d1-a9b7-bf918648a5a6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1303f829-6933-496a-a86e-dd3beb440942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b919a6-65c2-4cd2-ae56-57121cd5af95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e6155-6f30-484a-a632-b4d326a69815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00f4f16-6dac-4756-ab36-3f55330a4b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ca548b-ec83-4583-9707-bfae71b218f7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac85c51b-6c30-4db1-999e-25eb901a45d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6b9270-5a53-4657-96de-0fca595f0c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef34137-1fb0-4a44-89f2-4778e3fe1a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8a3c80-2fa0-44fd-ac3f-e98da56aea50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68995e87-c848-4d07-a752-f5ef38116011",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e968e68-0919-47f1-96e3-eaec23b901e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fccd27-7a95-4988-8650-ffd3839ed227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f9c82-e19b-453f-a2f1-1f6a9c029d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fa7bcd-c24f-4f7d-8b4d-59e42223f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c87a13-0b7f-405b-bbf3-e0ad66d28063",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcf63d6-f111-4c19-a5a3-dda5d5e76abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc89910-b41a-4578-9480-0ad21fdad28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08a6528-8b36-4298-b515-e612710ef1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff9aad2-1662-497b-9370-1bf7944b9a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c8bc0f-54d5-42fd-8133-f63ceda67fa1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92cc860-f69c-467e-b0bd-714af58121c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4c5b26-8860-49f2-898c-7fc5658253b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75116bfa-148a-4188-be4b-ca432abd1f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb6429e-d7e6-4875-a3f5-b2edbeeb07e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd3b0ec-0cf6-4584-9f84-846e221eb241",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3071b386-a556-4f5e-bd82-e362e6301fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975fa580-6c6a-4197-bc00-e1014fe500e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904fdeff-2630-410d-96c8-0485b836cb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9b20d7-8cfa-4aa3-8ef3-9cb6d44684dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec637f8-d619-4b8d-9b7c-6d098996e6fe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05b62a-038e-4762-b172-d2d3f8576249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033d846a-8fae-48ad-8a65-f374cbd995eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aba1a7c-ee45-4924-8e71-4606f14dbe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41fe0be-f31c-4a94-a400-b8cb16de93c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3664a781-1b6c-49d2-81ff-7e5ecbb99398",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e50b0a-4ece-4cfd-9e08-b2670b29338f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b4eec2-2323-4b18-90b8-0a3d3e05f470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e2693-aba4-4961-b251-8b58c38b4fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc517242-0125-4c1d-ba82-9bc2271bee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20daf54f-f62a-4a8c-9244-bd41e7ef9703",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a15cc-dfd6-4887-8685-59d4bc59b45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c08b25-e708-470c-95b5-5c050485a7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f394d7f7-fbee-4165-bbec-c243b8e9906e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad446a5d-dff4-449c-93ca-b05a728a0dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2863d542-3217-4c82-a9cd-8e2e78604007",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5848ec11-2515-4079-bfea-82eb90f71470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bb046c-8787-4386-a424-0fbadff1a87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a879861-a019-43da-a821-6f96f5bbca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bba3c04-b721-4803-bdbc-c00393c589b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d55f8-aa05-4b2d-b90e-ce9add2328ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fe3274-330c-4dbc-b52d-6ae2a37dcb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0c67aa-62c7-4c07-b502-79769c27e0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098bfe76-fb53-44d9-99ed-c3b24396d632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bfa0d1-e465-497f-a1f8-da32ae6b5505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16400272-3627-4e91-9ab4-651a9bb80d29",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f027ca-4792-49d7-af08-8e85dbe8b23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702dff07-a768-4293-b11c-c9ca9b2c5f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950ef657-d6ce-4fbc-92f8-a5ab76e9fb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b519dc9-ac01-413d-99c0-ecbcf94e087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e70f78b-4603-4ebb-b1b8-853ac6bf2e73",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e826187c-3684-4a50-b437-5674b804e27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef883c9d-6e73-467c-9ec9-5679bc4f9f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8601bd-62be-4962-adc8-1bbf2b823866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc16dcab-e277-415c-9620-dff10ed01c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2b9986-74f7-4700-8dfa-725527d9e290",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f65816-5ed5-40a0-8175-fd14430f4d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554332c8-2dde-4b3a-984a-3e6b7888cc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d67d0b1-fa2c-4e51-8d22-b442e7732c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a443894-9266-46d3-8b0b-77be3f92a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cc180f-6d73-4722-bb40-1e6f139c6123",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4683d1a1-a181-4c28-ac47-475dcefaf14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109526ec-7276-4f9b-b942-b3cd61759613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d828081-56f5-4704-a66b-685cd2a12ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34f0f27-1903-425f-929e-affdbc58b562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4702406-a367-4312-8739-97b2484f62f5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc1fa27-9038-4b57-b22c-a922b85a9e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e46de56-18c1-4405-ad01-7c8923b493f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2905e0c1-a78b-47c2-b324-9c89923568bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09400d5-3afc-45f4-b965-157e8818eb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ad51e-168b-4e67-9457-94d981b2fdf5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbe51e-3f07-49e9-99c8-50fc694259d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff65afeb-9eb7-4d54-b317-6e3170e2392b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f321d846-832b-4153-af94-72d00bd973b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0773c0ef-1da3-454a-9a42-8f43c3ac6bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6deefe-d400-41b1-9993-48a6604771ed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29696375-1a2a-4fa2-9033-1f49bf99bda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c950df8b-7b97-42f4-be64-677cfe7431d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd8a4ef-fbb7-4657-b355-25d1630cb627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32676b5f-998f-4498-8a1d-ab3a1592afe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e25eaa-2210-4aeb-8d10-432a9021a081",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed2fabd-3a99-4d70-9081-09b3be5094f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31519dc1-e1ab-4c87-9988-118611601aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4eabb6-b60a-4e3e-be45-40c8d9930d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9bf7d8-6c77-4e9a-9eae-806bec3e4d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e289378-bb0b-4723-b284-eac5a3e95bea",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c1d11e-92e5-4c8a-a47d-89895c08442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d4e1d8-228c-4054-a055-65aeb2828844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdcde64-aca9-4a05-b1ec-98b06259fe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12b2b64-a547-4b55-a535-8bd3f8381ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a76ba7f-73ef-4218-9fb7-fba0c5ac6e79",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d08ebe6-8ba4-4c52-9970-d8b3f38f546a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b913b5-1c73-4a72-8cef-e20c9038bb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af923548-f4cf-46a3-aeca-719e96c43858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece760d9-bc48-480d-ac88-5aff955568cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca174a0-3a68-4932-a70a-375caf1010e7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239f3b51-53c4-49aa-8b8b-c969998a44fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6626e3-3baf-4ce2-88e7-aafc5663980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfebb85-e6a2-4993-b2c0-74033db17e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c7abd5-2cd9-4af9-bdcd-218b0bda1a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e501043-e47d-44d6-9aa6-7fa2b219c583",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f434c4fd-5e02-4763-963c-969423312dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9524234-02b1-481f-a36f-c49f643ac998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf717a52-4b8c-4950-8cce-528c7c0a9645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71be3e1d-7426-4513-afba-164c39ae7718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a54b8ef-5708-445e-b49c-98180e97841c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d12661e-2ebc-4976-90d0-85cdf15ec991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a9736a-7ec8-4ac8-9eb5-17d232ba0845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26641a25-32fe-454f-9f9e-1c68c23c2d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105baba0-c82e-417e-a7b8-302a95c9f44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a56fd0d-e36f-4a81-9c72-4472524dc103",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59716230-e6d4-40a5-a1e2-816f9d1fc243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c7045d5-444a-4989-b9e8-24c045b8afee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829fb8e4-338f-498c-9e0f-9fb9b70a88bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8912d795-c90c-4435-bba5-7ba4a97e3f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc32272-7204-4ea8-a041-2c9a1c3e351e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e83cbf-eae4-425a-a797-a861b18ff0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3f9d07-da7c-4b40-a592-82d33ffc0a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0523c46b-237d-4fc1-92cd-fbcdb01fde98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c3d37d-8f84-48e1-9993-ef71a8d6ab5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3092ed12-3524-49fd-bf68-968b992d3b37",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f7da1-6e8b-4f38-b269-c60295729e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d69101-6894-4386-9467-7784c2a02258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d96a99-5cd3-42b9-adb6-a2a4e0f1792c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e16bd8-2c95-4629-ac63-d797b6262768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d0dde7-75bb-4191-b4c1-12207822c1cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3533371-8136-40e3-9ef3-1d95bcc956eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5cb65d-f77f-4674-838b-6f813137b0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4000f70-3f2d-40da-99c2-ca42db4d0a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb443776-073c-42cd-a77b-1e34117280a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e5c85-1883-41b6-9227-452106c6b273",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c0a396-3927-49a5-b0d8-9593669d7705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744da159-51e6-4c20-8931-c967d283d380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23a9387-266f-4f78-808f-2714986766bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a9e4e0-3d04-41c3-8d5d-a46f44203d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a173cb8a-42ff-47f1-af92-66b75789f1dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ef2039-a379-420d-b391-dfb2d06f49a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12072598-7a3a-43bf-a472-6a2fad42f310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d2ef3-99a4-41ae-acff-ee5d0a511c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b381324d-aebc-4bed-8553-263f0d0dd00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16d15ea-0d1c-4d60-b00f-9e22b14098d9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff3c370-52de-4d6f-8fe7-c647eb6f8f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e9264d-5bfc-4e72-a140-ff197d5b6d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e4450a-7344-4a0a-8dc4-09282ce3ed43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820eb38d-1974-4e15-9881-0285c8c3852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3437e2-906e-43ed-a722-49b89e52316b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ff83b9-d6e0-49dc-8d58-d8a64a7b318c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f445388e-fedf-4c39-a503-3196d8a60c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f2c1fa-90d1-40a2-bf82-2c51a93c05bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba2ce1e-a361-484d-8ed9-0feadd1b1a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dd82b3-331b-4caa-b500-1d5feeab09d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b4651c-5585-4d75-9eac-215c3addf213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d955d953-b140-4923-a40e-c67209740691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9616d3-dbb8-4bab-9ba5-5c6952cc069e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb44efd-efe1-4287-ae05-11cb2ced836e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d8196b-bd1d-4bfc-a322-ff48cd7f5154",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd938b7f-7ed8-4efe-9f33-e925cf1818c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd5da26-1e06-44ae-9258-c1d2a97633dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630d27a1-6d26-4d2f-af70-ea188eae3f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63618c36-6829-40b1-b235-85cc7b891c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd228630-5168-4509-958e-fc99168607d3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ea7519-d6ab-49bd-8ec7-bfe4424e3166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9856ba-2f38-4b54-b983-6485e5472a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3c4010-688b-4dfa-be89-e66cad0bae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929eacf-e660-43c9-82b2-02cc1ca27934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cd480e-8571-4c15-b4f4-eccd2f529d34",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8a004e-eab4-4603-a236-d0b9e4d3c786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a2239e5-c5d9-4209-bf60-1afb505aef11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf95fd9b-c0fb-4652-aac8-4f375dbcc44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bdb6c4-ccf9-459f-9b66-edf14fd3185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a45dde3-dac6-43da-8326-f294f76875da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128e2d6-bebc-49dc-998a-4fc295573481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32f206c-055f-484d-8092-92d30c400588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4962ab-c32f-4541-9252-a6a62106e5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7bb09f-d437-4a21-8b02-7f70044c98b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2598360a-a49e-4f90-b02e-89e62e26c568",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44bd2eb-7590-4ffc-b27e-2cddb90cda91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e87ad59-f3ee-4ac1-96d0-a19860b52340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e699fd-76d9-47ec-9a5b-26ea0d4f1a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3094f08-4ddd-43da-9e5f-226ce3e1de54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c63eaf-9ecd-4fc7-93c9-b873037eb3b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb2cbe2-73e5-490f-8d11-57c69d5b8826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "637a32ee-312e-495b-a552-5143b4aa5474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d155d05-d23a-4da4-a4d8-687c83dc5faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d991ff-3211-4b61-aac5-efebde2e85cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107dabfc-955e-42b8-8811-c87e275a388d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e65c986-565a-4711-8929-3e238629b0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937e691f-a790-4a51-aa16-e7c1ccf9a7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ba1e72-eb86-43a5-99a2-4060d21c915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc1c25e-dbd0-4728-a959-6c9b00bc0f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae1914-5fee-45a2-9610-7946c01ffb76",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb6701f-5adf-47dd-aa40-023a8a4ab710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc31e365-e476-4710-bad0-c14369320c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc1f16-7cb5-4d29-963b-04a1139ed8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6b69c9-c37a-41ff-8aa1-a4e579b2e599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cfc0ac-b44b-455b-b2aa-6d4d5eda84a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1e5100-882c-4195-a12c-9a38a7dc53e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e7197a-b24b-4f9d-9d7b-2d10532eba74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30594d9e-7127-484f-bedc-7eb69c670ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae82890c-5755-4fde-9b47-154403f65b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d6e66e-e9cc-4a23-ade1-ca8a974fbf79",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728120bf-94e2-423f-9e5d-0cb6ddec908b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16ed423-066f-4c73-aad7-86f7c92cc8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e5efea-ced7-4418-86b1-fc0e8b8b72c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2ab94e-83b6-4e16-99a6-6fc3d296833e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7b689f-de95-4ae7-aa9c-9e7c54c54e38",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649b459a-f4d4-4dc5-8c57-c1a328d99a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd065ea1-4ae5-477d-9ba5-b88848330d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1480069b-c4da-4937-9ad4-449184e94911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f3afa1-0a0c-46c2-8e46-06d145810314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccb0d40-2b36-4ddb-a24c-df7281358a9f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1814058-292b-4e5f-bc1b-de6a6700337b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9098b2c2-b8fb-4e44-8aad-fd9dc22610c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612c3b26-a8ee-42df-920e-c5d1f5e68b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80781c2e-5928-4913-846f-ed5412ab4956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6414c238-3926-4ea6-b755-3aef5a4f1fd7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b847a8b9-79cb-4680-bfcb-6ba2aeed0b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a045ef-da48-4746-b6d8-ad83d2bab218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772c012f-af64-4a3c-8202-ecf25f13845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe255640-d2d0-4b59-ba64-b8704e310cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90d8216-5558-4e72-b46c-e88485a151ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182fd20f-1b16-4aa7-a7d2-fd06f3030265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f82bba-2a5b-4fa6-9dd6-c546ba7b83dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb49a36-07b6-462a-9d43-b1836b28d2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb3dd78-e0bc-48bc-b00f-dc76bbb44b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e926da8e-ea14-4c43-b535-9ce3a29e313c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4b84b5-53d6-4e82-8802-f68c4d21877c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9238e2d2-3692-46cd-91b9-ab8d036c6329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b6e4ee-082b-4176-8714-e5807e002f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d67ca1f-b941-4e3b-868c-4ab06675c8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb293f0-f99e-4794-8118-69c554c8ffbd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feac9de-b452-4687-972c-ac46f455225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b88bc7-727f-44f3-a64f-f717c9fb0bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe027ed-fd30-4570-a072-df9ce0b95534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb54340-6b4f-4ac1-a6a3-4a087f7bb6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a125fa5-100e-4652-970a-6c3dbaea09c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92dc67b-f23f-4215-8d66-18b392d399c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62328533-5d58-4fe4-856d-a06019578b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f3947e-3d26-4980-a4e3-0ef0768269a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3decf56-0c62-49e7-a99c-b1d40764a5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5128bb3-b2f8-4951-9af6-326d07550744",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614eb3a5-23af-4060-914d-2dd0066abb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82006086-e85d-40a5-9264-2ff9b2285d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297180bb-2f09-4dbe-89b9-207ad6c4710c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40254154-bc6f-4e9a-9f66-806299ea80f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea26cb1-c09b-42ad-8cff-b91abb470f09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0cac12-5415-4bec-a77a-87e5eb705a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7b6ab0-277d-47f7-b5a1-85a04050fc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebb8e6a-0fff-4859-87fa-c981ed759496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1b9842-131a-4a21-a518-e63e4ad98d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d97a28-4e34-4d37-950e-0c839705de97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7870ac2-dee1-4927-9fd8-15b37f9c0b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b56a06-72bb-439a-a9d7-426d08867a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695982ba-f150-4801-b4c4-adcee4d06d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b088fe5e-e0a2-43b0-a10b-1f1126dcdc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142ea2c1-2f29-47a0-93f0-7fdff2b5b6e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f881a53-ad4d-4a1e-8030-c35cc25efbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f842ec-8adc-404e-bc35-cef86b5dd3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce543770-a54c-46f4-92e4-c24deb710730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed311bce-493f-4638-afb9-560c68c4d39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e1aff5-0256-47c8-8e34-ef19d93f1f41",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a39012-707d-406b-a6c2-352db8815745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bed372-2e03-47ca-b119-9e666ff3459a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaae13be-d449-4394-a90d-1fcbe7193209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b341b77d-d341-4482-a110-74e7d45288ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af1410a-82a1-4723-a10e-6d15da32acbb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8728f90c-3d6c-4075-b061-441e198d7918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad2d44d-1c79-4136-9ade-b1b1be98ccc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f98af85-fe76-4a70-8e53-ad3de26fc7e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b683779c-08f1-418f-883e-73c7887a3493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880607bb-6dae-4faf-8c06-c03d85aec3fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c90ea2-7a05-43ca-908c-b705a744c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc74ef57-9252-47be-a773-11c2b7ee8c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e9cfac-b919-4eb1-a10e-30afbd54edf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398e2176-e9f2-4a5d-83fa-43691d2307d9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e5df91d-f810-45ef-b93c-a7e814def64b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41d4f4b4-5c37-4084-8bb5-73a54fe4c677"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a739fe81-3d2c-4098-84da-cf580295feea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11a1f580-e7a7-4393-b59d-64e8a60ca46e"
                    }
                  }
                ]
              },
              {
                "id": "32f53648-c623-43a9-815e-7d489ac7b13f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5da08414-cf0c-4951-a549-8c68c9846e62",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c97c1-e31b-4a4e-8477-f1be56ce0553",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4b06be3f-eb28-433d-be9e-96f7d950bd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fda41b-c463-41a5-a339-1444669ecdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c41c7fbd-29d8-439f-bad1-a8e3d77a3e1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935e5652-3773-4034-89b9-2bd9766a5f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835dcf7b-a8bb-466e-8ee7-3bf1a2778b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a576ec18-ef8f-4bd9-b49d-59893ccda306",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b798e19b-b463-43b5-a4b8-1e13ac725f76"
                    }
                  }
                ]
              },
              {
                "id": "8c34b2f2-3b5e-4867-9540-76d34febf20f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4349d33b-14e3-45ab-a65e-5e9f000c02e6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceaf11d-e67d-459e-a20f-51940a371429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2b94d753-5a6a-4892-bc80-6e080feb48b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a56ca-6000-4daf-b3e1-15fbc05c6398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f30d9b6-5466-4d33-b0e9-e0e8a58a027a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6354c572-6278-4273-ae5f-84cc77f857cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb15b02b-decd-430b-a8a2-91172e1538fc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a18c4a-9871-44fd-bfed-dfe223591f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7fd160de-13fd-4fda-bffe-0b8eba11c6eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0f35b09-75a0-42f8-977d-1468675957fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144a3b7d-108c-4f1c-81f9-51867f53acb6"
                    }
                  }
                ]
              },
              {
                "id": "334b82ab-21de-481a-89e4-fc3c50c507ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a868b45-d6b6-42e5-b0ca-f4b1e0e97195",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26773aee-3e17-4e3b-b7fa-fc7f90d8f001"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "361bbe31-4034-4747-824a-322f0996ad56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b565ad42-54b2-4ce4-ba21-a915cd952eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "858384fe-129b-41ed-92cc-aa0575fabbed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9d516ef1-efb6-47d8-a5db-0c925bf90cd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c39b6b0a-787a-4041-a12c-442f3875b0fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20861a0d-7ca9-4735-aa88-728e48b5e0cc"
            }
          }
        ]
      },
      {
        "id": "e73b5c62-5e09-4059-86c3-27a82a698f30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a2d19269-3f61-4e6c-8bd8-30669c549b76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f439afb-86a3-4d49-9d2e-779ceeef3677",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17c968cb-da84-4010-a063-b3b5b4876a6d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bc22ec-ca08-49c9-ac97-0af9709720f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b84be96f-5340-43f9-9baf-9c906bbd699c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e87d71-dc6b-4fa3-b66f-c00bb017e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d525ac7-c4df-4260-99e8-7113276b4423"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfefaa82-9d62-4a3b-8192-719af701907e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9dc2c2e-8bc2-4d32-b7f0-239ba32f878e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00dbd49b-d314-4201-986c-96bb85c3bbd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec0da3c0-1bad-460c-82a3-f6e4905c7935"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a22baf9a-8270-4f9d-a3b4-c0c8d9eb0a7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5a7827ac-5142-40f9-be01-5049dd84b4f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70d322b9-3381-4874-9f71-aafee7a40b4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3987f22d-a7bc-4396-9665-1f972b336629"
            }
          }
        ]
      },
      {
        "id": "436b70a1-e13b-476b-8d76-1c67783c9812",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "95406410-fc0b-451f-a0b4-781f693cb8d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17087185-d25a-4e63-88b6-414432ed3ce5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6afb70ea-1980-4c3b-95ac-15a117efd268",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbab78e-b6d3-4cc9-9b96-31e0418ae1d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f60c7af-f6a6-42d5-bbe0-fb4d36fcfa23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6c9fc0-60ea-40f9-9089-8e5c65a0be07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6e2e41e-8afa-4e83-818d-eca29a43d9b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f979a965-5789-4350-a5ac-da9cce9984f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24156d9e-d2ae-4393-9207-cd461c86e40c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54bf99b-a794-41da-ba18-af9f5f5884dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f67d562-5674-4292-a473-56109b9573f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24dbe787-2baa-44b8-bb8c-fff1d977eb4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64221a81-fb39-4079-a319-f2d49fe72b55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d935b9-8b54-40c2-8ce3-17fe1525b4e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "121d04cc-52dd-4a4e-9c1d-25744d8e166b"
            }
          }
        ]
      },
      {
        "id": "8d2e0d57-7f21-483b-a474-6bbbc462638d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c6ad3fb5-6f84-478f-a0b9-3aef4bdd96bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0594dc85-22f6-49a8-a5f5-da66b9c8e77c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aea09654-096a-439e-a06e-e4b9484595bc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b752a80-aec4-4662-9f02-462fa4ff4231",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65773c2b-951b-4405-b98f-c1183aa75b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6d5d3e-20fa-4493-84f3-e835fcff9308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34e6eaa2-0db2-442f-b3e9-1e11474ac310"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bdc0c6b-7a8f-4788-9fda-4fb39e82ac73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e8eead-8d92-4999-9505-be58ee6d1119"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b017d22-000a-415e-a7ab-4feaefa68b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a85adde7-0bef-4a9e-81ed-8494af257d80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "135ee8d8-6d8c-4e65-a1d6-ac12d56d3514",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "704d18e6-70d9-46ef-a79e-fe1a3cbcafc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d27b2f4-20d1-4afa-919a-b46994d0ff9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43bfb402-c069-41d6-929e-62d518812f8d"
            }
          }
        ]
      },
      {
        "id": "aae85838-dbf2-45a5-951c-8a82319c9a19",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa180a9c-94e8-4ee1-9df4-dd8b1170694d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbee1271-b5e8-4c52-8fc9-606625d37501",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0c00ab50-7b14-4910-b715-c61528c1768d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5283d12e-cbfe-4ab8-a99d-3a8157e1c231",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6486fc5-6938-497e-aff3-5ff4b1c42fb8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 160.6468253968255,
      "responseMin": 20,
      "responseMax": 11554,
      "responseSd": 792.2870240274688,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716856626308,
      "completed": 1716856674949
    },
    "executions": [
      {
        "id": "24d60cf4-3a6f-4b3c-b1ad-754b13637f5c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1a53f0f3-7729-40aa-aa7c-b6d97a1c5f80",
          "httpRequestId": "351f0eb9-2536-49b5-8a62-c42d98dbadc2"
        },
        "item": {
          "id": "24d60cf4-3a6f-4b3c-b1ad-754b13637f5c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "796766aa-e78e-4ba5-a475-ddc83e54bdce",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "37998186-b31c-4da8-9aca-c51f191c3931",
        "cursor": {
          "ref": "8d6bd9b1-24fa-476d-ab3d-b6ef8c91ea3f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b2e14a54-5dde-49dc-a746-1b674ce4547e"
        },
        "item": {
          "id": "37998186-b31c-4da8-9aca-c51f191c3931",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2f1b0708-6592-46cf-a553-a212027f6726",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "de72f035-a4c3-4aaa-b398-eecec58de5e8",
        "cursor": {
          "ref": "a7ec6d29-7153-4978-90fc-1f7c27804a06",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "34907752-908b-4929-85d2-5656f4123544"
        },
        "item": {
          "id": "de72f035-a4c3-4aaa-b398-eecec58de5e8",
          "name": "did_json"
        },
        "response": {
          "id": "c07fd7fb-44e7-4cb7-bc78-069a5b928b0c",
          "status": "OK",
          "code": 200,
          "responseTime": 366,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fa684a-1517-4a0d-9552-edb16d18e117",
        "cursor": {
          "ref": "9ed9767c-f684-4cf6-93bd-f7034a1af45e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5228891-28c4-40da-af59-a5ca265e2e28"
        },
        "item": {
          "id": "19fa684a-1517-4a0d-9552-edb16d18e117",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7401cba-4c19-4ff6-96d5-3fa24d68f681",
          "status": "Not Found",
          "code": 404,
          "responseTime": 591,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fa684a-1517-4a0d-9552-edb16d18e117",
        "cursor": {
          "ref": "9ed9767c-f684-4cf6-93bd-f7034a1af45e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5228891-28c4-40da-af59-a5ca265e2e28"
        },
        "item": {
          "id": "19fa684a-1517-4a0d-9552-edb16d18e117",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7401cba-4c19-4ff6-96d5-3fa24d68f681",
          "status": "Not Found",
          "code": 404,
          "responseTime": 591,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facbbe96-5454-4364-99fd-faef909a95a6",
        "cursor": {
          "ref": "f27957e7-2091-43b8-bc59-3bb350745be7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a8fac826-0d84-4802-be10-099ce96ef039"
        },
        "item": {
          "id": "facbbe96-5454-4364-99fd-faef909a95a6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f7ca998-face-451e-97e0-c766fa5c6bf4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3704b7a-f4e8-4162-b5ec-75cd40cb1e28",
        "cursor": {
          "ref": "51162c09-0080-40c8-81f9-cd61260e56dc",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f20025ac-dd14-4229-86e5-e6fe8658fa83"
        },
        "item": {
          "id": "d3704b7a-f4e8-4162-b5ec-75cd40cb1e28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b75ad611-c181-4cbd-9799-5760dd9c5371",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dcc32f-337f-4150-b58b-2f385a796448",
        "cursor": {
          "ref": "136b8324-2c1c-45ce-b14a-33189953c84e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c0398a64-5b86-4c21-9cc6-99eac6accda5"
        },
        "item": {
          "id": "17dcc32f-337f-4150-b58b-2f385a796448",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "08ab5943-c59a-4bde-924d-0d1367942bd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb17dd5-dfa2-4e70-a64f-e13e36794daa",
        "cursor": {
          "ref": "b7ebc5bb-a4ad-4e62-8156-701a68051acf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a74fe64c-595d-407d-9d37-6aab899f1a5d"
        },
        "item": {
          "id": "acb17dd5-dfa2-4e70-a64f-e13e36794daa",
          "name": "identifiers"
        },
        "response": {
          "id": "93e933dc-e04d-416c-94c0-c7bf5533ce90",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115eca29-e726-41a4-bebe-e6fe605d3983",
        "cursor": {
          "ref": "15b90287-5d13-49e4-8b20-7e531744ac3e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8050ed45-9b74-40e7-901b-01f49496f3a7"
        },
        "item": {
          "id": "115eca29-e726-41a4-bebe-e6fe605d3983",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "48974cae-820a-4067-9273-2e3f322243f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db1d5a-5bec-4290-9dc0-c867148a8ab2",
        "cursor": {
          "ref": "ff5bcb84-c333-4bc2-961e-b76dcfcbfe7f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aa4dcee2-780e-487d-8e8a-a7cce8fcfe7d"
        },
        "item": {
          "id": "75db1d5a-5bec-4290-9dc0-c867148a8ab2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "28b405c8-00a8-464f-b0f5-8e52a83dd1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60a276-6fa5-4118-af88-188e5aca31eb",
        "cursor": {
          "ref": "ff7b8c1d-8390-4721-ac1d-c87cd41db3dc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e60eec83-98d3-435f-ba45-a9bd6f4cf27c"
        },
        "item": {
          "id": "4d60a276-6fa5-4118-af88-188e5aca31eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b0179686-87d0-4e76-bc0f-0e94adae909e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42589ad9-73f8-4813-b41c-43863e206e98",
        "cursor": {
          "ref": "ffdb522b-9d60-4d22-a6c5-a759493787b8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "22dd5ce4-044d-4b25-b13f-fcc2152d08d9"
        },
        "item": {
          "id": "42589ad9-73f8-4813-b41c-43863e206e98",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "29b83fb4-89f2-46fd-b04c-0a1ab563624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97e624b-04ce-46ed-b05f-9244f87567f4",
        "cursor": {
          "ref": "6571bdf3-2678-4ec8-b020-187031ba55b9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "deb2d594-b6b2-4790-b51c-a19b2175307c"
        },
        "item": {
          "id": "e97e624b-04ce-46ed-b05f-9244f87567f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "afaf7b7c-8331-4927-aed7-c30f947b4297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad9262-84d5-4028-8f9e-d96a0946b4ab",
        "cursor": {
          "ref": "a65256d1-2df8-4a4d-a282-8dd0ecf882c8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d18d26ec-9352-429b-ba31-f15ba4209e69"
        },
        "item": {
          "id": "47ad9262-84d5-4028-8f9e-d96a0946b4ab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f7136112-11a9-4844-862a-cc74f9ba3411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f671f-1e2b-4a36-b83c-4d915fcd9d80",
        "cursor": {
          "ref": "59cd283a-fd6b-484a-ac6f-d0240b89487f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ddfa7f23-af76-44fc-9951-9976d5e035ef"
        },
        "item": {
          "id": "868f671f-1e2b-4a36-b83c-4d915fcd9d80",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eea19e54-2840-43b7-9900-62aee2aed261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4664c066-3572-4d49-a9e5-0e7d45e93861",
        "cursor": {
          "ref": "b09208bf-ede9-486a-9aaa-bd0f0dcaad4a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "63d5cbe7-1390-4d8b-a21a-832cc2b26e00"
        },
        "item": {
          "id": "4664c066-3572-4d49-a9e5-0e7d45e93861",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bcc263bb-4bc0-479a-b779-e0a130deb839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c38939-377e-4725-a0c0-24f5c29831d2",
        "cursor": {
          "ref": "9fc0867a-f39c-4cee-9b62-a326328cf443",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b63cc39b-1a76-42df-a8d9-0f9cc2074b65"
        },
        "item": {
          "id": "c2c38939-377e-4725-a0c0-24f5c29831d2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6b018eab-7541-4c4a-ba7e-abbc936478aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2083b0df-faf2-4313-8850-bdeeba56f5f7",
        "cursor": {
          "ref": "1dd204d8-8dcd-49be-897c-45f5b85d6bda",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "85ace51d-6ba3-479e-b55e-82b6ef5eb1cc"
        },
        "item": {
          "id": "2083b0df-faf2-4313-8850-bdeeba56f5f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c15c84c9-0fda-46cf-9116-047f9f5cd2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0070f8ee-e2a3-4494-9564-2afb1c55bc2d",
        "cursor": {
          "ref": "afa650c6-1ecb-49a7-8b09-da6c898285cf",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "abe3d395-69e1-425e-8f2c-7d9d475501b1"
        },
        "item": {
          "id": "0070f8ee-e2a3-4494-9564-2afb1c55bc2d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5cf33e07-af19-4c89-9db1-32b7b61293e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8843445e-b8cc-45f0-a26d-17670f8b79eb",
        "cursor": {
          "ref": "9b3e04c4-95e9-416c-bac5-bcd64db28ee8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "58358d94-1c83-43ed-95cb-ad043459280e"
        },
        "item": {
          "id": "8843445e-b8cc-45f0-a26d-17670f8b79eb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "537a9cdf-919a-4c9e-83b7-f3854a74cf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad62f60-bfe1-47fe-86a6-075c21a16e8c",
        "cursor": {
          "ref": "9c8c0c6e-9f9b-46c4-9ea3-32219a00fe6e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "23661703-a8a7-4457-ad35-ccdb3d78ba85"
        },
        "item": {
          "id": "4ad62f60-bfe1-47fe-86a6-075c21a16e8c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "64d47a1e-5dd5-49d1-931d-78b01bc87eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d29f70-1778-412b-b49d-91021440ff50",
        "cursor": {
          "ref": "1414995a-da2a-4a95-bd86-000c85977b1f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5702ec94-7b5f-47b1-b716-4791c254f1c8"
        },
        "item": {
          "id": "b2d29f70-1778-412b-b49d-91021440ff50",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3bfb2f5e-6223-4f1b-9df6-0f5af5f57fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5594ddb-5481-4986-831c-0d43c993cf63",
        "cursor": {
          "ref": "77f6f226-681c-4838-ac6b-b5084ebf7061",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42aaaa43-e231-40b7-aba9-53098945b9a2"
        },
        "item": {
          "id": "e5594ddb-5481-4986-831c-0d43c993cf63",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9bf16aad-598b-4236-975f-fd0a8864876a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df65972-b99c-4cdb-aac7-023bc67fcd85",
        "cursor": {
          "ref": "70ba26a3-c225-4299-a989-305f4ae53950",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4cfb8e51-8a02-43d4-993f-5bc8559e5b39"
        },
        "item": {
          "id": "3df65972-b99c-4cdb-aac7-023bc67fcd85",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "82ba73a9-419a-4867-9fdd-61b4e0adfd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e279a178-7c7f-425b-b765-8739879a4209",
        "cursor": {
          "ref": "1b34f8c9-aa03-47ff-a24f-f6ba8cadef39",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "de6bf0b6-2560-4ab8-b60d-47402a784d0d"
        },
        "item": {
          "id": "e279a178-7c7f-425b-b765-8739879a4209",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5238690-3430-4e64-a201-014939d4364d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9762bc-f76e-4bc5-8c40-c8d3194b2184",
        "cursor": {
          "ref": "75161215-64c4-478d-95f7-5da7820008e9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "37e1afff-6687-4e13-8706-466a94b7c56d"
        },
        "item": {
          "id": "0f9762bc-f76e-4bc5-8c40-c8d3194b2184",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a359820c-b335-497d-baaa-35ce0450eb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f4dfdb-4a77-4909-b2e1-71f97bb2ebc9",
        "cursor": {
          "ref": "70dbf045-55ed-4d1f-b4f1-91235b5ee5de",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d2b1cc93-d6e6-4d9b-8ad2-8e691e36d601"
        },
        "item": {
          "id": "b4f4dfdb-4a77-4909-b2e1-71f97bb2ebc9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aae3864a-a278-4764-889e-367cadb300a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a4d8f-62d2-44f7-bcc3-f7e7f0623cc4",
        "cursor": {
          "ref": "6e694644-7e12-4bcd-b72f-80f1ac512220",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c92ab427-9035-4a0a-b038-c04dc0781060"
        },
        "item": {
          "id": "5d2a4d8f-62d2-44f7-bcc3-f7e7f0623cc4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ae8bebc2-be44-4242-b555-213c6109b930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f7cab2-2b0d-4593-918d-a7c2b6d97033",
        "cursor": {
          "ref": "6796a04c-08fb-45b2-a074-da1c0cdac055",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60ce916e-f8fc-48e8-8a96-fbed3620ae3f"
        },
        "item": {
          "id": "d0f7cab2-2b0d-4593-918d-a7c2b6d97033",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "52ad6cdc-7574-4bd0-8db2-593e8e671797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2851ce55-ed8d-4ae2-9c65-41fa46b5862f",
        "cursor": {
          "ref": "88966bd9-41a1-44e9-b3d5-14bedd823dbf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a1e5f84e-839c-4222-b206-374452f288d5"
        },
        "item": {
          "id": "2851ce55-ed8d-4ae2-9c65-41fa46b5862f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8bb2dfaa-8c74-4842-8b8f-e779ae83c79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c359fc8-f7a8-4518-bb9a-41db0f1ebdc9",
        "cursor": {
          "ref": "f7b635ed-9699-42d7-a832-dbba762f8083",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7a19423-3bea-45f6-8387-8c9362bb7a77"
        },
        "item": {
          "id": "5c359fc8-f7a8-4518-bb9a-41db0f1ebdc9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e6048800-cbe8-4abd-833d-cbbb49f1f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15931f03-8a83-4f17-bd81-1311c853339e",
        "cursor": {
          "ref": "e3602759-684b-49b1-a988-4a714fe00100",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f152f454-49b9-4d24-bf26-70bb65331a84"
        },
        "item": {
          "id": "15931f03-8a83-4f17-bd81-1311c853339e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "46623b0b-762f-468b-9c80-4b97bc7ea556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7633e1b-d1c4-44ee-81d8-884676280f4b",
        "cursor": {
          "ref": "46152443-ee8b-4753-b26b-ce263a52c6d5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6c4685fa-15b1-46b4-952e-8608ac71b1a1"
        },
        "item": {
          "id": "a7633e1b-d1c4-44ee-81d8-884676280f4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2f47a846-6fe2-4959-9000-3f9245280f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4032af-98cd-4af9-800d-59fd7b424276",
        "cursor": {
          "ref": "15f60572-93c9-4907-9296-ec1d0b32669f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "66bf808b-219a-42e7-b684-340cbb7d8315"
        },
        "item": {
          "id": "ec4032af-98cd-4af9-800d-59fd7b424276",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1b40b10-1549-41c6-8ba4-0ba50cd72787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e8f871-b247-40ac-aa39-8c42f01edef0",
        "cursor": {
          "ref": "c14f4479-5e7a-432a-8e4a-4436587d6a9d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f61892b3-0087-4470-922b-b4f11f01d578"
        },
        "item": {
          "id": "75e8f871-b247-40ac-aa39-8c42f01edef0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2dc12a6d-6b48-4383-a358-07b8406e7283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99cac8-f82f-42c6-a8a8-745559f16e15",
        "cursor": {
          "ref": "9cbc50fb-04c7-4e12-8504-146c7b534546",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b7c528bf-c12d-4114-b285-1eb1ea38764e"
        },
        "item": {
          "id": "9b99cac8-f82f-42c6-a8a8-745559f16e15",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ef117fc8-c546-4d44-9b6e-a8e99d2ed197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b6098-91c8-4ffd-ab4f-9494d14baf59",
        "cursor": {
          "ref": "31a86e64-9999-4c36-b6a8-0646fc383993",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd7c2285-228f-4a37-92a5-e7fa30fd25ab"
        },
        "item": {
          "id": "bf5b6098-91c8-4ffd-ab4f-9494d14baf59",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e40c3f76-35d0-473b-9f98-2de210c56534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33286841-ca7f-4eda-8a6a-58ee80a8b4aa",
        "cursor": {
          "ref": "48f5b932-6f0c-4670-ba06-ac8b0a74ed56",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "60fc1319-0407-4331-87ff-b1911d0d89d1"
        },
        "item": {
          "id": "33286841-ca7f-4eda-8a6a-58ee80a8b4aa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "12bc5450-3c6b-488f-a398-2ee14148c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01cae84-97fe-44d7-b236-3cd24a6dac63",
        "cursor": {
          "ref": "ced9cbcb-c206-40de-9fe1-b5f263964b3d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c8a69a3c-d760-4f69-b6f2-bdc119f5720a"
        },
        "item": {
          "id": "f01cae84-97fe-44d7-b236-3cd24a6dac63",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "47b15742-2887-45b0-a2df-9a0e203c9e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9669e631-4542-420b-a635-3fdbe1734244",
        "cursor": {
          "ref": "7366d837-da34-4e73-9b61-5019f059aac5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "43458f88-c142-409d-a3fc-a26da33854ac"
        },
        "item": {
          "id": "9669e631-4542-420b-a635-3fdbe1734244",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3b3c9490-05db-478a-bdfb-39d390b4b1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f2074e-39d8-47f5-a0c3-c99e0fb6b7e3",
        "cursor": {
          "ref": "a8c5b3bc-acf3-4977-8cb4-c7e1f65c959e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36b97710-9eb7-4896-b483-518d59a18bed"
        },
        "item": {
          "id": "66f2074e-39d8-47f5-a0c3-c99e0fb6b7e3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e88953f3-1432-47af-94dd-60e1b9bc8052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d38eb4c-5f19-4515-ac71-3cca465c2ec7",
        "cursor": {
          "ref": "1e2a0b31-25d4-49c6-a36f-85a02f4936a7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7e75403e-2af7-43b7-aad1-1ed0f7d2c921"
        },
        "item": {
          "id": "6d38eb4c-5f19-4515-ac71-3cca465c2ec7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c06ffed-f782-4e36-9103-73685d0c5721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf182048-9d1a-4ad8-9bdd-9b2aa4fa052c",
        "cursor": {
          "ref": "69fe968f-9910-4af3-96e2-5f3583ea5f07",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef1aafd0-56ad-4ffa-81b8-927a5880030f"
        },
        "item": {
          "id": "bf182048-9d1a-4ad8-9bdd-9b2aa4fa052c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "22be78e6-61ef-4022-95af-99e2174c4ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3be49db-6c0d-4fe9-905b-6f01e5499149",
        "cursor": {
          "ref": "87d2346d-e533-48c9-814d-33936c943e0f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71b5bc1f-6310-45d3-bfd0-7105192654a9"
        },
        "item": {
          "id": "c3be49db-6c0d-4fe9-905b-6f01e5499149",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24832f15-f797-448c-b275-82fdcca118b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35aa3b1-f860-4466-a40b-7263863bc88e",
        "cursor": {
          "ref": "c317ed2c-5982-443c-9136-97374f4895a8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fe2e46d6-44f7-496e-9c67-db5352547c8a"
        },
        "item": {
          "id": "b35aa3b1-f860-4466-a40b-7263863bc88e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "893dd520-d600-4c7b-9db3-3432c4f0135f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930a66c4-a600-4e3c-8b3a-def64869b6ed",
        "cursor": {
          "ref": "aee3f704-54c6-4019-bebc-d0e3471a5464",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "752538d3-247d-4d8d-b127-d952188349af"
        },
        "item": {
          "id": "930a66c4-a600-4e3c-8b3a-def64869b6ed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e54d8f7-85c0-461e-bf03-2ffa985f8e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722a8da1-9a7d-4f88-aa56-124e58eb6de0",
        "cursor": {
          "ref": "af1dd02d-1bdb-4081-900b-7726ccd2a5fa",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "510623d8-787e-4217-a79e-4f54a3ccf5a3"
        },
        "item": {
          "id": "722a8da1-9a7d-4f88-aa56-124e58eb6de0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b009ef8-8ab7-415c-93cc-b6215e96ae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4a09f5-a229-4c3e-984b-3c8ac3ad0e47",
        "cursor": {
          "ref": "09d26b10-6b2e-4c20-80b6-da6000d18323",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "68be0948-1097-4eba-a57d-cba128680de7"
        },
        "item": {
          "id": "fe4a09f5-a229-4c3e-984b-3c8ac3ad0e47",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "768c882a-2a68-4bc8-9091-16e5c4fccf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3d1650-3325-4316-9e11-0b5702d610d7",
        "cursor": {
          "ref": "3485a840-313e-4b63-bffa-54a50c451fdc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cd65d0e5-5dfb-49ec-b9ae-c094dd71dc34"
        },
        "item": {
          "id": "5b3d1650-3325-4316-9e11-0b5702d610d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ad68e87d-1b78-454f-8692-f4e2e61e1ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296781db-1d99-43a6-b613-0a782d0fb4a8",
        "cursor": {
          "ref": "005687b7-505c-4049-85d3-c6ff777c132f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cbb2b318-eb87-4bbc-b57a-ecfc1aa8edeb"
        },
        "item": {
          "id": "296781db-1d99-43a6-b613-0a782d0fb4a8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f229df0a-f3d9-4db9-ab82-392a3e7951f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a07d493-66be-463a-9255-e10b854b641a",
        "cursor": {
          "ref": "3a1c51ec-62b9-4111-9219-bf367ed46fa6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63b0e841-7861-41fe-bd41-2386a7c2ca7e"
        },
        "item": {
          "id": "4a07d493-66be-463a-9255-e10b854b641a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a371b7ab-a466-4b50-adbb-ac623dadce83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444f1943-bbe6-4cc6-9260-b87b9d1dfabd",
        "cursor": {
          "ref": "c357c4a0-2f3c-460b-a1bd-5e3cb5874734",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "867c2fe8-5efa-4bf3-a7ce-352274859440"
        },
        "item": {
          "id": "444f1943-bbe6-4cc6-9260-b87b9d1dfabd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bd45ce4e-fa01-4133-b834-e3071036a743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faac7bd-8bea-4b41-ad02-c778e9a41449",
        "cursor": {
          "ref": "8fff76de-2d88-44e5-b219-9fb538b9a5c1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a91654ce-fe61-4660-9277-78f05f8f900c"
        },
        "item": {
          "id": "9faac7bd-8bea-4b41-ad02-c778e9a41449",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d3165b33-cb9c-4637-a6fd-e6aff77e7f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70a3495-c092-44c7-b442-d860136a4150",
        "cursor": {
          "ref": "4c327211-8cb7-4ccd-b9e7-7ca695b234ff",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a15a3d31-3b46-4cae-8558-f8a20595e376"
        },
        "item": {
          "id": "e70a3495-c092-44c7-b442-d860136a4150",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b7c62ad-37d7-4766-ad8e-07f3dd522ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f43ee49-31ae-48b1-a3e6-7ca8a0a7538a",
        "cursor": {
          "ref": "7c22c0a0-0767-4670-a0dc-ec48a77dccc5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d7880026-dfae-481b-ae1e-5f909fcfe952"
        },
        "item": {
          "id": "0f43ee49-31ae-48b1-a3e6-7ca8a0a7538a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3c936ed4-92f9-4530-975c-6b775f8d967b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9af334-7cf1-4876-a4f8-9d4094adf59d",
        "cursor": {
          "ref": "31413449-e0e0-47a6-973e-faea3b812b69",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8b302db4-a6bb-4bfa-989a-eec02115d3d9"
        },
        "item": {
          "id": "4f9af334-7cf1-4876-a4f8-9d4094adf59d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "64b6815b-1ba7-428c-9225-3c834a14d97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc851d0-c45e-426f-a4d9-e0885dd68df0",
        "cursor": {
          "ref": "048d2d2b-6208-4440-96d9-4fbf0c58ad6b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ebc1bcd2-0afe-4034-a659-ea12bfa640b6"
        },
        "item": {
          "id": "5fc851d0-c45e-426f-a4d9-e0885dd68df0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b8aa5c5b-75e3-495a-b844-3afae1817b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f772a-5b05-466e-9533-df2864bfabcf",
        "cursor": {
          "ref": "1a5e6fe7-d7d6-49dd-bc94-7feb2e95403f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4b8f2a70-5c94-462e-b636-f3e8ac36c519"
        },
        "item": {
          "id": "796f772a-5b05-466e-9533-df2864bfabcf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c26845fe-127b-489d-95ca-da5f035acb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a75c72-523d-42b1-bc89-3b47cb49e975",
        "cursor": {
          "ref": "b8ea24b6-f6da-4089-a1be-56c500885f83",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d6900da0-8b11-4b75-9e32-07d0532eda45"
        },
        "item": {
          "id": "16a75c72-523d-42b1-bc89-3b47cb49e975",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33195724-62d2-4b55-9ccc-31034af1e075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62f0bac-f5fb-4d7e-bdd6-ca242fb49e60",
        "cursor": {
          "ref": "53a07f54-f83d-4490-8eb3-9a6712d94333",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "044e6dc4-59d8-4d26-9ae1-7336275ac6f0"
        },
        "item": {
          "id": "b62f0bac-f5fb-4d7e-bdd6-ca242fb49e60",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9a6d3ab1-4bc3-4823-b316-c54d69caddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3216bc7d-f9e9-4fa3-abbf-feeb6a389155",
        "cursor": {
          "ref": "bf42d8eb-52ad-48d6-915b-573fff3572eb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "106af69b-1f70-4b75-aaac-a0decb04b16b"
        },
        "item": {
          "id": "3216bc7d-f9e9-4fa3-abbf-feeb6a389155",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cb3dca38-4088-4b3f-afcc-29266b36a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3874929a-2d02-46c6-8f02-6aa905385fc5",
        "cursor": {
          "ref": "7770ba8f-bd71-46e8-b2be-7a0929f7d0a5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efc5b880-4302-4398-9efe-dde8dd4d51e6"
        },
        "item": {
          "id": "3874929a-2d02-46c6-8f02-6aa905385fc5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c23ae137-dfa0-436e-9600-e5e17bd5b4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfabcf19-0b84-42c3-a320-8f4daea0b8ed",
        "cursor": {
          "ref": "273bbf3e-ea70-4cbc-aa9a-18eef118965d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "806db680-8dcb-4605-a87b-41ab78f99b7b"
        },
        "item": {
          "id": "cfabcf19-0b84-42c3-a320-8f4daea0b8ed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f99a3450-f129-438e-ae83-2372995cd816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c9b38e-765f-486c-8521-f6f54b28cd84",
        "cursor": {
          "ref": "7292b6a9-fff3-42b4-b438-e4cfc139c685",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9917dbc-4d3b-4f76-a558-49d4b76ec741"
        },
        "item": {
          "id": "68c9b38e-765f-486c-8521-f6f54b28cd84",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "59bb5e98-d99a-4462-9d46-1c0b7aa301e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d0452-551d-4782-ad7d-308dbb5ad29c",
        "cursor": {
          "ref": "28f4bbd3-9b80-4d8c-b4c7-7240ead58d9a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "513c06c2-5cf5-4e03-9b5b-045265f6fe03"
        },
        "item": {
          "id": "c21d0452-551d-4782-ad7d-308dbb5ad29c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3ef287e3-0f18-4a44-b31a-10de9dda00d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632b4e2-5d98-4bba-8dfe-ca48fdbf0145",
        "cursor": {
          "ref": "dadec8b6-a693-44c8-bb75-ff8e7efa529e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9fa2d9e8-b504-4cf2-9423-c742e6d74351"
        },
        "item": {
          "id": "a632b4e2-5d98-4bba-8dfe-ca48fdbf0145",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eeadebb3-2bca-4d86-aa81-0f1356437073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10093cb4-ce3f-4a79-92ab-c521b427bfe9",
        "cursor": {
          "ref": "9d2f8cb1-0edb-4334-af85-8fe98888c9fc",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5b32a277-3c3f-4736-9b65-f1c377bc9606"
        },
        "item": {
          "id": "10093cb4-ce3f-4a79-92ab-c521b427bfe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e1d25e12-5ad1-4fb5-867c-563febee749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8ece3c-ba16-4f0e-84f2-1637544608a7",
        "cursor": {
          "ref": "f40560da-f720-4354-a3f8-905883884363",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a9e42fd-dab3-4fc4-b1c3-bac5dd86381c"
        },
        "item": {
          "id": "0f8ece3c-ba16-4f0e-84f2-1637544608a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "df5beff1-1670-4946-8cf1-d93525335408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6906af6e-4f89-439f-8e3d-ed94b211d693",
        "cursor": {
          "ref": "a6c6ef1f-cd32-4715-a1ef-27b272911629",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7c1b5350-ec38-48b0-a286-977df9f7dc2b"
        },
        "item": {
          "id": "6906af6e-4f89-439f-8e3d-ed94b211d693",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "16426498-935a-494e-a292-d475d8c66097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3577877f-6b01-4383-9b1b-c04511832e0c",
        "cursor": {
          "ref": "b74489d7-df35-4a1e-a798-157766e17bb2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "936869bc-5b52-4e7f-9e6c-4199148cc3d9"
        },
        "item": {
          "id": "3577877f-6b01-4383-9b1b-c04511832e0c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f51a11fc-3b52-4b12-a1ca-a96e74c09884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb6064e-ec22-4043-a131-0181dd38e336",
        "cursor": {
          "ref": "0a97acea-427d-465f-b8dd-3b6aaf7a5570",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d7db1146-93c7-444a-ac4f-22a7f6b2b2a4"
        },
        "item": {
          "id": "1bb6064e-ec22-4043-a131-0181dd38e336",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c1b25bf2-ecda-47d0-96e8-2605fed7406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89903c26-216b-48c7-85f5-b1a82768eec8",
        "cursor": {
          "ref": "9ea4ed9e-9fc0-4415-820e-8f0291c8a0e7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "55691962-3d06-43f8-8d61-f1192a3a7b06"
        },
        "item": {
          "id": "89903c26-216b-48c7-85f5-b1a82768eec8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "28e4a444-68fa-4e80-976a-78d4072b35a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ab8ad8-3353-4396-ae41-e38ec96e60a5",
        "cursor": {
          "ref": "d5e0a3ab-a801-4537-b9f6-731125297732",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb1fe1c3-4120-44b5-9c6c-e92ab92a683f"
        },
        "item": {
          "id": "55ab8ad8-3353-4396-ae41-e38ec96e60a5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2c85c528-1d6c-4c53-a0e5-0c04f3093e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1882022-4138-4f75-acc1-828c2de15891",
        "cursor": {
          "ref": "82c1dfc9-98e0-49a9-8cb9-8eda84692b76",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "14061587-59c4-4819-bcb0-57fa61db8501"
        },
        "item": {
          "id": "c1882022-4138-4f75-acc1-828c2de15891",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d3cf8322-7da6-4f55-8b40-eac0185dbf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c42d87b-29b0-422d-af75-bbb40fb1e0b1",
        "cursor": {
          "ref": "5ab5ca8f-34f6-4768-a779-71c95368d367",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "03ed61a4-2e8b-4179-a669-081d13d82169"
        },
        "item": {
          "id": "3c42d87b-29b0-422d-af75-bbb40fb1e0b1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "767b02d4-2ca8-4c85-9223-f49e32839283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fcae4e-a7b4-4788-9ebf-6f90e4c47cde",
        "cursor": {
          "ref": "6e8efed7-c59c-4629-b4a6-fe955b5d83cc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ea03f5b-b6b4-470b-a0b0-8bd4d1dd426e"
        },
        "item": {
          "id": "23fcae4e-a7b4-4788-9ebf-6f90e4c47cde",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b7534c7-9336-4c2f-adc2-c7ce6914fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1387f6-ecbc-4026-9149-f5674fc268cd",
        "cursor": {
          "ref": "f92879ec-1e95-46c2-a8df-d1046dbc2aca",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cba07a4c-b747-4a12-bea5-22b534e89474"
        },
        "item": {
          "id": "9b1387f6-ecbc-4026-9149-f5674fc268cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "27c3f813-9e95-4c87-9d92-f72995b79c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0629a90-4d12-40e6-a3c9-acf2717e216c",
        "cursor": {
          "ref": "1085bacb-6b71-445b-94be-b42a22ad818b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "16ceb9f5-176a-47cc-8369-b96042578537"
        },
        "item": {
          "id": "f0629a90-4d12-40e6-a3c9-acf2717e216c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fba5386a-44c3-456a-a8fe-eba7317c1fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a6f37-6a91-4dd8-a764-8816ca754142",
        "cursor": {
          "ref": "b4890db0-aba9-4f4b-8aa8-c77d1f35187c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b708e407-a327-4cc7-be0d-04a3879e128f"
        },
        "item": {
          "id": "936a6f37-6a91-4dd8-a764-8816ca754142",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0d1a9245-ad37-46e1-a4b7-78493685a4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e62850c-10b5-4c2c-a2e6-186b66955fc9",
        "cursor": {
          "ref": "d60f9d24-9545-4f54-a82f-829adca1d8dd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fc9ed43c-dd70-4da7-bd17-a7e5a9dc5129"
        },
        "item": {
          "id": "2e62850c-10b5-4c2c-a2e6-186b66955fc9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8019ccb2-d19a-4236-bf26-ff294929e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1f7ec0-dd02-4a50-87a1-451afe24ce46",
        "cursor": {
          "ref": "f8919f3c-5e80-42f8-a44d-0e79fceb75ae",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2c65b302-232b-4bc0-a3e6-c63c3d0bb929"
        },
        "item": {
          "id": "bd1f7ec0-dd02-4a50-87a1-451afe24ce46",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cae3e30e-8157-42b5-8a09-2a35888c144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a16830-a8ee-4c82-a9f1-1c883a7db429",
        "cursor": {
          "ref": "18a1ac9d-a8b1-46c1-9bf6-820d3157f966",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "854e1535-91ae-47ad-82a2-b7b1e22460f5"
        },
        "item": {
          "id": "e7a16830-a8ee-4c82-a9f1-1c883a7db429",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "63a8e8e8-1407-413c-9625-b564fe32cb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4516cea-ff62-4d3a-8288-dbbde81a7898",
        "cursor": {
          "ref": "d3347dc5-74bd-45c9-aa05-e338beb3f44b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "35f8963e-817d-433b-ac80-1f0d7651e747"
        },
        "item": {
          "id": "b4516cea-ff62-4d3a-8288-dbbde81a7898",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ed11a728-b8ea-42a8-a900-9503767d0794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a514af-fa85-444c-b858-b5363ff93050",
        "cursor": {
          "ref": "044b03b3-d704-4dc1-a61e-afb5e69bac2d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "64aa0e10-666a-4a9e-9f09-cdef6888c2af"
        },
        "item": {
          "id": "b2a514af-fa85-444c-b858-b5363ff93050",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e62e689-e07f-4c79-a7eb-b13bab00a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef826fdd-7140-404d-a3ed-507612e487db",
        "cursor": {
          "ref": "be770205-e4e7-4aca-832f-f0783cfc6866",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "69f88291-6a3e-4bd0-a5e7-0ba74800f35c"
        },
        "item": {
          "id": "ef826fdd-7140-404d-a3ed-507612e487db",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "266d6f3b-50a5-4542-91f6-40a2e80b3abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e31ca3-70af-45fc-be83-268a9046cb6f",
        "cursor": {
          "ref": "029c1a66-6357-4421-b1c3-4558c06f5142",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4d73dfa1-4185-4dcf-9347-9f0d78e5a1f7"
        },
        "item": {
          "id": "d4e31ca3-70af-45fc-be83-268a9046cb6f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a6b019d-dc5d-44e9-a7a1-c4076e84771e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f309ea-fc94-4d79-bdf3-fdc88f77c669",
        "cursor": {
          "ref": "3a5aefab-a1e2-4780-96d2-90fef77e41fc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a556e4df-411f-4d6a-a77e-a4173e5c982a"
        },
        "item": {
          "id": "f3f309ea-fc94-4d79-bdf3-fdc88f77c669",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "da3e710b-106b-47b4-b9da-1c0a807e4470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c661af-4a90-4761-9acd-e7de15964fde",
        "cursor": {
          "ref": "4180e377-3c21-4810-9689-d0e032d064bd",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6d483c1-9903-4609-a587-fe6009112322"
        },
        "item": {
          "id": "04c661af-4a90-4761-9acd-e7de15964fde",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5446e92a-fad0-45fe-8574-2709a4101e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e70fd9c-11b8-4ede-bdb9-062741e32613",
        "cursor": {
          "ref": "f0073f2a-6518-4eeb-a0c8-c969798995d0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ad0b41d-ed90-46ae-aded-8a4c8d8429e9"
        },
        "item": {
          "id": "1e70fd9c-11b8-4ede-bdb9-062741e32613",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6d27376a-d4c7-4387-8f16-51655e351d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b121fc25-2614-4a54-a86b-c4e13981f2e8",
        "cursor": {
          "ref": "c3276458-8b7e-4877-9a52-0ad2dc08c726",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e511ae2d-7d38-48f5-8d7e-f040ab2f41c0"
        },
        "item": {
          "id": "b121fc25-2614-4a54-a86b-c4e13981f2e8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "492caaba-6a9d-411b-a7f5-58f2344e3cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b795551-b544-4c98-8e8c-793e73ff1c72",
        "cursor": {
          "ref": "a79db28d-1541-4464-b8ed-6b9af96e516b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f15e82ca-4ff9-46d8-a913-76df911f8c71"
        },
        "item": {
          "id": "7b795551-b544-4c98-8e8c-793e73ff1c72",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "24791978-9485-4172-9930-42b753295a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47829460-3635-4aa1-8941-875cfe9c0827",
        "cursor": {
          "ref": "7e3a11fc-d802-4323-99a9-4a9c7bb6d01d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "44af5be0-909f-4d20-abd9-e88f80a73495"
        },
        "item": {
          "id": "47829460-3635-4aa1-8941-875cfe9c0827",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "72c18073-dffa-46f4-b287-2f2a19cdbf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49461c5f-83bb-4461-99f4-d58b2d609bad",
        "cursor": {
          "ref": "78d95305-7f40-48dd-97ea-c2371cf21a7e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dcc61ea4-58fd-48c1-879d-227c6381dca5"
        },
        "item": {
          "id": "49461c5f-83bb-4461-99f4-d58b2d609bad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96fc8687-d188-4fee-8784-db58f4112f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973d8c6f-1fdd-4e58-b924-dfa9bee4e57e",
        "cursor": {
          "ref": "dd0018d6-9139-48fe-a277-d56ef1891ab5",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12b7d526-04bd-4bc8-b154-bb6b3bccad16"
        },
        "item": {
          "id": "973d8c6f-1fdd-4e58-b924-dfa9bee4e57e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "078a960c-b2d5-4e24-a24c-81a3b9e159de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a48263-4e72-4f62-a664-71ca4972929d",
        "cursor": {
          "ref": "e0d74348-3223-456a-a4c8-8492adc563ca",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4ce603df-1fc5-4de7-b8c9-1cd6bc58bcc4"
        },
        "item": {
          "id": "b3a48263-4e72-4f62-a664-71ca4972929d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "69b1311f-38fe-455d-afa0-4326c4c06540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d91767-c720-4a53-81b7-7e0219f975c5",
        "cursor": {
          "ref": "7a8da160-75ec-4bdb-9f3c-8589e8e52d0d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1f1bccf-7ebc-43c6-8953-2861c79d31d7"
        },
        "item": {
          "id": "e7d91767-c720-4a53-81b7-7e0219f975c5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "27c0a346-51da-4894-8f3e-0cdf83221a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22402ddb-7a63-461f-a4a5-3d86b7150239",
        "cursor": {
          "ref": "f9f3fa0c-b2c9-4d17-8950-71fb2c128e13",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a3fb8c76-4ce8-42aa-b335-53071c2c1bd7"
        },
        "item": {
          "id": "22402ddb-7a63-461f-a4a5-3d86b7150239",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "655078e8-92d8-45f1-920d-cf7c00edcb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d521986e-b498-4f74-87e8-fa21d52d2453",
        "cursor": {
          "ref": "8c4f967f-7ac3-48bd-af32-35158e25e45d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c4d6b148-7da5-4d09-952b-5ecd0b932974"
        },
        "item": {
          "id": "d521986e-b498-4f74-87e8-fa21d52d2453",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9e27471d-0458-4f33-bd70-3154b6a3efc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a28bcd-e76d-4b27-8b46-cc2a70368646",
        "cursor": {
          "ref": "7a001c01-a4cc-4073-80e0-2efc4cfa4bec",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d15c325-8797-463d-985e-3cbcb8779214"
        },
        "item": {
          "id": "e1a28bcd-e76d-4b27-8b46-cc2a70368646",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37473d9c-ac00-4af1-8e1b-3c2861816534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2a5b5e-e1f9-4b9e-8c85-d86748710cec",
        "cursor": {
          "ref": "527e3307-9c11-4243-a5b3-c71066297c43",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe1c73cb-0514-4040-9f4c-a89f61898823"
        },
        "item": {
          "id": "eb2a5b5e-e1f9-4b9e-8c85-d86748710cec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53db5c88-88fa-4212-8db3-e7ac5cf32178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5571aed3-2535-40f4-8ec2-9c0f4efd682c",
        "cursor": {
          "ref": "a76aec40-b1fd-4acb-a7b5-4cbffc2f8180",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3a154f96-7f5f-4c24-bbdd-0cfeeb82feab"
        },
        "item": {
          "id": "5571aed3-2535-40f4-8ec2-9c0f4efd682c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ad9e26ac-b43a-4872-bffa-ab58b62bc8c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4581a-e30c-4e1c-b3fd-3ba1784ce7fa",
        "cursor": {
          "ref": "0842e723-26b6-4ea6-83b1-0bd0f4b30950",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5a35035e-8a0a-492f-ae6d-bc7a4d18da92"
        },
        "item": {
          "id": "c4a4581a-e30c-4e1c-b3fd-3ba1784ce7fa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c028f479-3b7d-43ba-ab0f-80c12c366f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5f8d95dd-147e-4020-810c-18115b763fcc",
        "cursor": {
          "ref": "b6297768-d6a7-4017-bcc2-86e5261b656d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "66c18bb5-b573-4434-af52-8cf42a4bb5fe"
        },
        "item": {
          "id": "5f8d95dd-147e-4020-810c-18115b763fcc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0b16b56f-6317-4783-b556-699df5b6a34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "201d8e83-9ee6-4c38-af31-4cd64b6cdaa2",
        "cursor": {
          "ref": "60f6f71a-8a8b-49d6-96d9-efb268369127",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a739e46d-b4e3-4910-aa35-783df11cd76b"
        },
        "item": {
          "id": "201d8e83-9ee6-4c38-af31-4cd64b6cdaa2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ec7895cd-94ea-42b6-91c1-1f0d311cb52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "62281158-91af-4300-868a-a161e519d9d1",
        "cursor": {
          "ref": "564e5f19-24f2-4b38-821a-7bf5e7319cdf",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "259882f2-04cc-46da-bda6-b95cef15289f"
        },
        "item": {
          "id": "62281158-91af-4300-868a-a161e519d9d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7c7005e6-bd37-4f8c-a4e1-70c39a95e3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "45b6712f-7fb4-4424-bdf4-3b1a7a3f8d6e",
        "cursor": {
          "ref": "b200beb8-a66d-4eac-b02c-9befb5f4d26f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba14a5b1-09c1-4edb-b40b-2beb9cf394de"
        },
        "item": {
          "id": "45b6712f-7fb4-4424-bdf4-3b1a7a3f8d6e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f3aa774a-04aa-407e-a283-543ae9bc7ec4",
          "status": "Created",
          "code": 201,
          "responseTime": 11554,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "62156958-0b5a-4f75-b380-3df3d8e5edd6",
        "cursor": {
          "ref": "41ca8606-fc76-41de-90fb-88d2418800ad",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f03380b5-be75-45f3-a375-f0353f6f0cca"
        },
        "item": {
          "id": "62156958-0b5a-4f75-b380-3df3d8e5edd6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9d5da4ca-93be-4f3d-b3fc-0e78f0cd81d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "00357ee6-e39a-44a8-9439-90ea402cd49f",
        "cursor": {
          "ref": "5ca9354c-2751-4548-b8c2-a3adfa4908c9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "df1051be-8f2d-49df-a021-70b9b021c80c"
        },
        "item": {
          "id": "00357ee6-e39a-44a8-9439-90ea402cd49f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6cb8b5f7-b743-43e8-bd4f-09689b88b3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "283919c2-b638-468a-bc32-471b14aa5a0e",
        "cursor": {
          "ref": "17cb6f90-049c-4863-84b7-ed4f3914f9d8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3479f1c7-eb6e-41a9-8794-5df0e09b7f2a"
        },
        "item": {
          "id": "283919c2-b638-468a-bc32-471b14aa5a0e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "07e92323-d06b-48e2-93ac-46ef193014d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e206632a-1ad6-439d-a82b-3932a4e61174",
        "cursor": {
          "ref": "641fdd39-681d-4c7a-a7d5-b0526e3ec01f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c6097002-aeb7-4b01-8e95-c690ca3bc153"
        },
        "item": {
          "id": "e206632a-1ad6-439d-a82b-3932a4e61174",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db54dd80-e65a-453d-aac0-b8f9fe5b9092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a902ff-5366-440f-a262-e37ac00755ff",
        "cursor": {
          "ref": "7b8c34d7-bab5-4a6d-a7fd-f6cb9c40ef9b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "268410c1-1b30-4142-b4a9-35967c4d19ab"
        },
        "item": {
          "id": "44a902ff-5366-440f-a262-e37ac00755ff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8275b50d-d6e2-4990-9b99-e99a7c0458b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a134df-4925-453f-8551-bb782c28ed75",
        "cursor": {
          "ref": "e1c91c3f-a620-41b5-b70d-c5152d550096",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08526545-e208-4b88-bdac-2ac67b2eba01"
        },
        "item": {
          "id": "55a134df-4925-453f-8551-bb782c28ed75",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7ec29683-0713-4e22-a091-c3e5f5ac6896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73feaf00-66fd-424b-8c19-fe84b8f51a8b",
        "cursor": {
          "ref": "14c41299-9479-434d-97ae-cd4bf3671785",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c07fa0b7-de1f-4bd0-a039-5548b4c89c12"
        },
        "item": {
          "id": "73feaf00-66fd-424b-8c19-fe84b8f51a8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "786c3822-2ba8-45c4-b1c8-2826d3f209e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3f9ed4-6391-41a0-8b6b-5eb9cafe3c63",
        "cursor": {
          "ref": "7b692b05-b2f7-4ecb-842a-5c56f4095160",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9ab21ebd-d320-4572-8f56-b881255fb2d2"
        },
        "item": {
          "id": "1e3f9ed4-6391-41a0-8b6b-5eb9cafe3c63",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d712af42-01cd-4dfa-af00-4678de1dc0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db3ac1-bada-4b06-826f-76ec767640fc",
        "cursor": {
          "ref": "896a8bd7-f0ff-423c-af10-ad1f06673a08",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5f42ff0a-aecd-4c85-9ce6-dcaaae37c2c7"
        },
        "item": {
          "id": "65db3ac1-bada-4b06-826f-76ec767640fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7aeb6b2-e23e-4973-9469-c06fe5e03c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45055b17-ce3b-45b3-a9bf-1bdbcf05fa83",
        "cursor": {
          "ref": "09fcf977-faa4-4bbd-b41a-02508eea119e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bf647bab-a17a-41dd-86d9-6897134c065a"
        },
        "item": {
          "id": "45055b17-ce3b-45b3-a9bf-1bdbcf05fa83",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "47353475-888b-412d-81a4-d95f1471921f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba72a4b1-53b1-45b9-abb2-b832e8e259d5",
        "cursor": {
          "ref": "041a4b1f-ce90-43c3-9d13-94853fa97759",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "28e73d4b-7179-4793-a950-f5969c9129ba"
        },
        "item": {
          "id": "ba72a4b1-53b1-45b9-abb2-b832e8e259d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f4e5f70-c0a9-4447-99b1-90760f67aa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d298f43c-d200-416a-a3ea-13758b78094b",
        "cursor": {
          "ref": "be1dae87-545f-4c13-95ed-5dc1022f12ee",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "324c7293-5f12-4975-b24e-312199e4291a"
        },
        "item": {
          "id": "d298f43c-d200-416a-a3ea-13758b78094b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c457ffb4-3794-40db-acac-b130b6058605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9abc8d-5080-4e9f-a497-6a5509c6e9a9",
        "cursor": {
          "ref": "ba53eb4d-14a0-46a9-905b-0ee1faf865fe",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80bfec19-924d-4cb2-9d7c-5aba1c71cafa"
        },
        "item": {
          "id": "df9abc8d-5080-4e9f-a497-6a5509c6e9a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d27e39af-4356-4db4-9ba5-4ccff6b7bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e7b0cc-f206-4953-95cd-aa919777de42",
        "cursor": {
          "ref": "0d43d910-fdd3-4c07-96d5-022cbe6e11b7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bdeea40e-6ec8-425b-b06f-2805da5f34de"
        },
        "item": {
          "id": "d4e7b0cc-f206-4953-95cd-aa919777de42",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b7ca0a97-2a17-47cb-b3b7-a10d420f905b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f7c5b-c7f7-473d-96b3-5fc71fe504a5",
        "cursor": {
          "ref": "f53a1477-266a-462c-b9cb-cdbb9b95866f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ab5974e-5420-47d1-8896-2d98b056c9b4"
        },
        "item": {
          "id": "776f7c5b-c7f7-473d-96b3-5fc71fe504a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b9f3dbfb-4836-4e9b-9a37-23912964afe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84c7404-d208-4f55-905c-db59decce7cc",
        "cursor": {
          "ref": "d2d66735-3742-417f-a541-6bf5615f1edd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "850794b9-24b9-40cd-9fc2-e93486d56224"
        },
        "item": {
          "id": "c84c7404-d208-4f55-905c-db59decce7cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "56527924-f3f3-4966-a572-7749e062693f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cebe09d-75cf-4bfe-999f-9b39b8581e63",
        "cursor": {
          "ref": "dd6808b2-db72-4428-ae95-447add183fef",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "90af5db2-f416-4735-bf05-0ddb147542ae"
        },
        "item": {
          "id": "4cebe09d-75cf-4bfe-999f-9b39b8581e63",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd110848-3551-475a-86f0-af535afdd872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df3cf2b-8e8a-42b2-a7e0-1cd24418cbba",
        "cursor": {
          "ref": "d0101c64-6bc7-4ff1-a279-2b9a3c22f315",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6d00a133-7610-4475-9614-ab793b335317"
        },
        "item": {
          "id": "6df3cf2b-8e8a-42b2-a7e0-1cd24418cbba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f517e477-278b-44b9-b0d8-56c5fda701c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a52aa-de0e-46fb-8817-3aa2b0ee2920",
        "cursor": {
          "ref": "6e96c294-261a-4b3c-b59e-1602bc84d365",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4133fdb0-9ee3-4c51-a342-eb85e070a2ad"
        },
        "item": {
          "id": "c48a52aa-de0e-46fb-8817-3aa2b0ee2920",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "352a7f9e-c39b-4278-8c26-90209c8d3709",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9ccd9776-2426-4f38-b199-0723af44791d",
        "cursor": {
          "ref": "af22f2cb-d38f-4e4f-b769-b5ff146707c8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a6f5ef6-f5e2-48da-b5cb-b6563e6a6ff1"
        },
        "item": {
          "id": "9ccd9776-2426-4f38-b199-0723af44791d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9afecd30-66f9-4554-bc47-322ab18d1c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297ecb1d-1687-4a4c-8757-104a2413bf21",
        "cursor": {
          "ref": "75bd65b9-4923-4478-904b-d0400314276f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ac8832ea-1111-4580-9e72-6218b398ca4f"
        },
        "item": {
          "id": "297ecb1d-1687-4a4c-8757-104a2413bf21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "009bb631-0f6c-419e-8554-670af3e577d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c05965b-be0d-4e29-9c18-2b8e06e68c42",
        "cursor": {
          "ref": "047beb6b-d98b-4242-aa6c-63d22c29259c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d971907-2db3-4329-8057-a784966a2da2"
        },
        "item": {
          "id": "8c05965b-be0d-4e29-9c18-2b8e06e68c42",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "397b69fe-dccd-4f3d-9e16-83788bea4b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d8986-dd60-4904-8e2d-514e85fd1fc6",
        "cursor": {
          "ref": "6e3ee788-6292-4c04-ad29-33b2cde32b45",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a58a3f7-0c35-49d2-b02b-35d0606627e6"
        },
        "item": {
          "id": "541d8986-dd60-4904-8e2d-514e85fd1fc6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ca63d46-29ff-47c9-b7f6-b5d0d978c75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130818f1-0b05-40e5-add1-1ac280a33061",
        "cursor": {
          "ref": "25e84776-695b-4afa-97d9-536d3700a494",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f943029-296d-4e28-82a8-62a62054a1ac"
        },
        "item": {
          "id": "130818f1-0b05-40e5-add1-1ac280a33061",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5493f541-4dd6-432f-a7a8-c505f9129b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4316479b-4701-43c5-8a54-7153a8c970af",
        "cursor": {
          "ref": "7ef522a6-9e95-4642-9f3d-b1065bcf9bf5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2e24fd9-1585-43c8-a805-2b8fb054d3af"
        },
        "item": {
          "id": "4316479b-4701-43c5-8a54-7153a8c970af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "460dc2d4-6fb9-4330-b962-ece4fb1cbdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903ddfc-3f8b-4a8e-b430-0f25f02cd5da",
        "cursor": {
          "ref": "4b1eea6f-5ce6-4168-8b2b-ac1393a9ce05",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a05aff35-975b-4f67-8b8e-6f0a53cd391a"
        },
        "item": {
          "id": "f903ddfc-3f8b-4a8e-b430-0f25f02cd5da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8bc18bb-5722-4810-b4ba-6383beb75dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e67d68f-0cdf-4e05-9740-fd5f6c8f12ca",
        "cursor": {
          "ref": "a217d85c-00d7-45b5-acfa-d91d018be579",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0ed39ff7-cf59-4b8d-9d62-33b98727349c"
        },
        "item": {
          "id": "6e67d68f-0cdf-4e05-9740-fd5f6c8f12ca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "304c5bac-b5f6-4d4a-bb34-7deeb2ae7935",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7d96d51d-5b36-4c86-add5-6c65b21382f5",
        "cursor": {
          "ref": "fbcda181-2ebb-4d4a-b257-aa9adc3253aa",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d466e44e-f273-4c5b-bd59-27a727ff03c5"
        },
        "item": {
          "id": "7d96d51d-5b36-4c86-add5-6c65b21382f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "565e3a81-6ec5-4ac9-91c6-445222d5f09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b2ac1-c2eb-4997-a9d1-e5ab4c59d659",
        "cursor": {
          "ref": "0b818531-5bd1-4171-956e-687a75b040d1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "657f4b94-afc2-4cc7-b14d-44053b7131f1"
        },
        "item": {
          "id": "c66b2ac1-c2eb-4997-a9d1-e5ab4c59d659",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26192bf9-4ae5-4a8f-9dde-d6fa021daf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5133d3-3cf8-468a-8d8a-8f5a45027c40",
        "cursor": {
          "ref": "482669ee-f8b9-4e52-a579-292407ccea62",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b08b4dba-d0b0-4255-82ab-32c7bcf1783d"
        },
        "item": {
          "id": "ea5133d3-3cf8-468a-8d8a-8f5a45027c40",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99af3c95-88cc-481a-bfbd-552d116f37aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ce5ed5-a594-4dea-93ba-95cbd7fb3d6d",
        "cursor": {
          "ref": "a6b0dab5-1eb9-4d20-862b-a6fab1f20cbf",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f34aaa82-7812-4387-89b5-f9a767518f43"
        },
        "item": {
          "id": "91ce5ed5-a594-4dea-93ba-95cbd7fb3d6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43e1691a-8c6a-401d-b998-a0aa76691040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c00b12-8b8c-41fe-a0b9-9349266db3f9",
        "cursor": {
          "ref": "6f26941d-21e9-4184-9a70-ed39ce78d97f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "65dbbad8-5a8c-4a8d-834e-ad3d4caceec5"
        },
        "item": {
          "id": "e2c00b12-8b8c-41fe-a0b9-9349266db3f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1dcf7016-bed2-4511-8f07-ceb889ce9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9962860f-e568-41ca-9413-59808c54df5b",
        "cursor": {
          "ref": "6761bd67-c11c-4b10-9532-3979d97dc4e6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "431137a6-d9cb-491d-8aaa-97c466b0d0e9"
        },
        "item": {
          "id": "9962860f-e568-41ca-9413-59808c54df5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20a92c04-8c15-4b72-b2b3-c1975e2aa4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29938ba-848e-4327-a1d8-6cbf7c5b25cb",
        "cursor": {
          "ref": "3b00395c-6594-41d9-a8f8-bebf7471adb7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a05d7c7f-d061-4344-9376-456fb25dfdf3"
        },
        "item": {
          "id": "b29938ba-848e-4327-a1d8-6cbf7c5b25cb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fb009590-3696-4d54-99b9-b581b1e9c011",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4aeaded7-fdcd-490c-8ad5-7a0a32b08809",
        "cursor": {
          "ref": "3ebc3b5e-2607-4a58-9774-b35e93180758",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "21abf4ae-9ac1-4aa3-8365-7b4e3fe41986"
        },
        "item": {
          "id": "4aeaded7-fdcd-490c-8ad5-7a0a32b08809",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "140c083d-e291-4606-af0e-9b6cc6ecfdb6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b8a39aa2-9f88-4ec0-8644-b5eaa2bf5711",
        "cursor": {
          "ref": "eb575a36-75ad-4b2a-9e1f-a8bf9e8ec316",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ab629f9-77cc-4381-87c1-5af9343afe7d"
        },
        "item": {
          "id": "b8a39aa2-9f88-4ec0-8644-b5eaa2bf5711",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "33b98e25-de65-4af9-b2be-0fccb54a9a79",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "972b275d-aa54-4317-941c-90e475a9d0b2",
        "cursor": {
          "ref": "00cd54ca-0ec4-4c1f-9650-d38ecdf0ddd6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "874154b1-a51f-4cd3-809d-86ab63dc595b"
        },
        "item": {
          "id": "972b275d-aa54-4317-941c-90e475a9d0b2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "aec1b818-59a0-485b-95f2-988f673a9bed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "73c55497-208a-4a6c-8cd7-15e0473be705",
        "cursor": {
          "ref": "2dead300-20a2-45d7-9c42-b3bd08aedf55",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1d3bbe68-e21b-4308-99f7-853426006d56"
        },
        "item": {
          "id": "73c55497-208a-4a6c-8cd7-15e0473be705",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "71ed41cb-7232-4221-85fc-04cae793fcb2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c472ab43-fa91-43c8-8f62-5974e997cf62",
        "cursor": {
          "ref": "213ff3c0-a030-42a4-9670-98c234287b48",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "36fac953-5baf-4157-b926-1784963868c7"
        },
        "item": {
          "id": "c472ab43-fa91-43c8-8f62-5974e997cf62",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a33744fb-7499-464e-a170-5df5d8e25b80",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8df0f715-05e5-403d-a248-f5f44c17b89a",
        "cursor": {
          "ref": "8e9f2ca8-7a7b-4202-beea-65cac3b79a13",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2205764b-17c2-48a8-9686-95fb9f5e3a1a"
        },
        "item": {
          "id": "8df0f715-05e5-403d-a248-f5f44c17b89a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9ce68959-547d-4284-8747-131a9653e94a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66238e-2ca9-4a0e-8074-522573679b31",
        "cursor": {
          "ref": "9a22450d-e7e9-48eb-862f-3920cf0a0a15",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8633aaae-0ec0-4809-9018-7d317a268e62"
        },
        "item": {
          "id": "fe66238e-2ca9-4a0e-8074-522573679b31",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33651827-f61e-4669-8c9c-517aef175278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50c7d41-76d2-499b-93e4-fbf20f72b0c4",
        "cursor": {
          "ref": "d290a358-5c20-4fa6-9097-fa22c94329c3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "daa0e50e-b080-4710-af1b-dac9c5df9719"
        },
        "item": {
          "id": "c50c7d41-76d2-499b-93e4-fbf20f72b0c4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5b430cc0-461d-4f36-af7e-e5609c66dc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a10f01f-dff7-4b3e-85c5-11c47de1f22e",
        "cursor": {
          "ref": "92b520fa-792e-4d4a-841f-c978f5ee7979",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc868f9a-68dd-4c7f-a781-76e2a6296375"
        },
        "item": {
          "id": "9a10f01f-dff7-4b3e-85c5-11c47de1f22e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a7fabe2-d216-446d-9b12-90cf5c9e4832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9870e504-a9ed-42d3-a66e-08d5764eaee0",
        "cursor": {
          "ref": "cf1d9258-d409-47d0-82d2-c7a22da87f5d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "65b08487-5de5-47e1-9371-9a020bc9a39b"
        },
        "item": {
          "id": "9870e504-a9ed-42d3-a66e-08d5764eaee0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "58596de2-f425-47f2-8aab-908ef1cb3f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0652e71-6347-477d-958f-0e81ce6358c7",
        "cursor": {
          "ref": "98cc3551-9d9b-4280-a2b5-e2fd44211769",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "17e58b93-b7ba-4bd2-8379-39e75eb33ad0"
        },
        "item": {
          "id": "a0652e71-6347-477d-958f-0e81ce6358c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fc9521f5-3442-4a0b-ab14-020074909483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec03fc5-8eb2-4980-83ce-6f34cc0b7f0d",
        "cursor": {
          "ref": "146e43e9-f9ba-4851-abe9-436ca663f829",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "71d53051-1e22-438d-94f4-e6808e43b7b1"
        },
        "item": {
          "id": "8ec03fc5-8eb2-4980-83ce-6f34cc0b7f0d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b4be88e2-45db-4734-95a7-266c7245df5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff865cd7-fe46-480d-af50-246de12eb66c",
        "cursor": {
          "ref": "6da46093-a60b-41f9-8254-695884a917cd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bae05526-9db1-4b6c-861d-3b2071c56385"
        },
        "item": {
          "id": "ff865cd7-fe46-480d-af50-246de12eb66c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c12981e1-a2d2-404f-abaa-73a588cb2b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ee6f6-922b-4317-bc6e-fee7617faed6",
        "cursor": {
          "ref": "22201abc-1caa-4924-aa7f-07a1153ffc20",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "08d89d16-33c1-4b01-8670-231e5b710709"
        },
        "item": {
          "id": "934ee6f6-922b-4317-bc6e-fee7617faed6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5dbd0223-606f-4459-974e-bd91093ad395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d2bd70-8833-452b-907b-7bb4f4a65536",
        "cursor": {
          "ref": "2d25679b-dd92-462a-b28c-c5dff41c1888",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "97751c1c-8c65-44d3-91fe-bf6a8d66b732"
        },
        "item": {
          "id": "41d2bd70-8833-452b-907b-7bb4f4a65536",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "77eee5b3-7b0b-46ad-bbea-fe5a672bec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba56819-5bce-46be-9357-897e052f8be0",
        "cursor": {
          "ref": "a9021af0-ab1b-4c89-a11a-e36cba0422c8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3c108e08-517e-4200-9fa0-94a95dec2e41"
        },
        "item": {
          "id": "4ba56819-5bce-46be-9357-897e052f8be0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "463da2a9-20d4-4453-b10d-ca2a27c2ebb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaef215-ad69-4a4b-a425-f1b64496f862",
        "cursor": {
          "ref": "b9e0f5a8-6ec4-4dd1-8bb2-ca2933c73ea5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c68b07fe-37ea-4ab2-8c7f-d03fb2ebfbcc"
        },
        "item": {
          "id": "bcaef215-ad69-4a4b-a425-f1b64496f862",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d43b4b62-edb9-4848-b3e9-0d280f8feda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e66d79-1e99-4cb6-b76f-ea3ccbcf2da5",
        "cursor": {
          "ref": "5e88bbfd-f9d6-4588-a789-ec40b051026f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c11bea72-3668-40c2-bbb2-d5a95bc1a284"
        },
        "item": {
          "id": "37e66d79-1e99-4cb6-b76f-ea3ccbcf2da5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f84668e-a056-45c0-9a49-cabe80af32ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964d81b6-49da-465b-a80c-3359d2e17fb2",
        "cursor": {
          "ref": "e8a2835b-c7e8-4d37-856f-2f2859b2e791",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1fa602bb-3635-4873-854c-e9f1305e1be9"
        },
        "item": {
          "id": "964d81b6-49da-465b-a80c-3359d2e17fb2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b72acb4f-e88b-47b5-8e60-73a3103a59c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d42626-9099-4a15-a502-2a7028c3acd4",
        "cursor": {
          "ref": "d158d6c4-daf4-4abb-837e-c3ca00fd5826",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e1ab9792-91cf-4eb4-bdda-c560dc492a17"
        },
        "item": {
          "id": "e6d42626-9099-4a15-a502-2a7028c3acd4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e81ee485-c82f-413c-84e6-faead2fe64f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce387024-4a7a-476b-be12-24c6bfc4e17a",
        "cursor": {
          "ref": "847a0c07-b1a6-4cdf-a34e-a6e7412a59c7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "97d1bf83-9b59-4a64-ab72-2d60ec1dc7ec"
        },
        "item": {
          "id": "ce387024-4a7a-476b-be12-24c6bfc4e17a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a5cbc15e-04e1-4822-a25a-71dc522c79ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefe6b98-801a-4f93-914c-852584833fbe",
        "cursor": {
          "ref": "83869dc4-3b99-4cf9-9466-387e9186ab3b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52b4e60a-4726-4361-97d0-1e930f9b8c67"
        },
        "item": {
          "id": "aefe6b98-801a-4f93-914c-852584833fbe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5257059-073d-4119-8d96-11e19f170653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4d821-8c42-453d-9812-3ab2fda33ed1",
        "cursor": {
          "ref": "99fb1cad-5981-4862-aedd-d19a759f3bc6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4d3291aa-9faf-413e-9010-f37378c4d1ff"
        },
        "item": {
          "id": "0bf4d821-8c42-453d-9812-3ab2fda33ed1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "71cb666a-d1b8-4d20-8d59-b8e90174900e",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "9ea412f3-4f71-46e1-bd2f-972120ce5e89",
        "cursor": {
          "ref": "f7e13f45-a034-40f5-b32c-0e3e32b75a76",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a419721-ed0c-4773-abd8-dcc3fab3b41d"
        },
        "item": {
          "id": "9ea412f3-4f71-46e1-bd2f-972120ce5e89",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4afbe83f-6979-4551-b63e-ca5f0dd6f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9cc3b-ede8-4f42-ac1b-b947fd3e6411",
        "cursor": {
          "ref": "59601c9d-e53e-434f-a8ad-52b11d5d5d67",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b3c946ae-f34f-4e94-823d-1fda480dfe78"
        },
        "item": {
          "id": "54f9cc3b-ede8-4f42-ac1b-b947fd3e6411",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "10493fb8-2098-4a74-a042-f88b97d950dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b91adaa-cab6-4643-945b-5285018ef91c",
        "cursor": {
          "ref": "3d189340-0310-41ae-a6b8-3895e9046acf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5faa248-d6c8-40a1-98e6-02572572cad1"
        },
        "item": {
          "id": "8b91adaa-cab6-4643-945b-5285018ef91c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "10175fc8-1d5c-4ed4-9d4e-44c42c123436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1635a6-137f-4962-9f8c-01c0f53bf86c",
        "cursor": {
          "ref": "a999633b-56c3-4da7-b292-3e9e090cadb9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fd8b4e6e-53ef-4733-803d-2a59b07b5b49"
        },
        "item": {
          "id": "2b1635a6-137f-4962-9f8c-01c0f53bf86c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "efd1b80f-7fa7-491c-b0fb-95339c4d502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e939be66-d59a-44e5-9641-ecf7ec40f30e",
        "cursor": {
          "ref": "de59b644-28bb-424c-8104-0eac04e7ad83",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9b379a2-bfe5-423e-af2c-5cf00fb45b75"
        },
        "item": {
          "id": "e939be66-d59a-44e5-9641-ecf7ec40f30e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fcdbaf54-8877-4614-8b78-1041556aca26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a12d2eb-7f88-461c-ae85-84f2d5fe5eac",
        "cursor": {
          "ref": "dfcd30ae-81d0-4328-ac36-4a98bfa81e60",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "50378e8b-ec71-48d6-a864-8d93373d3162"
        },
        "item": {
          "id": "3a12d2eb-7f88-461c-ae85-84f2d5fe5eac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "050e4a33-1289-4888-b460-8e65829ef614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d3344d-4395-4540-a89b-f9becede9bb4",
        "cursor": {
          "ref": "bd666ee0-3a2a-4f3d-94c3-383d94361dc8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d3ea2d7-40f0-47fe-ba9e-644e2d5a2868"
        },
        "item": {
          "id": "37d3344d-4395-4540-a89b-f9becede9bb4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9ecdf65c-9618-40dd-a6ca-89745c9431ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592235e3-45fe-4910-9694-a6b803064ab0",
        "cursor": {
          "ref": "d89b3d2e-44ee-4dbb-aed8-7add206b1652",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0ba16147-3a07-4f00-bc86-943efecf4c75"
        },
        "item": {
          "id": "592235e3-45fe-4910-9694-a6b803064ab0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a5908de6-9ad8-45ff-9fca-852e25b5c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f24eda4-c7fe-42b3-a589-81d5d2c6fd59",
        "cursor": {
          "ref": "af36ef5e-74ae-49b8-bef2-d0bc685e71a1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e0c507d8-e011-4145-8973-7c97d1ac635a"
        },
        "item": {
          "id": "4f24eda4-c7fe-42b3-a589-81d5d2c6fd59",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9655778d-2c5b-4de3-a11a-a91122651e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222c101-e5f9-46f3-98ec-12a66e28b4f8",
        "cursor": {
          "ref": "de74ba25-cbb0-4765-ad33-ed28cf4de584",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "71b1e184-8ad5-49b2-b404-beb21502c57f"
        },
        "item": {
          "id": "6222c101-e5f9-46f3-98ec-12a66e28b4f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c34afd5d-eb59-4c62-93a8-4e34d137b210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd8df31-b962-4d62-8146-95962129e137",
        "cursor": {
          "ref": "b6a96fc8-ab8d-42c1-a9ff-a6e080b82851",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6436b33d-9ffd-43d7-9388-dd628b7ea3ca"
        },
        "item": {
          "id": "9dd8df31-b962-4d62-8146-95962129e137",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ca0e9ca-a7d5-432f-a93b-67e4fa3380e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53fa078-1e35-4497-94a3-7e103ff676b1",
        "cursor": {
          "ref": "573e9420-ff6d-4b8c-ad43-59d8ce649846",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4a0c6c45-9a8b-41c3-9aa4-d294cc8e403a"
        },
        "item": {
          "id": "d53fa078-1e35-4497-94a3-7e103ff676b1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "517bcd1c-f8bb-4285-8a4c-42ab4290083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b644cc99-68eb-4db1-b69e-24678196b3fa",
        "cursor": {
          "ref": "d732c4c3-366b-4ff8-8d92-d9c5750d5047",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1b443b84-5655-44b2-ae65-8804324a4d1c"
        },
        "item": {
          "id": "b644cc99-68eb-4db1-b69e-24678196b3fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3dbe37b3-1acd-45f6-bad4-d7a47baa5043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19235823-8dba-45b5-bd2a-f5c3ab51bbf1",
        "cursor": {
          "ref": "4fa57eac-b346-4b39-8b3b-1a2deb3ebeb5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c3bab6b9-def1-47b5-b236-bd87c6d95346"
        },
        "item": {
          "id": "19235823-8dba-45b5-bd2a-f5c3ab51bbf1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "36cb148f-8977-48c6-9e63-500bbfb8de7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aecd415-e93d-432b-acc2-368b8b46d843",
        "cursor": {
          "ref": "62b7522d-0f81-41b7-8035-78534ff996e8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c296464-4593-448f-9c42-e10685e80324"
        },
        "item": {
          "id": "7aecd415-e93d-432b-acc2-368b8b46d843",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7769d222-1d07-42cf-8653-f17630ce06e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb313927-95ef-4927-9306-cf0594378b2c",
        "cursor": {
          "ref": "c9bda705-9db5-49e5-9d80-67393fd644fc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "716d2ca2-dfcd-4b97-a691-9bd3e9e10424"
        },
        "item": {
          "id": "bb313927-95ef-4927-9306-cf0594378b2c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24f28c50-e0da-4183-866b-5d90aa176a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd3d06-891f-4aed-9553-706bdf0a0a4b",
        "cursor": {
          "ref": "92d13833-8453-4aa4-95af-1fa52a9707e9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7f0b62ad-bba3-443c-8fb3-754891c4ba5e"
        },
        "item": {
          "id": "65dd3d06-891f-4aed-9553-706bdf0a0a4b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bc42dade-3706-44a5-8a6d-48ff1d205061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd613cd-6a1a-45d4-bba1-fee7f722330d",
        "cursor": {
          "ref": "d1c698e6-a3e0-4ec5-9fea-f762e1776b9c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cb5b0099-e069-4c15-9ec5-c2b3dac99cee"
        },
        "item": {
          "id": "dfd613cd-6a1a-45d4-bba1-fee7f722330d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d142d7b4-f5bc-45a4-8319-5ffff36fce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ce1faa-96f1-4192-89e7-31d638c9a4c8",
        "cursor": {
          "ref": "af354cfd-08a3-48d3-82c0-b235f6437a11",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f82182df-4789-4999-92a0-d675017be437"
        },
        "item": {
          "id": "49ce1faa-96f1-4192-89e7-31d638c9a4c8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "49054fdb-919b-4777-bb02-ceba64ada6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f39f575-2fe4-4530-8a6b-02578e60e655",
        "cursor": {
          "ref": "50ccd66c-d19e-438f-95b7-14f2755d657f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "568b8403-e73f-44bf-a0d9-d3d55eaf6020"
        },
        "item": {
          "id": "4f39f575-2fe4-4530-8a6b-02578e60e655",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "24495514-67cb-4079-9761-bff4bd6146b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f8e4d5-2122-407c-9afa-e83d8373d4bf",
        "cursor": {
          "ref": "805ff74a-97f9-4475-9f38-39c34f39f9cc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e166e8e4-99fd-4027-936c-8f082db312ab"
        },
        "item": {
          "id": "f0f8e4d5-2122-407c-9afa-e83d8373d4bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "46e45beb-fb68-4554-b7fc-9389d53e01d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4cb149-d44f-4ac2-bacc-f2221a45b396",
        "cursor": {
          "ref": "31ab5b35-0e2f-49ec-9c75-ffd17a81abb0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1fcb8040-aaa3-49dd-93df-ebfc718f93a2"
        },
        "item": {
          "id": "5d4cb149-d44f-4ac2-bacc-f2221a45b396",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d6e3be75-6ce0-497d-8def-d975395fe224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf870bf-a438-457c-8209-3ad4c3cf9631",
        "cursor": {
          "ref": "89f55bf9-f224-463d-9bd7-47b6a8081fa0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8eda3350-57b4-49ab-aef1-1f212c905dda"
        },
        "item": {
          "id": "5bf870bf-a438-457c-8209-3ad4c3cf9631",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a365d928-eac3-461f-96ba-64a9e5b6cfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf236be-a24a-48d1-a9b7-bf918648a5a6",
        "cursor": {
          "ref": "36e61ade-07b8-4eaa-8068-5f79c5300b84",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ac22e9a3-d5f8-42ed-9402-8a6ed36d17b2"
        },
        "item": {
          "id": "edf236be-a24a-48d1-a9b7-bf918648a5a6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "24381c42-5a14-49f9-b2bd-fbd44ab83956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ca548b-ec83-4583-9707-bfae71b218f7",
        "cursor": {
          "ref": "a50fc8eb-9a12-4cfd-8ee1-f01a15761735",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e06e142f-8ed0-49fc-b0f1-0a691ce72791"
        },
        "item": {
          "id": "01ca548b-ec83-4583-9707-bfae71b218f7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b6054dbd-ecec-4c7c-ad58-517d07a99b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68995e87-c848-4d07-a752-f5ef38116011",
        "cursor": {
          "ref": "38074401-baeb-42e6-a59c-8ab8a3342864",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b440e4f-5ae6-443a-99b2-4133c437e232"
        },
        "item": {
          "id": "68995e87-c848-4d07-a752-f5ef38116011",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f74e5750-5d3e-4ce0-9ef1-315641a05cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c87a13-0b7f-405b-bbf3-e0ad66d28063",
        "cursor": {
          "ref": "2fa3b47b-2f90-4f12-bcaa-57c99c1bcd48",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e7a68f67-4792-49d3-b073-1e30c6ce9d16"
        },
        "item": {
          "id": "67c87a13-0b7f-405b-bbf3-e0ad66d28063",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "122b22a4-faab-4e3a-968c-c4beaf523004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c8bc0f-54d5-42fd-8133-f63ceda67fa1",
        "cursor": {
          "ref": "909897a9-2efc-48ac-8a1e-1a146db57b70",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6b617c29-9069-4dee-ab8a-270aa28570bb"
        },
        "item": {
          "id": "c9c8bc0f-54d5-42fd-8133-f63ceda67fa1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "782e5b89-15c2-409e-846b-67639fc7dedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3b0ec-0cf6-4584-9f84-846e221eb241",
        "cursor": {
          "ref": "746347ac-8f34-4cba-a741-1481df66a946",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6229dc89-c5ac-4f25-8709-719ac1e06691"
        },
        "item": {
          "id": "7cd3b0ec-0cf6-4584-9f84-846e221eb241",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8c5fab19-810a-42fd-82c1-8ecc6f0ca881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec637f8-d619-4b8d-9b7c-6d098996e6fe",
        "cursor": {
          "ref": "80fb9ad8-df1e-4f2d-abe1-d295e9946b57",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "76bbdc27-ff57-49d2-9071-0c6cb040f7f2"
        },
        "item": {
          "id": "cec637f8-d619-4b8d-9b7c-6d098996e6fe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fd905ed7-7aa6-4ed2-95ea-2e00c7ec8e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3664a781-1b6c-49d2-81ff-7e5ecbb99398",
        "cursor": {
          "ref": "b689f7db-3db5-4dc8-b9ac-35b243def1d1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c57a1363-0622-45f6-8a4a-653d882c00f9"
        },
        "item": {
          "id": "3664a781-1b6c-49d2-81ff-7e5ecbb99398",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "43b41c55-5bbe-452d-a884-e0e2c176be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20daf54f-f62a-4a8c-9244-bd41e7ef9703",
        "cursor": {
          "ref": "398428db-1cdb-4d02-8949-f4a5a9988c43",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9b5b59f4-50aa-4abd-998b-1f3610f28392"
        },
        "item": {
          "id": "20daf54f-f62a-4a8c-9244-bd41e7ef9703",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5f7b4a81-c0e5-402f-9a86-60688666ae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2863d542-3217-4c82-a9cd-8e2e78604007",
        "cursor": {
          "ref": "aee72555-900e-458e-b385-3deb761f2db5",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec0a59dc-415e-4fe2-88af-fb8b275a0200"
        },
        "item": {
          "id": "2863d542-3217-4c82-a9cd-8e2e78604007",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "742ddd27-d98a-4290-9e3a-e703ca5c16d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d55f8-aa05-4b2d-b90e-ce9add2328ac",
        "cursor": {
          "ref": "0f30c00e-b905-4d33-a557-a6e9bc665835",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b780639b-0333-4f43-837e-5227aade94c7"
        },
        "item": {
          "id": "f41d55f8-aa05-4b2d-b90e-ce9add2328ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a3f5361d-d8db-4b21-bfb6-2ea4aa9d16f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16400272-3627-4e91-9ab4-651a9bb80d29",
        "cursor": {
          "ref": "18e4c993-9a6b-476f-9dbf-401cfa5409bb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9eb4b177-753b-4868-a495-674ef31b7cb0"
        },
        "item": {
          "id": "16400272-3627-4e91-9ab4-651a9bb80d29",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "270aec7c-b83d-409b-a37e-b5739ea0ec69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e70f78b-4603-4ebb-b1b8-853ac6bf2e73",
        "cursor": {
          "ref": "746fa039-a8c2-4990-b0a7-af3a2c17eed1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd0d6b4b-845b-4014-ab5e-10ab7c16233b"
        },
        "item": {
          "id": "9e70f78b-4603-4ebb-b1b8-853ac6bf2e73",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7aa0dfa9-45c6-47cd-89e7-b1227e848a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2b9986-74f7-4700-8dfa-725527d9e290",
        "cursor": {
          "ref": "f5192a62-77a1-47eb-bbf1-0abbdbef7c52",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "32b72884-399f-4b54-81d1-9c89aa9ea5b2"
        },
        "item": {
          "id": "3b2b9986-74f7-4700-8dfa-725527d9e290",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1f6cfb4d-c085-4cc9-bff5-210044659c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cc180f-6d73-4722-bb40-1e6f139c6123",
        "cursor": {
          "ref": "6e760f87-1f00-4905-ac20-a1797ff56b69",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8f315d09-73b5-46fc-8f0a-05507498c067"
        },
        "item": {
          "id": "c6cc180f-6d73-4722-bb40-1e6f139c6123",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3611329-3432-49dc-85ee-93bbcb9f474e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4702406-a367-4312-8739-97b2484f62f5",
        "cursor": {
          "ref": "35883c9d-32d7-4def-815a-2e68eaa45304",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "13834297-6042-4bc7-901c-f4d0f9fb9796"
        },
        "item": {
          "id": "d4702406-a367-4312-8739-97b2484f62f5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "351674fd-19bd-4816-ab59-51b855cfed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ad51e-168b-4e67-9457-94d981b2fdf5",
        "cursor": {
          "ref": "b95bcf9d-1e52-4fc6-8305-a00d2729eec9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2427d0f7-82c6-4b5e-b139-3c3757f10027"
        },
        "item": {
          "id": "d50ad51e-168b-4e67-9457-94d981b2fdf5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9011afea-f7fc-4684-bf49-0f064ea61239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6deefe-d400-41b1-9993-48a6604771ed",
        "cursor": {
          "ref": "00e9f48f-2e60-4c5a-bded-c889e40f9d76",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "609f64f3-4037-44bf-b257-c933fa57ee66"
        },
        "item": {
          "id": "bf6deefe-d400-41b1-9993-48a6604771ed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06ac2536-bcc3-4405-b74a-d67f3fb0f451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e25eaa-2210-4aeb-8d10-432a9021a081",
        "cursor": {
          "ref": "f28902e1-5696-46e3-8bb2-e75e1bd0c629",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f041439c-2d98-41a9-8168-2c35aa616759"
        },
        "item": {
          "id": "b1e25eaa-2210-4aeb-8d10-432a9021a081",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6912cca4-e59f-49c5-9f55-18cd3fe724d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e289378-bb0b-4723-b284-eac5a3e95bea",
        "cursor": {
          "ref": "954d41d0-ce08-48fe-8a3a-d43b357969f5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "de74b67d-847e-4eaf-a3e4-93ed0b218fd9"
        },
        "item": {
          "id": "6e289378-bb0b-4723-b284-eac5a3e95bea",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91b5caa7-304d-4970-9e17-3bfdd3f871b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a76ba7f-73ef-4218-9fb7-fba0c5ac6e79",
        "cursor": {
          "ref": "58857251-324b-4d52-9356-d06229dd19ef",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1445743-c9cc-4acc-b78b-b649e05e4c4f"
        },
        "item": {
          "id": "9a76ba7f-73ef-4218-9fb7-fba0c5ac6e79",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9dc8413a-9a4a-4daf-b947-ddbaa02353fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca174a0-3a68-4932-a70a-375caf1010e7",
        "cursor": {
          "ref": "45056817-ef03-4cef-9cd8-78f8b7cadb52",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "504d7cd6-99f1-46df-9bbb-97f2574f7694"
        },
        "item": {
          "id": "9ca174a0-3a68-4932-a70a-375caf1010e7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c720b560-1e6c-4f22-b44a-f00d998ab0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e501043-e47d-44d6-9aa6-7fa2b219c583",
        "cursor": {
          "ref": "497a46f0-5eb4-441f-9ee1-034f87f33e50",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a93ce490-b3a6-46c5-9d7a-b7d64bf68d54"
        },
        "item": {
          "id": "8e501043-e47d-44d6-9aa6-7fa2b219c583",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c6cfbf0d-b66f-4442-ab79-28d1f9afec5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a54b8ef-5708-445e-b49c-98180e97841c",
        "cursor": {
          "ref": "dea5625c-d28a-4aab-9d88-f179b9d3d538",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6b580009-b9e9-4170-b73e-ce358e2cff24"
        },
        "item": {
          "id": "7a54b8ef-5708-445e-b49c-98180e97841c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1c53742a-6ebf-459b-ab9b-b4fcedbb5f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a56fd0d-e36f-4a81-9c72-4472524dc103",
        "cursor": {
          "ref": "39400ea7-1b7c-4c86-b11e-1ec65fb1c8ff",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e9827716-2206-4c43-858a-6d8d15ec4c5d"
        },
        "item": {
          "id": "8a56fd0d-e36f-4a81-9c72-4472524dc103",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "733ebe2f-65ec-466f-97c4-07006ddf2fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc32272-7204-4ea8-a041-2c9a1c3e351e",
        "cursor": {
          "ref": "4fbb17dc-9522-4d3a-85ee-25008e296ec2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ac166568-5d08-4844-8941-17ed4c405031"
        },
        "item": {
          "id": "6fc32272-7204-4ea8-a041-2c9a1c3e351e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80139c7c-73fd-4448-9da5-7c7b3ccba296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092ed12-3524-49fd-bf68-968b992d3b37",
        "cursor": {
          "ref": "d848c67c-9bdc-4fd7-b24e-6935cb3ac303",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fae960b2-305e-42e6-91c2-f28a9d4f6f1e"
        },
        "item": {
          "id": "3092ed12-3524-49fd-bf68-968b992d3b37",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9c03e15d-1e8f-449f-ba34-ac82a28f7305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d0dde7-75bb-4191-b4c1-12207822c1cd",
        "cursor": {
          "ref": "075ef8ae-06ce-441c-90e3-521ed3b4d53a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "46a2044c-fdd0-442a-be0d-57c8d6857d38"
        },
        "item": {
          "id": "86d0dde7-75bb-4191-b4c1-12207822c1cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "caa19e4d-f198-450c-98dd-9b0eb706232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e5c85-1883-41b6-9227-452106c6b273",
        "cursor": {
          "ref": "ef0168bb-77bf-49cb-b605-2f9e8da17fe7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ce5cfeb-dbfa-4b5a-a8d3-49b29d5bdf8f"
        },
        "item": {
          "id": "282e5c85-1883-41b6-9227-452106c6b273",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7320c94-5fd0-4f4e-9146-f789e1342027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a173cb8a-42ff-47f1-af92-66b75789f1dd",
        "cursor": {
          "ref": "02c52453-cad1-4a65-8548-b387ef26e53e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e8ae1a7c-66cd-445c-b799-6473fb45c8ed"
        },
        "item": {
          "id": "a173cb8a-42ff-47f1-af92-66b75789f1dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5211cd72-c579-4895-9f7f-35f88ef5a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16d15ea-0d1c-4d60-b00f-9e22b14098d9",
        "cursor": {
          "ref": "413ecc36-aa1d-413a-ad6c-3090f5336081",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "34359256-193e-4118-8557-c44370cedb70"
        },
        "item": {
          "id": "d16d15ea-0d1c-4d60-b00f-9e22b14098d9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b23c491e-551c-41c1-aa49-61f7040ba88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3437e2-906e-43ed-a722-49b89e52316b",
        "cursor": {
          "ref": "8fbb1c04-23c2-46ee-8725-4896b6060b1d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8620072-736c-46d7-89c3-70292fb860d9"
        },
        "item": {
          "id": "de3437e2-906e-43ed-a722-49b89e52316b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ccb7f5ce-32c3-48cf-ada0-6f0765dc0cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dd82b3-331b-4caa-b500-1d5feeab09d1",
        "cursor": {
          "ref": "d69659bc-e017-4061-b070-d961befb7b8f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8a71c185-70c8-40a8-b255-b120d2246493"
        },
        "item": {
          "id": "73dd82b3-331b-4caa-b500-1d5feeab09d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dc083aed-aba6-4064-8486-3a6d4a93f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8196b-bd1d-4bfc-a322-ff48cd7f5154",
        "cursor": {
          "ref": "c6c19f18-5c8a-4e6e-8b4b-b8061aa6b087",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d8366c99-ee28-46c3-b111-4e787ffe56fa"
        },
        "item": {
          "id": "99d8196b-bd1d-4bfc-a322-ff48cd7f5154",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7dc3b793-979e-4ee9-b59b-c799ec6f57b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd228630-5168-4509-958e-fc99168607d3",
        "cursor": {
          "ref": "4176ada0-9f75-4c18-8629-f4b48ee375f9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8bc05e16-7166-4ecc-a8df-9cd3dd5613b5"
        },
        "item": {
          "id": "fd228630-5168-4509-958e-fc99168607d3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "af735195-8a72-4c5f-aa21-a6bf84febaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cd480e-8571-4c15-b4f4-eccd2f529d34",
        "cursor": {
          "ref": "facdb3ce-ecb9-4a85-8b9b-c89dad9c1759",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bba500b5-8dc8-4bdd-95e3-32655f48a277"
        },
        "item": {
          "id": "77cd480e-8571-4c15-b4f4-eccd2f529d34",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3ceb1ecc-c1a8-4782-b8e0-eea85d44fcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a45dde3-dac6-43da-8326-f294f76875da",
        "cursor": {
          "ref": "06c79cb4-ff6c-404b-aef4-ce2e2b71016b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "86fb5741-32d4-43d9-95c0-d3016aabe394"
        },
        "item": {
          "id": "4a45dde3-dac6-43da-8326-f294f76875da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b9ac8e9a-a16e-4005-a913-cb4081adbb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2598360a-a49e-4f90-b02e-89e62e26c568",
        "cursor": {
          "ref": "9c441fa7-6eba-4764-9b5f-6ab709c7ad40",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30a53f85-4d3a-438a-8870-dd2022f60cbd"
        },
        "item": {
          "id": "2598360a-a49e-4f90-b02e-89e62e26c568",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "051b85f6-5335-452e-930d-9d4c3419c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c63eaf-9ecd-4fc7-93c9-b873037eb3b6",
        "cursor": {
          "ref": "fdd7d96f-c238-4d14-878b-331b5eff6679",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4e45214-79d4-46b0-b21e-cf635eb3b671"
        },
        "item": {
          "id": "13c63eaf-9ecd-4fc7-93c9-b873037eb3b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "10b5e092-c5b4-4a87-8a19-86c264b80704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107dabfc-955e-42b8-8811-c87e275a388d",
        "cursor": {
          "ref": "2b6ce487-6ed5-4aef-89a1-2e808e9ba994",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbb64244-9ae7-49d6-9742-4cd1752114fa"
        },
        "item": {
          "id": "107dabfc-955e-42b8-8811-c87e275a388d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0b0770a4-24ea-4641-bf44-bab24b127919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae1914-5fee-45a2-9610-7946c01ffb76",
        "cursor": {
          "ref": "c6b925f2-90bc-4723-802c-8d0890f38184",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f65ad6b8-27c0-4e5f-9c8e-c66a74df1810"
        },
        "item": {
          "id": "d4ae1914-5fee-45a2-9610-7946c01ffb76",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "672248eb-3294-454c-8334-5df243d382ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cfc0ac-b44b-455b-b2aa-6d4d5eda84a9",
        "cursor": {
          "ref": "d2611569-d47e-4408-a012-9326a5ddf735",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c3bd2fe2-85fc-477f-86f4-ca932f4adf2c"
        },
        "item": {
          "id": "35cfc0ac-b44b-455b-b2aa-6d4d5eda84a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "883400e4-eb10-4698-821b-bc6325b2aed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d6e66e-e9cc-4a23-ade1-ca8a974fbf79",
        "cursor": {
          "ref": "f4d8da47-093a-4e97-bed1-9e2ec15d3c00",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e9b87cbd-2463-40bf-88dc-eeeed93bf3be"
        },
        "item": {
          "id": "b5d6e66e-e9cc-4a23-ade1-ca8a974fbf79",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "df9a0552-caa7-4c16-85e1-b2a6be1a7209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7b689f-de95-4ae7-aa9c-9e7c54c54e38",
        "cursor": {
          "ref": "cdec9fda-ab1d-42d4-abfa-1d5b50529a1f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a284a9d0-03e0-4924-b332-4adfc1d28d6c"
        },
        "item": {
          "id": "db7b689f-de95-4ae7-aa9c-9e7c54c54e38",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e4fa9bf-bd3b-49b3-b338-f6646bb8a442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccb0d40-2b36-4ddb-a24c-df7281358a9f",
        "cursor": {
          "ref": "e3e6f202-108a-4c09-830c-0a6fbe148792",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "54180af8-7e7f-426b-b0fc-d943264419a7"
        },
        "item": {
          "id": "6ccb0d40-2b36-4ddb-a24c-df7281358a9f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f67b090-183e-450b-a88b-2018e21f5426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6414c238-3926-4ea6-b755-3aef5a4f1fd7",
        "cursor": {
          "ref": "dd1183e2-b47c-46ad-b01f-149aca7d48bf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1ec20ccd-8869-415e-a124-993279d640bb"
        },
        "item": {
          "id": "6414c238-3926-4ea6-b755-3aef5a4f1fd7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fb4f3f2c-9fe7-4369-b45c-c260d592be06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90d8216-5558-4e72-b46c-e88485a151ce",
        "cursor": {
          "ref": "2e502464-4e40-44e0-9122-fdbef0de9c82",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d618fc75-6bec-4a2c-b9e8-5fe6f88b22d8"
        },
        "item": {
          "id": "a90d8216-5558-4e72-b46c-e88485a151ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6818dca3-f7ee-4328-9e4a-5efbdb11a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e926da8e-ea14-4c43-b535-9ce3a29e313c",
        "cursor": {
          "ref": "f80cbeab-7cf9-4bae-813b-7312dff93e1b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "706761ef-d727-490d-82d3-4713fb3ffe55"
        },
        "item": {
          "id": "e926da8e-ea14-4c43-b535-9ce3a29e313c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c6971842-065b-4b8e-91eb-9fac18f918c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb293f0-f99e-4794-8118-69c554c8ffbd",
        "cursor": {
          "ref": "cfa36807-0a04-4f8a-ba74-3fcdef6e4780",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c3ce5d73-4e02-40b5-8ca8-8b082aa5f7f4"
        },
        "item": {
          "id": "7eb293f0-f99e-4794-8118-69c554c8ffbd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "af5c9255-fe50-41a8-9d22-c5f1c62ee53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a125fa5-100e-4652-970a-6c3dbaea09c7",
        "cursor": {
          "ref": "fac6f872-72dd-4c1a-ad04-c33006675c21",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ac930f04-b647-473c-8570-f7a5ee71ebd2"
        },
        "item": {
          "id": "8a125fa5-100e-4652-970a-6c3dbaea09c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8d2b227d-29ff-4aab-98f8-f6d2007f26c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5128bb3-b2f8-4951-9af6-326d07550744",
        "cursor": {
          "ref": "0ae08881-a81e-4c69-9942-3fbf5b5be648",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "145b2e50-130e-4c28-b3d3-b62b879f5cc2"
        },
        "item": {
          "id": "a5128bb3-b2f8-4951-9af6-326d07550744",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "974b73f3-c056-46d5-b8e3-2ecfed8afa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea26cb1-c09b-42ad-8cff-b91abb470f09",
        "cursor": {
          "ref": "add9cb60-956f-4972-8b5a-dd1295b8db2a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1e63d188-8ba8-41b2-a0a9-1cd8137675fe"
        },
        "item": {
          "id": "4ea26cb1-c09b-42ad-8cff-b91abb470f09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cb435c89-bfa4-490b-baa7-467e012716ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d97a28-4e34-4d37-950e-0c839705de97",
        "cursor": {
          "ref": "c0022213-c66d-4288-86b0-0b0526fd2123",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc457b78-b3a2-496f-8716-91d6990e62f7"
        },
        "item": {
          "id": "92d97a28-4e34-4d37-950e-0c839705de97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2f9818ff-3b44-4b0c-8db4-3fbdf0422d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142ea2c1-2f29-47a0-93f0-7fdff2b5b6e3",
        "cursor": {
          "ref": "f0140a66-9b09-43fc-bfc6-9f5a04fbc78d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "800aa481-bc5e-43c0-b5ef-87c020dff390"
        },
        "item": {
          "id": "142ea2c1-2f29-47a0-93f0-7fdff2b5b6e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "130a494e-9015-4bce-82f8-64402b6a0568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e1aff5-0256-47c8-8e34-ef19d93f1f41",
        "cursor": {
          "ref": "2c605e69-2e8f-4159-a02f-c9f5305b59a2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "623ac1fc-b373-4257-8f97-a01167fc4dbb"
        },
        "item": {
          "id": "12e1aff5-0256-47c8-8e34-ef19d93f1f41",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "67b4fa96-e6f9-4089-b11d-9b176ff37e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af1410a-82a1-4723-a10e-6d15da32acbb",
        "cursor": {
          "ref": "fb0fa3fa-87e6-4149-945a-41873a7e1a09",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2f25fa62-e73c-428f-b6cc-97b06f089604"
        },
        "item": {
          "id": "1af1410a-82a1-4723-a10e-6d15da32acbb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6af65ed4-8896-4b7c-867a-9c043684a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880607bb-6dae-4faf-8c06-c03d85aec3fa",
        "cursor": {
          "ref": "4eb2dcb5-385c-40ac-af77-b6aa90cc87e2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59470d5e-76f0-4714-b089-0f0fd74daf09"
        },
        "item": {
          "id": "880607bb-6dae-4faf-8c06-c03d85aec3fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9f0a4fd8-ab06-4643-bea4-7f715c155ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da08414-cf0c-4951-a549-8c68c9846e62",
        "cursor": {
          "ref": "33d4156a-cde2-4eef-a8ee-c54bb09dfb85",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "977da90d-c26f-4e9c-bee2-d9cf3b5594c0"
        },
        "item": {
          "id": "5da08414-cf0c-4951-a549-8c68c9846e62",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "045da6b3-7347-4205-be45-2f1e86d3724b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4349d33b-14e3-45ab-a65e-5e9f000c02e6",
        "cursor": {
          "ref": "7862f1c9-49b4-4dbd-b8b0-a82a5191dd38",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bee25a2f-9bda-4582-a12c-8efb9572de62"
        },
        "item": {
          "id": "4349d33b-14e3-45ab-a65e-5e9f000c02e6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a4d33aa3-b557-4577-a645-ced50018dade",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb15b02b-decd-430b-a8a2-91172e1538fc",
        "cursor": {
          "ref": "bf227f40-ae9f-40cf-b922-ba878aa072f0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ce3dae1a-4d62-4de2-947f-811a01f5c5df"
        },
        "item": {
          "id": "cb15b02b-decd-430b-a8a2-91172e1538fc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "48d31ed4-3243-4ca2-9b6e-1bd202b8c92d",
          "status": "OK",
          "code": 200,
          "responseTime": 2426,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "334b82ab-21de-481a-89e4-fc3c50c507ce",
        "cursor": {
          "ref": "dfb39c81-c570-4e66-980c-48a0dc2df2f3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd13ed07-a657-4815-a138-4947d644f3b5"
        },
        "item": {
          "id": "334b82ab-21de-481a-89e4-fc3c50c507ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0dae7544-433e-46c0-97ff-8c948015fd67",
          "status": "OK",
          "code": 200,
          "responseTime": 4541,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c968cb-da84-4010-a063-b3b5b4876a6d",
        "cursor": {
          "ref": "d1b3544f-28d9-4b7a-b6de-917a42c5889f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5bf64e62-7ae8-47ac-b512-9b38d561f9b5"
        },
        "item": {
          "id": "17c968cb-da84-4010-a063-b3b5b4876a6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "029ab61b-ab45-48db-a587-a0b742dcb4eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c968cb-da84-4010-a063-b3b5b4876a6d",
        "cursor": {
          "ref": "d1b3544f-28d9-4b7a-b6de-917a42c5889f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5bf64e62-7ae8-47ac-b512-9b38d561f9b5"
        },
        "item": {
          "id": "17c968cb-da84-4010-a063-b3b5b4876a6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "029ab61b-ab45-48db-a587-a0b742dcb4eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afb70ea-1980-4c3b-95ac-15a117efd268",
        "cursor": {
          "ref": "98f62115-1db5-4a68-b739-a9421039f810",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e9e2f85-246c-4336-a2ed-cb0f8e67148a"
        },
        "item": {
          "id": "6afb70ea-1980-4c3b-95ac-15a117efd268",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0de28b40-c0cc-465e-92fa-0e9878a1e1ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea09654-096a-439e-a06e-e4b9484595bc",
        "cursor": {
          "ref": "873d3ff3-59b2-4a8e-abe7-82cf60d04d73",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3cefb45f-98e9-4076-ad12-fdc196b58dbb"
        },
        "item": {
          "id": "aea09654-096a-439e-a06e-e4b9484595bc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "918dfb80-a900-4b58-bba9-f7d4e21de451",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}