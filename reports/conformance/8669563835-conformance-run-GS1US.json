{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "36744731-8ea7-49b9-b4f8-c9dfc2879e0d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a4e3b8d-d908-4285-b50c-38c7c5a2383a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c6f70d2-c8bc-4351-b939-792b3bf4f8ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95545ede-30c1-4ec1-be64-7d572938323e"
                }
              }
            ]
          },
          {
            "id": "73688c58-2550-48c2-928a-c6f767b353dd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d16cd87d-ec9e-4010-ae61-94d4a6b3112c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "297efeed-3880-4904-8bf6-c7b61ca52de3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "923a2a7e-bb85-49fd-a444-db0e377e3496",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8de390e0-bb76-4e76-8d61-205a2f9bf39b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0fb1f74-1ca4-4167-b0ca-b700435b9986",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "846aee6d-53e3-4163-b9a7-f53dd592382f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b251b24-6562-4eb0-9e9d-488154013184"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a61cb16-052f-41c7-adf9-ae67b4eccc34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c68403c0-6674-4047-91ac-a08004533a2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76217e75-7e37-495d-b512-e5f9ba9db729",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e7e2ac4-a9ab-457e-81fa-595d26db62b4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffa5085d-e7f0-4b02-8ad8-cfeb52e77c6c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "76c2a95e-ac75-4995-88ef-a7099a5e833a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea81c59-6da2-43a3-8356-829281a44959",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8514178-fe75-4309-9757-6df8316970c1"
            }
          }
        ]
      },
      {
        "id": "ea791dae-805f-4c97-b287-6984b7e7ffea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c8faa4c8-2f3c-4a76-8631-48e0cb405bd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3947b155-6edc-4502-afc9-efcd7a46ec27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c37f905-5a96-4c4b-84b4-81f4e0b9d6b0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2861c0c-d02a-481c-a445-f8bcea9c0f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f13267be-d0b3-40fa-8cca-0182712099f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec40d9a5-ba92-40d6-a0fd-4360241bbf45",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2da997-fa8b-4fa2-bd7f-d59b60cc2afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c603559d-3339-4b66-ade8-feccf609164b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1868975b-189f-4e8f-99b8-72de0220c75d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba60c137-6d6f-4c94-a975-10189e864b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d102a4cf-7fc7-4a65-8eff-591403c78ab5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2b11004-63ff-4edd-b233-faebd864a6bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73c17dc3-4042-40be-85e0-b0542bed190d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35052802-4b2d-497e-858f-4a350223092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1621a29b-8429-4230-b4e7-65231dd47541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e516c3-5a94-4dc0-9051-afbbb4e46a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106b7f3c-b085-4805-b20d-c17e28115e25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5470e027-ca46-425d-a97a-5ab0923d3830",
            "name": "Positive Testing",
            "item": [
              {
                "id": "773ded94-1d1e-48da-8439-3d34fc0099b7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dd129dd-b561-4830-9379-116be9b16295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2b1186e7-bed5-4a5d-842e-82754c52e40d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3711c66-7079-4ab5-9539-7ea9721f109e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2c374f16-9b7c-4c2a-b925-e20250780697"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7ce7d75-01c6-459a-988e-8e91dc7739c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "317b5183-41da-455b-9b0d-73cff0adedf9"
            }
          }
        ]
      },
      {
        "id": "e33597c2-0872-40f2-94fa-cd1312c65b8d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "02ec3c9c-2cfb-475a-b9b9-7bd351541604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb29dc21-1cec-42ee-934e-11523c70c460",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "65910293-b3af-410f-be09-c1d3b7d35012",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d106047f-d43a-4c84-adfc-11e0a9c20595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042ccd77-9fc8-4ec7-9893-fd4e781e5760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5923f926-289d-4493-990b-f87629b0f375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0fe4243-7e28-4b28-9195-ab3486f256ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c7a3db-33ae-4009-8d8c-3e9dc393c41e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e91496-7331-45a3-b3d6-917cd3706a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fdc835-2135-4f84-9c5a-549ea51064ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db85d515-4ec0-41f8-bf3c-a0a7b643d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45ec4744-a33f-4b9d-b5f6-6736a8ca0381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e33aac1-cdd7-4729-b2ae-84f425a9c1f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8885e67c-c1fe-4648-abc3-899bd3d5abeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c160a2-a2b7-4fae-9442-4812728586c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30898462-a802-4b98-9fef-77af86339e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79d5963-f154-4a0d-a319-8ef2f420ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e655c-7933-40d4-a7b5-8aa956788a9c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f40d271-2531-47d9-a734-6e2006ad2f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06624568-078c-42f7-8a6e-dc21e08db747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce243d0-ac12-4fb2-9728-bbce50d193ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36af181d-acdd-43f2-858e-aa696508d569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25cdaec-7777-497d-b44b-f7138807aa99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c18b99-83b6-4e24-a7bd-66f6777e9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da1aa77-c442-4c30-a71c-1720a17f8dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fc0ab1-efad-4a3a-a7a7-7d7a43583d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8dd8790-b270-4b2e-bc08-96595fb1931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6c1de7-8c1e-4ae9-a4f0-357edaffb9d8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3edf793-87ba-4fc5-bd5c-340b0808735c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f350ead-9c0a-4a66-b2ec-3d8a79e76a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04339ac-ca5d-424a-9070-501806edeef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e289c53f-155b-4c99-94df-4fc0e1098bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a654fc-83cb-4c2c-bed7-4c49ef3a94d1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a46e5-0e38-4ae1-bd7d-240f8cff00ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3466ceb3-8a0d-48fa-bb65-2cc1e467d8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39feabcb-4934-4925-a444-c96697f176ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fc145f6-f543-4851-b3cd-21168ceff938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4601468-c71b-452d-86c8-cafcc9cf9d5f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99184743-c306-4999-9ff8-f641bc6709d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4c0b4c-8e76-4a2a-92fc-0820db182922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127ea9dc-5a9d-47d6-88ac-6dcc778590ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc5b997-474b-4077-8a15-c95e02264334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adae2012-4999-4dde-a22d-3c024b91b7ca",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55a090-a890-4f1b-b295-8e70c33b72b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b1766d-01c6-470b-a767-7cf9cb12ec9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda99139-3e54-424f-8797-351b07a7bb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89076ce3-42a0-432e-bde9-9622529b6cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197bb503-330c-44fb-a386-cc2dfa67c4eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6426020b-6762-476e-a7ba-a351eb28067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dde0675-686f-4aab-8f60-ccd4e9357d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03afce93-1c27-4d53-ac4d-e0b0d7cad2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f2f76ee-3d6c-4af8-a6db-dc359de0f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cae638-1801-4e2f-9b70-51bc3d929200",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379fff46-3938-42dc-911f-5e950efcb8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319f6e0b-2e02-4cc3-8fe4-8fa23ee9687b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b3a639-6957-4f86-92e4-8ae0cbc60894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a4b038a-87f5-437d-832f-5292fe62005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf7c097-f6c5-4f08-8273-f3cd7be2ca1c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49dc2cc-6423-4925-9459-f5979ef63281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e8026b-c19e-45ae-a265-8879ae9b5344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f4648f-6ea6-45cc-b64c-ece2415f3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c100454d-d243-43a8-afd3-406177822c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc3a6b1-38ea-4bd6-9a92-94e0c33d87c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4d35c3-3dea-4bad-944e-425f81cba8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e9f797-7e60-4bd0-aa7b-c61946ee7f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a4a9a5-3ff8-4d4e-a997-2792a687009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "067e43e1-f069-4df3-8f13-8ce047c2cf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e30e03-5aa5-4bfd-9859-9483aceb4c76",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15cc55b-5212-4889-9470-e74c653e9f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eaad8b-a8c9-4181-aac0-179985806b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070db8bb-56ec-4f88-917e-063d2a12e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebb650d5-8bd4-4975-abf7-6245769c2ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22f564-9bae-467f-8e6b-01fc0f75514e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973e4b24-1b9d-44f0-81b0-d64071cafe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29ca5ae-5711-4364-a510-7947b3ccd332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6a0469-dad0-466a-ac2a-87ff6bcf2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "105743b0-6f0c-4bba-9614-e5511596480c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b806ce5-ea7d-40bb-914e-c9afdd853bc4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bca0d33-0076-4667-9aba-8d11bfe1d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fcd9e2-6fb2-4d72-bb6c-3d7d9f08ca0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626b4481-9a84-4950-8477-a8f5589662fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db80223b-c62e-46b5-bb0d-7a796a455720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9519bf4a-52a5-4be9-85c1-8038980b12ad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b043664-b648-4ab0-a894-5f6a6f2e3e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4e7b53-fa81-4eed-88db-e7b38e5ce530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6638689c-5bf3-4e94-9359-ff3e93ccb943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889f9aee-77bb-4410-b77b-ca456b9663b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68184ff-d2c5-4297-8724-da221956913f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8255f9-9e06-46f0-a3a7-3b6fd7179a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2078bf4-4939-4c22-8877-20db13e11490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3f5969-4d3f-4965-be01-a99ab0099a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f09f42-c5e8-4086-a117-1bd757cf0343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4eb700-e552-451c-a201-4bb41536f17f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c08465a-c80e-48d4-aa88-1db2e00f37d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a862b6-c104-404e-a883-e4bcda74f7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac4d2cd-9178-4642-9f55-82dd47c4704b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed508b7-db81-45c0-8ef6-6e2708efdd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5330f1d-0bef-424e-8a45-d90581864f26",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47444e9b-7557-42c1-aaff-f7e3994e1ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f97aeb-f8e0-488a-af0f-e1b95f50ba5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef9ae23-b51b-4b90-a9ca-b92b0dc05eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a550f11-dc1c-4836-a60c-8c20f1a73612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9949be1-29a9-428c-974a-c6c16bc18892",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c6278b-c63d-4323-a9e7-5cde217f7182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3474f6-8bf1-4c02-a4bf-eb6e4962aa95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4103bd-28eb-4a27-b59e-427609945fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90960677-77d6-4a0f-9e05-2647a8748174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbad55-24ad-4f3a-b80c-c157c456f423",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c0b0cc-2f06-4c21-80ce-993071e8c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35462808-f39f-4c26-aba6-c2ae5822f89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7795c2-65dc-4512-a576-b3a503516358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad296f0-7b52-4df9-96d8-9be595a6141e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df84339-beaa-4460-bbb0-9133d11a72ef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfd941f-e6e4-4d47-bcf1-8f9dccdee609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d15ebdf-9ea8-47c5-9a54-981eb0e235e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a78d05-968d-4a86-82fb-8a6cbe650e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "023ae929-9e58-4940-9713-25c300985962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd898d3-0dac-4f1f-90ab-ce0e81ca7cd3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541af7d5-e1fb-498b-9a28-be1ce8a24d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870a9c53-6679-4fcc-a1ef-34d656bbe90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee584f-cf61-491b-963a-79d115f83a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "181d770b-6eb3-4eba-9d3b-075195dc5ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d421ef-b4bd-493e-bacb-ef8ffea1440e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4f5a98-fd16-4810-819b-fbc7dc0fe7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36712248-c99c-428c-be69-64282858a8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7368a-b8ed-41e5-83f2-ef0d34d173d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dded1efb-43cc-4d14-ba0b-ae975f4d3daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830cb907-4c04-4354-a70a-3470f6fa82f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cee1af-1c4c-4f9b-94bb-119853dea9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c82ede-c23d-4218-b4ae-f083fa7c1ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e409ce-2847-44e5-82c5-df50e10d7336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c7c83d-93b2-46b5-b0ba-25af1c41c7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b9420a-7a9a-46ea-96e5-c24c606027b6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7eb53c-a1a5-4160-b5c8-d6352a748c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4881712-f01d-44e7-b9f9-8452c1edf51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ca5d7e-03a8-43b4-afa3-395440c99bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a9edc-a161-466b-b3fc-704b0d73bad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9078ca09-8792-4cd8-840f-0855e9966034",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94dad2b-a057-4aec-8b72-8c0b7961ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cd7fc5-544f-482a-ba26-e18b87cb5220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db5a001-f703-49b7-abaa-71d561fdb392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8987d366-030e-4efb-9731-9426884caaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616b7662-65ac-4236-84dc-a845fb035fee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ec2692-6771-475e-a443-0b18c80ede73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d670fa3b-836b-4c44-b5b8-29ce2f379415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d366d8-f6ac-4fb3-9ef3-55d3a9b7287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3389d8-5d9d-4c42-b03c-b3976440538e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b1a73-6767-4be3-813b-f1971a1ac567",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb011320-3479-4a7a-9c22-5536d6832690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3546a20e-00d1-4dd9-b065-eea279d383f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf9854-22bf-40b8-aa45-c4d1d5d8301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a018ce-d833-4273-8bf0-5a3203d47a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3334b0f3-ef3b-4812-b588-389e14b4573e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfc419d-92cf-4d94-b66f-3f58e849c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7e704a-f6f1-4c1b-bd22-92a19a696544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a26a139-a081-41d8-98a8-b63b3c59c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "051a94d6-81b1-454e-b7ea-b4a9bfa16b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e519f0-e990-4aec-8d32-e5bee6ac12a0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ba23aa-5335-44d1-8c18-e58ae9c40997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53223e7c-e12f-401a-a0ed-b5f7847d9f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677d20de-e5b5-410e-988a-c46adea54ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "866551b8-0a6d-4b29-90b2-57664b761787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3343c10c-d722-4861-a42e-522017d93a1b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7edf11-c1a3-422d-af3b-266a1d857cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011d6568-f521-4677-9916-ce5b559538b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3ff270-bc92-4599-a2a0-ff0e70087fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a922f8f-6e29-49e2-bb05-85948a4f0664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c10c446-9278-4358-92cd-33d4c7e86007",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41378e69-60fe-4ab5-b8dd-f77a510be39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ff04c5-486b-43ee-9ded-ebe849ade1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505d7ad1-c512-4a21-9618-bd2b47c31d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03d83c8-8a6c-4dd9-ba17-845ed03ebbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb86990-b67d-4037-9f89-505ef12e8dc0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dca82c-a26d-450a-90cb-e1557d31e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf7181e-d54f-4bf4-a81f-b53a9ecc0dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a13079-78e5-44b2-9fac-1d9b64fc0a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5eb37d-4b8e-432b-b1fc-cb95db973a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c15893-21a3-4574-8dd8-d3169e380774",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af862144-d86e-4623-9ede-ca10ee14fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c5caf4b-5357-4a14-ae40-a2c45b39ad45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e514e8b1-29a9-4250-b596-ce8c1d2de91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "860fe8ee-aa4e-42d2-9d10-2681322c9739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d2094d-2029-475b-9e9e-fa230dc6077c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6694152-47b0-4e14-b435-07a4773c27c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7dacb67-c5b1-4dee-966a-2e09aaca9637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319536a3-bec2-422f-bed8-afd64ca7d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adeb9591-a2a3-42b1-a958-3a77e2a1f76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37da813-7a3f-4833-a802-2d343ae1d7cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797756df-f37a-43c2-b9d3-5426dfc4e612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06810a-aa4d-4e0e-9b95-700f2052a7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee21dbe-1bc6-48d3-94d1-e3ab3b62155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30efc0ce-55bb-4287-be94-a68b2441aa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4cd6eb-06f1-47ea-9f0f-2b39e0a46735",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecfc502-f1cf-4d8d-aca9-acfa792422ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051ca5ab-0daa-405a-8196-ce9fe13e1481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d30cc93-293d-4444-9a66-8a7bc0292ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef91f54-b415-4289-b78c-a85b5d48c5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd687dce-f1ef-4bfb-9d40-3a32afa6c330",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd48058-7c89-4fee-9ad3-3ea9dd54864e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6200263-f73d-4d8a-bcad-c876eafd6af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a0678-ea1d-4818-8674-cb6a3ac67e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3650cfa1-43a6-4e92-91e1-cd1ff551752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095bb215-4aeb-4457-a986-86a6c035745e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413fabe3-8f47-4266-8a3b-b0b63fc6257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209074f0-35b4-4682-8c33-fc542db8c844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b751318e-847f-41d9-bb8a-7b1dafe5a4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96216004-533f-434a-8cf0-ed1cafa115ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4bd696-4e94-46f0-9c85-35b33a7a7b48",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41f12ea-724d-4b29-8d62-e51b32a36267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888e81b-7321-49bb-9bc9-07329e05f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e355bb-7bfb-4ff2-bc8a-d65d8ce1d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bfddd007-1397-495e-b8bd-694f02e23317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29c316e-045f-469e-ba17-429f60f0b976",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f709fa-fb50-4993-ac68-c0a2ee24776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55a6534-7115-4dae-8f08-34ca9ce33e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4b6283-d387-4e58-a144-03f19682b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "16f2169f-4953-446e-ba05-90e489568158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bd39b6-18a3-44be-860e-e85cacf46be9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d09b9a1-2bdb-4703-8422-dbcff5467b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c734037-1031-4d1d-92d9-057801a1d286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36604d86-1446-4c6e-8b5a-afaba5fb46f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "15af5f90-0ecf-4f2a-a339-2bf1f8df741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c389259-15fd-46d4-9bf2-d601f0a46181",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae85976c-0001-4f64-a4a9-623a7f9ed7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa73216e-9796-4ab0-a99b-5e6cfd43e345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b671276d-4d52-4ddd-b38f-42621b4f20c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "970dbbad-02d0-489e-98a9-90a3f6e021e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46db1bce-9f2f-45f6-82c6-7afa9822b83d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb4a682-bdf2-4fa3-b90e-3a487d70e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e8962a-ca20-4816-9557-5a986d4ca30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0736d9bc-1683-473c-8694-13e576506dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f976e5d-f95f-4b61-9a7e-21aede1de308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ed34ee-43d9-4e53-81bc-fcdfa89398f0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762930c3-9939-402b-aefe-871701c84885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1817e65f-e771-4b34-915b-b318cd76b1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bffaab-529b-426d-97ae-6246e53ed343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac7519-8179-4fe5-a54a-d6f580d47d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5360fd-9ceb-4eb1-ad27-1b50800c957e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424cee4d-f77a-4d84-827b-43ef3e47e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab1cf97-5e80-45cb-8834-17b6eaaf8a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07b0d50-45d8-4621-af0f-3d7e923f9db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "396287c7-9d4c-4bc0-8192-17b8a7208ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ae09dc-666c-46dd-9fd4-cf9d57947745",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e23e6f-3fe7-4791-9cd2-7751c2ef5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60260336-a054-4df9-bebf-16d966b726c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c96ff1-1e47-4b1f-a139-571b932aa7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec160e96-dbc6-4b48-a12a-34823a8f52bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c861bb-592f-43b4-a714-6db5ca5084a4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b6226-9ae9-45f8-92e1-200f5010c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9789be-1bcc-4fb1-ba3b-bab82c7b95ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d503568b-cebc-49de-9006-8c36681da072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8da0f070-c45e-4fa0-8389-97f7fa3fc9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd608964-39b2-4e66-bb82-86af35410737",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24cc64f-48f9-45c2-9a27-5ad717a99557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d8e8f7-bf77-4fdb-a165-ac98e1d9ed0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4118cef6-eedc-4973-ac22-e5f930a31cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9938b9d7-926d-4f16-a3c7-86c26117ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dac989-9b15-4277-8eda-2599daf4469c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f767e2-c0e5-48d8-a9e8-f47f7c299815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e8a4aa-be56-4cad-bf2f-dfd3a5146d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9b1ed2-5d97-4a33-a1ea-0c947635f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2025eed-677a-4c2e-a743-c3c453f9acea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574788ff-8050-4384-a6f6-59a2d11ae992",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b616fc44-72d3-4303-9129-49c945836bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbc5047-7dc4-4f4c-a20b-740331e982f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0a2d0a-9270-41ed-a4fd-d6c1b1057dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c009eb78-1439-48df-89bd-835329bbf29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56784baa-2990-4d4d-98b4-15539ed221bd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980279e3-629b-414a-9233-3843cb130c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5bd62a-8128-48b7-951d-f0389b8ac934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6072a9-12c3-49ea-b2b2-1ef3fa76ec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d58a5a-b11f-42dc-a41d-29d1882be6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01de7dc6-c402-4d04-8090-9183bda075ee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d751ae-f6eb-48f0-849c-85e07f28a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82843db-2d31-4d87-b325-a111fd514e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a050a40a-d565-4895-9033-df143c77d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "661830ba-4a2b-4041-881d-c95d099fe375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865c593-a50e-4f60-9367-9ad811138d61",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d1b257-5cb8-4cd8-a80c-5a78c9c508ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0c15fc-8bbe-494e-877e-fa5cfcbb021e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51b5296-0376-4b63-ab43-7ac1acf97517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "585fc64f-1428-4fef-bdc2-2548ed84b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7d1212-28fd-4787-9283-18985c129382",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c38fcf1-2109-4633-b5a4-b76079b872b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd287355-e284-4680-a858-7ea365248a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b07362-a1c5-48cc-a2fe-ece459dbbe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b39c1e-2890-4a36-ba83-358823874948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c3ce4-47a7-4d36-879d-304ab11b3bb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae020a45-6037-4d0d-b558-6ef0d6180d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26175e8a-c13f-45e8-9988-726708b7f693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ed6640-205e-490c-8ab7-c5ec2bb62969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab39aa80-c6bd-4358-8a73-0f98a9ac9f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b87ca2-d80a-407a-b721-8e09e54a4c07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef729031-4083-467e-905b-9bfe0feb1239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a009bf4d-9289-4abb-bf27-fff3e8bf3038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb12308-fa79-4016-8aba-502978288a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d8eaee-b918-48fc-9bcf-644e8a1c1534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a54e15-bfe0-4ba4-8da7-0cbfb44d4efc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66414ca-177b-4c65-8beb-53bb2e8f19dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7355dd0-0121-4ec6-a062-2ae7c9982222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f1a261-deff-467a-b79c-3e9d0f38cfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dde40a89-2b1f-40da-bdc1-fa3958b4b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05982de5-c4c6-431e-9fd0-15ad2c919120",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b16bf1-e887-470f-b015-f88224f425a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e750e8ee-51d8-4da5-8863-908957ad7c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44281cdb-8b4b-4cf8-a62d-b4388c1904c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22c8b2c2-5721-48c5-87e3-46632428c6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc670bc0-dfd6-4581-9369-eb3eb83a6d2b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1451650a-1f55-4315-a197-94ab6a62c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5324a1c3-3bcf-469c-a3e7-88f684bc1224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99398e8e-c373-4eb5-b5ec-06c4cfda96ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b394a9d-32d5-494b-ac09-a4adf6fa867c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e51519-d07c-4106-a54e-8cd264de6177",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1f2ef2-58db-4bdc-b887-6478d1429ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc34c6d1-40f2-432e-a0ea-212e49c241ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9547b493-27ca-47cc-9011-149782affe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59eba432-4e24-48c6-97f3-20a6d443cc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3c7f7-b2a9-45fb-a3eb-f76d354e3617",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e8ca75-3d27-4887-a845-345496779545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ec7828-b0d0-465c-b70d-2ab351e21bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c138f-7031-4b3a-ab1c-1f4791a91ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34233b99-009e-4bc5-b2f4-f56f81cf0d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3213570d-3863-40c4-a4ae-1c505aafcc6c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d86fcf4-7ad4-4e2f-a6be-826ce6f8a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedc6265-9017-4d7d-9465-84efdb8430cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc6796d-6de4-46e2-a765-fdadc9b951d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c882f5-55b6-4a0b-a1d9-af6a76f5b045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0925d4-26ac-4d86-a276-d07dd02440a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cb7b3b-4d5f-44ca-a45e-3bed34772b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703578b6-18ce-4028-b84f-524466557d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2539b802-2156-46b0-88d2-0025aa95a831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1663661c-643c-404f-9870-f23e71c08526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29833314-0af7-414a-a3bd-bb4d1c2a00b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7904d2c-3501-4d05-ab23-621622eb0e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ff402b-2c67-4a52-b340-e8010df6c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bfc94d-ebb3-427d-b3dd-0fe3b6fac37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7da1635c-be72-4b5b-ba55-e35c949b8c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70d81b-eb48-406c-9fac-6f1b90b0da18",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352aa3d-74f7-40e8-8256-3119b8cd35eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2425bb6-86af-4675-bdfe-0ddd4cb7ab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366233b5-0ad8-4453-b14d-6c7a60ea4c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e715ff13-d1cf-4038-ac68-f6908536dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b3147d-1bb9-42a7-ada9-a105bcb4ed5a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412f1eb-417d-43c5-8900-79dcbb3023a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0e6ed-8974-43eb-904f-fea2a3309afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf605eb7-1667-46b8-a126-99f1fac651b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a692a8-93e5-418a-89ad-f82f217accf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe7373a-4ad6-4a4c-a73a-47f541d1c9f5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bece84-94e9-4e53-97c8-d1340c15266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602031f1-4f5d-465e-bd06-5034d9debb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5e3fe-5e07-45af-8b3f-0fa9f3554abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34cb65c8-607f-49ae-a395-37389186844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bfe58a-2d12-4fa1-bffb-5b2f96c60aa7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca100e3-7c2f-43fc-ad96-fe3567211a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375f8e4f-78bd-4740-a720-e91fc7597f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65db643-ca65-4e9f-8d46-5859eaaef6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca567e67-b87d-40ef-ab54-9edbd6a041a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca47145-b671-46b5-8604-2ae2c8d1eeb5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cbcc2a-00e9-46cc-9ff9-a39809d0a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613dc3da-760e-40f6-a784-5c815c76eb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091bac6-f8ad-4300-97d9-4c79d41c3b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3489913-c217-4932-8961-614b5ee0d5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730eac1-c79a-4118-b589-ea9e36c7bf35",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea39ebe-b7ce-4ddd-bc34-a483d8ccd12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4973f537-5a82-4f6a-bcca-c013515bcb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef40e61-a83a-4e16-85c9-e4ce9150e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f67fc4-ad3b-4a84-9163-66b5703b6770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a480fe-8247-46d8-b6fd-45ec60e7eb64",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd80dd60-475f-43ba-a2bb-19cac788b387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0e8caf-26ff-4841-9fc5-c6dafa08e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577d6247-ec1f-4722-addb-1b47381f4eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e67f09af-8973-416f-8f44-a73f47f7306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270cf96-3c5c-4fd2-94ba-97be36cc887b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c546e671-2729-4c2b-a893-70cff890271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1869fa45-df74-47c8-9bdd-564225436f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39eb286-8572-43d5-9823-29e664e22fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae2c571-b53a-408d-ba90-403ace28924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a428d-a4da-4322-a3d2-b1151e3528c5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a0503c-f1ec-4bf8-8642-ccb8d1af0bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcee184-719e-4418-8109-2823af6d77d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b74c1a9-3392-4d84-94d5-053b83a8c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "964fe858-1450-4378-b29d-f29284932180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16be21e0-39cd-4342-8121-571a03dc3c5b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e0a8c4-beb8-4105-8927-3adbd00a0e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7171f3-2f68-4f81-9ed4-01695b28d85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744e4492-feed-42db-b9e9-ca7621862c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aae4cf4-15ab-426a-9c36-1d7c8f87806a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2350f5b3-9ed7-4bd5-b786-3893f25a2205",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b59f39-8699-4bb8-99b4-21fe4ca67beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c3ad30-c762-413d-980e-2c13027d2f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98023934-a2a7-4c23-8fba-725171cbed51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c287c6d8-3a67-4274-9776-dcf1e2e97115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eec717-8a71-4fec-84df-df7f05b456d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005ec6ac-b2ed-4202-bd15-075b1126307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a0a0d5-988e-4b9a-996e-0d4eeaf39fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2c4390-439b-4149-b2a3-5f9633196cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34327de7-f464-4949-af34-678b82ebbf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197e50c-e0ed-4cf7-b3bb-3aef155b36ab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd36352-d710-43d0-9c5b-13bdf7f15fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02fd2e5-6c64-412e-bff2-8c9970a645d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4733f22a-2943-4868-97b3-3d0a5a4c2961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01a6cea3-bc03-40a9-b128-54e329dcee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd48ee7c-5301-420a-a45f-0d867699d92e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64652c05-cb43-4d45-9c82-52814b119e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d15d892-8dab-4c50-a431-9cfb1fc2e8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed07a3f6-f08b-408b-9483-b304068341e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3143c6b0-491c-4506-867d-f6f2a16cc5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3035515-0eab-4c85-ab6c-22add0eb8b1c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6abe7b-ec63-406a-b00b-373dc5796c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913d4af1-9508-4cca-b58c-0d9141e2af14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da30f7-cc81-4246-a87e-726d71b7ce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "235a5a85-f575-47c1-bae2-8916f10391c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b8ead-db19-4ac6-b9b7-83c7b67c8c28",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466eff49-85cd-4aa8-adf7-2f6efe0d36bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9cd43f-7cb3-4d99-8cc2-495ea795d3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788e5b41-1792-40aa-967a-b769dbf2f9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5d3bdc-2e7c-4a87-b435-77c3c6e67eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e92fe2-6090-4bdc-8695-baf8d34973d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15beef61-afe0-4300-b0fd-59ec8650f235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748e9949-84ba-47cd-bab8-1ab75665727f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e833498-0b1a-4ceb-a780-3acbe6872f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "038790da-9982-4d7d-9117-48c536eb66ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4694eba7-90ea-49dd-9da6-53e18f5c6d22",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed86be1-7ffd-4508-ba7a-39cb79f0469c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c549340b-9219-49c1-babf-1975cdeaa1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c958dc9-3c4a-45d4-b50b-cce3cda426f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "381269d2-2801-49fc-a481-f4450bd0a52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b69ef6-509b-4b02-89f9-0ef041fdd7e5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2199ef-f327-4d3d-824c-78401748857b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f47bba-a8cf-427f-a0a1-1903f2e5ae88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4f0e78-3367-4ae5-a893-def4d4ebb236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64317525-705a-40d4-bd86-8d2edf98a38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301ae4b2-ef05-4c8c-a4b4-271adafba0e5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68ae8e6-a4c9-44fa-b8e6-df19ecaf2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2ea6c8-3e8c-46b6-be16-8af460140f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84208fff-2fbd-4f9d-b03e-fe7f88f21c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e66332fd-f683-4f6f-b405-7f05dbef1c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611b8706-2c46-4fd8-aa18-4ca297e3e246",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f691b5-e71b-484c-a0e4-5a52739b48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2204676c-7ddf-47e0-9ec7-98e76631d0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2190c091-8d7c-476e-8866-597ba135e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8ee8ed-7d2c-405e-b8cc-b126add0df19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d2f060-b2b2-4dad-81db-d72625885eb4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f79ee6a-46c5-444f-8ce1-86af2e316461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2925ca5a-de3d-47e9-a18c-00326901ad2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6848191-a197-4d38-8aa4-9f5a01a824f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3510b8-8a07-4d0c-a1cd-eafc30837f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8443bdd5-fb3c-41db-915c-a23f3de7b6ac",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a558c0-0db7-45db-b486-398d20347a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bda8a69-46a9-46d6-a1fa-a7a9dd4f19f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5fc99b-7ae4-41a7-abf3-84025dbdc7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "849b4043-1699-4c59-8bec-5fc221b897d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdf7df4-0f3d-4315-8ace-99fd8d49b8ba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c988b385-0b8c-4e43-8a71-9323b6d819a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e13d31-b50d-44cf-bce9-9f2ddfb88bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3582248-f8be-491f-81fe-3a739c88c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d395eec0-646b-4ee6-9489-4f3b88eb2825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5418e-96f2-4ddd-aeeb-5dba65597631",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a0b62-bbe5-43dc-b219-71585a27f938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "000ab1a0-aa59-498d-957a-6bbf69c4201b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61e54d-8971-412f-94d2-79a9d2e9b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6967bd0-248f-44c9-a12d-e3dc801bd8a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9d4a027-ea23-44d5-bf1b-133ee82d09d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9bcb2fd-e66a-4b5d-922d-7a9f17fe09a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0288326-cc92-4625-9dce-9e5bd8cd63da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c73524-7c5f-4d63-9108-764442027406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46512ed-2ba4-4cd9-bafa-2120a7662977",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d417936-562a-4990-aa30-70f738f3d044"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb4ce5a-e8bf-4978-acf8-a3b0d663b05b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e3eb8c8-923e-47dc-a752-6f802c047b21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12fbcff2-db1f-49e3-9134-33238e0889de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4bb8da9-43eb-493e-9a26-59f64eaae6e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b303ea3e-756d-40a0-a1f7-dd7a5fb6ec85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe4a9891-3c79-4f77-bd99-48461ea2404d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27f81db7-63f4-46de-aa4a-ac8a71c4d52b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d5c04ea-72b3-4de1-803e-e3f28ec6ae52"
                }
              }
            ]
          },
          {
            "id": "7a7c15c0-cebb-400d-934b-1b2764b0a0eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64464055-3eeb-42f1-bd81-d30f32a9a119",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c75bfacd-616d-4500-9062-0755cc50abb7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e483e996-7902-4d07-be97-198dcb0d4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9811105-3c08-4acb-98e5-41ae1081a4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b0755b-d22a-44c1-ad26-3e3837e3d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b310e15-9750-40d8-a26e-c924c5a2041d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "522bfda3-9bc2-4b73-9c5c-78868ea3a516",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a361ab79-6051-4059-80ab-e852bdbd9339",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a1c242e-a538-4472-b44f-377bbc00ee03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14e3456-22ae-47c2-bd32-3f8bf565dcd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e0cfa38-9307-4cd5-9c10-d7d1275991f3"
                    }
                  }
                ]
              },
              {
                "id": "17d947c9-c7ea-4d54-8a62-52326cf3de8c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e4833b9-a206-43a7-855f-773f6f113fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "337f5afe-c03a-4f97-9f59-5350f48f2929"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1673c86b-ee0d-46fa-832f-edefe3f81e73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2130474a-514c-43e9-b578-3cf537d7e84a"
                    }
                  }
                ]
              },
              {
                "id": "7ddfb04b-66bb-4f06-8e18-f21de034b4ed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0c166aa-4c80-4ed1-8133-fac157b10b59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "700adddc-0bab-4d19-a5b0-d833ce036dec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f87a67c-775a-4bec-904d-86bd29677fc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a57c6ec4-8a12-450c-91e1-0d5cdeb8fd38"
                    }
                  }
                ]
              },
              {
                "id": "16321cd5-481a-4f0e-9be9-f947147117ca",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e531216a-6010-4747-8b66-d0cf055fcfb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67f4eb55-4185-47dd-93d0-67b6b2b8c8e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047eea51-495c-49c3-84c8-7dcfb383efe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bfc5c438-27d8-4731-9db9-f84e88771f20"
                    }
                  }
                ]
              },
              {
                "id": "b0f3200c-e743-412f-9818-0646ff0e4c01",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e655c8b6-8b4c-4f69-8ee6-6b2d7d97d6d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8087d08b-fc96-4453-a0ea-28009e310d1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e33e03e-41bd-462a-b0c9-207b9f695897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c292758d-6fe1-4657-8aee-7b85390438fc"
                    }
                  }
                ]
              },
              {
                "id": "af546932-a2e5-4339-a784-34c1a13d076f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01866c1d-d5eb-4e83-8deb-9d1b335f7d55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "451f4423-e0e9-4b36-82db-621cb0fdeb16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5524dc5-95d7-475c-a5bd-d7b316fe6223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0594d6e-bcd1-44f2-9f75-f688330949cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "437694c0-3073-438e-a740-11c0d4c2bda7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca993236-a8ac-4090-8548-8b9bb94a6941"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d05f223-302a-4d6c-a9e4-ef3999b9ea04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8af06b6-197b-4195-97f2-5ba0c65f6167"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "248eec7a-d1a2-463d-a411-09add9d8099d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "995d2bd0-8cc7-4a39-815c-62f6ed6e70e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbaaa2de-ccfe-4442-b8fa-3b3f20f7d4b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9026437f-59f1-4358-95c3-36778136899c"
            }
          }
        ]
      },
      {
        "id": "44f13152-0301-4242-aa0c-8755c8e5f1f2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dcc53c5a-d468-499f-bcd4-5736b5be5bd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02568e36-48f7-42ec-91a4-3ee0256f5c7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6198c8b1-f61f-459f-9a5f-546ed3c24228",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e242aec-8624-4ce0-83e7-f58ce7283238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ffa616-4480-434e-bb0c-70ab2496082b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50ec17b-01f9-471b-a330-09d49c68238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5df109-5bc7-4bf0-b93d-6f337189bee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba3e626-abfc-4f2a-b9ad-9f23d0d7b876",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2d101f-50ac-4081-bce4-da7043aae754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdbab0c-d1c6-42e0-bf4d-a8d312d6a9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c4d4e1-cd0a-4df2-a661-8b92eff35cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25361b98-ed65-47ed-908b-e3e3b680160d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c81f1f-b9ed-4087-9579-083749450818",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9af9d4-d52d-42d6-b76e-b9ce74e9c00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b12f0e2-45fa-419f-acd3-d5cc5c5bde07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c237b60e-d395-4027-856d-0eb9e152af9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b1eb19-d633-42dd-ad86-2dc4becba96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ef156-b2cb-4a2c-b28f-987b1969ee8b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83912921-07bf-40fa-91d2-055f697315a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f36319-9feb-4868-86fd-5e1764f58e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2caa2d9-869a-4d69-b7c3-df5a3623170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "915e9cd5-2020-4bd7-aa11-5687ae9b58d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd77b5a6-f4ce-4a03-b21d-6b084a96628b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7481c81b-0387-4f09-9d06-57da0b73ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75728b1-b425-4b6b-96cd-a9efffc69366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c6c11a-3c99-400d-9d04-250dca1a633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d5003a-662a-488a-bf22-5d27dd00cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c8ff9-e9d5-4f3a-9466-ce3de0551a8e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee222c42-4eb9-485e-94a2-6c57d49b9674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ac62c5-4d9f-40f6-8281-b946f8b40f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd0fb63-71c6-40d1-b461-80490d73f805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbc0f5e-e7d7-4779-8dad-b4f83141e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f271421-df84-4b1d-9c0f-d7b0c7f9714a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b0df35-dac0-4248-9352-9da4709170a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ef2247-2981-4e18-931d-74bd0809bae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ce81f2-0cc7-429e-811b-7b35bd00d8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb75a0ec-1828-4d2f-be08-803f2303cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c117ef7a-6b06-4b99-b9a5-a9b4b24bb801",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c0655-b0ca-4801-a22e-3692656f5a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f55dac-4ec8-464d-90aa-23539bb0ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd19e88-7460-4f96-ae9d-b51214923d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bc27f3-b7ec-41be-b153-c5290e53ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25213c8e-bd89-4075-8da8-e21967d1cfff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5057ea1-b8bf-46ed-b84e-cecf89d8cad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9772e24-c219-4ec4-83df-9a0d06d8a996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd46780-201e-465a-b876-cf5a9d42717e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd391ac-4aef-4c20-8b6a-06161f307b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376b7123-3027-4225-a1b8-c0e3c147e8ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32832512-f786-4070-b406-aaa5a5b1129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac298afc-61a1-4e5d-80db-9cd1580d8e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c80f701-6c11-4a63-a4f1-ed387aaae208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd93d11-aa43-4da5-b92f-b5941cdb9c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab39d764-ad03-4c99-a7c3-21671b8ce568",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e571d40-3b7d-4555-b6b1-efd9aa278e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597b4afc-f159-45c0-bdc5-ac52b62a0be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79553c2-ea62-45ba-861b-f259b13c500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "068c44d8-3b24-4426-a7af-a48945525382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e1a486-796f-44c4-831d-fe04bb45bc36",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aaf173-f5b1-4c55-a724-f532bad446e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1097e9-67d1-4c7a-a10d-2aed3ed11412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4499de70-13b5-4ded-809d-025ccb628a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0173e1-38e7-4371-a26d-adfd2547ce72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7764395a-00d8-4590-8c30-8ebb4f6ec8a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d2254-0b86-4685-bc5f-ae9001d39aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931a10b0-3bdd-46ca-8ba8-1e742e6e9526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60f2380-b9a9-4b80-a29b-cac2eb3b05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42231ff-bf33-4a56-b330-70995eb07c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bcb550-ecba-4538-aaf7-5aa705c6c178",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fc300d-8721-4cd3-8509-1216ac369e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b72586-91b2-4cbc-bba7-947c8eecf038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1281b51c-ac46-464f-aed6-c6f6052001a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0682775c-d17e-48a6-b176-15911ed6300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfcb76-082c-4f9c-ac68-b28d1de3fba9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ee695d-d241-438c-994c-8a72b5face8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e012c26-d58c-4927-8425-1457244fad8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3bcab6-62e2-44fe-b98c-5537e6e54325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0289da8d-b6ac-4fe0-a353-da46ce75958c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1c46e2-6196-4a2b-802e-bfcf1af965e2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb661659-3c3f-46e8-8842-b1a39449dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693ad9be-78bf-4b72-b47f-4ac0e19ae59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73dfce5-7201-4660-8598-6904a2d775bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22efbc90-c414-4b25-a5c8-89fd016f005e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f56a9e-65a4-469c-b168-f6df1f5c619d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1267a953-873b-4c26-a1b9-96b395e930f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2b396b-2e0b-429c-b6f5-9616f6226374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950059f3-636a-43e9-9afa-40bd22bbff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b6a47a-e1ef-41ab-a790-4bffbe09a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46ece85-1a5c-4faf-b8bf-365396618ee2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa0489f-f91e-4d1f-870a-cfbde7c89268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d7683-9195-4b08-9229-4cc9fa91ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bee4ca-fb05-455c-831d-7d5dcc972615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db441b8-8fdd-43e0-8491-00158ecc479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00c8c42-b717-4fb0-9afa-f70d89f18b8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d2bb22-c29f-42a7-a0c9-743b7dfe39e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4550417d-735d-439b-910e-d258aa2890a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4cac86-bafd-4d2a-8db3-2b60d02edae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0b3852-81c8-470d-a61f-d15c8fed7c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7b5ac5-4290-45fd-8967-6fe6670b5022",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3455fe6-d131-4b04-b023-07eb41489622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4f9253-0a82-444c-a2bc-bba6920fbe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12fa379-00ff-413e-8d30-9b971367aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d403bf-e125-44c7-9cdd-beb23872d252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82af807-06ea-4780-830e-16f40815f0ac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6973b9e4-03d3-424f-8b42-54390161ead6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8058c969-6c88-4781-899f-8739b6eb5427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d8c099-c6f9-4928-a3dd-eb36c224b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fe53cd-89e9-4bba-8ca2-0dd63ceeb5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47391f80-09ad-40b0-9cdd-968f095aa9a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8217b27-8e22-45e6-95fc-60c420388cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9fec83-40bd-4e0d-b0ac-2c8e696fb25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d835073-a253-45e0-a77d-e60c1649386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57658ced-8954-43c5-aaf7-9f23e2e8add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fd233c-4a0c-449d-b62c-0d02c9eca4d1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25370f5-1bd3-4af3-af80-7e1915385aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feb38bd-4797-4613-886d-4431aa96c9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1106cc5-d758-4206-8a5d-38425f6806f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a09ff97-adb0-479c-ade2-0b4b7e642224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c32873-f273-4615-9e5c-5dcca5349ac2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95bf317-1964-4d19-9cf8-33032827bac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290c35dd-a7b8-4ed0-87ef-18ebd5b8f1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3114dfed-c8ba-4e66-be18-d0e1ea879c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43637229-0514-4156-8c3f-b39d2c9876a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f8270d-35be-41b0-a4e2-b2fe0b358101",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210e7840-f673-4bf3-84d2-2c2cb7138b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7d8ce8-dcb6-4d9f-b261-a135017aca2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790008a4-c988-4f6f-abd8-acbcb19c9cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ef6e16-3bac-4e7c-92d9-6c93aa85fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d533944d-a9b5-48b4-b745-21542c42d14e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8062545a-2aa6-4429-aeef-0adfc22ec0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8ca795-d5b1-458b-8c2b-d1220a1cf03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b54afd-8525-4dac-94f8-2e4da0e02018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cfd3d5-8199-45ff-9c03-781bf90764c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ee173f-df5e-480d-b477-d04469fbe269",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a10c5-3452-4dfb-869a-2b93ed617815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b942a5f2-c66e-4125-85ac-9acc72eecc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ebd1c-593c-47f6-9b98-5f93f5e9bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4ef03f-010f-4cb5-bb8a-245c021ab9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3edec-ff0f-41b1-820b-8d0654b8267f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad7f16-9839-4c61-9276-143f88fbd786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3050e6fc-3c50-4566-8712-8fdff5e65a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e63aac-0193-4af3-af1e-a62c1931df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20aeea12-2881-481b-a450-b45d932c8a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124415ac-307f-4c42-a5b8-5e5d863652dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bdd1ed-778e-404f-ad5f-c1eab97b4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d854535e-00b3-4712-b9cf-67500c922a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a2ad0b-1af1-4086-b512-8b5f8523a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65d1781-7ac9-4828-b318-bdabba1ab70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f25df0-9916-4f9e-8f82-d9587f64bb9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de178d2a-0877-4863-a6b5-d6a4f2d8784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b552af8-9f47-45b9-9394-102ef672e5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ca0f2-aca8-4bf0-890c-9ef028ee2a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef561f06-26cc-4de3-921d-eb21f725ad62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e2df71-6f2f-42c7-b7c0-25ba47eb13f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639067c6-5692-47e6-9924-c2ae3eae73f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16978e1b-418a-4123-a9c4-c184cf60941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e8a8d9-9b59-4098-86f7-b4fcc02d18a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7daa60c7-3f56-4edd-a34f-f84a3ab8a9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e19bc72-3806-42a7-9773-6cc1059d5a0b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae99997-fba2-4b45-87b1-0bcf564f59ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227480c5-e89c-4819-855a-7f879aefcf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b08f15-5deb-46f6-8021-9344ccbcd23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96b2a87-1dfb-4249-9de6-3dcdb3a64ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9345d7a4-6b68-4015-b0e2-48c14f96b666",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c0ebe-4ceb-42e4-94f1-18036bbcecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdde2e3-3749-412f-844a-bb722654b51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21944d76-1b19-4235-92e1-266780a07d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e690c4-6a33-4436-87a1-287ee7a20eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e6d8ac-b390-47ca-946b-78103610c548",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f679cc-3952-46c4-8a2b-fc392df2eae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101cda7b-6d92-44e3-bcea-06253799ef77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6487c2b1-7297-43f9-9a9e-eddbd1b2c3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d8952d-d295-40f1-872b-5c9ffb25adad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152e4a86-b43b-45c1-b407-c6cbae3d227e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60a1a40-da1b-4189-8fc0-569c30049416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9f0f71-23d0-4506-80b3-f5d06163d491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ee2135-eb2b-4e8b-aa71-e0afcec35a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b88bc8-9517-4d79-8c8a-9150bdeae6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db27c22-cbe4-4f62-8f2c-9d75f6776a38",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd2c277-9ee7-45e8-8821-27fe473230ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e162ffb-1f27-435d-9a7b-1ea1aee6852a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0096dc-b785-4df2-a50c-a403c27a4146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ff5c38-2d7d-4c0a-b097-69ec7ef0b147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ea98cb-b573-42a6-82f3-03fb278ef321",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986c9a24-a544-4f62-93aa-a1897bb7bab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8321febe-9992-4f31-a918-8696b22dd3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ecbc93-6656-4bb0-a056-cac966f3d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea395fd7-47af-4d10-b74e-c73e732d1983"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f579ea68-78cf-4bcb-b2ee-171efb4b6710",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97f4dc72-761f-4865-b874-ede7b1e5833c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4d5f0-6a72-4d96-9b8d-3c93174f1c57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d63998b-9f4c-44e7-93d7-7e97cab57cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88cbd1c-0490-484d-8d4a-a1569ed06093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "875e4150-1296-402e-8f7e-49567698d935"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "280aa3b2-d2a1-474b-8a63-fd6f4fc1f51c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "395c2d6f-a677-4ff7-abd3-8583c2ba6927"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "214dcc24-bc78-4840-82da-aa89c0cb60c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa6e76e1-383c-4f5d-9a92-d4dd238c8cb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b2dd03e-2c40-4ad6-a780-d065a6322333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4269a3f0-c736-4d22-bd97-0f9a07ffea76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a79dc444-f74d-437f-a9d5-dd2bc4609223",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c23fda23-986a-4270-9809-542f09cf2616"
            }
          }
        ]
      },
      {
        "id": "a976ee5d-8fee-4fd6-8723-edc3b3cb8f1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b25df304-b238-418f-8c5c-4e99bbc540a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc0ef683-a727-4563-9c80-d3f6e67120a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d8c1b9e-e9f6-4c96-a555-4f6984909fc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f70a579-87e0-40fc-80ee-125e6a65f935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae56e53-8971-482a-9830-6c6d88a0bd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ab9bd-ab1d-4812-8fa4-f5aec1f88a99",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9db7c3-c372-480e-9620-dd622058db19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aebca7-54f5-40a9-9340-79dbe0968bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85565136-f2a4-45ce-b130-71d37404b4e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfcf603-9aa4-4274-bd69-822a67701c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4a6a57-d5fa-4c22-80d1-542c87db7642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c24d4b-08ab-45ee-9d96-14fdd9431257",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce31e4-d37d-49d7-8141-5644d0e12b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04886bb2-cbd5-4f81-8092-2409d7791cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6039d2-6867-49e4-88c8-d5012f20d5c2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9ded59-e1f8-4847-93a5-46b91ad506c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159107ba-f9e1-4eb9-92d9-07b73a28adb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76e53c7-9b27-4bd1-b36e-b95a7e46ce99",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ead3a06-2c41-413c-a6de-4919caa39d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989119dd-c9e9-4d50-8c29-821b3038416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a60d436-0b91-4e0f-a9f8-a70332e50452",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b302de-f915-495f-b413-eb36b4dde40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea044b-821c-4674-8bdc-b0811f315f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c74148-0adf-48d4-aa60-feaa6bb0f9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b800193-322a-4ebf-a89c-db111e20940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c7f955-859e-4234-bb88-390d09902a82",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c7e604-c2ad-4700-909c-4d1d1d945c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5555634-c683-4b3c-99db-33693ba43d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b2ac00-3d62-4967-ba1c-290e66afea40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9f774c-bcf9-45e8-8b59-2f3f4880785e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27180fde-515e-49e2-9678-c96af59e08c8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ecbbae-ad79-4ad9-86c9-4846a2bbd396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad69254b-d5c7-4130-98b7-619a0c7ec37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c671d-e45b-4d7e-881d-3433e3dac70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86057215-f421-4272-8a72-013eb355b4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aa5eeb-01b2-4ea5-9ad6-045f09667e67",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c19ed-fc79-44ef-8943-aa6b5630ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6cc103-4de6-45a5-8968-d2816c01b110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0187bb19-9cfb-43f8-9887-dce15e2fc377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4a84eb-0d10-4f75-b720-da56813bff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920674bf-064b-4757-8385-4aec74c59c6d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205fde37-93fc-4ca7-b007-ab1258a9cac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d751ec2b-3523-47a4-9756-19b1195a6727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b327b8c0-710a-4e8e-bde9-91f7a769a5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9591b966-9ff7-4f5f-bf4f-feb3823a99cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c048d2b-bc15-490f-98eb-69aba6a5a96f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121ece0-82f6-4e3b-97c5-abc9e3dd4925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ea19aa-146f-4f06-9538-6853e72ba22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55af824e-a61b-43cc-b499-7de1ebf698d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce1a5de-5441-4859-80da-7143d7841102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cfc4bf-4c40-4191-be67-3247c6a4b816",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f66a0-daea-4cfc-ae36-9175a4ceff55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ed7be0-eb2f-4942-9966-17c30608eff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671bbfa6-b803-4320-8f94-c06d8f1b8980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f51ff2-d0df-4817-ba5f-623ebc4cabce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cffead-aaf4-4161-a084-3fca84afb248",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e20f54-4e15-4798-800d-4551a5a1c8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0f916f-5815-4560-a0bb-61e030a12324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec85a7-7550-4ab9-aaeb-2c5ed1c2b73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ae475a-7828-4cda-8ff8-9e6c2113bf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae834482-1597-4cdb-adbe-65bb1d023f4a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ca9bf-f52b-4786-a128-2a785f96793f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb098b7b-c5e4-45ed-8e7f-7452cf63bb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c70612-7775-4115-84f9-ab7c3e374529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d06b9a-de12-47e2-bf86-4fc24a886912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e8285-8d0c-4327-9cb2-6fd3adcc3b18",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a19591-11a3-465a-b116-9f562bbb8429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2a950e-1a3a-4ece-ab18-2d08bca1680b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2cf463-f652-4fd9-a4bd-072e2acf7e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e38caa-a582-4b53-bbe5-6cfc8620d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77724978-1740-4e22-bb85-b8b8ac959281",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ff358a-5fd0-47a1-abcc-442ac8e2e0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8ec7e6-6b49-4466-9d93-7af8d8949249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093deac1-f20c-4f36-9dec-a19b17d37b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8061256d-1738-4d69-b983-72c69dcd8926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc49fd29-0c20-4d0b-a286-54470447d79e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12e2cf5-cb72-4ade-b280-75eff901102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5092c5-cf13-433b-972e-04136de9dec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b1e9df-7ec0-4db9-bc4f-6230641def3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9724f37-7388-41e9-93f7-8d892924e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc358256-2d80-4ffd-9767-e5338ce0b18e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17c4ff-afeb-4fed-9ad3-58568111872b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64de33b5-d127-43df-bbf4-766d4b7c4710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca2c73-769f-4d27-bdfc-5bd7ad9ce953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0fea08-222b-4734-87ff-3a516435fb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470d2f3b-8c2b-4255-8ac7-73938c9b0b3c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c651d278-357a-4cc1-92b8-ce40b1e50bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3a7152-7c03-4141-8dca-c5ec459f3c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc445c14-345f-40dd-a64b-b32c9224df11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed2020-dcbe-45b0-9ae8-d5155cbe5828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e8389-ed47-48f9-944f-12e97b13b82a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40db8f03-8c0b-4da6-b828-8a88577f19d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8ee307-4d74-4a60-a44f-3d9211dd664d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dfa117-6dd8-4496-b298-d25ecb9ffa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d01c20-2790-4052-8382-71f9b01ea625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132f6e68-3ae2-4751-9db6-3cf197e9dd7c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e859043f-2a11-4c83-bb43-c981c01322bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769451d7-039a-466a-a195-abc0dda071ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165ea5d7-3272-465b-9d65-35296267e5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64578de8-f4bb-4fbe-9b75-ee27a3b3ceea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d91fc-c451-4067-81cb-305aa756b0d6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c1b26-79f8-44fb-860b-223d355fd971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48486d7-8605-484b-92d5-695c848dae08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe1755-b73a-4300-b683-5b4f89f52790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fd7269-c2e4-435a-9d4f-0ba5f967a17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73efe920-26e9-4df4-80d3-fb6e4624c6bf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9ed1c4-bf59-4446-96da-6be7b0c85f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2095d6-c412-42b5-928e-cb6e8ababddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aedce7-33b5-40c7-b356-f184cf6dea09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cdd23b-9aa3-4233-8bc9-3c8e7df27417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8937ec2b-3f22-4e29-8e68-512d5e574654",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75176283-72a6-4999-850d-9be3360c6332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f1d96f-1fa2-4168-a339-993f003cb1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e18ae-5f67-4f43-99fb-7f51beaae64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10b8724-c8a7-4ce9-ac34-c70a8fba855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b84b70-d115-47ca-8112-478fc73eef8c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85978b06-4b39-4847-bbb0-4f662b52e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96d8f32-d050-4eb2-84ae-f0db76f30d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe2de6-6d60-442f-90de-0be4559a6b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d892490e-a6b7-403a-b511-b637f89452ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6536b0-a20a-4bfa-bda0-a10ab14352ef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc2dcab-f9d5-4b92-a22e-3b1a0cda63a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0671a963-e1f5-468f-89c0-e188d0e0ed68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494be5e3-b454-4c06-b938-9e53f46c7ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56113596-4d71-41f7-aca4-71752901029c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fed2b3-c470-4a2f-977c-5456537f9dd4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5266710b-424e-49f6-bdef-10e5086593be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e424a93-e035-4345-b6f1-5e84bcabbc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063e048b-dab9-4bf3-8294-6d39273df499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75930e65-9fec-4cbb-80d5-4263f55f2ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccfcae4-4861-48fa-a132-2c04dff0be1a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14468d9-1a1c-40f3-a859-d98fdb4b1eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb068077-2988-40e2-bcd3-c3cd5882cb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422e976-56e8-4288-aa80-ee138a3ab346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8baec39-22b3-45b0-a2d8-bf30121abce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001422fa-435a-4a3f-832a-74fe05e5fb6b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685f6faa-aeb2-47da-b0e5-ba92836c53a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc22e628-975c-4c3e-aaf4-b61f2ec334db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7790fd7-e095-462d-8b2e-63e1bbb656d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8fffc5-30ae-45bf-8030-f0de4e3c9c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185a2d1-1759-4395-b0fa-ca1c6b0ac707",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c4fc6f-5592-4c34-b9f8-f7ae1337a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc0b8f2-8f00-434a-b86e-ea2f97677fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be0514a-6398-41eb-9a8e-cea570911d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8147c977-6865-4adf-ab11-771f9e9c8884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b17fe3-9ebe-491d-a296-27c0d0bb698e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e80ea0-5319-4855-b05b-de37b6b62472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ea1569-70cc-44e1-a37c-9025edceeda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6a469-ed9b-40b4-be5d-8b2c86420b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f54fa6-e0d5-49d6-8b3b-9ab521b10022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22457f19-99bc-450c-837b-6e67b9326521",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d3a478-5c1b-44a1-a871-dc831a5dd1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f0e013-bb4c-4b58-9205-f5983f35669a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5b7279-173d-4f60-b9fe-18bbf59ef51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441ea70f-47a5-4a2e-a9c0-4d1408975ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ee9fc4-2747-4fe0-b29e-cb5e237447d3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644bcdf4-3e1e-4d24-9ba2-09f7c04562f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ead3fe-45cb-4fb8-8bd9-8c33a96f4352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efeb7f6-f1ed-4f89-9840-64f1aff76e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5704fcbd-1a56-4b42-82e7-477a707c5991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7f1250-6bbb-4ffa-b4dc-d32fc7ee60cc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a3d400-ba87-4325-85de-9f7586d670c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034467ec-5a3e-4443-8f93-4baaa0bf47a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcda1a8-0b97-41e9-87f5-20f48d5626fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f751ef2-911d-4b44-949d-0e61742aa45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96609bb9-40bb-4ca8-b568-5ea46d9c4426",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b567ab9d-bb6c-4abb-b991-a88cfc341ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a61c662-74cf-4405-b306-524529efb99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdff745-a508-4a78-901b-0b17c6f665db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e45e08-8166-41cc-8ade-4e411a32712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092348b1-aceb-4f9a-906d-4f1d9057e292",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48f3b9-2cfe-4cfb-bb2c-4097ba8e9323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca291a59-6302-4592-828c-ec0a6715bd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7966aa3-b631-4eaf-8ad6-1f6aff310bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09718a52-6169-4d2c-9455-de5cfa8686ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e26564-149f-4a15-97b4-b0065961e03c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2c0aea-33ff-4981-8bfb-524f190a1aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d757904d-969c-4c09-abea-9b3a96dd53b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5bc548-1d80-4fc7-8257-40075d29586e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4af26e2-9ed2-4a97-9e70-6f10b6f4326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fc2368-5d29-4144-87bf-85cd60aea38d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e956a-1d9a-4dd2-9690-dea4b4e7236b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7799c23-ecc6-447d-b669-2da163652c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8c0909-f73f-41f4-8b73-8dcab654a0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ee2cc0-3855-4a60-a738-f688d22e1942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea54f97-750a-4a33-82e1-68b1e8a749fa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009f5a56-ef8a-41b7-9c27-5b30e67445bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03968952-9c39-491f-a4c1-44c6137c7880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11fa268-e1e5-4728-a088-3ba7affc1a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af77562-3f58-4826-96ab-11a75aef71d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d3453f-cdd5-4b5f-a458-23bb11a18e9d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac588e8b-1bce-4df8-aa06-5c64051afabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12882820-410d-4eb4-b66e-83d9db66902e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a4f485-ec5a-4c1d-a492-5731c5047f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28923280-df6d-4135-8bbb-1ee2adb28a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d949f7-6519-4f3d-86bb-75c5f420742d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a245f29f-5221-4b76-8c3d-1bb1a43aa4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee24135a-e7a6-4ed2-ad18-c158428794e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc052c5f-3687-4f2d-9924-d2bccc94189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e06c4a-b897-448e-bcee-d5bc7a783c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f73a4cc-0674-4b34-982d-484ddd182285",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e478960-3a43-4a83-a3f5-1d1bbdddabde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049720fb-4c79-48ac-a7d5-6b7df7edfd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccff28a-6feb-46b0-8854-9f714bf62084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167ed97a-f738-4e58-9fde-13fda92788ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2da376-1998-4403-835b-ea6bdb08d90d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43463e-86fb-4b19-a890-01dd75689557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3434f6fd-4b8b-4dde-b15c-856abe283d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261c71bc-ece0-4e3b-a4d4-b2a23703dc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853b262e-0d1d-45f6-ba88-b48c1e3823b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a493df-09bc-4109-a976-5ec17796d529",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f06c58-b204-4f6c-8f76-76f20224d70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cba8be-9970-44dc-ada6-9c4348024c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12559160-913b-402e-9af8-545c36c18bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ff57e9-1c4a-4713-bf0d-003236e382d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ecefbb-4d1f-4f7f-8b57-88e99a8e47bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe43949-41ed-4c3b-b25b-594861d1e129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dba3aa-812a-4246-bd08-24c27e858c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e59cfa4-3f65-4cc7-8c6d-557787fc52fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b67e63-06b2-4798-8cbf-0d9c38783617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2ebf97-2a6d-4f66-9e8c-9ce812a19cf0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fc2d9c-65ac-4f84-b65a-f32db2634668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa283df1-6a00-4cec-8bd1-f91f2bb8d43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d820ef-44ad-4e3c-95d0-764f8fd0567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06929c9-765a-448f-ae60-9f9c713bc919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bffcdb-c72d-401c-ab83-63eabf9e81d3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb718d09-db41-4bbd-a4e5-3f6d2445d903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db022639-618e-4bd5-bc7e-3a6e72f17b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2b699a-1865-4baa-bbb0-a863da963d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794527c4-df83-4118-9785-2960321f2580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856ba4cf-a3cd-487e-9208-463993f62a3b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef86c3a-d484-4d50-9bef-38c6dc2256ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c0dcd3-3e29-4d8b-ad15-9eb2fd7eba3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81065b4-60d0-4279-b447-e0411f794d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d11a77-3234-48ee-8148-e14376dafc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66723b5d-232e-4736-a141-67e6217a763e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd18fba-0719-4b93-9976-d48413ab6acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244d17c1-fc76-4e19-8b5a-98eb56c16007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36553c-377c-4d4c-96a1-5b864ffdf724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518b23ee-436a-4b01-8251-bedc1bc51c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2eb719-d8f0-48db-8084-260d534ba1e9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4e4878-1f83-4751-a4cf-8e31e5805871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ae756b-8c09-49dc-b3e4-0f1b4024a965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8878fa66-ff32-4908-8926-20468f679e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a178403-0d0c-4362-bfa3-68618c153693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d47959-a3d8-4409-843e-48ca72b2f8d5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8005712-0fc4-4aad-bf8f-11c24a09aa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b72caab-eed8-4e8c-bb4e-96974a9670ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33131954-390f-452f-96e9-adeb6e4bb07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23545156-31a9-4289-97ce-5a385151d012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31243116-eeb5-47f6-8c9f-9119bd515d13",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068574bd-3a73-4884-a07b-b61a2f699b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1390145f-bf6a-40d6-86e2-aef660e900f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76221cf3-ff79-4eaf-ba5b-cef68a21051a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c391e760-4897-407b-a619-4dec8379cbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3997d40a-72b6-4ffb-b7b5-1860fef8ee70",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1a7f49-9f23-44af-a721-b7a7aa8910bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9429b45a-bede-4014-9b26-1c5431bb2c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137600f3-b591-40a2-b353-aee21837ebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2155fa-4077-42bf-baad-46be79adb969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccf8185-a760-461a-ad61-01810f2151ca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fd8f06-4f9e-40e6-bbf9-3ecbee0376ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a126c6f1-b5f6-44d9-81e2-d8c408959c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0374d5f7-e257-45c4-a498-7fadcba140e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4432d0e-d742-424c-84da-2c9225519eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847a716-4297-483f-b2b8-ff4495ae4ee7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903627ba-935f-4b00-b99a-b883978b0f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d007e9da-35e2-4a0a-b389-3372ff4a00a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957376f-3718-4ea0-ba20-f69aa9c4de09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fefd48-5a62-4364-8f8e-9c01cc634cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f23155-19ef-4cf6-b3cc-454cd88c3a6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682af0fe-c3e9-475d-84e9-2083a3929076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93791226-3660-4d88-94a9-4573db625363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c6c35-e566-4ced-a2b3-74696c7eef9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e369d65b-7809-4031-ba1d-008947d52a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdea069-1dce-477e-a17b-29523aaeeb83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd243ce-7775-4031-8392-9ea5cdfcb989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f775ea17-8852-45c8-acc4-1910bab12601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3401f7b9-e386-4840-86b0-4e3f63020ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fad1289-c3aa-467a-a07c-9dfe802be037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3597d22-c604-4f53-87a3-663bea108634",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab71230-d5db-4e6f-9709-33d174714e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f57a50-70ff-423d-a61c-657697b36071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf4874-0005-4b75-830f-253acfdecb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0930101b-a161-49e5-954b-19c2e0f5a54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054c28b1-2d76-475b-85c2-6816e08399f6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a65384c-a9da-47a0-bc94-8c908230571f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c4171a-bffc-4699-a1af-1bf92ffa4416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c27b5f-dea2-4951-9d7c-a572b0aa1e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12eefea3-6988-419c-933f-030a85925293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6468d8b1-65c9-4082-a7e4-99e89d64e1e0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad794fb7-81c7-4f4a-b39c-ef8d5fe642c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e31e82-ff0e-42ed-8171-3d751c18fbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe9a8e6-107d-4655-a26f-19b3e5f39617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84b81e5-df3b-409e-9284-5b7c14197529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08569550-5e02-4a1b-b454-d41ae17acd8f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca6caf0-0bc9-41e7-8b04-e84843e3fc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5270ed46-588d-4122-b06e-50c780d2f39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674a3d98-fb23-4d8b-8d40-31419cae6b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e2ab0c-7296-45dc-bd6c-1239d3b6cd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be38720b-91d7-4849-96ad-8e5f17155b8e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f41fc8a-8f17-4213-b4fc-4255362e8bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556843b1-4304-4e68-a7b3-4901c5d67d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66a3292-204e-4ef3-be48-7f01faf075f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0238a02-ba3d-46dc-9a6b-cdd64204a799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d25658-b222-488f-bde6-79163f45699f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da460b32-b56e-41c1-b46f-b20a78d10e07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179f3cb8-31a9-4505-b5cc-eae433710fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694085a-86ae-4951-af2d-3723874920da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfb64b8-1ebb-4f05-ab1f-560abeec9569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113c686-4a30-46eb-987f-2cd10d7f5180",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f11163-5887-4b05-909b-fb4fb20d88a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9013ceac-d5de-43e7-b23e-824a69617245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb5dc84-bd20-4ac2-8a15-255a0c93949a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce5a0fe-3cae-4be1-b90c-d8a0604f766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84ae9ca-b389-4a9c-b948-430505a4809e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd0a6a-2925-4e56-836d-0aa7db74c845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30b9bad-2a4d-4fc2-b277-329a0d5d32ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e53284-fcb9-450e-b154-f4fae2026da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935615b5-7f26-4dfd-915c-80ca7e384ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b028d-327e-4ebc-b44d-272e0a78472a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefa6625-6745-4597-82f9-e6a81f75798d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0058d9-ca19-47c6-a462-d872f60208e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de515e5-184b-464c-8edc-6ff7a6665313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a00a768-63cf-4f25-9f3e-38e23e6ebef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87bb553-0596-452d-9051-e713d8061a87",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbce3c14-8b6a-4206-a514-e4c29daa1ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed4efda-d1d3-4b99-9f04-39e6fa438023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051c1b7f-79a3-486a-8619-39b3808cc737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b45df2e-1df6-41e6-b261-8b1a12d2065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81106f6-b951-41d8-b9b3-552787ff3069",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2270684-41ca-447a-bf7e-7c5340b8719c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c4ba60-fc1e-4b85-99bb-f89d23de6f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab7fb0f-9d02-4804-b0ce-d584eee69c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44384ac8-590c-42ea-a42f-8be9bd085ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e9ef28-7062-4277-ba70-4728ebfb80c8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5387d316-1ce0-481a-af04-de525c25840b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea0cc47-9deb-45c1-9abd-34422d2db44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c1de55-91a4-4158-8f7e-dc9b8b0affb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07521cc3-76a6-48eb-a772-b650e029b4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39318e50-4946-4fd6-995e-0399d51f1b7f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8cfef9-c9d5-403a-bc88-fb595e78a995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13cda1a8-4d1b-4ca4-8e47-f289ee7d8a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98275449-455f-42a6-beb8-d59f9254e4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938aae1e-75f8-4579-8fb1-292b8d04a6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa60f99-fed7-4d9a-979f-47d0001dbc20",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79231cb-a8c0-44cd-b106-2367ab3bc116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec427f35-dd9c-4fa2-b890-e40fcd0f2998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f60ab76-a065-4ec4-87e8-eef277d79435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f563d1c4-c6a8-492f-ba99-303c9bd657ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b417a86a-18d9-435b-97fe-a4cc53da619e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c48ce3e-e982-4035-ab38-788af8ad01c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7b9a85-299a-41fd-8cc1-4f0025770176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bbb80f-ddb0-4368-bcea-ab17338c474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095865a3-a0b0-46f9-9a69-dd75ec5f2d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db182f0f-2969-423f-9b2e-67cc8fcb6a5f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb76c4b9-0a13-4357-bc1a-ffa9629605d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6399df51-bea8-46d7-8e86-3df99b60862e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22be2cad-bd59-4188-9a3e-c39b8f5eab94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e877a74c-d413-4cd4-bb94-032af9c9fa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9facafac-9916-4a44-8ac7-eb6be6b8c131",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d5a60-3866-477a-acf1-c55138c870cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c997f2-b559-42a9-937c-a1c863f6ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c71f974-0716-4556-980c-3fe5666db3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07169200-67fd-47d5-9fc2-ea37c5960ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e97180-764f-4073-a559-956f28de0f78",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca554c6-00cd-4d28-a8b4-02d9287e59bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f928568-7750-4b00-b252-40d9f61ff256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719c17b6-61d4-414f-9b2f-9e5120e3e8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7e6a3d-575c-4fb3-a39a-1497b974f60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dbffcc-8218-4d15-b4b1-3edfd2485d92",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b6c275-e91a-4ea4-a87a-04fba5f09e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181401b8-cc38-4913-aba6-d6bd9780e0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6df400-447f-4412-96e4-a32376b0284a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6664246b-9a5d-45aa-9050-9c7c22403bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b973d21b-aceb-465a-9d37-d5dd0d003774",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f230a94c-5ab3-479f-b530-9aba12e21337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c811c84-2917-430d-be42-cd27b224eb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfc7dae-98bb-48d4-9e8b-53eff1ea0fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb57288a-8ccc-422d-8b85-b9882b938449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc455ce-8dc2-403b-8ec7-30a16b47cb95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceead1e-16f5-4833-b692-cb82663d83a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0bd5cf-57a6-42bb-b912-b862a8a22c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ffa290-ddbd-412e-9d54-b301a7a3443b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165a57d2-5a4e-4615-973d-1b3551ca0a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6fa31c-3255-49ad-b175-db2b873771e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af79bff-d2a8-445d-9ab8-5f5147047ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a3a151-df83-4220-b3b9-fc894d3d742d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3f7396-a91c-4486-b461-80772cfb09b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614f6b73-f288-45e8-83b9-ec079c04446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acd95ae-48cc-45c3-9446-25903d314ab1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2959af00-594f-49a0-9e2f-e0292492c879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0511a6-a837-4b57-9bfa-9ab70d3d5658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9f6ecd-9b04-4e11-8b18-49ce6615d173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04044f15-e8b8-40b2-a604-f7b67d6d108d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b0127-874f-4b53-a7cb-ea84cb8f80a0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3f7cf5-7bd8-4703-94ea-d15f7325b09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a44877-af41-44cf-9915-f0f8fe34a586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b16a3d0-00f2-4340-804d-1065af9025b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7575767d-e5b7-4a18-95fe-f7ef86f8baf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb4c87c-b876-4bdf-b861-237281c9c03d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92bcd15-b894-4716-adee-bff8ff2564a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53241960-827a-43d2-8199-685d6f9f9cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57231e4-392f-4a4e-bb80-bff4a6cc2caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a55fce9-f8f2-4484-986f-d36b7d6b1ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3673c798-c59b-46ca-93e1-c6ef363f567a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b996b3-20d7-4132-a87d-e014f47cfd26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27622ae7-19c7-43eb-a5b6-3e0423904d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e0085-0a59-4a0a-ad5c-d8a2e5e527c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ed77e7-22aa-449a-b8bb-d2a4987ba439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6819c1d-d038-46c4-887f-b76bf91a3362",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83b8d3-f634-471c-a733-def485f48cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3dea0c-5546-4882-9f10-7c19f5af07d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9f2085-21f4-4c79-98b8-70d427121471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2f1046-60ab-4a02-9af4-9879bede9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0700145e-d0c7-4f71-9c83-1b42ca18b6c1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f5014d-30e9-4776-8080-136059549018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f39c40b-09b5-4a4f-8394-598d5c0b5823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0143f4-4e0e-41eb-9da5-ff40693e859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a02448a-9694-4bc8-aa76-99af3cb22beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a28cd1-7847-41bd-9e93-346813f9b63f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2731e724-4ac6-438f-963e-1892c0e6c561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f62d403-1084-4e5b-8150-29d19a552315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449460a-a4cc-4f77-be51-ad640c02a234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6994a2ef-2625-4415-b8a0-f2bd23a0a307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2fef21-10ca-4001-aefb-7c41a3ad2dda",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146d6964-a548-44f2-b175-b5faf5d06d23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14c54f9-e11f-4629-95d6-c5dd16ef0440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546832e4-9da7-43bf-962c-c34a3e98799d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99795c9-df4e-4745-b239-91d1c725169f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9735a3-2829-4956-9c75-6ad402c7fb5c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d32984-1745-4c7a-94db-a5dcb00338ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2815ddb5-a5b7-43e4-b1ab-7a1a7c811f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0caaa3b-44b7-4823-95ce-f06a30b3bb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcc747e-0296-478f-8190-b9f3d56ad592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315eb7ff-2005-44ca-8ae2-c633c1dc02ea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08b5bca-3277-4513-a9f6-768adbf5b130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f80877-8f94-47cd-80bf-7cbf76456bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cdb155-57e2-433e-8c45-250c726a6505",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19705ecf-4fe0-4f3f-9ed4-d35fda1fba24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2f0ee3-2a7f-42b6-a380-0cd0e30ebfc5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb1a9ed-25af-4b56-bb4c-782340a36a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751b39a5-e58a-4b0c-80a9-05eb63239613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecea75d-8854-4d6e-934e-7d58d7cdd4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcd8279-630d-4b45-b1ea-89f8eb1d6ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0eeb09-6180-430e-8e18-62d3ad363ef1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7e7da0-f7a5-4e07-9ba2-73e4e8b87f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0aad561-885c-4c6e-98e8-368904ac0b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a9e201-f51a-4498-a17d-d1fa1dbbe262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c1229-5baa-4b9e-b8ac-52b947cc86c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65883f06-6d50-4232-868c-4d0eee3121be",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f13d4ae-6885-46e8-8f5b-fd220e695bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68693966-eae8-4923-ad1d-e177b336381a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddc5e74-dddb-4423-bd5f-1b2da975fd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8e32ce-fb2f-4a15-89c1-45bbd25489c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b257cb-3e5e-449a-9639-b5255d7c4efa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f088785-ff16-4c26-b51e-7de79a3b6e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db57fa17-582a-4c27-9327-65c6c82a2ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844dbef7-b8b5-4e74-849c-8ba7948c7ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c060e1-6605-49e9-9f82-7fd9bc42591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04620e9-32ad-4f6d-a55b-601a05f80f66",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a2985-b6b1-4574-9ef6-dcd58eb28d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67627ed-d250-405b-ae90-441ceb175f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c523072-cfd4-47f8-8272-d0a9241275e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a671d3bf-af24-4890-bbbc-5705eb567fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51abf3d-e240-4aa1-bb24-34b8c74afe1c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d0f842-38fa-420b-816c-8d0970920de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10ffff8-492d-4daa-abab-2813489d2dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9ad9d1-ee19-45de-a99e-060a12e6c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4c59eb-c1eb-4da6-ba36-0a9eafe79def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa74b53-e6ff-4db4-8e51-d56e8fb69dc5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e49b36-e955-4d3f-90cf-77381df4b551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c706cd0-e1b6-41de-beb4-2dba31fc152c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be55528f-82c4-4992-acce-b7d1ce903a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb9af5d-eff3-4804-91d0-e2208f89ee68"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87b9e8e5-d884-44f2-8cd6-8fbc5853aca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23855e17-e178-438c-887c-aca20e1c143d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de17315-d675-46ec-9542-3806881f7abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acfb9d51-e524-4500-8890-740db1dd1277"
                    }
                  }
                ]
              },
              {
                "id": "0c309ecf-349e-48ce-b721-e8a8387b43eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f61d78c-a494-435a-82c0-e59bcd89317d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f39f3d-070c-4c4e-96b6-39d71ba96dda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a02360f8-5ce9-4b29-ab07-a70e80c56e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66a63f5-5c56-4abe-be0e-6a028b1de6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f3837d5-e061-46b8-a784-95522cea63a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c756e3c4-ce62-41b9-8214-2e47c1d9fb28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1fca1e4-8dbb-47c1-9755-f0251942d4b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2886622e-91ca-4ead-b2aa-a5223edbf089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2497b6f-e5f9-4e62-ae3d-c153f3bf18ed"
                    }
                  }
                ]
              },
              {
                "id": "607d68e5-460e-4f63-af92-7b02b4675d77",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7c5b20aa-7005-4d80-b803-09948eb7ce03",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed02d88-d172-4571-b642-931d4ed78dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "406e1fd9-a6d5-4f3b-beb1-cb49a12029b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aa1a91-9c72-4308-a720-86c637226add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9753cc-1778-4d19-8333-ac1313e136d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5eea6b90-c42c-4824-87f5-b09a3626177d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "683ed09a-f224-4d0c-9202-e91de7b59cb3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "788f3ea0-5d98-4e23-ab41-3f1b52732666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c49382ba-8366-4146-94cd-428b98de7a59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b48032c-ca95-425c-9442-c2916bd13ae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54f31f3e-7c17-4d9d-b38d-dfd6d40d57a7"
                    }
                  }
                ]
              },
              {
                "id": "72fd1fa0-acd6-46ce-b62d-8329316f871d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d3f785-75bb-4d16-90d9-502147719e20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b649bc78-62d7-499e-8cbc-7bafbc4e4e4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "433c97b9-aeb6-464e-ade4-4bef8bd13807",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d66d6e53-e3e6-4fe4-a87f-787f2ca88819"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fb66e32-3277-4f86-96fd-fc9716515ef0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "92fbac46-5b4b-4f55-a84f-86768706fc41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f04a9353-4a10-4f2d-aafb-10be740e5f98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfe05120-7781-4d29-bd40-7025c0d0205b"
            }
          }
        ]
      },
      {
        "id": "c86ec81d-dff7-471d-a18c-3b678096a3dc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "344ace44-301d-4963-b28b-b0ce0d1c0c01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "180a1be8-f27f-44d5-b3fc-3d23d578a262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7cc6a08-b04c-4704-b30d-11b35aed057d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fdf583-d177-4a79-89d0-92f31a3a4bd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b9ede90-0f56-4992-a4f1-7ebb8b30c578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be030932-059c-463a-8403-52ab74660cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a9911db-10a4-4755-b81c-60cc4eee7e2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "815c4190-e3bc-46e7-b22f-9a99f81813eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b2ed775-9e9c-4dba-932a-7277f3154dd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3235c20c-612c-4796-9c75-ece2d31806ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04912f68-5a3b-4c50-8542-cb3b3890dc64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f271c942-d080-4335-9772-788b3ab68291",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "54dc9d7c-dc97-46de-b8ec-0b525005ed23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8a77c28-2b9b-4ffe-9a51-30e9e1de6cd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "488df2e2-1eff-4d2c-925b-a99a29b98ade"
            }
          }
        ]
      },
      {
        "id": "bc5136ff-8a21-46b7-9852-8c05182de6b4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "030d8c1f-609b-4415-976c-72b4f0fd8593",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7f24032-1601-4e90-bd84-bd36f8bbb4fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23ebb69c-15a5-4f35-8767-7492e11bed59",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bf6edd-792b-4aa4-832b-71523d038d0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "955f457d-d182-4cb0-a512-c27e60fe4056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5398f6b-72c7-406b-a90d-bf5fd88a94b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee6f064-2c05-413f-a25d-638bd0375a76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a32d4e05-965c-4291-a790-bc5ef37e752f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b47c5f9-0dbf-4eac-a37d-ad94d4ecfb44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78853368-c4aa-4ded-b7b7-90c84a4aa651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6fcad31-671d-45a0-a8e4-93f1c4a6ced0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1e7e5f5-015e-4e0a-b10e-cc2601d67469",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d0073cb-1ac9-42fe-a0d7-2826b3bce4b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9107300d-b222-433f-bea4-e35c57d9dbc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91171f9c-a70d-4586-9229-c095632b567c"
            }
          }
        ]
      },
      {
        "id": "a433afaa-b82b-4199-9581-966b8fdefaa4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66b1ada5-4f48-4d6c-a7df-f9594894dde6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a2a3d94-2415-48a7-862f-a12bb10c8e2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d801334-11e5-47f6-8837-91c9fefcb4f1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b21358-4d3c-45ae-8d70-d5e35f65f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53b2fda7-91af-4352-b5cc-62aad82c117e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa698e-0428-4c7a-9401-4f631c9f02d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4da67585-ee20-4a57-b7ee-7fb4e634a211"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e97227b-c9f6-4fd9-8abf-dfec9c1b807c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb20147-3d48-47ad-bd4f-b6450dc847ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f375cdc-13c9-48cd-b5d7-ce11cdf97ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0828850f-e48d-4a64-b7f0-3c4ac2742944"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e557439-125a-4842-b2f9-909596c0d59a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27fc6c60-5510-42bf-9d78-574ee37fa89a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8221b84-a18c-4d71-95b3-32d88efa5f95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e48430be-18a1-4a9b-ac16-3c84798df9fd"
            }
          }
        ]
      },
      {
        "id": "74cbf034-56cb-48f4-a056-3ddde9879656",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c56a778a-aa43-4689-8f8f-c121ea9b2fd4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47c1ef28-ce6f-4b7d-84b0-959c2401934b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5803cd62-3025-4b2c-af6a-f7fe5216aad8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a84395d7-a9d8-47cd-bde8-30185c8d7df5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002f9da1-8687-4242-9dd3-a1d775531921",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.85317460317461,
      "responseMin": 10,
      "responseMax": 6949,
      "responseSd": 483.04323628930246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712968179000,
      "completed": 1712968211801
    },
    "executions": [
      {
        "id": "0a4e3b8d-d908-4285-b50c-38c7c5a2383a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "336cffe4-d4db-4eaf-b8aa-b6ec91f9c13d",
          "httpRequestId": "d36100a0-c79c-4151-9d6f-6ed39313ce24"
        },
        "item": {
          "id": "0a4e3b8d-d908-4285-b50c-38c7c5a2383a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21128281-42b7-4c31-a2e1-06c433ffd9da",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "73688c58-2550-48c2-928a-c6f767b353dd",
        "cursor": {
          "ref": "f602589e-a4bd-4835-84b8-21d95b1c7ba9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce5905e8-518b-4bcd-9cb8-58ac10f9b108"
        },
        "item": {
          "id": "73688c58-2550-48c2-928a-c6f767b353dd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "86d5abe8-0f05-46a3-a4e3-f63362aad5c5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e0fb1f74-1ca4-4167-b0ca-b700435b9986",
        "cursor": {
          "ref": "086c58b2-d56f-4b13-b144-7a56c75f5060",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8bdc9f48-b844-43b3-a34e-4d5ab9a4381d"
        },
        "item": {
          "id": "e0fb1f74-1ca4-4167-b0ca-b700435b9986",
          "name": "did_json"
        },
        "response": {
          "id": "a6a47149-1866-47ec-927e-08a8471afca1",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c37f905-5a96-4c4b-84b4-81f4e0b9d6b0",
        "cursor": {
          "ref": "16e095d9-35ef-42e1-b495-bf235b7ea168",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "336ff4cd-ff29-41b6-8226-147ce8c54640"
        },
        "item": {
          "id": "9c37f905-5a96-4c4b-84b4-81f4e0b9d6b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "02dddbaf-1732-489f-aed0-2048441ff3c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c37f905-5a96-4c4b-84b4-81f4e0b9d6b0",
        "cursor": {
          "ref": "16e095d9-35ef-42e1-b495-bf235b7ea168",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "336ff4cd-ff29-41b6-8226-147ce8c54640"
        },
        "item": {
          "id": "9c37f905-5a96-4c4b-84b4-81f4e0b9d6b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "02dddbaf-1732-489f-aed0-2048441ff3c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec40d9a5-ba92-40d6-a0fd-4360241bbf45",
        "cursor": {
          "ref": "5bd46a68-6e75-4bcc-97f8-48e4ba9b040b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e7fb83cb-760c-4b3f-b420-9a24ab8206b4"
        },
        "item": {
          "id": "ec40d9a5-ba92-40d6-a0fd-4360241bbf45",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "207a4cc0-5029-45aa-980e-e18bcd9bbdeb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1868975b-189f-4e8f-99b8-72de0220c75d",
        "cursor": {
          "ref": "557d3d73-31a4-47b4-b3b2-8919f4af3ca1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "88c9c577-7c5b-45fd-8ea8-54932c9a5fd8"
        },
        "item": {
          "id": "1868975b-189f-4e8f-99b8-72de0220c75d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "972272a8-b06a-4da9-b3b0-cd153bd71daf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c17dc3-4042-40be-85e0-b0542bed190d",
        "cursor": {
          "ref": "3df595b1-55e3-4001-95dc-d3729638f7bf",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a248cb0-851a-4bfe-85f0-e31bd6a73a29"
        },
        "item": {
          "id": "73c17dc3-4042-40be-85e0-b0542bed190d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "02b64c80-8a5f-464c-b544-906c5479a4e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773ded94-1d1e-48da-8439-3d34fc0099b7",
        "cursor": {
          "ref": "2c086365-aef6-44ac-abca-6ab269f20ef9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9bd1d41d-643e-4267-a335-4cc95477f401"
        },
        "item": {
          "id": "773ded94-1d1e-48da-8439-3d34fc0099b7",
          "name": "identifiers"
        },
        "response": {
          "id": "ce85d833-905b-45dd-872e-7b25dc59868c",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65910293-b3af-410f-be09-c1d3b7d35012",
        "cursor": {
          "ref": "eedfc2cd-ddd5-40e4-9d82-e29a5b78d3a9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "971199fc-6759-473e-8d04-5a535b5b8c23"
        },
        "item": {
          "id": "65910293-b3af-410f-be09-c1d3b7d35012",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aa8f1635-a476-4db6-ad33-b0ab479a7b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c7a3db-33ae-4009-8d8c-3e9dc393c41e",
        "cursor": {
          "ref": "f47bca56-2406-4bcd-8500-f74b57602be7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5476f44a-6988-43b4-b862-512b575e2ede"
        },
        "item": {
          "id": "86c7a3db-33ae-4009-8d8c-3e9dc393c41e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e355b681-f2ea-4b15-af28-e53e26124c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e33aac1-cdd7-4729-b2ae-84f425a9c1f9",
        "cursor": {
          "ref": "a5377c41-7491-45e5-9503-bd9cd6274eea",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1596147d-7837-447f-a4db-dd8ac1ed8a5e"
        },
        "item": {
          "id": "3e33aac1-cdd7-4729-b2ae-84f425a9c1f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "137378d9-f17e-4cfc-a87d-3a9875a834bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e655c-7933-40d4-a7b5-8aa956788a9c",
        "cursor": {
          "ref": "45295042-d140-45a4-b0b8-5c4b5807e4df",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0c1258ac-a03f-40d1-8b68-8b866d87d60d"
        },
        "item": {
          "id": "8e8e655c-7933-40d4-a7b5-8aa956788a9c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9c764dbf-0688-4e68-bb4e-59b91dfcd1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25cdaec-7777-497d-b44b-f7138807aa99",
        "cursor": {
          "ref": "f5111a5f-0d1e-4b08-9439-1ec4a8746536",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff7b97e9-7d56-4614-a64c-c2fd41decb9d"
        },
        "item": {
          "id": "d25cdaec-7777-497d-b44b-f7138807aa99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "25c8399f-fdb7-4740-82b4-dc2ff4ff8a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6c1de7-8c1e-4ae9-a4f0-357edaffb9d8",
        "cursor": {
          "ref": "824758d9-d79a-4f28-8c4a-3015240269bd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1e481f4e-bb0f-4583-84fb-79005a65229a"
        },
        "item": {
          "id": "dc6c1de7-8c1e-4ae9-a4f0-357edaffb9d8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "42e9dc73-6f78-4ecf-b63c-5fff260a1935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a654fc-83cb-4c2c-bed7-4c49ef3a94d1",
        "cursor": {
          "ref": "733ad730-4039-4bf9-b3bb-954489e7a033",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "01c18204-dd31-4229-8781-7acef28772a3"
        },
        "item": {
          "id": "74a654fc-83cb-4c2c-bed7-4c49ef3a94d1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "55ade132-cd5c-4b35-a73c-ae6ea6a9d048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4601468-c71b-452d-86c8-cafcc9cf9d5f",
        "cursor": {
          "ref": "7cc985e7-d53c-4489-a8cb-7a2a4588eef8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d5d81490-7f39-46dd-b43d-e8c05ed9afa8"
        },
        "item": {
          "id": "a4601468-c71b-452d-86c8-cafcc9cf9d5f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "10f1b515-0fea-41ff-8767-b9f2f7c31dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adae2012-4999-4dde-a22d-3c024b91b7ca",
        "cursor": {
          "ref": "9a407343-86d2-4594-8c7d-e4087f996a1e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "52333663-76f3-44fd-b7a3-1f12f4ca9afa"
        },
        "item": {
          "id": "adae2012-4999-4dde-a22d-3c024b91b7ca",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f53cb9b0-2610-4f94-b507-08b8c0cd1a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197bb503-330c-44fb-a386-cc2dfa67c4eb",
        "cursor": {
          "ref": "2155c64d-9fb2-4ec7-ac02-1873808e6b75",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "87554637-7a8a-43b6-a33f-831e6d2b65ce"
        },
        "item": {
          "id": "197bb503-330c-44fb-a386-cc2dfa67c4eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cb4a86c3-8b6f-457a-80bb-72dc86f52e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cae638-1801-4e2f-9b70-51bc3d929200",
        "cursor": {
          "ref": "334a6f3f-59b1-42f3-af05-aa7813d0912e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ee3dcbe1-40c0-4d1d-b6bc-961504dd413c"
        },
        "item": {
          "id": "d5cae638-1801-4e2f-9b70-51bc3d929200",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d62928d7-c3a7-40de-9ef8-abb124473588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf7c097-f6c5-4f08-8273-f3cd7be2ca1c",
        "cursor": {
          "ref": "6a8b334c-cdf5-4ae7-9fe7-8ab592b384b2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ef4604d-55b5-420b-8a62-d0bff83e0e50"
        },
        "item": {
          "id": "bbf7c097-f6c5-4f08-8273-f3cd7be2ca1c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b76ed191-86ba-4e27-8e29-c7a01d5653ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc3a6b1-38ea-4bd6-9a92-94e0c33d87c0",
        "cursor": {
          "ref": "884adbc6-ab76-415b-8c96-a46dfa2ee01f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6e356b3e-0af8-4239-9720-806d5d4bca32"
        },
        "item": {
          "id": "4dc3a6b1-38ea-4bd6-9a92-94e0c33d87c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9423afd0-45ed-4e3f-88de-3cc10c4635a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e30e03-5aa5-4bfd-9859-9483aceb4c76",
        "cursor": {
          "ref": "de1c0c90-952f-4863-9b3e-68b081c22c0c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7e645075-1fbc-4b49-84c1-403990a2518a"
        },
        "item": {
          "id": "57e30e03-5aa5-4bfd-9859-9483aceb4c76",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1037878b-0847-48bf-a8dc-ffa253e1b022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22f564-9bae-467f-8e6b-01fc0f75514e",
        "cursor": {
          "ref": "ceca6ca0-dc89-4600-8922-2b8b59316114",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c044c87a-2e48-4f7c-93d2-dd8aefd0c8b8"
        },
        "item": {
          "id": "cc22f564-9bae-467f-8e6b-01fc0f75514e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "970b790d-dd28-4dc8-b44f-0fd043e454be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b806ce5-ea7d-40bb-914e-c9afdd853bc4",
        "cursor": {
          "ref": "7f388924-0009-4f55-9352-4ad375145ba2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2f7d0c1c-9c69-4878-9a77-8b9bd1aab807"
        },
        "item": {
          "id": "2b806ce5-ea7d-40bb-914e-c9afdd853bc4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c099791-6753-46da-81d6-fe24a83d1b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9519bf4a-52a5-4be9-85c1-8038980b12ad",
        "cursor": {
          "ref": "a2130a7f-861b-441a-b007-a230feca3eb9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1e8d0b6a-0c28-4491-ade5-9b2ec4fc9c7e"
        },
        "item": {
          "id": "9519bf4a-52a5-4be9-85c1-8038980b12ad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1761cb5e-83d0-4cca-9305-af4f892a6824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68184ff-d2c5-4297-8724-da221956913f",
        "cursor": {
          "ref": "29650c4d-67ec-4c75-9812-10f5130d6de2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "89dcdbad-a435-41fa-a240-e26cae393baa"
        },
        "item": {
          "id": "e68184ff-d2c5-4297-8724-da221956913f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2618679-1731-47c9-805e-ad654c2428ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4eb700-e552-451c-a201-4bb41536f17f",
        "cursor": {
          "ref": "b48ffb4b-4644-4c47-abf5-9cf12b299976",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72bb5572-dd37-4687-a8b5-69c3d45ef0ce"
        },
        "item": {
          "id": "8a4eb700-e552-451c-a201-4bb41536f17f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e11ef5bd-d169-4435-8d63-0ab35b643fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5330f1d-0bef-424e-8a45-d90581864f26",
        "cursor": {
          "ref": "8fb8d94f-3dbb-457b-902b-2ad9e723e67b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4da0dd97-2cea-4344-baef-365be2c98995"
        },
        "item": {
          "id": "c5330f1d-0bef-424e-8a45-d90581864f26",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7cc0b5d7-f574-46e0-b990-efe32c38b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9949be1-29a9-428c-974a-c6c16bc18892",
        "cursor": {
          "ref": "42a84624-013d-44b0-838d-26d8ffd10ee3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "74f3972c-5375-4ee3-81b6-ff41d6059b7b"
        },
        "item": {
          "id": "c9949be1-29a9-428c-974a-c6c16bc18892",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "007cbbcd-cf98-4c74-84a8-ebf8afda39a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbad55-24ad-4f3a-b80c-c157c456f423",
        "cursor": {
          "ref": "221df6a8-b434-42a7-976a-4db00ebb82ad",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ef95b79-b042-4a12-b375-92780c7f5949"
        },
        "item": {
          "id": "addbad55-24ad-4f3a-b80c-c157c456f423",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c32b1819-03c4-4f72-9088-ad308a0d60ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df84339-beaa-4460-bbb0-9133d11a72ef",
        "cursor": {
          "ref": "709d0ef0-1332-4ed0-9802-9807aa9b0385",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "35886222-3cbf-4ab1-9fc1-f97eca11d732"
        },
        "item": {
          "id": "4df84339-beaa-4460-bbb0-9133d11a72ef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36ec5a67-80e0-4771-a50c-29948b0c6748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd898d3-0dac-4f1f-90ab-ce0e81ca7cd3",
        "cursor": {
          "ref": "881050d4-0ce4-4e06-a677-c9d2013ccc1a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "864e9709-432f-44fb-b970-f3e5af28a249"
        },
        "item": {
          "id": "9cd898d3-0dac-4f1f-90ab-ce0e81ca7cd3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8da687a-1265-4d5b-b1dd-e6f8821d267e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d421ef-b4bd-493e-bacb-ef8ffea1440e",
        "cursor": {
          "ref": "d9517672-32e8-421a-b304-b2000320809e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "00996cd1-7298-4547-9665-eb47b89e6140"
        },
        "item": {
          "id": "b1d421ef-b4bd-493e-bacb-ef8ffea1440e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2e20481d-d1cc-4ee5-8ad8-33df0a310fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830cb907-4c04-4354-a70a-3470f6fa82f6",
        "cursor": {
          "ref": "88959fcb-eb10-4c25-b312-38f79478ef08",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d0496333-9007-432e-8ac2-bca2ef83cc05"
        },
        "item": {
          "id": "830cb907-4c04-4354-a70a-3470f6fa82f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d25ce8d0-05f9-4e66-887c-eebd2f4abdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b9420a-7a9a-46ea-96e5-c24c606027b6",
        "cursor": {
          "ref": "aaa47464-7da5-400e-bfbf-d80349ba3096",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "36989c98-bddf-4d10-b4f0-19819b9373f7"
        },
        "item": {
          "id": "e9b9420a-7a9a-46ea-96e5-c24c606027b6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "05479c6c-b69a-4515-a8ab-6e5c3be397fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9078ca09-8792-4cd8-840f-0855e9966034",
        "cursor": {
          "ref": "976a0a6b-8d72-40ca-875c-3867f901f99f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f53df1bb-d41a-4543-9984-591e8e7662ce"
        },
        "item": {
          "id": "9078ca09-8792-4cd8-840f-0855e9966034",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5e36e766-9ea4-4993-86a2-43b42aba4a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b7662-65ac-4236-84dc-a845fb035fee",
        "cursor": {
          "ref": "7554414f-55f5-4244-bd06-6e82a1a26049",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a919b9be-9f98-4c08-a659-22fd9331a0bd"
        },
        "item": {
          "id": "616b7662-65ac-4236-84dc-a845fb035fee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e6aac3d1-9e4c-447d-9092-a0851aa3db41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b1a73-6767-4be3-813b-f1971a1ac567",
        "cursor": {
          "ref": "2007b337-4f9e-4615-aef1-aa49c30f9ebd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8d1f5f9f-a354-4309-9b0b-7eb2afcd420c"
        },
        "item": {
          "id": "413b1a73-6767-4be3-813b-f1971a1ac567",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f2b7519-41c4-44f6-8a70-11ce2eaf755b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3334b0f3-ef3b-4812-b588-389e14b4573e",
        "cursor": {
          "ref": "af13a629-e965-4314-bc0d-ae15166acae9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2e44800e-02b8-44b5-8084-65e8367d2705"
        },
        "item": {
          "id": "3334b0f3-ef3b-4812-b588-389e14b4573e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2caf9c35-17ed-43db-b69f-d5216b19608c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e519f0-e990-4aec-8d32-e5bee6ac12a0",
        "cursor": {
          "ref": "50f949ed-db9a-4454-9222-ff0acd5718b4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aae74379-248f-4ba8-82e3-12851cb33e0d"
        },
        "item": {
          "id": "78e519f0-e990-4aec-8d32-e5bee6ac12a0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "50ee91b4-5b5e-4bb9-855b-57544d209aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3343c10c-d722-4861-a42e-522017d93a1b",
        "cursor": {
          "ref": "8a2c3305-e80a-4da4-8159-8e5e515124b2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5be48c20-0310-4fac-8a7a-6a5bcd7b3e52"
        },
        "item": {
          "id": "3343c10c-d722-4861-a42e-522017d93a1b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd2a4e39-46ca-4455-b405-89d9bc88d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c10c446-9278-4358-92cd-33d4c7e86007",
        "cursor": {
          "ref": "5a4b9141-8493-4e4f-81d7-bb9761225a75",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "19f00993-ab2c-44e0-8b6c-cf7d43e0aa31"
        },
        "item": {
          "id": "8c10c446-9278-4358-92cd-33d4c7e86007",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "70bdc9e4-7085-4f05-866f-5f6c01a6b281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb86990-b67d-4037-9f89-505ef12e8dc0",
        "cursor": {
          "ref": "37414ae0-ef38-4a85-b2c0-019f1b11c5ee",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2598273f-a4f6-47f9-8310-cbe91130cb03"
        },
        "item": {
          "id": "1eb86990-b67d-4037-9f89-505ef12e8dc0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "60334032-cb12-472e-8485-6072581f2cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c15893-21a3-4574-8dd8-d3169e380774",
        "cursor": {
          "ref": "60f6a2b5-51e8-46c4-97f8-6e86f274f84d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4d45a76d-703f-4e6f-a689-287a1c36f6bc"
        },
        "item": {
          "id": "60c15893-21a3-4574-8dd8-d3169e380774",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fa199572-7212-4961-a793-7980a8798843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d2094d-2029-475b-9e9e-fa230dc6077c",
        "cursor": {
          "ref": "5c4b4049-6fec-4548-994d-424fc2103001",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "624710bf-d1b1-4327-aaaa-81d347dbf3d6"
        },
        "item": {
          "id": "10d2094d-2029-475b-9e9e-fa230dc6077c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "072dd239-b201-4e70-8b5e-ec710f1d9592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37da813-7a3f-4833-a802-2d343ae1d7cb",
        "cursor": {
          "ref": "be5bd0a0-1ba9-4dbc-bf4b-13bdec703b29",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "469593b8-ad65-4331-9478-2666e1904ed0"
        },
        "item": {
          "id": "e37da813-7a3f-4833-a802-2d343ae1d7cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "649cd86d-b7c1-490f-b79d-b99fa29c92ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4cd6eb-06f1-47ea-9f0f-2b39e0a46735",
        "cursor": {
          "ref": "2606813f-c41a-4b9d-a9c8-8b2db1fa8d99",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "710094ca-30a7-46bc-9787-67517b8e19c2"
        },
        "item": {
          "id": "6f4cd6eb-06f1-47ea-9f0f-2b39e0a46735",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0db1d70c-b106-4b8d-a293-414c7dbe2642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd687dce-f1ef-4bfb-9d40-3a32afa6c330",
        "cursor": {
          "ref": "b85d04f7-97f3-4f7c-b14d-42856271f07e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e6c6fc35-05c9-4019-8803-3cfbe952841d"
        },
        "item": {
          "id": "cd687dce-f1ef-4bfb-9d40-3a32afa6c330",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2869ab44-f4e1-4971-a2d7-6eb4d1ba7289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095bb215-4aeb-4457-a986-86a6c035745e",
        "cursor": {
          "ref": "6df03c0a-c922-4576-beca-0be8ed79f9d3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5cc8d42d-1565-429c-bdcb-0473d285ccb3"
        },
        "item": {
          "id": "095bb215-4aeb-4457-a986-86a6c035745e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aaba155c-3262-4928-8289-21a217122450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4bd696-4e94-46f0-9c85-35b33a7a7b48",
        "cursor": {
          "ref": "8eaf619f-9192-4f7e-996a-ef391408a002",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a56db0ec-fcc6-4c02-acf5-2d1a367698a9"
        },
        "item": {
          "id": "8e4bd696-4e94-46f0-9c85-35b33a7a7b48",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6073596f-974a-4555-880b-af9befa41c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29c316e-045f-469e-ba17-429f60f0b976",
        "cursor": {
          "ref": "1ecf55d4-fb5b-4ad3-84b3-5a580ed18eec",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "de3fcf36-2105-492a-adb7-02360ded1796"
        },
        "item": {
          "id": "d29c316e-045f-469e-ba17-429f60f0b976",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b3760f6b-38ab-4e2e-b0c9-7ce19647a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bd39b6-18a3-44be-860e-e85cacf46be9",
        "cursor": {
          "ref": "92997df3-aa4c-41c1-b1f6-398f2d030c4b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "536a5cca-7d57-47c6-b6d7-82171ebc989f"
        },
        "item": {
          "id": "98bd39b6-18a3-44be-860e-e85cacf46be9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "15931622-b41a-4e2d-8747-91d8f83a5359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c389259-15fd-46d4-9bf2-d601f0a46181",
        "cursor": {
          "ref": "ca9652b6-db23-47ce-8033-7ebabce075ce",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7f076d74-faf9-417a-bdc9-49e7aa0dc25f"
        },
        "item": {
          "id": "4c389259-15fd-46d4-9bf2-d601f0a46181",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a83a6ee6-a84f-4d97-a46d-d746099f12b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46db1bce-9f2f-45f6-82c6-7afa9822b83d",
        "cursor": {
          "ref": "5392dacb-5e40-41f7-90b6-800f1729a42e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9eeeb413-020e-43c7-a99e-c8154a4b0e76"
        },
        "item": {
          "id": "46db1bce-9f2f-45f6-82c6-7afa9822b83d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bb9a1fed-52ac-46e7-9f12-1b12b8c936d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ed34ee-43d9-4e53-81bc-fcdfa89398f0",
        "cursor": {
          "ref": "2ffe3d09-cfe6-4868-81cd-cf048195a90b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4f18c7e-291d-4fc5-913a-281e886f1960"
        },
        "item": {
          "id": "d6ed34ee-43d9-4e53-81bc-fcdfa89398f0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "18872461-f625-4317-ba01-c8694e484fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5360fd-9ceb-4eb1-ad27-1b50800c957e",
        "cursor": {
          "ref": "d05c0cea-c062-45b9-a39c-1a61996a860c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2181e704-1dc2-4b3d-b0b1-f46c3a6214fb"
        },
        "item": {
          "id": "ac5360fd-9ceb-4eb1-ad27-1b50800c957e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ce533641-2779-4a5f-8480-2811c1a5384b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ae09dc-666c-46dd-9fd4-cf9d57947745",
        "cursor": {
          "ref": "387acc90-1f5d-4828-8977-daea7bb12296",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8ecd8d6c-62b0-4aab-9351-1895cec1e7e2"
        },
        "item": {
          "id": "00ae09dc-666c-46dd-9fd4-cf9d57947745",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8753e107-92f1-4d51-aa96-2482ce420d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c861bb-592f-43b4-a714-6db5ca5084a4",
        "cursor": {
          "ref": "6cb57ec5-8a03-4e6d-a0f6-2773b0f08b1e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5bc3383b-9a0b-4070-848b-18c8e7515d72"
        },
        "item": {
          "id": "c1c861bb-592f-43b4-a714-6db5ca5084a4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a6790c0-e397-4698-8c27-d0e653c1b88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd608964-39b2-4e66-bb82-86af35410737",
        "cursor": {
          "ref": "bf0a4aae-89ad-4682-9545-c4ec329d31ff",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "42e98fdd-df0f-4635-b00a-436dc7067878"
        },
        "item": {
          "id": "cd608964-39b2-4e66-bb82-86af35410737",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4c0143a-33e8-46ab-af43-ace9635665ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dac989-9b15-4277-8eda-2599daf4469c",
        "cursor": {
          "ref": "ec3aaf84-d416-41ad-9146-0bf59b04c985",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44cd71e1-d084-4df2-a049-6b52aef2af01"
        },
        "item": {
          "id": "25dac989-9b15-4277-8eda-2599daf4469c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1853773e-3c00-4120-88b2-8ec45278e09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574788ff-8050-4384-a6f6-59a2d11ae992",
        "cursor": {
          "ref": "6ec97117-fa50-44a6-9275-e2771b3b4e17",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aa61fd04-6bcc-4b61-a064-93770cbad985"
        },
        "item": {
          "id": "574788ff-8050-4384-a6f6-59a2d11ae992",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "865fa719-fec9-495b-9e62-4ef52d654b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56784baa-2990-4d4d-98b4-15539ed221bd",
        "cursor": {
          "ref": "5ff94243-cf2d-47a7-97d4-8f5cc55ea7ba",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8321f15b-c8cb-419a-8ee6-6706d78d0793"
        },
        "item": {
          "id": "56784baa-2990-4d4d-98b4-15539ed221bd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "818c0a70-1d70-43c9-a6b9-917715e11afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01de7dc6-c402-4d04-8090-9183bda075ee",
        "cursor": {
          "ref": "8e94a57b-64aa-48bf-8e92-a6d82f844283",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5dbc7343-0c43-4216-83eb-b88e449cadb2"
        },
        "item": {
          "id": "01de7dc6-c402-4d04-8090-9183bda075ee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb845edc-e0da-4ca1-9092-ef14a40188d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865c593-a50e-4f60-9367-9ad811138d61",
        "cursor": {
          "ref": "a90bff3f-fe8e-4832-9722-3b62abceea11",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f8eb59ef-4702-43eb-b770-0c27d8413edc"
        },
        "item": {
          "id": "b865c593-a50e-4f60-9367-9ad811138d61",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8c128104-d46d-4775-b4b8-89d935130f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7d1212-28fd-4787-9283-18985c129382",
        "cursor": {
          "ref": "04bb11e0-01a1-4bb4-a187-4b2472f70640",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0a8e4a2c-a220-418c-9c8a-89deeca5c1bd"
        },
        "item": {
          "id": "0d7d1212-28fd-4787-9283-18985c129382",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "96126cad-c5a5-4464-9b78-17182ddfb855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c3ce4-47a7-4d36-879d-304ab11b3bb4",
        "cursor": {
          "ref": "32fba819-ed8d-4fe4-8def-983bbb03ed05",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1ae9afce-2d3c-469c-9e2a-de524eb3476d"
        },
        "item": {
          "id": "8a9c3ce4-47a7-4d36-879d-304ab11b3bb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "eb50d42c-8fc1-4bd2-a130-0d36af4346ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b87ca2-d80a-407a-b721-8e09e54a4c07",
        "cursor": {
          "ref": "f333065c-fa31-4cca-931f-d2166c7a05e2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dff2f0e6-99af-4b24-bdbd-96fc88aa048b"
        },
        "item": {
          "id": "85b87ca2-d80a-407a-b721-8e09e54a4c07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1cf614ff-26cf-4fd5-b6fd-b6ae50f083c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a54e15-bfe0-4ba4-8da7-0cbfb44d4efc",
        "cursor": {
          "ref": "8ca480de-2ff9-4367-9134-61130e9444de",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c1ef8054-c4e8-445e-8b2e-9b70bd729125"
        },
        "item": {
          "id": "59a54e15-bfe0-4ba4-8da7-0cbfb44d4efc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6323e630-be71-4b3d-b5bf-7c4bed4cd455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05982de5-c4c6-431e-9fd0-15ad2c919120",
        "cursor": {
          "ref": "e6c3f0e3-5ebe-4ca5-84ce-9504b4e3e332",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dc8118e2-5a7b-49a7-a226-6ba57e81a426"
        },
        "item": {
          "id": "05982de5-c4c6-431e-9fd0-15ad2c919120",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "826d1647-2b2c-4b8a-9aa2-aae1dcd7db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc670bc0-dfd6-4581-9369-eb3eb83a6d2b",
        "cursor": {
          "ref": "3e093f1f-267c-4206-94b5-eaec8585fe6c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "931cce5f-a6b7-4620-a11f-ae64d1895739"
        },
        "item": {
          "id": "bc670bc0-dfd6-4581-9369-eb3eb83a6d2b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51bbfa60-db36-4ccf-a579-f5187a23b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e51519-d07c-4106-a54e-8cd264de6177",
        "cursor": {
          "ref": "46ec84f3-3cb6-499c-8503-3f358b24cddb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "472684bd-a630-4b64-adaa-b8dee06e63c1"
        },
        "item": {
          "id": "f8e51519-d07c-4106-a54e-8cd264de6177",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c3e235d-1858-4f51-9140-15dfc32f5f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3c7f7-b2a9-45fb-a3eb-f76d354e3617",
        "cursor": {
          "ref": "0451ef80-b38c-4def-a5a8-a4f9326ae26b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8fafcd4-1cdf-43f4-8454-b3d57fffaa8e"
        },
        "item": {
          "id": "f9d3c7f7-b2a9-45fb-a3eb-f76d354e3617",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "656c59c8-af82-41c2-a66c-b1889327f072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3213570d-3863-40c4-a4ae-1c505aafcc6c",
        "cursor": {
          "ref": "8e161955-934b-4f76-8498-6760b379d271",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "78bbe4f0-4e80-4994-99f1-3adf8fc9df33"
        },
        "item": {
          "id": "3213570d-3863-40c4-a4ae-1c505aafcc6c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c375d5c-b89c-434a-a7af-cd8d3d4ae6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0925d4-26ac-4d86-a276-d07dd02440a8",
        "cursor": {
          "ref": "a7b8a5c6-9696-43fc-b1e5-b630db48cbf7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d252feb-346d-4af4-a873-338903c58c13"
        },
        "item": {
          "id": "fd0925d4-26ac-4d86-a276-d07dd02440a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4a0b82dd-7d26-41c0-86b8-7f21450cb431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29833314-0af7-414a-a3bd-bb4d1c2a00b9",
        "cursor": {
          "ref": "b508fa60-0c26-4174-85df-5b10a1d5026a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8586ed25-5910-4a74-830c-acae21e7a869"
        },
        "item": {
          "id": "29833314-0af7-414a-a3bd-bb4d1c2a00b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1864816f-2a65-4edc-84ec-400c3e4b0bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70d81b-eb48-406c-9fac-6f1b90b0da18",
        "cursor": {
          "ref": "b56edc03-83af-4713-b680-f11fc81fd26f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9149e315-4d9c-4b3b-91c4-f58e4704d54f"
        },
        "item": {
          "id": "3a70d81b-eb48-406c-9fac-6f1b90b0da18",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "40faed8c-09ce-4e1f-90c3-727c6bd68b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b3147d-1bb9-42a7-ada9-a105bcb4ed5a",
        "cursor": {
          "ref": "8cc061fc-93ad-4b4c-9ab1-504833623662",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a88c872-9ad5-46ce-ba95-e4a863c733a6"
        },
        "item": {
          "id": "f5b3147d-1bb9-42a7-ada9-a105bcb4ed5a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d22dd167-fe54-4b06-8a63-76601087d351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe7373a-4ad6-4a4c-a73a-47f541d1c9f5",
        "cursor": {
          "ref": "7a8b7678-b0fa-4d5d-b6e5-cfbf7a244efb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc9ace50-1207-4b77-87e5-ffbdc15308a3"
        },
        "item": {
          "id": "bfe7373a-4ad6-4a4c-a73a-47f541d1c9f5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e99ec9c4-2824-4e65-a560-982bb7c868d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bfe58a-2d12-4fa1-bffb-5b2f96c60aa7",
        "cursor": {
          "ref": "536eb2d5-08fd-417d-b0df-daefb7f1ce4a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "419bde6b-3b26-4188-ba42-91b2498a2b41"
        },
        "item": {
          "id": "81bfe58a-2d12-4fa1-bffb-5b2f96c60aa7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "20d53006-8d86-48be-9f5c-02aad528ca84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca47145-b671-46b5-8604-2ae2c8d1eeb5",
        "cursor": {
          "ref": "068f07e3-2d60-4ab5-8951-596d4b89f349",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "912766e6-ee4f-481c-b83a-39afeb5838e1"
        },
        "item": {
          "id": "0ca47145-b671-46b5-8604-2ae2c8d1eeb5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aa9c5b54-08dc-43cf-afe1-036f9ae1569f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730eac1-c79a-4118-b589-ea9e36c7bf35",
        "cursor": {
          "ref": "9e675a67-2767-45c3-be93-6f664713248d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d8dcf84e-2d80-40b1-a704-604a8a4fa430"
        },
        "item": {
          "id": "5730eac1-c79a-4118-b589-ea9e36c7bf35",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a5dae834-1526-4926-8ce8-31baaf133c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a480fe-8247-46d8-b6fd-45ec60e7eb64",
        "cursor": {
          "ref": "384cd2a8-80cf-448c-b9c3-d4770a448777",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ed6f6f39-4d1b-4885-aeed-c4ba9191a802"
        },
        "item": {
          "id": "d0a480fe-8247-46d8-b6fd-45ec60e7eb64",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7b200ecf-fbd9-4f7d-8f8a-9c054c189d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270cf96-3c5c-4fd2-94ba-97be36cc887b",
        "cursor": {
          "ref": "5ea92244-de35-458f-801a-40a83e2dbbfd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8123ab61-6169-47ea-b4d2-a2f5f7949e00"
        },
        "item": {
          "id": "0270cf96-3c5c-4fd2-94ba-97be36cc887b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ddd1ac1-246d-4bae-bd2f-e93fc0e0873a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a428d-a4da-4322-a3d2-b1151e3528c5",
        "cursor": {
          "ref": "6fc915f6-5c4d-419c-86ba-320c05252bc3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff621ef6-05dc-438c-b582-42b382afc7e9"
        },
        "item": {
          "id": "6b7a428d-a4da-4322-a3d2-b1151e3528c5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "628c068d-b82c-422e-8ba2-fcea9fe3d099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16be21e0-39cd-4342-8121-571a03dc3c5b",
        "cursor": {
          "ref": "a20f2a67-3872-4de7-a5b6-112156fa09fb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "084f9e62-ba43-47dd-aa73-8ffe5be207bc"
        },
        "item": {
          "id": "16be21e0-39cd-4342-8121-571a03dc3c5b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "de83e24c-2516-4fc7-87ec-50bcec5468b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2350f5b3-9ed7-4bd5-b786-3893f25a2205",
        "cursor": {
          "ref": "09be99bf-8f8f-456f-ba5e-3ccd9f8a582c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0975f0c6-f3c3-4169-bb36-5635f8a3f42c"
        },
        "item": {
          "id": "2350f5b3-9ed7-4bd5-b786-3893f25a2205",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae6ca8dd-caea-4e80-8520-9f78d9a8be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eec717-8a71-4fec-84df-df7f05b456d1",
        "cursor": {
          "ref": "19ebac51-bc24-4b05-acd1-87b7b433e0bd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a05ac0f-dc95-4e5a-8ef8-f4bf8d1516f8"
        },
        "item": {
          "id": "95eec717-8a71-4fec-84df-df7f05b456d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f85497a-1b50-4178-9f65-0e5f928c986b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197e50c-e0ed-4cf7-b3bb-3aef155b36ab",
        "cursor": {
          "ref": "4cfc4f6c-2588-4de3-91aa-993b1c02afe2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74a56287-cf61-42a1-874b-c5bc4afbb74f"
        },
        "item": {
          "id": "a197e50c-e0ed-4cf7-b3bb-3aef155b36ab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "786cd1c4-6139-4fe9-9763-6578ebe12eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd48ee7c-5301-420a-a45f-0d867699d92e",
        "cursor": {
          "ref": "a6062b90-19b2-488f-8415-1b32150e4ce5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b174bffa-9282-4b44-a466-93d8b8ee4ac7"
        },
        "item": {
          "id": "bd48ee7c-5301-420a-a45f-0d867699d92e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8cbfbc93-dfd6-421e-ae01-b8dce901b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3035515-0eab-4c85-ab6c-22add0eb8b1c",
        "cursor": {
          "ref": "e72d4b75-39b5-4e3e-8ee7-7c760805f0fc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "23d67585-a8c9-415a-ab43-997660fd7d00"
        },
        "item": {
          "id": "a3035515-0eab-4c85-ab6c-22add0eb8b1c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84eb6770-a782-445d-9069-664d8bcfe43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b8ead-db19-4ac6-b9b7-83c7b67c8c28",
        "cursor": {
          "ref": "3c3cfb21-e659-4660-b187-a898d5d98b64",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ef5ea79d-2426-4929-b9a8-d77799e93da1"
        },
        "item": {
          "id": "4b2b8ead-db19-4ac6-b9b7-83c7b67c8c28",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "926f593b-7c3b-4f09-8f52-91bb137518b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e92fe2-6090-4bdc-8695-baf8d34973d6",
        "cursor": {
          "ref": "178bf150-08d2-4166-9ab3-f0ff1295d59a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "01612935-9ccc-4066-945d-c1cf7ae33d03"
        },
        "item": {
          "id": "27e92fe2-6090-4bdc-8695-baf8d34973d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "82a3c6a3-6d1f-4f36-b61c-39d7b5289b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4694eba7-90ea-49dd-9da6-53e18f5c6d22",
        "cursor": {
          "ref": "6d9bc0f6-03b7-465d-8057-ec45d675db22",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "14564639-f39c-43aa-b8f1-fe91f41d05c9"
        },
        "item": {
          "id": "4694eba7-90ea-49dd-9da6-53e18f5c6d22",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "486876ba-ddae-4699-9cc7-3e36c6f63596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b69ef6-509b-4b02-89f9-0ef041fdd7e5",
        "cursor": {
          "ref": "3558286e-6915-474c-ab23-35886cd751d9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "51fd2bbc-b635-453d-807d-ab8bd3e0110e"
        },
        "item": {
          "id": "75b69ef6-509b-4b02-89f9-0ef041fdd7e5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f8a7315f-a3dc-4b1a-a012-4e862cc104f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301ae4b2-ef05-4c8c-a4b4-271adafba0e5",
        "cursor": {
          "ref": "94f4b02c-5f1c-44e8-9811-bbec433d236b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a627be63-dfb7-4096-a39d-2cbb2a099e38"
        },
        "item": {
          "id": "301ae4b2-ef05-4c8c-a4b4-271adafba0e5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3fc74f0c-dfbb-4ad1-a299-fb2bef30d15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b8706-2c46-4fd8-aa18-4ca297e3e246",
        "cursor": {
          "ref": "8ad8dcd9-e46d-41f5-811c-7ddbc4695cb1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "19bc5d40-c547-4889-897d-9c5ab1f8551b"
        },
        "item": {
          "id": "611b8706-2c46-4fd8-aa18-4ca297e3e246",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "95946c6b-82bf-4596-ac76-edd0a6fc4a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d2f060-b2b2-4dad-81db-d72625885eb4",
        "cursor": {
          "ref": "aea7132e-05d4-431d-9a4e-074892ccfbe9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5eb89774-b949-4d44-bc5e-7860f73f3502"
        },
        "item": {
          "id": "28d2f060-b2b2-4dad-81db-d72625885eb4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e6d3b7ce-1783-412d-815e-03c48c50348c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8443bdd5-fb3c-41db-915c-a23f3de7b6ac",
        "cursor": {
          "ref": "13cce6cf-8aa5-44a7-b784-c4addd61fd57",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "61682acc-2d55-40f6-961b-bd8cc1d75cd4"
        },
        "item": {
          "id": "8443bdd5-fb3c-41db-915c-a23f3de7b6ac",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0f5ebb3-2e60-433d-a25b-abdca60d27b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdf7df4-0f3d-4315-8ace-99fd8d49b8ba",
        "cursor": {
          "ref": "29eca959-72fb-43b7-b805-34232977ff9d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd6efbf9-b4ab-43b3-a20d-84fb68fe8a76"
        },
        "item": {
          "id": "dcdf7df4-0f3d-4315-8ace-99fd8d49b8ba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fcea8113-7254-47a4-9629-c10ba0cbb8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5418e-96f2-4ddd-aeeb-5dba65597631",
        "cursor": {
          "ref": "573c855b-55e1-46c3-ba0e-d95bf6f2ff13",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c4c0bff2-0973-4bba-9774-6c8cad16a927"
        },
        "item": {
          "id": "d3c5418e-96f2-4ddd-aeeb-5dba65597631",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0db9bb8e-dbab-4249-9b96-dc40d8f8d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bcb2fd-e66a-4b5d-922d-7a9f17fe09a5",
        "cursor": {
          "ref": "5a0e477d-409b-4a05-978a-33f994f1e7d4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1ec44128-397b-462b-883d-680095bddaeb"
        },
        "item": {
          "id": "f9bcb2fd-e66a-4b5d-922d-7a9f17fe09a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a50d436c-3164-4b6e-949a-713ad66ddda8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75bfacd-616d-4500-9062-0755cc50abb7",
        "cursor": {
          "ref": "42f6a21d-ff03-4296-91f3-6e865ea2ca1b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "409afa4e-a3c2-45ff-9e06-5ac72e8a069c"
        },
        "item": {
          "id": "c75bfacd-616d-4500-9062-0755cc50abb7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fd1e4cb5-afed-43f6-b76a-3892a958ce2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "522bfda3-9bc2-4b73-9c5c-78868ea3a516",
        "cursor": {
          "ref": "0fd9ac33-eb80-4d80-b3f4-890b44a48636",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e84f81fa-0d0e-4373-b27d-8c522e770158"
        },
        "item": {
          "id": "522bfda3-9bc2-4b73-9c5c-78868ea3a516",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5b6e8d41-3489-4df9-a8ad-c0f9b7033739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "17d947c9-c7ea-4d54-8a62-52326cf3de8c",
        "cursor": {
          "ref": "515ad269-3166-4076-9cd8-b3e2a63599be",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "688c7324-a67d-47f1-9e04-557167539d97"
        },
        "item": {
          "id": "17d947c9-c7ea-4d54-8a62-52326cf3de8c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "15834cc1-41c1-4c69-bbdf-75d6ec3256d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7ddfb04b-66bb-4f06-8e18-f21de034b4ed",
        "cursor": {
          "ref": "67d6f0bc-30c6-45d2-a037-96b8f232437e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "27ccde0c-a21c-4e0f-89e0-579b2ac8128a"
        },
        "item": {
          "id": "7ddfb04b-66bb-4f06-8e18-f21de034b4ed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2e73a50c-8600-4b4c-8548-6bec241ea082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "16321cd5-481a-4f0e-9be9-f947147117ca",
        "cursor": {
          "ref": "242d1191-df91-4e3b-a52d-49f0357b6246",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5d6ac645-5975-47a4-88a3-965ae67da4cf"
        },
        "item": {
          "id": "16321cd5-481a-4f0e-9be9-f947147117ca",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d49ca2de-cf95-4d7d-8f62-628e08a8994e",
          "status": "Created",
          "code": 201,
          "responseTime": 6949,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f3200c-e743-412f-9818-0646ff0e4c01",
        "cursor": {
          "ref": "e233d04b-fa74-4f9b-8be9-c6a56786e43b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6a4a0f9f-d85d-4a79-8c34-9dd6fd02068e"
        },
        "item": {
          "id": "b0f3200c-e743-412f-9818-0646ff0e4c01",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b990c28d-6b0a-44ad-938b-296e861b7171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "af546932-a2e5-4339-a784-34c1a13d076f",
        "cursor": {
          "ref": "8c903eeb-538d-4b87-b1ee-1c6ab6e83549",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "135fb9fc-cb46-4f9d-91cd-62afe90dd5ca"
        },
        "item": {
          "id": "af546932-a2e5-4339-a784-34c1a13d076f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b322563f-a28b-43b3-9da1-33c1145d22ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6198c8b1-f61f-459f-9a5f-546ed3c24228",
        "cursor": {
          "ref": "0a9b93f8-27cc-4814-84c2-fc2ef0ea752d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "db328e19-8fb5-4720-9ce1-444094c4867c"
        },
        "item": {
          "id": "6198c8b1-f61f-459f-9a5f-546ed3c24228",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "14e37e51-5570-4e73-8e3a-80aafcc65949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba3e626-abfc-4f2a-b9ad-9f23d0d7b876",
        "cursor": {
          "ref": "c4a7494f-dd6f-447b-ac44-56c0d4db122a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e57a66d8-0022-4614-a531-2cd97ba8c298"
        },
        "item": {
          "id": "fba3e626-abfc-4f2a-b9ad-9f23d0d7b876",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31d51bc9-8268-4603-ba13-2625ad5b6c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c81f1f-b9ed-4087-9579-083749450818",
        "cursor": {
          "ref": "d885f93e-9763-4e85-85fc-53c31f9924eb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5e0f25e-cc32-466e-931c-929e9b6e9523"
        },
        "item": {
          "id": "85c81f1f-b9ed-4087-9579-083749450818",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "24434c8c-f344-45e2-a014-e1a60b7134db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ef156-b2cb-4a2c-b28f-987b1969ee8b",
        "cursor": {
          "ref": "2d292480-e890-443a-81bc-ee9db8d73859",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eddf375c-7022-4345-99b8-dc28035ef1f8"
        },
        "item": {
          "id": "f77ef156-b2cb-4a2c-b28f-987b1969ee8b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "164de4f5-413a-4a7d-9fc6-7117feb6839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd77b5a6-f4ce-4a03-b21d-6b084a96628b",
        "cursor": {
          "ref": "f8da4281-cdc3-4379-82df-ecc6c6d53329",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "48d0adfb-c000-4131-82b4-43078c4d8b60"
        },
        "item": {
          "id": "bd77b5a6-f4ce-4a03-b21d-6b084a96628b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fca7f9bb-b4b5-4970-9939-339ee03b9926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c8ff9-e9d5-4f3a-9466-ce3de0551a8e",
        "cursor": {
          "ref": "64e9d0df-b4cd-4cef-b43d-4c0f03a76275",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c99bc04c-50d8-4fc8-add0-481173788385"
        },
        "item": {
          "id": "ee9c8ff9-e9d5-4f3a-9466-ce3de0551a8e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "37fd8e8d-9810-4f7d-944b-0643bf517a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f271421-df84-4b1d-9c0f-d7b0c7f9714a",
        "cursor": {
          "ref": "6bf41644-27a2-461f-8f94-d071e3288d80",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73b6ff3f-5637-4aca-a7d7-1474278a3aae"
        },
        "item": {
          "id": "7f271421-df84-4b1d-9c0f-d7b0c7f9714a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eccdc5f5-08a8-4206-a7f1-1d65a6d55120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c117ef7a-6b06-4b99-b9a5-a9b4b24bb801",
        "cursor": {
          "ref": "1c0a3e61-7593-4135-b6eb-4b35699a4e15",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c43807a1-fe05-4f40-a175-8e7985e6b30c"
        },
        "item": {
          "id": "c117ef7a-6b06-4b99-b9a5-a9b4b24bb801",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b98b9e60-8274-409b-9033-7377306ff37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25213c8e-bd89-4075-8da8-e21967d1cfff",
        "cursor": {
          "ref": "cea2170e-1912-40a4-9d16-d6cf4cfac552",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5bce1bf5-7142-4d59-83f9-a49ae7a5993b"
        },
        "item": {
          "id": "25213c8e-bd89-4075-8da8-e21967d1cfff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a990ffd-b7bc-4630-9cbc-b85e4a822aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376b7123-3027-4225-a1b8-c0e3c147e8ed",
        "cursor": {
          "ref": "1dcc2fdd-44db-44c3-9236-2aa321560fd1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c2d04328-c7fd-40f3-b8b9-ecbea10282eb"
        },
        "item": {
          "id": "376b7123-3027-4225-a1b8-c0e3c147e8ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9633b215-a908-4167-a5e2-46a2a7f28701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab39d764-ad03-4c99-a7c3-21671b8ce568",
        "cursor": {
          "ref": "2a80a5e1-13f1-4055-8df4-a318bc2934ae",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "265eeaa2-103a-4ceb-9975-95b42d28cc2f"
        },
        "item": {
          "id": "ab39d764-ad03-4c99-a7c3-21671b8ce568",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "687bd6ff-6200-411a-835f-d2cd1a92c366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e1a486-796f-44c4-831d-fe04bb45bc36",
        "cursor": {
          "ref": "341b87aa-a8a0-4a7c-bb36-d694c227b2aa",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bf7d1675-21d5-450c-a338-c30d9aaaaaa9"
        },
        "item": {
          "id": "a6e1a486-796f-44c4-831d-fe04bb45bc36",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fa9d206f-b4e2-4ecd-9f95-e04bcefbf3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7764395a-00d8-4590-8c30-8ebb4f6ec8a3",
        "cursor": {
          "ref": "6413eddb-10cf-4952-a2e5-e11d08e10d52",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4e7e0c28-7bf7-4845-9757-086eae7d12b8"
        },
        "item": {
          "id": "7764395a-00d8-4590-8c30-8ebb4f6ec8a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9fe726b-a7f3-4ed6-8197-70b894fa89b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bcb550-ecba-4538-aaf7-5aa705c6c178",
        "cursor": {
          "ref": "fdc4ecc8-8c75-44ec-a704-a3dc81ad2e96",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "202a7a50-bf79-4b05-8206-57c56c58597a"
        },
        "item": {
          "id": "26bcb550-ecba-4538-aaf7-5aa705c6c178",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6841b1ad-99fa-402b-9d9a-7871532ffb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfcb76-082c-4f9c-ac68-b28d1de3fba9",
        "cursor": {
          "ref": "88ddc377-4bdb-439f-baeb-99423a298e51",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "400a1e15-aa67-4f14-9913-b249a4cf31af"
        },
        "item": {
          "id": "56dfcb76-082c-4f9c-ac68-b28d1de3fba9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "926ddee3-e06a-4ec4-8342-698b78843860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1c46e2-6196-4a2b-802e-bfcf1af965e2",
        "cursor": {
          "ref": "23e62a47-8ef0-4696-a156-1f8c46de5124",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6994efe5-cbaa-4aa1-910d-cfedbeb95b7e"
        },
        "item": {
          "id": "fa1c46e2-6196-4a2b-802e-bfcf1af965e2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd74ce31-f116-4435-b4b1-e94b0680930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f56a9e-65a4-469c-b168-f6df1f5c619d",
        "cursor": {
          "ref": "ecea07e4-7562-4330-a9a0-dc7b1b691f51",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c4ec2d94-2a2c-4d69-8381-947afeeef53b"
        },
        "item": {
          "id": "15f56a9e-65a4-469c-b168-f6df1f5c619d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b8266db-3525-42f9-a33b-5155f00b844e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b46ece85-1a5c-4faf-b8bf-365396618ee2",
        "cursor": {
          "ref": "10d1ff01-9c49-4d8a-b1e7-0840ad3091de",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f6c3c059-80ff-4cba-b366-69131d6a9440"
        },
        "item": {
          "id": "b46ece85-1a5c-4faf-b8bf-365396618ee2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6daebb4b-6325-4985-9c1a-c1736894952e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00c8c42-b717-4fb0-9afa-f70d89f18b8c",
        "cursor": {
          "ref": "e6ab00a7-e855-43d2-b6cc-eb4864bd5c4f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e83a197e-0597-4bb1-bfb6-e5f7e07a1d4a"
        },
        "item": {
          "id": "d00c8c42-b717-4fb0-9afa-f70d89f18b8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "56441481-34a5-4a7f-b716-9c7a0abcb8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7b5ac5-4290-45fd-8967-6fe6670b5022",
        "cursor": {
          "ref": "aa458f12-58e3-4133-b792-96fb2747817f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "285e38c4-9643-47c2-a985-0ba08adfaa98"
        },
        "item": {
          "id": "3a7b5ac5-4290-45fd-8967-6fe6670b5022",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd11f4bd-c60f-4c70-a8c6-6cea94db337a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82af807-06ea-4780-830e-16f40815f0ac",
        "cursor": {
          "ref": "f36a11c8-97e7-4f11-a792-6c86ab9fdef7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7379e5ef-d920-4c17-8ca1-15ed4d1ab072"
        },
        "item": {
          "id": "d82af807-06ea-4780-830e-16f40815f0ac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "46b0c19f-0a4a-4e00-a59e-2f8ab8757a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47391f80-09ad-40b0-9cdd-968f095aa9a4",
        "cursor": {
          "ref": "6cd3994a-a47b-4863-8e19-02d471b176c6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6981a07d-12b4-44d2-b1cf-00e187231cf6"
        },
        "item": {
          "id": "47391f80-09ad-40b0-9cdd-968f095aa9a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "59224830-571c-4780-a921-cfb211af7c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fd233c-4a0c-449d-b62c-0d02c9eca4d1",
        "cursor": {
          "ref": "99a581c9-935f-45f3-a66e-372d4ebac15e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b30b708-6b12-4f7b-8780-75a666732cd4"
        },
        "item": {
          "id": "e5fd233c-4a0c-449d-b62c-0d02c9eca4d1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d7fb4bf9-bd8a-4980-b378-3e65a96dddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c32873-f273-4615-9e5c-5dcca5349ac2",
        "cursor": {
          "ref": "62119813-af50-4d52-af58-0ee52953bc1b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7537410-eadd-44c9-a62f-1bbadb8f3fba"
        },
        "item": {
          "id": "22c32873-f273-4615-9e5c-5dcca5349ac2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81b52d89-4c79-424b-865b-d736e2a5ec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f8270d-35be-41b0-a4e2-b2fe0b358101",
        "cursor": {
          "ref": "38dae10b-7ee9-4f61-89d7-9b3920cb08c1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ca8b7947-b8fb-4eff-b735-2733b8040550"
        },
        "item": {
          "id": "63f8270d-35be-41b0-a4e2-b2fe0b358101",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "94dc2a15-df01-4ec1-b00c-b1c4b6c6971d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d533944d-a9b5-48b4-b745-21542c42d14e",
        "cursor": {
          "ref": "8b97927e-4e5f-4f44-b23b-2382b4ca5779",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ffeed692-f954-455e-a4c9-61a96adf8f35"
        },
        "item": {
          "id": "d533944d-a9b5-48b4-b745-21542c42d14e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "08c27725-c54d-429f-acef-14304fbef89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee173f-df5e-480d-b477-d04469fbe269",
        "cursor": {
          "ref": "833243f5-61c6-47da-a3ef-11a2d603ab84",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "037e666c-d040-49e2-9b5a-550f1927cfdb"
        },
        "item": {
          "id": "34ee173f-df5e-480d-b477-d04469fbe269",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88634edb-88c6-4317-8d42-133165142e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3edec-ff0f-41b1-820b-8d0654b8267f",
        "cursor": {
          "ref": "63bd473a-8e53-49fb-8f8e-e0d754d7d961",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c47fefa2-8850-4cea-9692-7f9ad3336623"
        },
        "item": {
          "id": "e4f3edec-ff0f-41b1-820b-8d0654b8267f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9723463c-a962-4a99-8d0d-8c6403d7f54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124415ac-307f-4c42-a5b8-5e5d863652dd",
        "cursor": {
          "ref": "e235a45e-5044-4efa-85b6-49265fdcb064",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "edba4c21-9082-44d9-a09e-2eb228f4c50e"
        },
        "item": {
          "id": "124415ac-307f-4c42-a5b8-5e5d863652dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ab4553d1-cb40-4564-acc5-8f0b0338b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f25df0-9916-4f9e-8f82-d9587f64bb9c",
        "cursor": {
          "ref": "f64aad02-e5d8-4b72-ba73-2b0dd9200b9c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "96c226fe-bda9-49be-988e-25fe38070b45"
        },
        "item": {
          "id": "10f25df0-9916-4f9e-8f82-d9587f64bb9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6c0f64b-9181-4443-926e-2c76e47f5b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e2df71-6f2f-42c7-b7c0-25ba47eb13f8",
        "cursor": {
          "ref": "311e82e4-cee4-4575-a20e-9324aef32ed4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "07bc1cea-d1eb-42ee-9876-a07a86ca36eb"
        },
        "item": {
          "id": "18e2df71-6f2f-42c7-b7c0-25ba47eb13f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfa475a7-0184-4986-bc74-42fa880f2f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e19bc72-3806-42a7-9773-6cc1059d5a0b",
        "cursor": {
          "ref": "2c7bae04-47a8-4ba2-8f54-0541d88d98cf",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "06fd7cf8-074f-4d13-972b-abdf2f8bcc94"
        },
        "item": {
          "id": "5e19bc72-3806-42a7-9773-6cc1059d5a0b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f65b39b1-de1f-4f69-82b1-529bba2863dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9345d7a4-6b68-4015-b0e2-48c14f96b666",
        "cursor": {
          "ref": "7346a7cf-2b53-4408-aa74-876e692c6352",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "065b64a1-40c9-47f4-8013-15af263fb274"
        },
        "item": {
          "id": "9345d7a4-6b68-4015-b0e2-48c14f96b666",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "200fe7f7-aeaf-4fac-a62b-e0c2ace60823",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "53e6d8ac-b390-47ca-946b-78103610c548",
        "cursor": {
          "ref": "78645132-6c03-427d-a0c2-5e1b9b65cf73",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "619c357f-f660-4f39-b211-6723fee9675f"
        },
        "item": {
          "id": "53e6d8ac-b390-47ca-946b-78103610c548",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a5ba9e5b-86d7-42fe-9d75-82ddbb2e1b81",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "152e4a86-b43b-45c1-b407-c6cbae3d227e",
        "cursor": {
          "ref": "5374feef-eb0a-47c0-943f-eafa5230dab5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3411f654-6117-44a8-8ef6-c597f85ec3f3"
        },
        "item": {
          "id": "152e4a86-b43b-45c1-b407-c6cbae3d227e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37426edf-75ce-4382-9cb4-edfb31094b81",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7db27c22-cbe4-4f62-8f2c-9d75f6776a38",
        "cursor": {
          "ref": "2a8152fe-5d6d-4723-89de-4217474afa11",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ab63239-4719-476a-903e-9c3233f1b36d"
        },
        "item": {
          "id": "7db27c22-cbe4-4f62-8f2c-9d75f6776a38",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ac41cf8c-0d34-42c9-a76d-ab49ab5c1d4c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "58ea98cb-b573-42a6-82f3-03fb278ef321",
        "cursor": {
          "ref": "6fc4ca07-3156-45c8-b2e5-9447c05322db",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "02c1563a-73b2-40d1-8136-4b4e1ccfee19"
        },
        "item": {
          "id": "58ea98cb-b573-42a6-82f3-03fb278ef321",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0e4cef5f-1f12-4680-b693-38bbdf1d04fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "97f4dc72-761f-4865-b874-ede7b1e5833c",
        "cursor": {
          "ref": "ef6d8432-4e23-4fe8-8d73-d2b086aba555",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "71458b4f-c159-4c66-810c-25cb3201c9d4"
        },
        "item": {
          "id": "97f4dc72-761f-4865-b874-ede7b1e5833c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7ac0c9d0-cdd5-4bd8-96ae-639337128592",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c1b9e-e9f6-4c96-a555-4f6984909fc4",
        "cursor": {
          "ref": "be9fbf7d-b44b-4e66-adc8-571a09ebb1cf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "38ab4d14-bed9-478d-8145-9d62718b3d24"
        },
        "item": {
          "id": "6d8c1b9e-e9f6-4c96-a555-4f6984909fc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac5790d1-58c2-488e-b51c-9542d8065faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ab9bd-ab1d-4812-8fa4-f5aec1f88a99",
        "cursor": {
          "ref": "a2ef085f-9297-4641-b0f2-63f3592c1dc0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1654ce50-8129-48f2-8111-86cc73fe8141"
        },
        "item": {
          "id": "f64ab9bd-ab1d-4812-8fa4-f5aec1f88a99",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "efadb965-9fcf-4813-9614-b870daae4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85565136-f2a4-45ce-b130-71d37404b4e3",
        "cursor": {
          "ref": "bd554329-331f-407a-bb36-e6b5d2758994",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "351ec660-4b91-4abe-a4d7-15f8ef0625a3"
        },
        "item": {
          "id": "85565136-f2a4-45ce-b130-71d37404b4e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9ad4f6f3-8fbb-45f6-97d8-d85787ae516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c24d4b-08ab-45ee-9d96-14fdd9431257",
        "cursor": {
          "ref": "ee059aa1-7236-4177-bd22-b2f1356dce72",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1865085c-bed2-40c0-b05c-0401427cad82"
        },
        "item": {
          "id": "15c24d4b-08ab-45ee-9d96-14fdd9431257",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ab7fa8b-7a3f-4244-ad53-0243bc85fe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6039d2-6867-49e4-88c8-d5012f20d5c2",
        "cursor": {
          "ref": "e42e2708-7544-48a2-8099-cf1b367d3c56",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "348a4526-6726-4cf8-a53d-ee23d24fe383"
        },
        "item": {
          "id": "0a6039d2-6867-49e4-88c8-d5012f20d5c2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19e614c0-14a5-4dfa-a752-d26ec450afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76e53c7-9b27-4bd1-b36e-b95a7e46ce99",
        "cursor": {
          "ref": "3dae493c-53cc-489d-83e3-4b82a694a9dd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9cc5d100-3ae6-418b-9e97-28154df8a803"
        },
        "item": {
          "id": "e76e53c7-9b27-4bd1-b36e-b95a7e46ce99",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94a28e3a-149d-445e-b72a-4a3afde662e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a60d436-0b91-4e0f-a9f8-a70332e50452",
        "cursor": {
          "ref": "23c21699-fba3-4e50-85a9-6936a604b9d5",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1a730a7a-709b-4a7f-b72d-d6d4c670f0e7"
        },
        "item": {
          "id": "8a60d436-0b91-4e0f-a9f8-a70332e50452",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cc72da7d-1c70-4e1f-b2be-0da24e41408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7f955-859e-4234-bb88-390d09902a82",
        "cursor": {
          "ref": "a76d152e-49be-43e4-8baf-e33b4943b833",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2ad29ff6-10ee-4836-a0de-573455f1c93f"
        },
        "item": {
          "id": "e0c7f955-859e-4234-bb88-390d09902a82",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9eed2b07-88d6-41ae-bd07-1078419197dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27180fde-515e-49e2-9678-c96af59e08c8",
        "cursor": {
          "ref": "d28dfadd-c394-4d88-a665-8260623e4126",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75bb0743-872a-4f9d-8ee4-e52722d7878c"
        },
        "item": {
          "id": "27180fde-515e-49e2-9678-c96af59e08c8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2db89109-e6ac-4a0e-9ec6-3250c2f49569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aa5eeb-01b2-4ea5-9ad6-045f09667e67",
        "cursor": {
          "ref": "44ffd8fb-e97e-433f-bd17-6267cd487550",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4797f0d0-e848-4964-a68b-52ffbaa19d2d"
        },
        "item": {
          "id": "50aa5eeb-01b2-4ea5-9ad6-045f09667e67",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b295d343-b46f-41b0-b2a3-3b4e20223606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920674bf-064b-4757-8385-4aec74c59c6d",
        "cursor": {
          "ref": "a57ecbbc-6a6a-41a7-9374-b77995447962",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "85193eea-f24e-469a-9b8d-103d3ad08be2"
        },
        "item": {
          "id": "920674bf-064b-4757-8385-4aec74c59c6d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a2167bbf-a132-4c59-b686-e5c8ae5489dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c048d2b-bc15-490f-98eb-69aba6a5a96f",
        "cursor": {
          "ref": "dbce1967-a577-4fd5-ac41-b2caea5a1848",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e2eca94e-f511-4d1e-906a-2cfb3bb752c1"
        },
        "item": {
          "id": "9c048d2b-bc15-490f-98eb-69aba6a5a96f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ab8472b7-0ae6-411b-a326-78bf5453f1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cfc4bf-4c40-4191-be67-3247c6a4b816",
        "cursor": {
          "ref": "836ca318-e71c-4ab0-b0f5-2c98e81671ae",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b6a9212b-7744-4491-b1c5-975a1c236b98"
        },
        "item": {
          "id": "b7cfc4bf-4c40-4191-be67-3247c6a4b816",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "468890db-c8d6-43aa-ab16-5db630d4df3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cffead-aaf4-4161-a084-3fca84afb248",
        "cursor": {
          "ref": "58643c52-140b-4d17-a529-c1e10bc73a32",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ffed61a1-2c00-458b-9c6d-2190f390442c"
        },
        "item": {
          "id": "d2cffead-aaf4-4161-a084-3fca84afb248",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "49466491-84b4-4ffe-a1a4-f6eddfd6978d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae834482-1597-4cdb-adbe-65bb1d023f4a",
        "cursor": {
          "ref": "e1146441-16b3-407c-8939-4003f777003f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1823afc8-2d4b-441c-9f1f-f8e6cb076910"
        },
        "item": {
          "id": "ae834482-1597-4cdb-adbe-65bb1d023f4a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "928b09d6-da44-462e-abf0-b667714d7b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e8285-8d0c-4327-9cb2-6fd3adcc3b18",
        "cursor": {
          "ref": "1c43b293-cb6f-4ea1-a7a7-16e6271cfcd2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd54494d-f604-4d6e-ac96-9a2aece29b1d"
        },
        "item": {
          "id": "924e8285-8d0c-4327-9cb2-6fd3adcc3b18",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9c1dfd5a-34ae-4723-9f0e-33c691e6264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77724978-1740-4e22-bb85-b8b8ac959281",
        "cursor": {
          "ref": "e464098a-850d-452d-b819-fff8c45dc797",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "43e5c9c1-613d-4960-b35c-bc0a09cf5a34"
        },
        "item": {
          "id": "77724978-1740-4e22-bb85-b8b8ac959281",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de996d76-3f63-48c2-8c1f-f73057241e0d",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "cc49fd29-0c20-4d0b-a286-54470447d79e",
        "cursor": {
          "ref": "a26a1e19-3d70-4600-84ba-989fc8fba602",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6ee6569-46fa-4495-86e2-f2ae7c0bab68"
        },
        "item": {
          "id": "cc49fd29-0c20-4d0b-a286-54470447d79e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "74a95220-f719-46bf-bc3b-efccf4d7b521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc358256-2d80-4ffd-9767-e5338ce0b18e",
        "cursor": {
          "ref": "ca430789-9286-4468-812f-28ad53a0961a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b57e7c3f-c5d9-451d-bd54-9dbb84bdc4a9"
        },
        "item": {
          "id": "cc358256-2d80-4ffd-9767-e5338ce0b18e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ca09bfd-70bb-4ffb-b04c-048334450512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470d2f3b-8c2b-4255-8ac7-73938c9b0b3c",
        "cursor": {
          "ref": "72192678-44d3-491d-9d0f-93045ec4ed4f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d8e5895-481a-45c6-82c7-42971835e0c5"
        },
        "item": {
          "id": "470d2f3b-8c2b-4255-8ac7-73938c9b0b3c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a4b35f49-c5a4-4278-b5be-cb7c94e87940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e8389-ed47-48f9-944f-12e97b13b82a",
        "cursor": {
          "ref": "1c24f46d-d0c3-4d84-b720-938c51a92070",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3003077a-9587-469c-b18b-80d1bd167426"
        },
        "item": {
          "id": "b59e8389-ed47-48f9-944f-12e97b13b82a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "18ab4eed-79a3-4756-a5c4-ef34d5175a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132f6e68-3ae2-4751-9db6-3cf197e9dd7c",
        "cursor": {
          "ref": "6623cb2a-1d06-4b89-a4bb-3028d75e5b7b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "daafec6b-128b-419f-813c-7582c83bca1c"
        },
        "item": {
          "id": "132f6e68-3ae2-4751-9db6-3cf197e9dd7c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c210f310-519b-4daf-a579-db0e729e7352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d91fc-c451-4067-81cb-305aa756b0d6",
        "cursor": {
          "ref": "6d8cf86a-2f64-4307-a431-e46cf8dfa238",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "24759b3d-8ffb-49e6-9d2b-068339d9bd77"
        },
        "item": {
          "id": "d20d91fc-c451-4067-81cb-305aa756b0d6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04526ce1-63eb-424e-9fdb-b0c192a382d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73efe920-26e9-4df4-80d3-fb6e4624c6bf",
        "cursor": {
          "ref": "ec31e05c-6cce-43cf-bbfa-994e89d83f66",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bca5d01f-4b7a-4d1c-9865-507c8c52778c"
        },
        "item": {
          "id": "73efe920-26e9-4df4-80d3-fb6e4624c6bf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "92432ac1-cdf2-4002-8e98-d49d62467b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8937ec2b-3f22-4e29-8e68-512d5e574654",
        "cursor": {
          "ref": "8d0f5557-ccb4-433b-b512-1402b9bf6cfa",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4b7841c6-16f0-483b-9cfb-528afe0a4a2c"
        },
        "item": {
          "id": "8937ec2b-3f22-4e29-8e68-512d5e574654",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d58b0b1c-b470-4d61-8a2b-e287aaab60eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b84b70-d115-47ca-8112-478fc73eef8c",
        "cursor": {
          "ref": "5bdd9c1c-6305-4633-85ec-f0d7f501ae4d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "127c40ed-934a-4432-a52f-b9f9cdcc7393"
        },
        "item": {
          "id": "95b84b70-d115-47ca-8112-478fc73eef8c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c9246a52-04cc-423e-8f0e-ccf8b2cbfdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6536b0-a20a-4bfa-bda0-a10ab14352ef",
        "cursor": {
          "ref": "ac4c7886-9e0c-40fd-bb44-5edd154f2b28",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "38bdd25b-35c8-4a39-9967-033735f9fd13"
        },
        "item": {
          "id": "ba6536b0-a20a-4bfa-bda0-a10ab14352ef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d153231-481b-460a-9c44-dedafffd6048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fed2b3-c470-4a2f-977c-5456537f9dd4",
        "cursor": {
          "ref": "cbbbeae0-9e59-4886-af46-bb02cf30fc15",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "abbe1257-e416-4725-bc73-d86687de3a3c"
        },
        "item": {
          "id": "d1fed2b3-c470-4a2f-977c-5456537f9dd4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9edab5a-8bb5-4cec-9b00-5546f7c761bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccfcae4-4861-48fa-a132-2c04dff0be1a",
        "cursor": {
          "ref": "3e4c4723-01ae-4bb0-b970-a2d465ed5a72",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "09295733-ac07-4667-b59b-b5960397624e"
        },
        "item": {
          "id": "6ccfcae4-4861-48fa-a132-2c04dff0be1a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0f241bbd-2cb7-4c97-aab6-158110bb935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001422fa-435a-4a3f-832a-74fe05e5fb6b",
        "cursor": {
          "ref": "b6b8d916-a132-4ce7-8259-f2fcd54e3864",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fe6f5a42-fbc0-45af-b598-5369ee902c43"
        },
        "item": {
          "id": "001422fa-435a-4a3f-832a-74fe05e5fb6b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f83de572-7a7d-49ae-baa2-3675c09b3008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185a2d1-1759-4395-b0fa-ca1c6b0ac707",
        "cursor": {
          "ref": "57753c23-64f2-4829-bf31-c4689ab7f71a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d6a5ac9-bf7e-465c-ab5f-254bfdd8660c"
        },
        "item": {
          "id": "f185a2d1-1759-4395-b0fa-ca1c6b0ac707",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "afd00d03-9d28-4b34-88a6-9d5f154b9923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b17fe3-9ebe-491d-a296-27c0d0bb698e",
        "cursor": {
          "ref": "7e3597ab-fcf8-4f4c-9022-09316f66f44b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "44696d3b-afc8-42c3-8a7f-52707b6daea5"
        },
        "item": {
          "id": "b1b17fe3-9ebe-491d-a296-27c0d0bb698e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b43ec336-9a28-43fd-acbb-5b19d9fc14b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22457f19-99bc-450c-837b-6e67b9326521",
        "cursor": {
          "ref": "cf46eb50-2bb5-4766-81bf-bfc6f49bf419",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5e6021a9-8b1a-49c3-8152-1abd90424bd9"
        },
        "item": {
          "id": "22457f19-99bc-450c-837b-6e67b9326521",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b059fe76-f5a6-4a40-9f7e-fc34ee030ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ee9fc4-2747-4fe0-b29e-cb5e237447d3",
        "cursor": {
          "ref": "693b3581-b9c1-49d2-9987-1b5449a7f579",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ee5b8763-9cd3-43a6-a9ac-84d9209f53d0"
        },
        "item": {
          "id": "e8ee9fc4-2747-4fe0-b29e-cb5e237447d3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1027133-0371-4869-8dc2-1e0a768a8645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7f1250-6bbb-4ffa-b4dc-d32fc7ee60cc",
        "cursor": {
          "ref": "124a9146-1dd5-41e3-a83c-6924f4e78589",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "03e69a38-9bd2-42f0-8a3e-703e8ec9252d"
        },
        "item": {
          "id": "1a7f1250-6bbb-4ffa-b4dc-d32fc7ee60cc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d87f653-4aad-4b0d-97ec-09ebfff2e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96609bb9-40bb-4ca8-b568-5ea46d9c4426",
        "cursor": {
          "ref": "b04af93e-3d23-4580-b2e3-50804025e591",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "11bbdc89-af06-4d69-aba7-ab5a45b915d5"
        },
        "item": {
          "id": "96609bb9-40bb-4ca8-b568-5ea46d9c4426",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9fd45d6b-478e-4259-a794-aa28ac9a1fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092348b1-aceb-4f9a-906d-4f1d9057e292",
        "cursor": {
          "ref": "858c9a31-784f-4711-8276-d17f38bf0b64",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "44d82533-2076-4206-911f-97bde92261df"
        },
        "item": {
          "id": "092348b1-aceb-4f9a-906d-4f1d9057e292",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f77b5a33-77b2-471f-a06e-2022c80d6386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e26564-149f-4a15-97b4-b0065961e03c",
        "cursor": {
          "ref": "07f3166a-5c95-47b1-b0ba-d2b8b2b28b4c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fe6f29e8-ff77-4244-b6c4-6916f6b423b0"
        },
        "item": {
          "id": "c9e26564-149f-4a15-97b4-b0065961e03c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4c069085-bde8-4038-9ab6-c7e9112a5c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fc2368-5d29-4144-87bf-85cd60aea38d",
        "cursor": {
          "ref": "fc2ee3d1-2010-41ff-becc-68057130df96",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b85566bc-469f-416d-97f0-4120c431f53c"
        },
        "item": {
          "id": "86fc2368-5d29-4144-87bf-85cd60aea38d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aefa2b9d-8898-4b82-a03f-008253d5f612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea54f97-750a-4a33-82e1-68b1e8a749fa",
        "cursor": {
          "ref": "e12c9bed-e69b-4181-a80f-9a2ef64f6b7d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9260c16f-4dbb-4cfe-be41-ff274908f651"
        },
        "item": {
          "id": "cea54f97-750a-4a33-82e1-68b1e8a749fa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cc70fbe9-7692-45a6-9cd5-52865d617e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d3453f-cdd5-4b5f-a458-23bb11a18e9d",
        "cursor": {
          "ref": "e8cc7035-344e-42a9-bfd8-00a973f1f7c0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af5aff91-e9bb-485d-83fa-2f120d541109"
        },
        "item": {
          "id": "53d3453f-cdd5-4b5f-a458-23bb11a18e9d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7e859194-241e-478b-b112-2c2e701e51b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d949f7-6519-4f3d-86bb-75c5f420742d",
        "cursor": {
          "ref": "ae933916-ef87-4556-ab38-3530da722571",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8f2bb41-d522-4f91-8256-1324d51a0599"
        },
        "item": {
          "id": "10d949f7-6519-4f3d-86bb-75c5f420742d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a878fcba-4e4b-4e67-83d0-4b5710e9cbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f73a4cc-0674-4b34-982d-484ddd182285",
        "cursor": {
          "ref": "655c146f-f5ca-4671-8398-f299521b3691",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7ca3e768-9f8c-48d8-aeb5-8bbffa20ac65"
        },
        "item": {
          "id": "3f73a4cc-0674-4b34-982d-484ddd182285",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1860fc5c-8668-43e3-831d-e5f534bafdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2da376-1998-4403-835b-ea6bdb08d90d",
        "cursor": {
          "ref": "147bac19-1931-4a01-bd43-8e5caabe32b0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dfd101c6-ffb9-4e86-85f7-f51e460af791"
        },
        "item": {
          "id": "4a2da376-1998-4403-835b-ea6bdb08d90d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "61e100c2-bf1e-4fff-a40f-f04dfba3d8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a493df-09bc-4109-a976-5ec17796d529",
        "cursor": {
          "ref": "ab29853d-23da-4119-a11c-f48f4433e3e3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24cabdaf-0e66-4160-875e-49db752d7d69"
        },
        "item": {
          "id": "d0a493df-09bc-4109-a976-5ec17796d529",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "14636934-7451-48f0-9237-e04c0fbb03a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ecefbb-4d1f-4f7f-8b57-88e99a8e47bb",
        "cursor": {
          "ref": "46c8bf5c-fa45-40b9-af1b-cf5c043bed6d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aa698b7b-e4c4-4465-b84c-25aaa3514119"
        },
        "item": {
          "id": "34ecefbb-4d1f-4f7f-8b57-88e99a8e47bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1500ae68-9892-4073-8959-3d541af9e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2ebf97-2a6d-4f66-9e8c-9ce812a19cf0",
        "cursor": {
          "ref": "faca76ac-509e-4465-9082-981faba35cad",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4cb6c8a9-309c-48dc-9c7a-08503d47a69e"
        },
        "item": {
          "id": "ce2ebf97-2a6d-4f66-9e8c-9ce812a19cf0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "35f82cc0-f3dc-415e-a09c-ced9d8171035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bffcdb-c72d-401c-ab83-63eabf9e81d3",
        "cursor": {
          "ref": "510ab5c0-a15d-4239-bb3d-5e1769185647",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d43a03ee-3f87-42e2-ac52-2bbf4f5afc14"
        },
        "item": {
          "id": "f1bffcdb-c72d-401c-ab83-63eabf9e81d3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cce6369f-7ed6-4338-a252-09af40a035dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856ba4cf-a3cd-487e-9208-463993f62a3b",
        "cursor": {
          "ref": "add1c8ca-9d1f-4368-9fd8-f910d9e60898",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ddc2d82-ce12-4388-bb5b-07c316270d94"
        },
        "item": {
          "id": "856ba4cf-a3cd-487e-9208-463993f62a3b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "702f7d90-2082-461c-8290-9ed8a41978e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66723b5d-232e-4736-a141-67e6217a763e",
        "cursor": {
          "ref": "538da8b7-2c87-4804-a4ef-e6b966870712",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "534cb8a6-19f1-417f-8a7b-72323555768f"
        },
        "item": {
          "id": "66723b5d-232e-4736-a141-67e6217a763e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b2bb337d-acd2-4b19-a495-6f1f77875aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2eb719-d8f0-48db-8084-260d534ba1e9",
        "cursor": {
          "ref": "e97abe87-adf6-4831-b1b1-fe6fe331c7c0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0abadffb-0682-4be9-a96e-c15c6d1b7196"
        },
        "item": {
          "id": "eb2eb719-d8f0-48db-8084-260d534ba1e9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d8da0cd7-f4f8-4716-b430-e394117233ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d47959-a3d8-4409-843e-48ca72b2f8d5",
        "cursor": {
          "ref": "b5043f1d-703d-4b6f-8686-7d8a2e07c8db",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "45b4e218-dbdd-448f-bbb1-2b76b180cb26"
        },
        "item": {
          "id": "70d47959-a3d8-4409-843e-48ca72b2f8d5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a39882d7-76c6-4269-bff7-e455c6b4819b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31243116-eeb5-47f6-8c9f-9119bd515d13",
        "cursor": {
          "ref": "673cb104-cdb6-4b1c-aa83-976ae748de8e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4ebaba9e-8a15-4df7-8ce6-841ac6f8906b"
        },
        "item": {
          "id": "31243116-eeb5-47f6-8c9f-9119bd515d13",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e8a500a3-b6ba-46d4-a401-2679ee21d7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3997d40a-72b6-4ffb-b7b5-1860fef8ee70",
        "cursor": {
          "ref": "7e19efb1-90cd-4f57-a591-b03a3178e287",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e85f9ff7-3887-44be-8e4a-9d46bed90568"
        },
        "item": {
          "id": "3997d40a-72b6-4ffb-b7b5-1860fef8ee70",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "88a7ba0c-b950-40b4-94b5-d320d50d3abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccf8185-a760-461a-ad61-01810f2151ca",
        "cursor": {
          "ref": "e8608010-836f-45ca-8b8b-b0fb15dd30c2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ba44614a-bda3-4608-b524-125f7ef88f47"
        },
        "item": {
          "id": "2ccf8185-a760-461a-ad61-01810f2151ca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8bcb6f30-05bd-48c7-b9fd-737192effa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847a716-4297-483f-b2b8-ff4495ae4ee7",
        "cursor": {
          "ref": "05cbbd2c-895f-43b1-b70e-4d5df9808cd1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "49ddf507-2cb8-4d5c-83c9-f57a6668df05"
        },
        "item": {
          "id": "c847a716-4297-483f-b2b8-ff4495ae4ee7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6238d022-0bac-4071-8278-03b24cb4371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f23155-19ef-4cf6-b3cc-454cd88c3a6a",
        "cursor": {
          "ref": "01de2765-24d0-453b-84e6-d1891153db13",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f38f596e-8c1a-43fa-9f42-cea55265111e"
        },
        "item": {
          "id": "96f23155-19ef-4cf6-b3cc-454cd88c3a6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a6cb62b-6b67-4242-86bb-a6ce6902c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdea069-1dce-477e-a17b-29523aaeeb83",
        "cursor": {
          "ref": "dc66bff7-e449-4177-ba63-b6a998afaa2a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "35594294-a715-473f-beaa-15f630e591ce"
        },
        "item": {
          "id": "0bdea069-1dce-477e-a17b-29523aaeeb83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "12d5344a-7986-4cde-bb08-66a30301bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3597d22-c604-4f53-87a3-663bea108634",
        "cursor": {
          "ref": "f4c0c34a-43cf-457a-8fab-f47dea9adf6c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e693a66-babf-4c72-82d2-ade2f578da5c"
        },
        "item": {
          "id": "b3597d22-c604-4f53-87a3-663bea108634",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dfb4388b-68b8-47df-abc2-c285f69e17d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054c28b1-2d76-475b-85c2-6816e08399f6",
        "cursor": {
          "ref": "a5e47d76-9276-4879-b7e6-d2858c98e97d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d38a3c7b-c6a4-4e41-9e24-6b4a72d8572f"
        },
        "item": {
          "id": "054c28b1-2d76-475b-85c2-6816e08399f6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5daabb68-b7f7-4767-bfec-17295af314af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6468d8b1-65c9-4082-a7e4-99e89d64e1e0",
        "cursor": {
          "ref": "6f664256-ecc6-4bae-ac65-2e37d6a5988d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2165a0ee-bdfd-44b1-920d-864b25d3fe2b"
        },
        "item": {
          "id": "6468d8b1-65c9-4082-a7e4-99e89d64e1e0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f4bd719-318c-4b8b-8d46-e4d2818f54aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08569550-5e02-4a1b-b454-d41ae17acd8f",
        "cursor": {
          "ref": "fc19e53d-e3db-449d-841c-80aa4f0ea512",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b6defe7-7429-449d-ad2e-ad1bb2df8cc9"
        },
        "item": {
          "id": "08569550-5e02-4a1b-b454-d41ae17acd8f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "611f42e1-c8d9-4cb4-8312-d7ceff1252a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be38720b-91d7-4849-96ad-8e5f17155b8e",
        "cursor": {
          "ref": "6f5875de-9e1e-4126-b952-653cec026653",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a02cdf23-8381-4a58-ae9a-39697e8d279c"
        },
        "item": {
          "id": "be38720b-91d7-4849-96ad-8e5f17155b8e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "24d3d806-d721-4603-935d-b6fec3245a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d25658-b222-488f-bde6-79163f45699f",
        "cursor": {
          "ref": "4e278c5d-d34a-45fc-9b27-8275ed233c3a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f992ef9f-2588-4f20-b8cd-503c20cb8b88"
        },
        "item": {
          "id": "d4d25658-b222-488f-bde6-79163f45699f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6bb945f8-31f5-46e7-8f68-074cbb9a39af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113c686-4a30-46eb-987f-2cd10d7f5180",
        "cursor": {
          "ref": "3956ae2a-d721-48f5-af66-e51c5c086097",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "19e53fee-eb74-498d-9871-681d7a01bcef"
        },
        "item": {
          "id": "8113c686-4a30-46eb-987f-2cd10d7f5180",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "80c75aa8-63aa-4f99-aa2c-d7d051a7e81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84ae9ca-b389-4a9c-b948-430505a4809e",
        "cursor": {
          "ref": "28417e19-2a06-4067-a5a4-78b9e4d2c35f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "29d511f2-3ad1-43a8-b548-9e70f40dd86d"
        },
        "item": {
          "id": "d84ae9ca-b389-4a9c-b948-430505a4809e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d12ddadd-ce20-427a-8cfc-a5e00b81889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b028d-327e-4ebc-b44d-272e0a78472a",
        "cursor": {
          "ref": "62c5845f-439c-4c3f-a41c-f1d0b19d457e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c954845c-f627-4045-b9f4-56bb45b33936"
        },
        "item": {
          "id": "9e0b028d-327e-4ebc-b44d-272e0a78472a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "acecf055-6418-4777-acd2-f645d2f08e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87bb553-0596-452d-9051-e713d8061a87",
        "cursor": {
          "ref": "ca0bce46-06f2-4996-a89a-6a618c35a764",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8d271f57-22f2-4391-8593-b5fc7c918234"
        },
        "item": {
          "id": "c87bb553-0596-452d-9051-e713d8061a87",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "313ebbb5-456d-4446-99a6-1b832efcb53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81106f6-b951-41d8-b9b3-552787ff3069",
        "cursor": {
          "ref": "1a3734a7-dcbd-4fa5-82ac-6989fd7b39ed",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f5167898-1749-4f8a-8bb3-687006a290c4"
        },
        "item": {
          "id": "a81106f6-b951-41d8-b9b3-552787ff3069",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "563386ba-8a62-4643-9b5d-e11c16e5f35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e9ef28-7062-4277-ba70-4728ebfb80c8",
        "cursor": {
          "ref": "fbc8ba22-b9cc-4c04-aa46-c8fa8cd1ba55",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e83f7aa1-4ce2-45bf-9e33-c0b71eadcbac"
        },
        "item": {
          "id": "60e9ef28-7062-4277-ba70-4728ebfb80c8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8b12c7db-a87a-411b-b4fc-fb4e2f13e8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39318e50-4946-4fd6-995e-0399d51f1b7f",
        "cursor": {
          "ref": "704f6515-d1b7-4914-8f65-5084cba13cc7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bcd26e5e-d0e7-40dd-bd7f-8ca6d00481c0"
        },
        "item": {
          "id": "39318e50-4946-4fd6-995e-0399d51f1b7f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f4e3d8ad-9f04-49e0-a1a8-b107f1a2e6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa60f99-fed7-4d9a-979f-47d0001dbc20",
        "cursor": {
          "ref": "e3867c6c-639a-4f16-b3a3-9eb896931758",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "638eac41-4f03-445f-8ea4-f5cfd0e559d7"
        },
        "item": {
          "id": "8fa60f99-fed7-4d9a-979f-47d0001dbc20",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1db7a914-2b34-4c9f-ade4-0fe47d1f788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b417a86a-18d9-435b-97fe-a4cc53da619e",
        "cursor": {
          "ref": "403cd545-e90a-478c-883d-c5c527c1d507",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5f7d0e6c-5e29-4bb7-8678-d20a23ede009"
        },
        "item": {
          "id": "b417a86a-18d9-435b-97fe-a4cc53da619e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c3f2effe-4950-49fa-8c97-00efdd9861b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db182f0f-2969-423f-9b2e-67cc8fcb6a5f",
        "cursor": {
          "ref": "7b8048e0-10ca-40b6-8930-b57453511228",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "942c969e-5262-41cf-b498-03149307b7b0"
        },
        "item": {
          "id": "db182f0f-2969-423f-9b2e-67cc8fcb6a5f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4c4ef331-7829-4420-91b9-735c657113cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9facafac-9916-4a44-8ac7-eb6be6b8c131",
        "cursor": {
          "ref": "6c3c046e-cdf1-4492-8876-f52b7a3c7bca",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "041a08ea-ed49-4953-80c9-a6dc21ca52e2"
        },
        "item": {
          "id": "9facafac-9916-4a44-8ac7-eb6be6b8c131",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f8c4f3d6-6bca-46f7-a432-21df7102d67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e97180-764f-4073-a559-956f28de0f78",
        "cursor": {
          "ref": "3a68c329-0779-41c2-9c3a-2ffc7ac2b354",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3b90a418-176d-4518-99c2-20cea078e294"
        },
        "item": {
          "id": "e6e97180-764f-4073-a559-956f28de0f78",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec8139ff-275f-420e-a068-a35eed2073bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbffcc-8218-4d15-b4b1-3edfd2485d92",
        "cursor": {
          "ref": "cbc2b1a1-ad45-4fd4-967f-c34aa40019e4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8eb2f95d-74b6-4407-926e-27308debfc48"
        },
        "item": {
          "id": "22dbffcc-8218-4d15-b4b1-3edfd2485d92",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "51c70338-9ebb-4010-9048-55e5b279ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b973d21b-aceb-465a-9d37-d5dd0d003774",
        "cursor": {
          "ref": "ff14ff93-6332-4bd1-9141-fb32eedc5e23",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fcd45407-d46d-4664-959e-287752722b90"
        },
        "item": {
          "id": "b973d21b-aceb-465a-9d37-d5dd0d003774",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e725d76-f027-4a4e-b106-e2ccf6bacf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc455ce-8dc2-403b-8ec7-30a16b47cb95",
        "cursor": {
          "ref": "08e57b12-02fd-4d51-8570-f02baabec7f5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77ef88c6-597d-4bb3-98d3-e3e5c8ca991f"
        },
        "item": {
          "id": "8dc455ce-8dc2-403b-8ec7-30a16b47cb95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8c4527c5-9439-4474-9223-08e98a84dc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6fa31c-3255-49ad-b175-db2b873771e7",
        "cursor": {
          "ref": "6cdc8a2d-6ab3-4b51-82b4-465559f5cc76",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd6da950-af93-444e-9d6c-79dd881f12c0"
        },
        "item": {
          "id": "2e6fa31c-3255-49ad-b175-db2b873771e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0edb5fa6-399d-431e-9c85-abecff7ba39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd95ae-48cc-45c3-9446-25903d314ab1",
        "cursor": {
          "ref": "7074a74c-6146-4732-83cb-dd106004993b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7af2ee85-d654-4f0e-bccc-b4fa18eea6ea"
        },
        "item": {
          "id": "0acd95ae-48cc-45c3-9446-25903d314ab1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12701c8b-3353-4346-b588-43e36107c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b0127-874f-4b53-a7cb-ea84cb8f80a0",
        "cursor": {
          "ref": "cffa8cdd-a95b-4c44-aec7-0ced0f011728",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ec1a39a7-8624-43ea-8a9c-4bdd920da0d4"
        },
        "item": {
          "id": "1b7b0127-874f-4b53-a7cb-ea84cb8f80a0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "52a22084-4541-4185-9c8a-22d7ce87a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb4c87c-b876-4bdf-b861-237281c9c03d",
        "cursor": {
          "ref": "8bfa1da6-8fe2-49c2-b068-38269372fc1a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "65a5a762-2f5f-4531-bb5b-c60d0731e0af"
        },
        "item": {
          "id": "0eb4c87c-b876-4bdf-b861-237281c9c03d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "edb5f83f-44ad-460f-a7ca-a0c9e3cf628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3673c798-c59b-46ca-93e1-c6ef363f567a",
        "cursor": {
          "ref": "f3a29103-67d2-4c52-b052-e10d97be0502",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "717a87ef-4a16-4133-8777-5f60495f99b2"
        },
        "item": {
          "id": "3673c798-c59b-46ca-93e1-c6ef363f567a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b770b18c-6021-43ce-9527-64f7b129d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6819c1d-d038-46c4-887f-b76bf91a3362",
        "cursor": {
          "ref": "0c4943de-3c10-40ec-9759-f0c0015b5aee",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bf10cf33-1134-4f41-b727-58a4454e3205"
        },
        "item": {
          "id": "f6819c1d-d038-46c4-887f-b76bf91a3362",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b32219e6-db14-4bd4-ad9b-2a21a84f04b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0700145e-d0c7-4f71-9c83-1b42ca18b6c1",
        "cursor": {
          "ref": "72fc401e-fac6-4ba8-8e1f-6f7f211a1100",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "882d6746-47bc-47f1-9b43-ec5bbf0c32f7"
        },
        "item": {
          "id": "0700145e-d0c7-4f71-9c83-1b42ca18b6c1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dac4a615-abc9-4246-9222-138850279ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a28cd1-7847-41bd-9e93-346813f9b63f",
        "cursor": {
          "ref": "aa1213be-6c14-4409-a1eb-6567e12c653a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c25fa79e-dbbd-4898-903d-b6e988fb1503"
        },
        "item": {
          "id": "d4a28cd1-7847-41bd-9e93-346813f9b63f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4588d2ff-5468-4e49-b9f3-3c9d38ad4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2fef21-10ca-4001-aefb-7c41a3ad2dda",
        "cursor": {
          "ref": "bf5391d1-b53e-434a-a427-51fc8c043a28",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "69a642d1-d485-4085-81d1-eceb0ed95034"
        },
        "item": {
          "id": "cd2fef21-10ca-4001-aefb-7c41a3ad2dda",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b54b7440-c514-4e99-a91e-8e83685715ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9735a3-2829-4956-9c75-6ad402c7fb5c",
        "cursor": {
          "ref": "3387b710-1c3a-409b-83e2-6d5946742d42",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "51a0cef7-fdbc-4539-8d8d-b018a422cb3e"
        },
        "item": {
          "id": "4a9735a3-2829-4956-9c75-6ad402c7fb5c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "173ea99b-7a4b-4930-b302-12d5e02ab382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315eb7ff-2005-44ca-8ae2-c633c1dc02ea",
        "cursor": {
          "ref": "9d926c20-19a0-4a6b-964c-0997a54abf57",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2d81c443-bf3d-4f48-9233-7c29e24052d3"
        },
        "item": {
          "id": "315eb7ff-2005-44ca-8ae2-c633c1dc02ea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8d634fdd-1d2c-41f1-98d5-d6f94c53d86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2f0ee3-2a7f-42b6-a380-0cd0e30ebfc5",
        "cursor": {
          "ref": "61959c76-abc1-4d4b-b60d-f3957aea4d24",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4c2e1598-9423-4aaa-8962-6e17b089caf8"
        },
        "item": {
          "id": "1f2f0ee3-2a7f-42b6-a380-0cd0e30ebfc5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2d4c01e1-be38-479c-8d30-9f6cbbbffb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0eeb09-6180-430e-8e18-62d3ad363ef1",
        "cursor": {
          "ref": "9e46d3ca-6b83-4f80-9f5a-37b7fcfbc2fa",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "99040a3c-11cd-4c62-b7e4-00d3136b4b22"
        },
        "item": {
          "id": "bf0eeb09-6180-430e-8e18-62d3ad363ef1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1af1193e-657c-4a3e-9e74-322b880d35d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65883f06-6d50-4232-868c-4d0eee3121be",
        "cursor": {
          "ref": "66388664-b1bf-4d06-acec-ae9aacd36e9e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c61e774b-87c2-4903-bc5f-1deef1f96726"
        },
        "item": {
          "id": "65883f06-6d50-4232-868c-4d0eee3121be",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a99cadcc-bc37-4631-80c7-1d2e742ac22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b257cb-3e5e-449a-9639-b5255d7c4efa",
        "cursor": {
          "ref": "ccc461c3-0d69-44c9-b8c9-1eb6c247a521",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "830d1110-1212-4108-af8b-00dd8b3d3d7d"
        },
        "item": {
          "id": "16b257cb-3e5e-449a-9639-b5255d7c4efa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1027aa32-ead0-4969-a5fc-c89b7fccd57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04620e9-32ad-4f6d-a55b-601a05f80f66",
        "cursor": {
          "ref": "1527abac-7121-4321-a7a3-4a4963210806",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eee0afb8-f127-49de-82b4-5456f86708b1"
        },
        "item": {
          "id": "e04620e9-32ad-4f6d-a55b-601a05f80f66",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e823164-9056-4798-9460-98c2d91b80f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51abf3d-e240-4aa1-bb24-34b8c74afe1c",
        "cursor": {
          "ref": "252467ec-fb41-41af-a782-88cc831588f4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3919cde3-45ba-4277-ac29-bbe9b8824260"
        },
        "item": {
          "id": "f51abf3d-e240-4aa1-bb24-34b8c74afe1c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "818c3e48-5604-4713-bf47-27d0ca8b7c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa74b53-e6ff-4db4-8e51-d56e8fb69dc5",
        "cursor": {
          "ref": "e4042a46-3660-4b5f-83c6-58dfd8cf77e9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3fa98d78-29d7-4194-b642-8db0bb740266"
        },
        "item": {
          "id": "daa74b53-e6ff-4db4-8e51-d56e8fb69dc5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "79537204-82d3-41ae-aa64-444586bf125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61d78c-a494-435a-82c0-e59bcd89317d",
        "cursor": {
          "ref": "857e0ac9-b47c-47b1-a464-41c945fb9d7b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bdf880a4-66e4-4830-b654-ad20bf3c7eea"
        },
        "item": {
          "id": "4f61d78c-a494-435a-82c0-e59bcd89317d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "64c31b16-a7e2-4c75-93ea-61d5be2c63a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5b20aa-7005-4d80-b803-09948eb7ce03",
        "cursor": {
          "ref": "b0fffa1e-2c39-409c-9188-52a46f00bcbb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d71ad63b-288c-4fd9-8a82-ab2dcb3b14d9"
        },
        "item": {
          "id": "7c5b20aa-7005-4d80-b803-09948eb7ce03",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a4b3ade-c612-4b69-beae-01a6f8c73e84",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "683ed09a-f224-4d0c-9202-e91de7b59cb3",
        "cursor": {
          "ref": "b846b703-56b7-45c2-9a81-73f71f9f57fe",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bfd907bb-22d2-4711-89c7-40889082ca31"
        },
        "item": {
          "id": "683ed09a-f224-4d0c-9202-e91de7b59cb3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7fb03b50-dac7-4182-bdff-0badc8fbbcac",
          "status": "OK",
          "code": 200,
          "responseTime": 2032,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fd1fa0-acd6-46ce-b62d-8329316f871d",
        "cursor": {
          "ref": "dfd86d8f-eaa3-46e4-b2c0-e7f26c7f794d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39a2e378-fc59-41b3-9b2a-dc222c59abc6"
        },
        "item": {
          "id": "72fd1fa0-acd6-46ce-b62d-8329316f871d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1336f273-a308-4857-bd5a-33e2a252ab90",
          "status": "OK",
          "code": 200,
          "responseTime": 2529,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cc6a08-b04c-4704-b30d-11b35aed057d",
        "cursor": {
          "ref": "7a0ca603-668c-468f-89db-448b75a6ee17",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0030777e-d306-4469-a846-4e80387c0197"
        },
        "item": {
          "id": "a7cc6a08-b04c-4704-b30d-11b35aed057d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a349864-bad9-4528-8854-9efc9da043cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cc6a08-b04c-4704-b30d-11b35aed057d",
        "cursor": {
          "ref": "7a0ca603-668c-468f-89db-448b75a6ee17",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0030777e-d306-4469-a846-4e80387c0197"
        },
        "item": {
          "id": "a7cc6a08-b04c-4704-b30d-11b35aed057d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a349864-bad9-4528-8854-9efc9da043cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ebb69c-15a5-4f35-8767-7492e11bed59",
        "cursor": {
          "ref": "a80ca444-a375-4d88-b61d-70a5df639446",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b483b14c-fe0d-41ef-8a69-09199c3521fa"
        },
        "item": {
          "id": "23ebb69c-15a5-4f35-8767-7492e11bed59",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1cd8978d-8aaf-429c-a7f4-cfd46056ff24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d801334-11e5-47f6-8837-91c9fefcb4f1",
        "cursor": {
          "ref": "975a3fd0-f5a9-46de-ac29-59a0f4a8a0e5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe11a0ff-af46-4497-b79f-83ddb067d4b9"
        },
        "item": {
          "id": "1d801334-11e5-47f6-8837-91c9fefcb4f1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1c6b044d-7363-4ee1-b7e9-c66ab90b185e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}