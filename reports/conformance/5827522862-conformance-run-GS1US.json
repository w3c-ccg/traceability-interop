{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "838ce5f5-0f60-4c52-9eb1-b4dc79e4767a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c5298ee1-b6dd-4ee9-951f-e906f025364e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43689d9c-8447-483b-ab5b-060e158d9439",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6fb6ca95-5ba2-4ec6-8a35-034109b017ba"
                }
              }
            ]
          },
          {
            "id": "79fca6c9-26e9-486b-910b-168dab3e2622",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e544fa2-92ab-495d-98e3-05532e9963b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b2b5acb-65e4-4a6f-8019-c4a5052674cc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "374acf14-d841-4262-9340-09582b8c4855",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "73110edf-e4fd-4954-a58f-3487eb450aef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "927029b0-e394-4ce6-9829-e35ffb8f162b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4e89895-3bdf-4d64-8ffa-3c5eb628207f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c3ffd5e-07b5-4784-b803-91ecda1e2156"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9b518e3-f9f6-4b6b-b7c7-acbedab291a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9639c3fc-d662-4bd5-b62e-6eba4f736244"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "418bd702-c9e9-46c5-a2a6-212b20e729c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "553c61bd-09ed-4651-b883-797aadecdcbe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14b33dbf-7887-4b41-a953-1df9081d3e5c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7ead8820-2b9e-44b3-b85f-f088c853d6ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da712b52-36d9-4dd0-9ab3-e2589ae288f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f32eb0a9-9100-4b73-8ccd-edb671ddff0a"
            }
          }
        ]
      },
      {
        "id": "d751b78e-1f2d-42df-be95-c36182cb9c9d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ff85408a-c3ca-45af-b167-4c0d9334b95e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3280e8a9-7263-4d2e-928e-7561ed0aff79",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2311c47c-a7c9-4b0f-b04c-8b2d3d6adb99",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d17f5f-b847-4cf8-ada5-0d687de51621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c91e514-b0f8-4928-9729-cf76aaf54c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b7fc1d-6147-49fe-a1fe-8cb07fbfe1ee",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa70abe-e6a4-499a-9483-be430f2f3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4a5238b-2e83-4b80-ad6c-2d1643c62825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a372b8-7f84-4d08-9c53-f5df8ea26a31",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7262cfe0-e085-4e9b-a938-9245688c7187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "befc06c1-689f-44ed-820a-441ec7e4e950"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4eb1847e-e046-47be-a999-d6a7225a059c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3824672-590e-4427-988f-f8834b6ba887",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b333bb2c-1cd0-4383-8883-66371f96ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f8891d2-d531-4434-ad18-ff3008382e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bccc80-2c99-4db8-a4cb-099f8296a43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a000e67-511e-459a-a2e4-a615e1bc6746"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76be54b9-854d-4027-8bcf-20c3e481147f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "634b1877-e496-4ab9-ab66-fd40b8708e08",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed2144c-e5f6-42e6-97d1-34e5f5895124",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cf00b828-03ef-4933-9744-10e3dcb02311"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f812c15-805f-4b22-9ccc-0916f5fddf32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b496c687-4d88-4a01-a1c7-efce8e98b420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf871b7-9b34-41d4-a682-d016ce74d7b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5485ee26-e738-43ac-9fcd-a8ddac9ea682"
            }
          }
        ]
      },
      {
        "id": "f5307431-707f-4ee1-89b4-8cf572c8d44e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "30eed070-afbe-4a4c-a5c2-769dbd41d0bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0377e9a3-c80a-435c-be01-2db4bb2f57d7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7ad950bb-c922-400b-b60b-776d3d1a3b7f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884b3b9-f18b-48e7-9b64-52c2feff0904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe750060-591c-444f-9688-54b6cead69ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb453ef4-8004-4d36-acd7-fc0c7656af3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b679dd18-5dc3-4959-a102-4cc466e48fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a12a1df-fcc5-402d-a8af-842707e309a5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1f2056-9cd5-4c97-a7be-ee78923ddc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df405e9b-500c-4d26-bfa9-8e254c22e631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7323533a-b705-43f5-b643-2d0c4b49c91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dbf9d45-fc45-4ce7-82bd-38d0a586ee8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc8ee93-23bf-4354-b7de-d54c6b0c86ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20829c21-b5f1-477f-af8d-57dbfbb9bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37f3404-a0ef-4382-8652-c749cb5440ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd2ae20-601b-4160-a387-0987bd70f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b74ee85-e048-4e8a-8c6a-8a4a8f81cb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96ad282-e0da-4142-925d-813c6c5d73c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25df4f0-7666-4069-8ffe-abcc6a6f025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aaeaa2e-9ce5-4861-b133-45ba083c942a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80fe35c-3378-4203-bab6-8dd8845d7a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3b00e41-41ea-4e36-a607-2bd11c9cc68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a07688-cf11-4129-affd-7d6174bcdaea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786fb381-79c1-4c56-8a9b-1cdb148167b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7156d9c-6c5a-47af-b472-e22a4df23456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d811600-9b26-46e0-b0f7-44d9e272dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a94a8dc0-063c-43ab-ae8b-5c07faba3e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373c7e9-147b-4ae2-b77a-ff185da9718f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4acf47e-2278-4079-839b-3ac441bb9f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5e8514-cf7a-462b-a1d7-ef43b1e1d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4767799f-10e1-49ab-b080-85e51692850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ad0e1f1-f929-48b5-9010-b6ed63e636db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eae60b-e454-4641-b8a0-82f9bb11a107",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e531c2-1da2-4812-af4a-844882bd4fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eebfd3e-5020-4570-807e-9b8e5e69a82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66906b6a-c217-44f6-bf14-19450d5b2c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80ca5d40-bf6e-4913-95df-8fb26c1b3abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7399f2-0307-4c00-8731-8c354dfc8aa0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b0cca1-2401-48a7-8752-adcf56adb591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf24da36-d9ea-4bb0-abf1-39b8c78dc375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cea54a6-dfdd-4500-847e-a94e099d1662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e76d5f-669b-4897-9267-8e7fe164a1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa16c3f-9844-4d62-9b62-5fe6964e55c9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63dc3ef-ae50-46c3-a9ce-4a6f58260598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3bd7c0-a16c-4f1c-a299-19280faff72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ddf923-3d1c-4d83-9625-813a79256a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b16f7ac4-88fb-460b-ab62-84f86cbd0e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b70e35-52b8-414d-a684-b2a56b637fd3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbaf016-db8d-4f3f-b42a-bfcd5cb7cdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3c113b-e76a-41e1-a7f7-0a60e71b8070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdb6854-60f0-48d3-9ff3-3b4af8bbbf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7df3753a-1f70-48c0-a7f1-d0dd424dd841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e265d095-5fc7-461d-ad6a-15aa20d58edd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5cfbe2-bc17-421f-a3f2-364764f7720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f652ef36-6136-4a25-a85a-e00b57e06680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19a67c3-de6e-4f0e-a0b3-399dfd2be8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1271d8b-195b-41f5-be69-8920a6a857c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04787f86-b30d-475c-ad02-bf5dea825521",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba1c6df-391d-44fa-a1cf-62041cfc6282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabfe8ca-af18-4eb0-bd4a-b9bc7fd19f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b437be5e-9c84-4f63-b032-4234dc1204cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68815f27-5c31-40da-bb3d-4422314a97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fe4091-357a-4f8f-a7c9-c8267019c9ce",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ec2538-7729-4cf2-babd-e018245c58c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dbb0af-0a70-4d6a-8c17-a1df263987f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd86d52-9321-486b-bb87-63fd9da0298b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8182385a-40c0-483e-815a-1307d3ff659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1663a6c-4c3e-4843-bd27-ef4f9f5b97d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0b2e1-5af0-4840-923f-5e532ba9fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9d422c-52e1-4109-8015-16c421b8d0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa4ef3-0ee3-414f-b34d-7892ea0689f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a182476c-d68f-4a4c-8dd4-5690cb0fa54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af3259-3852-4e02-b435-8ce788398c14",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66edab17-abd7-49da-86fa-d6bc23bbc548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f977f2f2-a0aa-4144-92d8-b1d7e2c5a157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb85e3c-192a-438d-b8a7-6957fe8e6c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8efd0fbf-361a-4523-b0b8-a410beb6b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ee9051-7b2b-4f97-baad-00cc97d3caf6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c073c95-da36-4ab0-900b-aece2272f796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedc919b-dd00-48f4-9bbb-bca543795338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668ebd37-0891-4f8d-beb0-20b615b9855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b979df-eee2-4469-88bf-e8c75461914e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd2c62e-e0e4-4d60-9ce3-b40e73ab14f8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1529f24c-8f7c-4bdd-843f-9a227ac7bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831d7239-8c01-44e0-8fca-062c16019ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dec7fd-4894-4b40-92e2-f6b73e7d7ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d66f573b-ef3a-4079-a122-ed8d25e8ce16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c2b09-a9ea-45ec-9907-83b990ee8f03",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2274f655-331f-40ac-8854-5c95e525cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c73dfa-ab63-4a23-aabe-826bc71b15f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977feb6c-7ab6-4a06-8f84-44f6af0bd786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2a247a-a905-472f-b75a-011d430a2bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4ffc47-f0c8-49d8-93a5-a7fb9e40c4ed",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be90e5c-f53b-405f-80b6-ac1d32c16423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab601b9-a9ef-4e95-a529-ab0d4c3f3beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d313be1-c78b-4201-a9d5-ecb0e35187ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05de184-1abd-48c6-a5d0-03d402fe03aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ac88f-a79a-43d3-b973-104a399d9243",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f169ca2-6849-4785-97f5-912a0c30902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f25a921-d049-4d81-b656-cfb1844ca1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ce9808-b307-40fc-bef4-4e8b8480b158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcd2895-be10-40eb-9b80-222e5a1f350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4e6926-a34a-4ee6-b392-91b6838a4b95",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ebac35-816a-4fb3-b6af-d41892fddce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3202b7a0-843e-46cb-b405-98af1103ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1465ed-47a2-4567-beb0-38f099d12d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8fdbc2-a60e-4f6b-9ad7-ee708e88a9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34964e4f-91c2-4b53-ba42-a0a8d9a227f3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c55cdf-9cc9-4994-bb3c-b991ed188373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b39867-8ceb-46b0-af20-6fa2ddddbe97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538031fd-d384-46a5-bae2-7fd59f4bdbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19eda1f8-300c-4c1f-96c2-d3529d8d656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f93768-f6e3-4eb0-8c64-869a12f3add6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abee13be-669c-439c-b786-8fad64522481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b419e4-d8fc-4d59-aa9a-28ea71d86533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6793e9-4307-4916-b54e-16564cc2f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "006a2e61-ab46-4a3e-af6f-50f1dbcbd84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c8c753-243c-498e-8662-a2623f5f3576",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2936c-fd06-4bad-8202-721e82e46584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8c7654-d4ac-4590-98bf-b64fac8ababa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb342cd-d67e-4f6d-bf41-60cfcae02c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66183706-bd3c-46d4-bd9c-ccaf4beb6f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4699dc89-bc59-46e5-8392-87a93cc702fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6086a529-1924-4af5-9e98-38c502e7e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c720ee8-adb1-485f-b96e-4763ec86bdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98311f2e-0dad-481f-a673-bc8b48ef45dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a60fe2-2bcf-4c48-a2a7-1e163a31e44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b73970-de2f-463b-a254-94635e173687",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e3638d-e42b-4302-baf0-6f572f8aea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfd2cf2-6070-40e6-b9de-db68bfbd43d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af867901-4dbf-4633-a9aa-c1fe07eb1d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8adef2-aa76-47e0-8ea2-61f9c5eef653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82fa680-7be8-420e-b151-bd25089e1374",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae25918d-6a24-4d54-8fc0-54dd245a525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c041a37c-fa9d-43b7-bc94-1df7512cff6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0d643-ed2f-402d-ab40-a51b9f7a218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1235d982-f602-4a1a-8f57-044eb639ff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a9682-eee9-49eb-bf07-56662c4c96a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daee4782-9bf9-4044-9a6b-3ea7ed17ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2773aabe-4980-4baf-a2dc-6aff6aed6a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2fd817-ce39-4187-8a2a-0d7c9e002333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97133016-058d-4955-a1a3-889498c79b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0672467-fd73-4ad7-8eb8-1a1c9b1c1369",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0935c1-bf32-45db-b3d4-430a1d7377b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594c06e8-5579-48c8-96e7-ffa9e628b2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919af782-766a-49e0-9b4d-90b772e25198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7e0c96-b499-4890-9b02-9c0299d0af0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a1b5c1-52e1-4d09-b1d0-2029baa68446",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183682ac-6e60-44aa-b66a-7501a28ddd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25cd8fd-ef88-4ead-97b3-022ab740bf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f38e60d-6030-4488-a4e0-ddd6f7acabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "045e9840-a23e-4d14-bddc-23f1dc95b9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fba9a8c-9fce-4dd7-92db-9f9e91e8bff8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d057c4-e87d-438c-9d66-beda7eb2c2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca415f61-d4bc-44a4-a568-95a514ceba24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec0afbd-2c7d-410c-a921-b5f8afee4ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19173a17-0c26-4311-b1a6-8bd1474bad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f367ec-64a0-4dec-aaa4-5ebea4e806af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46ac27b-6268-4bc8-b0d0-c73e018a48ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbfa5cb-2e47-4478-bd8a-2b4c133043ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c4d36-17d2-4594-82ac-14cbd7dbd578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35444aad-4331-4b73-bca8-6a2a5d3e29e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2261456b-d8d9-4a27-a2bf-3514636eaa18",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54b1a4f-c3b6-421d-bfcb-49b2befd00ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a64216-56d9-45de-9667-e1bbb2c06cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad58fe7e-ac6f-429e-b254-87692792f7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54069a7f-63f2-4345-89aa-ec33704688b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e7b3a8-0dd4-4b9a-8da9-24e48686061d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42797b5-151b-4761-89ea-280f90e81cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763313f9-8ba6-4dd8-ab9f-f603c6599ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546f4881-3569-4c58-8663-4b5c918fa2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08431c84-2e13-41b1-9ae9-04c2ccb8e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e5f193-fba3-401e-8913-813272103d2d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a84d0-6ae6-429b-9927-167e90c9e706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd194fb-bba4-4910-a23c-190119449aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5924f158-88da-40cc-801d-d44c0d7cdaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6728ea21-20c4-46c0-88c0-369f94c01953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12bbf40-5c40-4a6a-917f-885a0e71a15d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5448c2f-9289-462e-a34a-b8e8a74606a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55d1646d-0fb2-426e-8a2f-3796c482d824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb0516-4b5a-4837-8b65-f37f70755b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a33209d2-e7d5-4e63-8786-0f9779554b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a98e4b1-8185-489b-9a1b-793c87102338",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d5021-0ee6-49ac-bcc5-baf8204dcd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e899713f-d586-4dcc-86a3-9bd2cd0cdeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025b625d-d86f-493c-9da7-33d0d15b882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb013a37-8ec4-4d69-bfa2-cbfebafd1832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d54663-57bc-458c-a960-0210a6550469",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a884b233-3e51-4bd9-8a2d-2442839498e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab0caa9-d48f-4bb2-87c2-75f4bd7bee50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d9631e-e6fb-48db-be08-0453b4511930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4692b51b-3cc3-4e1e-8526-f17285138673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065fe74e-d6bb-4c52-920a-e67d510c923d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32970145-30fe-414e-84c6-45b181713494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c5f7a6-45ec-4cae-afe2-80a0d6c5d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0e08a1-f25d-4e17-95dd-2f0d8e6bcf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a084e9-c3e6-419a-9f06-7c415e1b9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31900a8-9656-449e-a911-ba7439aaeb80",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cac1ede-0275-47c7-a6e0-e69d911d353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b126b5b2-50a6-475b-9760-76a39e86fd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6a89a7-947c-48f9-9cd7-1f14a68d9f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c20c09df-0ec5-4b9b-b724-a01769c2255a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc371e3-c151-4d24-a965-4f839f092c1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec000ed-ed73-4c62-a999-7df4bbe5437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fdfb30-acfb-4549-b8cb-86b17b575783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2901f65-6dc0-4717-a53f-94c35b42c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d9826f-aa2d-412c-bed8-4d920b8f3e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a280e-99ef-4080-a64c-5d6780f31d25",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a4b88b-a82c-4f6b-89ff-f94f5367d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71078cf-7942-447f-b8a8-901b30e034de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac48cc4b-7252-46bf-a989-4549603fcc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b2321157-e827-4565-b580-45871132fd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd704f09-580e-4134-a8ff-99db9e44c2ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f34b1b-3d6b-4cee-b7bf-424c290fdfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7a2caf-f3b0-4e0b-ae1e-1a57c41024c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a8597-1169-413c-bfbb-d75b83fc3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17766a6f-92a2-4874-847c-ff125c5b01ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9e5e99-ef68-4b7d-8a3e-f40fa53b9bfd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023b8dc-51dd-4530-8b6b-207177987447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d61b428-7cc1-4695-80d1-2dfe3bf6ce06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef2afd-a4d5-40e8-89c2-1358dad519d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09a868e-0e6d-45dc-9ad0-42e41366b6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cfd4fb-dc62-4818-9704-09cd34a9c154",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074d0172-a70c-4b3b-ae20-fc03bc28bb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce026805-6d27-4bbf-ab47-a5894ffbcb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeebfb2-ee36-47b5-b112-331c19210bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c37dd7-d7c7-4261-8ad6-edb92d25b13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a3a3dd-48ac-4a77-8028-343de24c3736",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbb90d2-f152-4650-87da-55e7a4b7bde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbfe9c6-a5b2-4ec2-9baa-109f5991b15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b094bb3-0906-4297-b088-2b0c8011c120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfc23db-f6aa-4aa5-a403-530220d99bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe05ab-054f-4636-af2d-ed6532116bf7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd2a836-fa0b-4a00-b138-ce8ef0d74002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5769a57-618b-428f-9f22-19772e1fc5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49caaf38-3682-448a-8959-a2ef31617d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d57fbf-6dbd-4bd2-9684-e7dc277c418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7af9801-decd-4ff6-bea9-cab96a07a759",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8988641-07c8-46f5-a058-50f9b6b2695d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5b1cb3-2150-4539-9f36-c1913d867907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14041c4f-92dd-4359-bb98-f52bdd0765bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac4ad1d-a451-4970-bdbc-0dee00b8a9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42d8e2-7496-4016-9250-4825e4497b35",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c935b4-4b7a-4269-a1ff-6561e278086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044ef8d6-2272-4d35-a415-8a753ee371c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe28839-c67c-4059-8895-8b7fba4ec35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a032ac6-7b92-4fa7-846a-f27f5ec2a25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a17c347-39b9-4f3c-a359-5a3bb491b29e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc58b3a8-3b53-4f78-99c6-143e39c346fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae598fd-fb76-4284-8c3f-a60a8fea3c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48041d5-73e9-456e-aeb7-02d80323011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "502a107c-909d-4745-834f-1dc0bcf576a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903ca2df-d0fc-4324-98be-a73e0b931295",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc637e6-ec1b-48a6-883c-76f25a9b3273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ac30bf-8c0d-45c6-9d29-1edf9443c94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b9936e-1089-4780-aeff-916b2c766171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "019e48fa-b2c7-4798-93d0-892c589fb1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c21744c-6a4a-4579-b2bc-f7e427910a16",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8be9d-44f5-48c4-b56b-0c64627cbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977dd956-8d00-4890-a9b3-31cc61036b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3040f0d-53af-4d6e-a8f4-49eb3021394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebc04d5-2723-44c6-84f1-e739feb76291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a45037-aab0-44ef-b40b-5c90d7b8d0b8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f4e8c-dc2b-4e57-8c0b-f50a381d247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba10405f-ea56-4f10-b45a-61e4a0825bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ea48bb-6738-465c-910b-78e7f5a1ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0578f26c-d7af-439d-b406-fde0fd08b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26f91e-e586-4f62-ba91-8e95e58da237",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7401ada7-a036-41d3-b256-7cd01eb4dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12527c87-07b1-4d8c-9a13-ccfc6be9b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94741e6f-fe35-4615-b960-d1e3c55d3903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2279e91b-b0c2-4735-b514-5e34836ddbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594b825-6930-4a5e-a522-463bc36f46e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d704859-b506-4163-8aad-97f81bbcef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68175ea3-2f74-452e-99be-c80b8ce7f4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d279e16d-9b69-4454-91c4-c1fd34a4f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbba0760-75cd-479e-99c6-7d7a25ef88b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a84022d-cd86-494c-b3f3-fcf373fd801f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69ec224-c357-4870-9e45-220cad8d7c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a079a759-1e05-46f7-b205-db4ced81cfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf35ea-b6c4-4ce2-a060-2569592e9d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "27be3330-67fc-461a-8630-9174b2754559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a72026-e274-47ec-8772-54095c1832a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e2904f-0092-47ad-920b-1874d51b48e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4914a2f-45bd-4cb6-8355-555fb51d3051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d53e35-aeb8-45b7-81ff-fe14c0fad734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0391b9-51ae-4817-bafb-0285088d30d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a693112-9497-447b-969b-24ad4f31f9c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ff75eb-6bcc-4432-a965-eb098071f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbd9e95-44a9-40ba-8244-2ff700a8a04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004e4acb-c747-4fe8-beed-d53f0fbe6c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ff0d3b-b2a5-41d7-8d1a-fa19de483db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab30c7eb-1803-45a6-be92-b876e0a72cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676d1d89-5ca1-40ac-b6d8-ed9db22c946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6e1f46-ca1c-4bb5-b027-d2b24df44c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f763dcf2-b282-407d-80cf-fb849b07d268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcb5711-cfa8-42dc-9258-9125d93380d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94732628-756e-459e-bb6b-dce9a7387c45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68156f2d-4cdf-448c-828a-4536c0859a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc5f9a-57ec-46bf-81b8-632fc8bdc05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b07cb4-1eaf-4f23-a641-3971f6abe4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b5a02e-8400-4b2a-9cdb-c169c24f32f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be0a2c5-8b1c-46d3-9287-ce91799acb76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da1c2aa-45f1-450b-932d-79652ed34108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e01c67a-75d2-4da9-ab6b-650c160b4efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38e6080-b07a-4fe2-b576-e139a1d2f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31d1bcf-29fe-4c35-81d1-c887699c75ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55718008-0ed5-48c3-80e6-2c36c241997a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d26542-7e5a-475a-8dfe-8520bb22d9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6468ec7a-8b3d-4c9e-ae87-41a6d6a07019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d3a1d-bf79-4d5c-95e2-8bd7a79db32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e55731-fa02-4111-ba31-d2ed3bba502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5baca5-e317-4a57-ade3-3569b30d060f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3a21be-df67-4513-b360-9bb05ba15fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b4e757-9657-4857-ad0c-a2329b95557c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3718c3-1621-4ec8-8754-d2bcdf51f2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a15c5a4-f150-4d47-b551-b3daa3778a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb65f9-80e6-4778-9bdb-fa962335a748",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abc58f-903a-4c09-9b43-141bc8c7d29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efdd322-645f-4ae4-b7b9-09bbf42e13b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb3f047-c19d-4cba-8cbc-92cbcef83132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2651592d-2091-40e2-bcfe-8b3a684c560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226dc3a2-64a2-4afc-bd25-ee5947f26808",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf5698-84e1-4f47-94d3-a16c18307353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e91834-6fa7-418f-a5c4-d4511f79fc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd07b32f-5c24-42ac-9237-5beba57030c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b60e4e7-e714-4f38-a0cc-6b4105c3bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812bae23-1c96-42c6-ac88-e13c8913a33a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc741d5a-7ab1-4f7e-a14d-aa9314a81d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4835667c-f952-4789-9f8d-125ca4f9ec02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ccf3a-758d-45de-9fb8-3c8d30267e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcbdf33-74d4-4824-ab16-0cec1c351986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2603c3ef-6caf-4165-8dac-e28287eb019a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f93c27-f1d5-4ab2-8050-d2b9d42ab27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac7bf54-501e-455d-8038-1fb0f173eb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3be5afe-d05a-4b22-9d17-cb76c2ba2f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60ef11e0-87d0-4c54-aaba-f9e5c18ba00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ce4d55-c02e-4ebe-a618-61a01ac5125e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0b008a-160e-41f5-bad8-10078f09d99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2087f9b9-7581-41f4-a5d2-c1404dd18693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f42087-34f0-44d5-8f72-43c0ec76559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5dcd70-0e98-4989-8b57-2e8395c15686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84d59d-2a86-49d0-bcea-9574e2ed1eda",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bbb5c1-eb38-462d-a18e-eeb8ece1a82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c7a81e-512a-46c5-91f1-78f6dc8cb9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd920d7-b8ae-4fbc-b2fe-9d37bcb9641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b09782-e8a0-4e23-b8f3-0548c5d1d34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e71f63-b805-4efc-bc12-616580e79851",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52072c91-2cda-4bec-a791-1c5c340bc005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d1a2f-992a-4fe2-a98b-2775fb665070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd392ce-ef28-4a32-88fb-608efb379c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e015c2e8-a668-409c-b3cc-cc5ec9239db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ef9314-5f14-4606-b1cc-61c1693bacf6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f3561-7abb-401e-ae13-06d6e46f4ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ff2676-6928-4f32-9841-17c819d6697c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd468a7a-37d3-4975-a934-f75af39d09dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe66f23-a26c-45a7-b8fe-d9f4fdb253fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00401c4-4678-4cd6-bc14-25d3b3d66534",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24caf1f5-df8f-4c68-b75d-151c1ea70d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56520d29-a1e8-405e-971e-5319c5ff1858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497ce8d-57a3-4095-94eb-f26c79c181f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13056a1-fbad-430e-8a97-20412e55dd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dc3408-b7c8-45e9-a450-9d36aa152cee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dfd977-f14a-41f2-ada8-163e42edc29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce9d35b-18b4-4f70-909f-4bc992564f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae92273a-98eb-4b33-8596-9a2ac093adc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c938a37-64cd-43b8-8dbc-84d4a69717eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d40ca-5354-4687-a975-f7ef33ea5559",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265050c-e88c-4450-bb56-ecbc4dbcc30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3087f15-dd00-4c09-a5c3-a5811f899c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0ed614-aa1b-463d-87c8-409dd20594d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4f3d72-b730-40ce-a015-1b2f565be556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc7ec25-81ea-49b6-b95c-6f1d0efaef15",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1fc0e6-78ae-4aeb-a9e5-54e5f9386934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbc209b-4ba7-431e-8278-16b5bcd1f71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b8538c-447b-47ac-98b4-9cbb039900da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7448f62-c994-4cdc-91ab-f355b40e76c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ad9bb5-b73d-415e-88de-cdd30572ad18",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33205b1d-9154-459f-a7ca-f7976bfa7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f20025-61dc-47b6-9cb7-ec62f6796bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d039b4-4b74-48e1-a97f-c7090d4d4432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53c544c-0461-418e-ba2e-6ffaf128a004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cddc2a-c5d6-4000-b413-8f6e7141195c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d565cddc-ee57-44e5-abff-81fac4d90dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83fef21-d492-4d6e-9b0c-10f709474458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd6983a-352f-475d-a52c-b0c7ece610ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c79e865-70ac-4275-86a1-3e6ee4baece7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb398f8e-1e81-412f-8d1c-e291ef9c3f29",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7aed32-fdaf-4493-a9c0-13b1cd5e882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916d8781-64c0-4bc0-99e5-51a00ebb9ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a50c854-0b0c-4706-9eae-a0e5cd1ca078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "989195d2-8e2c-48c0-8ead-f7c39d03a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ed2e76-2ad4-46f8-9b5d-bf3b8608b893",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ed8196-1585-4171-b0f5-ac198001155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6395ea3-4cad-480a-aac4-d8daae8314bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f283654-44b4-49f8-87c7-ee6e0178873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7be1e5a1-6d25-47e0-8fae-7f72e12e1921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479f211-84d2-4a95-9124-7d30f6a358a6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357123c6-303b-406e-a4f5-6d8c1cd4f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc65954-359c-4ff2-bc0e-867ca1b40a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ce23e1-420a-41dd-9ad9-ba765439635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d59217f9-85f0-4ef3-b8c1-b15f9ceafd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68881c99-b6db-43ab-abcc-f728be73b1e0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45473e88-e6a9-4be9-b10b-6dd607c9a3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db85c589-1666-4bf0-a421-44ea710bb5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d52c2f-1534-412d-bf5a-c970e80c97d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3937fbb-ef02-4e9b-bec8-7d077ec638d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b95465-550f-4eb5-b6de-d92de52982dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc0a86b-2ea0-4891-8293-e6927964aeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9b2e94-a843-48bf-a1f5-91f033b64098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03916ba9-419e-414d-b7e0-019176653b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3f7bf6-adf4-49d6-940f-069beb525f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102b361-39b8-4808-a45f-e99f2436ea55",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a18ac-7954-42fe-b494-386cde142188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1b67d7-923d-4b2c-afcb-7365816d5973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06488359-c3dd-4492-9b1d-d14619eb3359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdfd3be-89d2-48b2-acaf-e92bbcf33de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcdd648-647d-42cb-b478-c5020f5c90d2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663289ac-8fca-4da1-be23-fafae2f31647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a651a6cd-1838-4911-9da2-07b33986a22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb35f4c-77b5-4720-8e45-f7e58feb1a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b1c88a-28f7-4bff-9a40-15db16a58e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec2a725-3951-4f3e-b916-701f6057ad7c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c858c4-e1b0-4857-8be1-e5da28bb0cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f97956c-00da-4d72-9433-230fd3a4833d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38b0c8f-0b76-4738-a57c-3b9208c75f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41579636-4443-426e-b714-0694d774e145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a04032-a0fa-471e-a8fd-23f97458b6bd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201c7e76-ae67-444a-b808-bd5609553824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588cf8a9-d765-434f-9f5a-dd6d0bb401f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007c23a2-70eb-4dc6-bf41-df8374fe8885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ab6268-4a4b-42ef-b110-3806d86e035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6955e04-c013-4475-a236-d519766e82b2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f7e2b-0584-4a5e-a520-34a7939e5db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d212c6-3125-42ab-9d14-3b0593fa476c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15edcd05-da87-4087-bbfe-5e74ca42c72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b33c967-91d1-479d-bf36-01f87a47ea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a00b1-1086-4311-b31e-2bc65d35b38c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b37597-d89c-45c7-ac57-30e314e1bd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c63cb01-0da6-4691-a773-fb7955a4d178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d4bf29-c107-49ac-8380-e351bc2f122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d162473-9ab5-4c81-96e2-22a12a21e374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebcbaff-b5d1-4af2-999f-0fd3eaf29ea3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce054585-39ac-48e0-a450-2f785bfad095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080591bd-6371-4110-a894-3fbf63043c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a633f331-1caa-490c-b535-e19f1d27f3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1715bf-9441-49bc-862f-9c1cf9e9e744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9090f2-e584-40eb-bcd7-7593723866cd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9e37cb-5f93-4014-bc59-9863bd7ea1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6e13f2-58db-494b-a726-5b0642decde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ecb023-359e-4cc9-915e-c702cc015ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c548a3da-4926-482e-a05c-a54db87e4c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22f3117-57f5-4b94-9afd-0e7e97b10ab8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198b371e-17f7-481a-aac0-8339b3de4120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ea2959-82bd-476c-b0ac-fbd7f2aaf78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe8a916-2800-4c14-a44b-3a9de4378325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "924b017a-67bd-4bd0-8e7d-91d44a5c70fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b7b0db-a3e8-4ea9-840d-b457ec0081ff",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519dcaf-e6a6-4889-a4eb-f7f562453b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba99d83d-adcf-451d-923a-fc598ed081ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d119e6-35c5-455c-b79d-52b447600de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec3ddcd-ebc2-4c75-8184-516a6de7817c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0988171a-c96d-4acf-bb4e-f7c992f1e57a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "814e8996-fb27-43a0-82ab-dfb63d1ba0e7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1ae8fe-7c96-4dfd-a811-a73e35579207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "488e81a8-7f3a-4304-b6e3-2f839a5fe33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f15289-5aa1-44a6-8470-2554e67354a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "285703a8-a728-40bc-b3ae-0bf9cc9735ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f04c58aa-cc47-4e7f-a79d-427788fe4e4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f63251c7-64a4-4071-9fea-98de331fbb9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e911ea13-0cf9-4f8d-8f4f-1da980381d49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64428fd-bf19-42b8-b45f-5fc23e10defa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0762687-b320-4624-bb8c-e39e57f177f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2e9ea6b-fe5c-4fff-bcf2-6f408a0ab565"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da27d77e-9d75-4af4-9ac6-5e868ac7ee93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0eb05477-67a2-4935-83a5-ef99512ed319"
                }
              }
            ]
          },
          {
            "id": "5201a6c3-8d78-4d84-9faf-0818c75be9ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bebef10b-5a36-4693-8115-8615c36e99d8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa192fe-bb71-48c6-b465-0976038030bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9444c60f-aa42-4f5a-b99d-749c1de6ea5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bdfcd99-dc10-49ad-9d77-3fc98fe2d5e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff234d8e-b0ee-439e-9fd5-2e98589814bf"
                    }
                  }
                ]
              },
              {
                "id": "847193ed-e807-45f5-a169-4807429db64f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9d58a2a-8787-4e10-9b14-7ddf014def1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5a56d43-e6a4-4f44-b9b9-55f9c318491d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7efc6f7-7ff0-4abb-a8c1-2124cccd4d6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35c3a0fa-70c1-4eeb-b4a0-014ffcc3d32f"
                    }
                  }
                ]
              },
              {
                "id": "50624f09-7ae5-4c75-9cf3-8de614571124",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeba30b9-8a74-4a8a-a77f-f1d438aaae7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61cbb673-9f24-4983-95e5-61c883fc53c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6722721a-2744-4fb7-a141-ee48cc78544a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6ec3b0b-b8b4-4c39-b200-f46e84d2e373"
                    }
                  }
                ]
              },
              {
                "id": "d703e5d8-b040-47d0-9955-5f16b01de06e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afc5f618-b6f8-4541-ae00-b120fe8f884b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27be42d2-d6d3-49a5-a435-db54f19baf61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88038ed9-3af7-43e4-ac16-9cbfbc5c82ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bd7d8ce6-62e7-4de8-81cb-279193eb52ac"
                    }
                  }
                ]
              },
              {
                "id": "e87dc8f5-30d6-4c6a-84a0-a892cb7f600b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "830af7de-75f6-4740-a1aa-4a09da462ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b51a497-5eb0-4cd8-9a6b-a21dc598070f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36585773-8159-427a-bac4-375f81b1bfb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2b0972b5-bda1-4186-af6e-c37ec70d34f4"
                    }
                  }
                ]
              },
              {
                "id": "ad5087ec-4ac5-433c-af74-cea0e58e0ae8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e36cb02d-4396-4266-8f83-ab2f24f29389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "824ef2ba-8d19-483e-9a86-89f3bd2d64a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bf96d80-0d27-4fec-be7b-3e2bf67f13eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c84d457-ea16-4f8c-81c8-1e015c919c16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48aa293b-68dc-453a-ab85-64492b39634d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bd20516-06f1-47fd-be10-9627859ec30d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3f256a5-51ad-4799-9aad-f4a56f943b5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4049125-87cc-4c7e-86d1-8677bcc92dbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90276cf-74f4-48b4-9a43-3d251cb4079a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc8e8fd7-9dfb-4c98-839c-fa8cae871e57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d15a363b-0cd1-4769-893b-4ca60eab856b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "746a3451-6420-4c87-bd4a-3e6a9df27845"
            }
          }
        ]
      },
      {
        "id": "a5bd9846-e856-4c97-a26d-866594f6e45c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4b308dc4-f7ba-4198-b849-6481a50fb4b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a750f67d-bb8b-4bce-bf8c-0a16a81af44b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f7cd0e5-2f0b-48f8-92c9-ec5f0056dd49",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae425ee8-ce2a-4eae-a589-cc75df65d1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54986787-0cea-404d-aec7-1f80ccff842a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975efc13-0935-4117-8a33-df6e6cf18370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d81a7050-c36a-4a90-a30c-8739718e1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f679f0dd-8364-4889-af3e-58be6e3bbd8e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37f3e5d-4c05-464d-bc20-f784a7439977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dab7cf6-f3d2-4500-8bb3-ee55365dd3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c74b9b-640c-420c-ae50-e214f81fa95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c884158c-7506-447a-8c56-9d4042c6c6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1b68eb-0df6-403f-aa1d-631d29c39134",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46df49-aa76-4124-840e-ffa7935ec659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6a3b04-a2a9-4367-be49-ca97492bfc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93477b5-6349-4194-835c-edadd3e974bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfb9814-eb7c-4ac8-97c9-de4bcfe66e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696383ba-ea1c-4416-bbb8-e4fd05b085b1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6230761-c1d6-4295-84fc-3c2b36cd24e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59114def-e66f-417b-a7e7-bf65bbe5750a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56369d5e-730a-4c5b-9d00-4898d9aa8e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3ae90c-c0c8-4ea2-8694-28d06b9d0a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2979a66f-e740-4433-b5de-6c2a1e05f654",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ef841b-2315-4c30-87eb-ceca69d0c8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200ed48a-ad22-440e-97fa-b4a7b46e936f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3650b3-a4ef-40a7-b6c3-a912aea3a82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16872656-d328-4879-8209-5d068e6a84cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817f127c-4a19-4d91-a5db-3098328d5d33",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86181aff-8811-4f30-bb0a-7b438adea3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead76243-ef29-4619-af50-865583ecef3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e0c04-e9fb-4293-b9fa-1eb686d68017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d46233-90d4-40ed-919f-75c625eaed96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64058f99-e879-4d22-97c7-287243fff6c3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e969f3-2b35-489d-8985-669c1840ea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba46f6b5-5462-4191-bb18-8bc6034accef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb0a195-e4b4-4705-919d-40aa175edb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2058c5d0-9d78-4392-a251-0750338a56a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7aa0c2-cac3-4be8-8ef4-1f83aee9bd9b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48418c5d-68cb-4671-b4f7-01d9d36ae365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06920976-1845-4472-99da-f12c735c4cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff77d5a-4a2c-47b5-a307-3a6acc3ed64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f227314e-de93-43d8-b372-ae09b75dea59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66603eaa-fddb-4277-8c92-5ca4c5d3a3db",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eb3fa4-efc3-49a1-8f71-02f903746780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35463ed3-64a4-472d-a141-41f5a0ea83d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaddc7ed-c497-4567-83d4-ace5f6ee1a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a654f7-588d-4f03-bba8-7eaf2158fc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a93fae-bec4-40b5-a2f9-c165859c86ac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5864b6-6614-4fda-b9f9-038084dbdafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5ccf56-5d23-4c96-bed9-a059e3cf7c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69c6546-7857-41dd-9a5b-ff713ee3ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc81e38-878d-474f-9121-8fd50aa741e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe033c9e-43c8-4f0c-b4cd-22f6b2e799fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff407f42-6d6f-4788-bde1-7096f5b55abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ea0ce-0a7e-4553-9862-51d084a2f10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ff794-e5a0-4f9d-bfc5-0e7394455b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "038a4e4b-aa8c-48a3-aab2-8e088943458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d86a6c-dec3-4249-876e-60e5e5ab1e28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44d90ff-5e2c-4311-a772-9969d153057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39628b3-23c4-4990-bb7c-90effa900e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49108f-143f-4619-b1f1-bbd92172699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c27ae1dc-9d3a-4bbc-8785-66ba2b397ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84d8588-521e-49c7-af32-adf464cd7433",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affd51b6-dd24-4ad9-83d9-ec0dd068637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5b0da6-6330-4034-bdff-f07387739fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3357e50f-fc2f-4b38-b0b0-90d5c0fcc7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c819fb94-8100-4a82-8d23-e621355a7c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd00b2e6-4f07-4c02-b60b-9d0693deeb7b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83a6f9-2aaf-4313-a8d8-3b452c7a3b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455c22f4-dd04-422f-b09e-5b804fa9d1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9fd06-c1d6-45e6-b56f-d9a99f7ef38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bd55ad-8515-461d-a286-b5ff5eb8b0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4e75fb-ee46-4a81-b728-20e2c8f30a11",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0742c2e-cf22-4d1c-aea5-f082eda80067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a16ffd-93e9-455d-b8cd-50b091497140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd6e2c-38d8-4c9e-b6d2-3fc064189fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c557077-2229-46b5-886c-151bbe1d5924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a1e545-d2e5-4d27-a1e7-6ae23746780f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5690c812-27d4-492a-8104-569b92fde596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8f0c79-f8b4-4796-9c08-489789753abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429776dc-f773-48d3-863b-594d13f1efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78156d70-564a-4c98-a1d2-90dc507af358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e79f746-1ccd-43bb-a818-52a5e839aad0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd37f0-d1db-4273-8778-888155e69b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4bf422-4679-44f1-860f-96b11034c1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88703ba2-25c9-4b76-bdd5-831daad14367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaa50e2-be52-4b46-9450-84beaaa6c3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe43a60-003b-46ef-9960-c99d17ed8e0c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b091cee-2c0b-4f9a-bbf8-9c56b4642c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510c5683-388a-4fc1-a557-c1fa759aef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7b7f9-aadc-4f38-80c1-bf3a3d43f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcb23db-0cdb-4732-b11a-facc1e467e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a8ad32-4bdf-4262-8d8f-b45a85072045",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc77e5b-3d90-41a1-b204-e9b584b8d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127f2cc3-5013-4d33-8fa6-a38984e4b850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4ae88-20dc-43aa-b27b-0ed546488748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a69924e-1ee2-43e8-a21f-4c16f1f56310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeceeaf0-b2f5-42b8-b4fe-fd02a46998ca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd97f1e-20e8-4fde-88e0-4dd5354676b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4b96d0-f4aa-454d-9b0b-7a9667218d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8e5cba-13d8-4692-9af2-583e7a77aacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9be478-e489-4b4c-b37c-c006f6b7c4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905f626-e394-45ca-8949-5897d6170ec1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6238bb-a31f-4351-bb9c-ced86c68acb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e218531-589d-48a4-bdaf-069beb8d5f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208906c-9d27-4993-9df2-989daccbb764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "498b6b9c-8cab-46a0-b948-8201cdad25ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a06218-64b4-4831-922c-277e46023399",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f2a93-b22e-436d-b3b1-f141eb08f042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7ab863-42ec-4f13-90d8-d3d09d689d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc69c3d-38e7-41ac-957f-9ab8e09e1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da036fcd-e715-4b19-ac9d-4a7e1253be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5231ca90-07e5-4c4e-8d4a-2cee414085db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b79eb49-cd5a-4389-952d-8f9c5e98decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4677d63-8298-420c-a925-2050f0f6c45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beceaee-b8ef-48a7-ac06-107a1d515aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "627c3e2c-50c2-48dc-8ce4-53b2c5256e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85940de9-30b3-45a0-b400-b5b0de4ea85b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fde4ab4-2564-43dd-81cb-47a654969fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b57492-6b23-44ab-b060-8316a193ead3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc671b6a-5914-4118-b094-16acc577c7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e57341-9f1e-4e60-b2ed-ab4172a9870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed715529-e4aa-4423-92be-69124de370ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c384a0-8a45-4334-b7bf-5bf0cfe9544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b46542-95b5-4dcc-a9b0-5c2e736ec9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2368daa3-26c4-4877-815e-c4712bd8c420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "399ef756-4d1e-4dec-bd31-3dba82aefea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f46ec3-39ac-42a8-83c1-209512fd48f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4a031d-d503-40ae-9419-19dddbdf8ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d49bcf-c6b4-4303-9207-2ec558df2aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fb0566-5880-42ab-a6e2-9b7c07cc1d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d6dd67-6507-43eb-8b72-d231ad3ad900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96edcdd0-2090-45e3-89d8-b69d0d894bac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255dacf6-e068-4f53-97d0-4f868aa11b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533d8417-200a-46b5-a82a-e9ccfb139a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0a1ecb-8439-4aed-b2f7-f36025eee025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf3975-749f-4cd5-a2ce-fdfa8200d27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70033e2-313e-4332-8e28-771a21e88865",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d61806-9a2e-47de-a836-2a8becbf0406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb802b2-02d8-4d69-985c-1b83574f1591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c06222c-b958-4eee-8cdb-e81b81afc5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50cb067-39fd-4d45-996b-5b4113ad7758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5cefb-d242-4c1e-bc53-83de6c549d19",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50d1297-c3ed-4bdf-9cf5-2944dffe39ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1a9b50-0a5d-41ad-be90-3a2f75e0387f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273d8f2a-e8d6-473b-ae72-b16d4b7ff0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb698dd-9acb-43b7-a854-071da769d6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19b6374-e927-4ee1-9e21-30d3420973f8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af17cd5-dbc5-430e-a64b-1b448d563eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6f0786-0c05-4ad7-ba3e-4412a4c2ef49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a2deeb-f015-496b-88ad-20e5bf1552e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0a88cc-7377-4e23-96a8-01cb1e631412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1f7cb8-290e-4e6c-8c54-da5271964118",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1f5e9b-c42b-46d8-a9af-2ed3e2faa1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156fbbe9-1a54-4b5a-b40e-4d82ca74550e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bfb204-8d30-4d0c-bd9c-5295e571003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b59f97f-9861-4b4b-8064-ec328b2fcda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb94a453-a7b6-424e-9c56-a84b1b0fbd3a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34055840-f48c-47fa-8a65-886b415c856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59f1087-3074-4b8f-baa6-40efa3b71b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4dd188-1607-43c2-838b-775e63208b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8ea5c5-df14-4984-a6b9-9958c0ba08c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e48d71e-3aa1-4871-93d8-563568f6cd0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44ca3517-cb16-4451-943f-4a0552e9764b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6637db12-dda8-4135-959e-0aeebca0b183",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "391e99aa-8c5d-4e55-b26a-dacbb2516c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c008d-77a3-4496-ba10-6e7382cfdcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cccef85-5fe7-46bd-b4a7-4f4e8a5da349"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f527d02-cbdc-4cd4-b4ad-0429333679fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2810339a-e4b4-4a17-881b-fdda5e79a692"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e18f74f3-f6c1-4045-8f48-3caf74ffba79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86fb75c7-44f4-46a2-90ca-3fb8967b8b70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d0878a5-4cdb-4486-ab9c-07e732839ea0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2bdbcf02-7005-4f11-8c17-ba8d7eedc875"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b667279-a7d0-4cc9-b71d-77af8d28f1cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e543106e-7df3-4316-8249-5c8abddac1f4"
            }
          }
        ]
      },
      {
        "id": "49e5cb91-9cdf-496b-9a4e-6bc3d181e302",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cf135a28-018f-4467-9c77-314535c4f027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01cad072-3272-4dcf-ac1b-2120165269b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a018db86-f1e8-43f5-ba02-6ed7afcf5e6a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d31a0-a1d7-4bdd-9c01-b424d7f4732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fe78da-a6a6-485b-96ed-66b274bed64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b2b1ce-aa7d-465f-a908-de0285aaddf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbec0ca9-c432-49f7-aad9-f3c168ad0063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d7ea69-f5aa-4114-bf42-539ee3bcfb2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d9bf3d-9abe-4cb3-9109-f76d4698d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33c42a7-374e-4a2a-b44b-cec1f08cbc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2d895f-eef7-4591-afd0-dcf804988b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f5a059-1ca1-4590-ac61-0435c5217afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24d9606-5698-4273-bcae-79bf1eddef99",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52df7e4-6d3c-4c48-9b34-b1124873ad5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d974fa1-4a75-4478-8f5b-88f07ab43ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a253920-a6a4-49d1-84bd-04ccc0071870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daed673c-dd51-4057-b0b4-286d0bcfb33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a72f8f-5f11-4b1d-8a21-a916a39288ee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349c9486-1444-4523-99ca-c5d1c77b00a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085e4f83-91ce-4270-a85f-651148c7e569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a33d80d-dac9-4aeb-92ad-87d8c9f2fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a75feb8-2693-4e67-9e98-ade1fd0021ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d274c0f9-8b87-4e8b-b4a2-f1691a4783f4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5fd910-f30c-42f7-8121-9231523edca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a8d8ed-d6c9-4662-a075-6f51687ec812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abec565-9c77-4079-b6ac-d024c4da9684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ed47ab-cb41-40fd-9dba-0d383185699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3184d15d-24d8-4bac-8657-7aedacd6eaee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb821ce-cb93-42c5-aaa2-0b4ea85a2cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62baba6d-0dee-461f-b0fe-a7cfbcc7fd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d99d75-0405-4f41-b290-8d06fecb214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abb8eea2-b796-4aba-a76e-d0239309f66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440d6cc8-6368-4b35-8239-f4a184906dfb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d572982c-cbb9-4c46-b306-5017d4e3e74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b11202-98ff-4bc2-a254-2a64e69dcff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bb3a6-1524-4291-be89-0bd86a7fa2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e54191b-b672-4dc6-b452-0e2b2acce7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5ac2a0-a354-4cff-930f-f7c1c0c9a1a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ff9c78-874c-403e-84d0-095f089b0225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e173e1-75c4-4673-bb1f-80a9295a1a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34217202-0614-4d2d-8097-d713af4e305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "349066aa-6825-46d0-835c-106183a58304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0713750-0a7e-4e21-86b0-ed6997aa2e81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aeefe7-b249-4732-83c4-204e60a5dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b7a40f-6940-4581-a112-f276165fc3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bca4f7e-b369-4807-81da-d0306e015693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29a76d6-fe66-4cef-8942-8f0d23593217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e1512e-aea5-4929-a61e-0088d973fb0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ac49d4-1fe3-4426-9081-83a14711e913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6985df38-a741-4cc8-ae7e-0e5e3c1e70d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a7e8e5-516b-4858-967a-7b73a92c30f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d05fcb-393c-4b6b-8f6e-8f95012f9231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ae3b3a-cb55-48c0-abb3-0801c85b206f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fd3f4a-5325-4969-baf5-7f7dcf5c9023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cee3e4-31b3-476d-98b9-2566ce3861d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9304f2b-84e3-47f0-a7e0-926a9ae032c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c6a6ce-855e-4556-90ac-9265174e6402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d3dade-0550-43a2-bb37-bb63adb37bcc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228b5c5b-b679-440a-81dc-f370f84d7cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317f5de7-3b6d-4966-81fa-f0f0f63e2177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ba34d8-6ecb-4117-a9c8-8d971c8ed56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54c93e70-c71c-43d6-9567-b0f7e042961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8871157a-a2e9-4be9-943e-95fddd1d5db1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664c2230-64d1-4266-aebb-a4f095a70604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ad4fb-26f2-4d73-907e-e7badd4149c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7651ae55-8558-4108-ad3a-efad20d3e32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dfccb1-7d15-43ab-b086-228d8eb95588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0624a053-8f3b-4bc0-8627-83d0fb1556ee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8c6718-c13e-4dd9-b709-8f00cad6473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae072182-f5bb-44d8-8253-68d8778e5c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945ef598-eb04-4d29-939e-f9ea19a06569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22278be-378c-48d7-b4f0-1c1344324820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e13375-754b-4e0c-bf44-2cf49ac5511c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a47f8-9284-45b0-9319-e8417d7e44d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae10f09-f4fc-4ffa-b646-0e6d50574876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37043e54-2795-4943-b7bb-bb5332fdff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d50df0-8bd8-4b13-96f8-217a097a038a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ff32c3-f74f-45c0-a1c9-a2e776226640",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5657c87b-2548-4f55-a9f1-8c048f5553b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f09d07-7610-4343-a162-165fb41d9b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8753a90-c7f9-4db2-95f4-1abd2233a954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f1847a-bae2-4cba-82c7-f69f586c7132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3e521a-509d-488c-ab24-19374df770f0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aaf2a5-bd00-4150-8110-ef82fc8207c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da76a4-fc55-4b7f-a457-4b2b17c43e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d5920c-5b39-4dd6-a6de-2be843a2b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6164ca7-246a-49ee-a9b7-647b68d656d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b280843c-8987-45c5-90dd-55cdf1ac0485",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e0fea6-6668-43f5-8645-8e0f91a72b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2c4429-95d0-4ab0-8a16-517a9d9fa7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d5cb9-3cb7-4b58-8f95-b7edb4bda254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d681cda2-92d1-4ef1-b7e4-38ab01678865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4519d91-b4f9-4a5b-b354-0a0fc5843882",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9bcf21-923d-49e3-a2fa-7b55f0ff3d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8003482-6b17-4ad5-9542-b2b78cfc5bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e074d4-0fe0-4f7c-9081-3aebdf99480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d97fa10-29e9-4ae3-b97a-7a36253d0a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1455d01c-5acd-4bc2-bb06-a94647e55177",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f17530-2dd7-4c86-a55b-d8e316ea5518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480854aa-6faa-46b3-a520-08faa0f81452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2eef10-c316-4987-b7cf-29295bf1c016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec906e62-2e5d-49b6-82c2-dfece6c8486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a2d467-3d6b-4798-a2dc-ae595df7759b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e70b243-6d0e-4702-bc62-d39720827696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9ee627-0243-43f2-beaa-9baae7d11ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7f38fe-c260-4735-9d03-baaa22f466bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5609fc-ee01-4bb0-97cf-a8262152ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdfbd41-7443-4286-b25e-99e94aff0df7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f716592-ac27-4407-899c-8b93073ea534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd8b233-4532-4224-a682-86a25af833dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e56c5e3-c20e-4764-87b4-5a946a8b4c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e896bb8-7d02-41b2-afc9-0d5d3798042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869a7dd5-1b90-4e06-aa8b-dc3aae9d8c31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb84c6ec-b5cf-46c1-b1ae-751aa7971db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1048e370-23f8-422a-b734-729c4aa9a359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfece68-6035-44ae-abf5-b000609b9c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445f3ba9-502f-499b-b109-c4401aadec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391a8df7-3fc9-4377-baa0-118a773a6da5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb70b2d-437b-408f-9f6d-764e8eb0bb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a21f9c-95fd-4de1-8b2e-32f8cec5a4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c09aad8-631d-44b3-8314-be947f3f4a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "446959ed-6b1e-48de-b78e-97bb7a0033a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f94e57-df23-4c4e-9a36-4b1f727421eb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703afd3-2fa5-47f1-b776-a8a2d3ca1e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1d3855-b8f7-4a25-ac8a-bb74e63055c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9643d88-738b-4c98-b8ac-9d41cf042928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669d020d-46c0-40c5-a174-320b56ed2ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4740c5-67ca-4bc4-82d0-a4487b0c0b9a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6a5151-9c0d-457d-9dbf-d45bfff6a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3d508b-e7e0-4925-90ec-43ca682dc3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab6074-b455-4b65-a435-6e401635e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13bf693-50aa-4f58-a25d-e84040e80e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026fbf2a-6e4c-4011-b1fb-c01936796665",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b8389b-ee45-4df2-9f8a-c7d27c85dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52661f5e-db05-4920-b510-3202663c5ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeaccb9-aad9-4f1e-bb5f-594d12a75e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac28a594-589e-4676-a519-44057b55f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6071f2-6a14-4acb-8bd7-710a648396c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01edbef8-a778-4339-8e0b-e63ce09e3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f206472-5b10-4c3e-a639-e770860e7000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0099fa59-a788-4c78-9853-2088b4f20a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07084ec-3a9a-441f-947a-ab6a44870930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fae9bf9-1a88-484b-99c4-8c94f3ee524c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2979c45-6917-4ab5-af88-dff265d96e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de7a93d-4f03-477b-a798-b76086d9034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b1a0d6-9388-49fb-a94e-c4810db70e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b387ce36-817f-4bb7-8757-4515b8059163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bef6c4-b21e-4d37-80fb-6f9bdac4eade",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4538c2-edf9-465a-863b-9abc78fa7c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57c2ca6-ed24-4489-9571-791d86ff14ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2240b2d-bc10-4273-8be0-a97fa9779ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2325c63-5030-4c4e-913d-4a065b499407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ef246-4419-4a95-ac75-347bfec8c169",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3971e3-c9dd-4332-ba58-82a13958a520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53264161-96e8-4931-a2cf-960228a00334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2859795-357d-477f-936e-9915e9854d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd945b8-081e-4779-bb6f-66b41dadc5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a1ac4f-9a52-4408-bdac-29257f38db9c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93aea32-1963-4052-9595-0359acd9c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fb4fa2-4fa5-498f-9e8f-4609f74896a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87196a6-568a-450c-960f-49823f17b60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849a0f8b-4a6c-45c3-8a22-a62305e1a237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3288d3d-987c-4a89-b8d4-94bc48cc0cf9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746bdaef-b41f-42fb-80b6-35b611623141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acbdf81-ef8c-46bb-94b6-1d512143f008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dda488-1006-4311-ab91-3f809a62f531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128ab353-01ab-4403-bdc1-78ce4012a5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2d6d7-b355-4377-9551-6322ddb9b0f1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e172b375-3a00-4c7a-84d5-7bcf002ad0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ef1efa-a68c-4fce-98dc-511f85b4a6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c2d5b-cac7-4799-b7db-7511ac720877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1667211-4bb0-43d1-a6b6-07f45e0e9f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98bf2ba-04fc-4398-b446-06cf30547719",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d67d7-e414-4044-b8b2-8e986e90c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1c1340-e150-41bd-bad5-a7cc72bdb216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca80af6f-1b2b-47d3-85a3-13775fc91278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4c7b7b-8441-4bdb-9145-c9c31b23a06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5b2341-cb5d-40df-bc0d-f1f63e338d00",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9fe2e4-3ef6-4db7-8088-4a9dcead8e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fb87f5-9e65-43e9-bc6f-df336eaff45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c948d3-0a3c-44c7-81d5-28f3ad482016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5143165a-30ce-4143-87db-399375eb9a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5918978-d09a-44d8-950b-328b62f5f435",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c69c05-ea18-462b-aaa4-7c4a1a7c0699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54acd53b-e7a0-4bc5-9e42-6dc3bb884b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ce160-542d-495e-a1bf-52580d20f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3b6bf0-97b5-49a5-a25e-c30ad4a86e17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c7a9a2d-6440-455c-97e8-913e8dc1ca1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3826eac5-771c-473b-9e9e-2dcf6707c44f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e602c868-45f4-4ba0-8462-10c1745a23b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5dec565e-3215-4e64-8ae8-6a556af04453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109a52cc-3789-4522-8f02-ed5da9b0fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a83fbab-ad77-4b0b-966e-144c15012507"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78df376c-4211-457d-8d5b-f2d6005071e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ce7f846-98cc-4b3b-b675-726b7e7a9787"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "138443ac-1856-4f0c-b162-94e4fd14f61f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "459d8c21-c34f-453b-9fa1-69a4a5f15766"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a429634-68a0-49d2-90ef-25e0dafbf1a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2b6de43-9731-4740-b41f-a9ae8785dee5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "297ca94b-e865-4e3f-b65f-acdecacda65f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "295f24bf-f3d0-4d7f-9c0d-d1c1107a6b8d"
            }
          }
        ]
      },
      {
        "id": "a76b8b52-7c62-4e7a-ab87-e710e655dd71",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d2772ea1-e89e-481e-b9f9-1d7155de7404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13d5f55c-c197-4670-9edb-3c2ad4f8c7db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05a780fd-575a-4549-80da-e7ee0888692b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c705f4-7a49-40cf-a807-3713c12346b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b936563e-659f-4c8b-a525-2c862d79bf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e95df-15ff-446f-a917-6d614d666077",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165e299d-8342-463b-9ed3-2ac7b4724156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3a61c7-ec3d-4ec4-8b27-8d9de88e7794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ed635d-7cd4-4695-a322-d77707c4995a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5392122-fdeb-4f77-8d30-c6320681e0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c783e0-838e-482c-ad79-6b02e912043c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4748c-0c82-4e91-b5e1-7beb77923a25",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c82746c-a606-46e1-96fb-05477b9b0ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c3f8cd-e4ee-4c0c-80ff-ccc80cf71533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35efcb2-5893-467e-b88b-74d8c517e020",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1013f8d5-5c9a-4679-a6c0-003b5b011ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8494c76d-f44e-446c-a9f2-fbc896cc9402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7735cbc-5fb5-4263-bc31-8022906af770",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff41442-256e-41d4-a503-4522193e5dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e716871-ffb8-4b28-b480-c547fa116f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c62b19e-7c2b-4a89-b5cd-6bcb34764867",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e8b36-de72-41cb-9f57-e8a0027f0484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2120f24f-8ffe-4dd9-b591-9c22647d8a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3fe163-55e8-492e-b49d-223598779386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91bf346-9d78-451b-a73e-11225be34b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beda227-b0a2-41d4-9f68-ba3c94df7546",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe19191-4a5a-4984-9997-123c1a7ecd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ef1666-a720-40c6-adfa-0e20ab14120b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371deee-e33b-47e0-88bc-b191aa434593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80232d63-f797-4003-97a6-41d24ddb18e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943c8e35-fbf5-4dcb-bef5-96a1f7407866",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847cb75b-b4eb-4fba-92d0-8dbab1f3cc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f390de-610d-46fe-b385-a3acf91c0c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee472f0-cc2c-4771-bb14-e2b591c0c264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe257709-a50f-4c85-b072-f5a72262853e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8763fa5d-b1f6-45c6-824f-ccd8fa066c6f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd6453c-fa92-42b4-881b-623f6e0bee1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36e3749-5259-4af2-94bb-3545435004c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c5e80a-4ba0-486e-874e-5e2206df62fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ca6e2f-fb91-4bbb-bdcf-e40d3ff367d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f11a7-cb53-4de1-a8f0-7a96b35df2bd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e621cca-824f-4827-b795-9c6a3bf2f82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8698789-9ee0-40ec-b940-98cba1f33e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02d2f89-4882-4380-ad59-58bc597229e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e45977-231e-4d3c-ba63-ac0041a8cf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6e0370-756f-4879-9dc9-a68e184c4006",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5e98c-16d4-44a4-b661-03743903dc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd69df8-f74a-4e36-97bc-df2b66c9e65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194357bc-a94f-427c-9798-d17bfb1db796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c2f55c-6750-45b2-b456-be638cc28df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8758b480-7d9a-4083-885b-3490a498ab2d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52f3c90-7419-4430-acdc-81453a96c5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db41d72c-5057-4963-be2d-f69b9feb872c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2999167-c091-4b9b-bebf-8204a7e1f286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb74a50-9572-4854-b0cc-49b6040ebc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad841bf2-fbf7-4396-9566-aad28cdf6063",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5c3061-f6af-42c7-b580-c69dadd2e042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade4bb56-9818-4433-88fc-e3a6c4f70944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4088dffc-80f4-4087-9ea0-e300bb7ac657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5b00a3-b74c-4ee8-9f10-5f88b8cf59b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8081471c-69c3-4f68-8f63-545117177b7e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da505f5-073e-4701-b20c-32362883af3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a89891-bb2f-4f5d-9202-bd8e44a81489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7717e6-8ec9-465f-a0ae-33fc1abb9eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe04169-9538-4529-9879-fec13b99c76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223964f0-eddd-4cfc-89c9-d7d3be275250",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a1004-8a4d-4afb-bce4-72464b757d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e661e9-c8fd-4087-9dcd-550ae53269e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d732a035-0cf7-410d-869a-dcc3a2107777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c700d52-fb5e-4bd0-af45-7e4c70d44567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e75062-fbaf-493e-92a5-28f6b510068f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b86fcd-f4d6-448e-ae90-2fe8f11eac49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4808bdec-aea8-4c3c-9c38-3e07f1ab2354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bfec74-8e1a-42fa-8c6b-ba4a35258a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e7f62-a6bf-4faf-89a3-cbcc3c823b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9f7c3-939d-493b-966e-84391d63303e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa2b2db-5c19-4d7a-a6b9-6c5792a7c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a683ae39-34c0-45a9-8072-958b9ec81823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaef8b2-53f6-4295-a788-ca3a56f22a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08ae422-472b-451a-a6be-7265f14aafb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da7118a-a4d6-4db1-bbf9-35937b4311fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0f06a2-f8f6-4c90-901a-8516ad9e78c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9be9f9f-6e3b-4cbd-9feb-6d14e7350a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee640d97-c952-444b-abbc-151125f1107c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d2231f-b3a1-48a6-86e1-721374e97789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680a05e5-f041-4deb-9786-92b736422f27",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d3b782-ed6c-4c0b-a2e8-04f0ce61545f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8456603-a1a9-4ff0-bb20-10f80e8b228e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b1f2c2-df09-48b1-a42f-dd7bce289ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591021bf-d165-40b6-9b0e-53d705307185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459d841f-fe72-4e1b-88f9-3535ff54ce29",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea62cbeb-984b-4f73-af93-3d2ba17f47a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4fa754-9340-4d1d-ad29-b1a282e68c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c12774-d918-43ee-aab4-9300c4505e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a154dc-13c5-4352-8b8f-b1c579ab7617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c8482a-9a9a-4326-8cfe-cc101d7e8231",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58436e50-d381-421d-8ee7-5d7b392de7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b33f18-b9f8-4dcf-966c-a77d66c4b722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc7b93c-a24e-40c6-9272-c03ce125e749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d14c73-987f-4e0d-a056-bf06668d470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83e417e-ba1c-42d9-8ef7-c022a2b10790",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fcf537-5d4b-46bc-a02f-f35a7597b5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b6cef0-129e-4b0f-9508-a9c8a635e5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390fbdd4-f8dd-4fe2-b5b3-008ca05ba8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e104818-cdd4-46fd-a39a-a8adcdfa184b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad8b609-dc0b-4151-9464-a02bc33b2582",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060cc709-c2cd-4a3b-9007-bb7af33e0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d707096-3606-4c06-9906-bd995bc8dc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f49387-fe2a-4da1-ba58-b88fb43231fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3c9f5a-0225-46f5-804c-25f14ace3d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaefbc7-489a-4156-9450-26d50a9a75e3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29232bf9-c9e9-44c9-b6e3-39ae474b8326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e450aca5-dffa-4553-a441-8c842c075f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3fe4af-f150-4eea-96ed-8fa64137bdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6356830-f1f4-4fe3-8173-ab03a8bcb0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced0e714-b982-47c3-bcb1-40dcd8e72efb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b60374-a0b7-4ced-9852-4117e551a47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a66c30-6328-4155-aae2-2bbb3401989d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810205dc-df9c-4564-82ff-835dab7464b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4e6424-1604-48a7-be18-aef1d326ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad315af-ef5e-480c-abff-929dc3257c4b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986469e7-58ac-4e40-82f9-4ff8eaddcc9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0bf695-286b-404a-898e-cdd329a00d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2083affe-0b25-476f-8e0d-5a55108ce243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87117284-4090-48c2-9fbd-9e5b6b7cad97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cc1d2d-f479-477d-bba1-50ef72174e7b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e45f8b0-88bc-4d6b-9527-cd7433065354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292bba0c-46f8-4498-bfbd-4492845ea6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d448bcc-7e03-4577-af57-bac7d7d14ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1af5d0-9b9f-4a2f-a3da-f541bfe84662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6a9d57-d12c-4693-ab33-86d4ebeb262d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e31aa1-f23c-4489-b6fd-cf511aa937de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c386329-bb28-45a6-b525-64c3a7f6aa18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a703203-f43a-4a97-9fdc-ae80693cd164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dee87a-7e8d-46f3-87ff-a638849a5642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25602d0e-035d-48c2-b7d3-03283382a2ec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb6e618-861d-4812-97ed-63f529902ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519dff38-4cb6-416e-a046-b6e0792e5e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e1428d-6655-4537-860f-03dfc0d416cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589aee58-49f0-44ab-90b6-838690b26a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250821af-3bb6-4831-8903-f20a63a15a3a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e445e1b-6df8-46aa-bc20-378ed0dce6e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a2d3f7-584b-464b-995f-5c5c13ef275a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180220b4-3969-4f2b-9954-d6f536137620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83988e77-b8cf-446c-bafd-6f21300dd34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17abd1b0-c846-4c3a-81cd-9173c6f90c8e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6c96c-eea1-4686-9e77-885c47f94c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cae90bb-bc3e-4d11-81f2-a857c9361989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05559a4-2b76-4610-a50b-9ed48d8d5123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1653c5c-f274-4df0-96c5-c64151cfad7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b1bf9-2fab-4c53-85c5-67dd9e0c3058",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3309c639-8bb2-4c67-a32c-421a59939f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b8bedd-bb7b-428c-a153-cc6e3e53aa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdade11c-c17e-4350-a69b-179c14f85672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a710ca-2467-4dc5-a105-19d0784d12b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eafbec-4941-49bf-94ea-de6c89a45381",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c111e8ff-026e-46ab-a8ce-8f70072bcf81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eba732f-192d-4cf1-8046-489d26632727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b00ce92-a579-42f1-8b9f-f1ba946300e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff3f94e-d6f2-4a11-9b3d-c1ceb7fbf8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef27508-4bc1-4326-a58f-328068ff69ac",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7aa056-493e-4e0a-b164-180e75c9d4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc962a2-3840-4a4b-84ee-f145a5949ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dae0b34-9214-4534-8def-c15c5db3c149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9276d54-1cfd-4ba6-b4c0-822c4abc57b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5934a3d6-d3ae-4025-a948-96b52137636f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812b48ad-9dd8-40af-a92d-f024faa454db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ccebb-12bd-451e-8955-4774b539cb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b07898a-f9b2-4650-b1db-aeab9036b659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e152abf-91df-4362-ae91-b5b7103234e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b7432d-bcf2-41e4-9f08-4e75bfc8868a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14fc705-385e-44a6-9748-fef6d6f94adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83917d4-eb3d-4d24-a807-8f7f36cc32e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e696486-0e72-41d4-98f8-0e8f79498028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6f89bf-8831-4980-a821-ee47878c51c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79fb67d-db2f-4410-b664-5fa203a1a7d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c586e412-2407-4992-9766-017938cc2840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e872978d-1e70-4ad0-8347-10d52ca08175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff6ddf1-1e68-4f8a-aa3d-cf69a2a156e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818446e5-5ba3-4e29-84ba-1e49117190c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c883d-213c-45e9-9110-6b197cf64289",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f41d25-51f3-4fc0-883f-3523ff4d5241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bd322a-e8fc-4623-a675-a5165fe1c16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59e4b68-aadc-4a68-b825-63d1fe791b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649047fa-1194-4522-a8ab-06d2b4f9484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800adfe8-599f-44f6-a966-c8e9b8087897",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24f5a92-4be2-4566-8878-9f6232ffefe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cc52a8-f5d9-46e5-be8e-d8c11a7ca12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccacbc3c-6d9b-498a-a2cf-2229bff26abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e194476-a5bf-4125-ad5c-c19c4d53703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb136761-99d9-431d-88d5-c061a81ad943",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16586146-de21-4a5a-b627-a388cbe27089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde7daf-1e11-44a5-85a4-96fd877b2d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401a6b1c-04b1-4a16-9e7f-ca67c9ec9977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75914a41-3f56-4d4b-8ba8-d3f09fef6259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ad1da-9876-469d-94ea-c4181698e772",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3115a544-9aa9-4bd7-937b-4763c744393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d01820-f111-40a8-b7a8-55296183fee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560fc33d-1adf-40d0-8a07-2780fb26ca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1670a0-c551-4764-9648-e812590799a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7b550-fc72-4bc6-84c0-f28c6691306f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77490651-5d22-4cfc-bd80-50a34a220728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8863e91-f58a-4adf-bcf1-4f74ee8a03c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca846d7-40d9-4e6f-bf80-aa8ab04cb87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3c293a-7ea0-4888-a2d7-c793346d3725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24d5ffb-1079-4278-8759-9337aee66196",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437eb984-c5be-4555-98af-48b93b4ae12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f317c33d-ddc8-477f-b057-96909f15acc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957626e8-69ef-4d58-9312-afba79d0b70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad6da44-4ffb-43e3-aec8-906bacff8449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f167267-3cda-40da-bcb1-a4460e469819",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d10ec7-80b8-4888-9678-63854efc63f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3177dc06-a9ee-4250-883b-5436fef34930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd5e41-b889-4b15-8b56-e9487bc6b9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc151ad-fc00-4e41-8491-490c3b1666ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331eb5f-0c34-4bb9-a705-01d55e0ce000",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ced388-fc11-4cd6-b7ce-086c716ffade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d356f042-f7e8-49bd-9065-4329fc959a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5e9940-a707-415b-ba19-50671690bea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095f433e-cc03-4b3b-8335-98a63b8bdda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccefe45-24a8-415c-a346-1122e4935185",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b74a47a-0097-4a7e-a4b3-2701f1a99d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca725a9-6b85-41aa-9535-0055536e1cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39882d52-144a-4a01-8f1c-1fcf2a902b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbba525f-afea-404e-b2b7-b96b0232a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014be5bb-6c74-47c0-bef7-4eb894acb201",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bf2d23-fff1-43a1-a766-f54d9889a69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fab306-c57e-41c9-b5ef-6c53d2bbcfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ba986-79e2-4ef2-a867-f88e5e8d43bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08611b85-9883-4868-a5a9-02e5ba005339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c702da5-855d-47ed-a9b1-5b0da803e676",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8ddb14-4fd1-42c3-8234-f744ea799817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2436ded6-3cc9-464b-b439-eb77677c2690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5546e8-9139-41de-9b0e-c04275778ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ced715d-3395-4f34-86f1-9dde932df04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab65712-26b1-40f9-9452-d9182aa8ff76",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e33d7a-b5c8-4744-8855-995a627d1af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc50c38-2f6f-49b4-97a4-fff570f611b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc2dadd-dac0-4e95-8dd8-9192de1aab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecaa5ff-4f19-46cb-bf97-b228b18bf08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae275ba9-7134-4201-9961-c113fcfbb04c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f47f81-793f-4d9c-baa2-99fd81fe8f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2895cd24-ff06-4d4d-9b2d-a9ed98b40d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dd3821-b8c1-478b-873d-f0895124bc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4284a168-4f7f-4626-8700-e6bf9049bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8121d03-e845-4cde-92b3-8a008584f5a2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a70e9d-72c3-4a0b-9145-56fd5975cb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dfc1a0-cb4b-4b77-846a-52d445768f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab58296-d327-4f09-938c-25c93b4a3a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e729e6c5-74fa-4c34-b0bd-6facf810f236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9443406a-dc4a-4683-b818-6535ff219d8d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f826282b-2f73-4424-b844-b40b3fa8fa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312ac26a-e85c-49e1-b6eb-293b11b1accf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f9bb6-515c-491a-aa61-96668abd25cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857d7617-48bc-4e58-aee9-2270f76f0d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c3114e-e7f2-4206-a547-8fb9172e0304",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b424dbc7-a9d3-4d71-a791-27a3b0e23bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d780cc-ef11-4a2b-9715-ba3ae892f9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7e9cda-582c-4f3f-a37d-9e51f8fc5a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77e610c-517c-42ff-8726-9e4cf68dd03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef449052-143b-4a7b-9958-f88b333ca7ca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa3d68e-442d-446b-9621-9a460b77065f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ed1598-af54-41a3-9643-84e5b54d698b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8badd9a5-7bc6-4a27-b0c2-5a802d98dcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b9f570-e0e3-400d-9c08-dce1d5a4461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bbab2d-d5be-4427-9e65-14d9abf685a8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459b71f8-32d2-49db-95d0-812633e9cff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a4a9d1-c448-4d76-9448-b1b7c4a1d12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40753d66-2c2d-4fb4-a99f-e4da03d8c12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1925c0-c0d0-4cb0-9fbb-dcc11f593c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbece4f7-5d35-401d-90e7-6d4e78da8c99",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90c3d3-39c1-4cb2-9363-272b3408489f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc0c36c-5e00-415b-81c9-0c7cb0204e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00697d4-6277-43c5-8f19-f7e72270f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897af64d-2e3a-4d05-93f5-3dc252302c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2cab3f-5a34-4dcc-b363-8fa3945766b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d241a6-3727-4bc8-a894-3f6af3ab0731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fc3e04-bf8d-409b-8208-97bb551b4981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c39cd00-7caa-4600-8453-2a3cbfb28be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a8dbab-c6e2-49bd-b635-efdae7df01df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605e7b3b-8d95-4d86-bd07-b6ccf332c7b0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e3cce5-245d-4adc-a325-2e31486cdf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc1b861-b428-4728-bf69-e69b986f0298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c94f3a2-d28d-4ee0-9866-d65355d967bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a9dd8f-643b-4ae7-a7b1-8e8aea723d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be50028-84e2-4425-962d-467fb607aa41",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e0014c-8e5d-4d99-b843-8ce1ac1047b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9db2d22-707d-41c7-9f24-a9ea3cf7d045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35aa801e-bac9-4dc2-8622-3ec3aeb67e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a32c58-48a9-4877-8d43-50ad2182fb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ac7556-fe09-4177-9dc8-b430abacbe16",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe636c0-dd1d-40e3-aff5-cec4c49d0cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d7e82c-2baa-42a5-8090-90219089a34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90f7c04-6267-46a2-a382-2dbc9f65fb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb241ca4-b098-4f1f-8aa3-e29887e792f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff60d14-968b-42c5-8db5-52b2f278e549",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5f19e5-6700-4f7f-b76e-cd8a90b16364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07ea6f9-3f83-4d58-8758-f74d193859ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d35a76-013b-430c-8919-f0d3ec858cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65d5d1b-3bd7-468d-8cba-6d9908d8b1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699dc2f7-db89-4e6a-88e9-d67606ded773",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d230f22a-577d-4ae9-a1a9-68cdf406ab71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7df7bc9-d988-485f-bbf7-8c3682b6c7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bee392-d3b1-4a5e-9a06-a47034d3f1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b560196-96fc-43b7-9f5f-462181b5aea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f13378-204d-4c3e-b5e2-5fa3e0842994",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225afa2c-07fc-4a2e-b4e5-0bf3010c887e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e08bae-325b-4fd9-99d0-53f291f0f79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6bb54b-7089-4d4a-9713-539b36ef2b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707141bc-bef4-4909-8929-8314ef49bc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f1460-4f34-4a4b-bc56-480a8604f016",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5d8354-199a-4bc2-9e0c-da1008868218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295e4f30-0378-4858-9f79-66bce2d1a3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d60881-9f22-4fb9-bf1a-dc62f1d5c81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a198dd60-b02c-4a35-8f37-da13e66c67b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1bbf18-02c7-4b89-9f59-16ef247c34da",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee8c72a-25b6-4a08-b312-65eb0e8bb775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534de7ed-7cd8-472e-9deb-d1fa14a79b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4649c2fb-9b9f-400c-b2d4-6af9964efec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8b1729-60d9-4365-957c-ea7c82dc6160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f03f8-f680-4c72-9411-64f650498e8e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280ac33-c954-4fd4-a698-2dad728c00a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c135f7-9696-44ea-b48c-066a495b5bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4837b6f4-e632-4940-8410-a5ae8baaea6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c564dc-21f6-4058-b076-047b6764efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cf9b41-1407-4cdb-9e52-dfe652030eb4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca7ed2-508e-4265-8124-84fde6e89fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d520f29e-d579-4cb0-82bb-5309b5bcc2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47a4fdf-d92c-41ea-ad2b-63a3d1c97d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90161b5f-3f8f-4814-a6a5-ed18a9ecd23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354751b-8265-4abe-9f62-403ecccc4561",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9bf3a7-d559-4bcf-9d60-f0b62d2ecd9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807a30b4-613e-4ebc-8711-3a5020719f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1e0cc5-2cb4-411c-be30-cf6df9a247d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ca017b-469b-4298-b431-ba092a1e963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433fb7ad-a213-4c26-b7bd-9f4a076d986d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64166185-417b-4136-a57a-5dab21f7512e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55eb90cf-298b-4734-95a6-f905be27fcd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2d00eb-008e-4604-b27f-18a4c49911b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2367ae-4fc6-445b-8ba0-a579f528b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f517ca59-7939-4d55-9b44-81845d4ac12c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb24a59e-3d09-4b12-a58d-6060c5ae4a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6202cd3-03d0-4d2a-bb89-223349087f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864e511e-8603-4e5e-89f9-39c677799349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660965f2-2b93-4106-8c51-f4554a4ff4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e1035-ba8f-4995-acc3-206177151c05",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ed53ab-6b4f-4fb4-add8-df67040fc981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f7ceae-1a32-4673-a43a-eac851a8d381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064e4769-a6ea-4655-9202-9b90f0a4e3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce70027-e622-4e53-97bd-ca34a6539e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfc6b8e-4a8c-41da-9fe4-06fe2b311c0a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b901c145-b05d-4461-9825-7cbf9d3a4e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d303eb21-ebe1-4459-b2d0-34c0a0ac0631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd2b983-e44b-459c-ab69-24f14e7d5c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b332acb-bd63-40ba-8bfa-932a2e1ea692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee4f909-2494-402f-930a-02de3ee52406",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b66ec11-0982-42b0-9a34-768db7f4eff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c5ad0b8-0ae1-40f7-a2a7-76346118d8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d243d6-f4d1-4d05-8f47-72d3b2f70c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044e99aa-0dd4-4c0d-ba60-f80a4e76e6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d838e34a-fe9c-4753-9711-55809bcaf4a2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e27cf7-0897-4955-b3ba-7d0e65cb6755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2af495-3f0a-45f9-a5ed-e6f65034011b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4110b1b-f0ac-47a6-8cae-06acc60d1a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412e2775-67f5-472a-b9f5-3bff75696791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb3832-4e2c-4424-8a9f-9054decdffe0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6b671-a104-4a72-a825-f9a0e67e6390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddac2479-058e-41b7-82ab-d5624ad01f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18276f58-1615-46f1-912b-1427427696ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518d5096-7f5f-40cc-b82e-4e26370d3911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5977241-b36e-43b9-92dc-e94f9344d156",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad702d3-6141-4574-8572-974b46938941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d61bf7a-a516-4b63-bf3a-0a956cd55273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9f7961-c73a-42f4-88b3-e71253426fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e54f7b5-ed12-41dd-b2fd-f5f0ab1d812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e236b8bf-a457-48e0-a414-31f6749c96e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c84ed-a148-48ff-873c-894241207305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd8186c-042f-4866-a0fe-e8e6e49dbaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd184429-6a75-4053-a9d1-8a984fa52df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187972af-3f49-4c85-b5fc-cfafe69fdba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce3b577-7fc6-481a-b880-06170dc41485",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127aec5e-1bed-4971-8b87-30b6512bfdf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b1b691-6400-4399-b546-f6d39db2b6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f84be36-1422-493a-8e53-96655004af07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2765a26e-838e-4413-9769-ce9537b17ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0893632b-da51-43b6-b1d1-313e2549b573",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d777efe-41af-46f2-ae59-041306cf68c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4109e3-2335-4d84-8ab6-22fd73c01429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e12389-44fa-4233-a8c1-dcbb0edefcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59734eb-262e-4b78-a952-058dea600df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8983ce-61b9-40a0-b243-84b5e320acc0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63f7f2e-e8c2-4bad-a907-9f7482fc96e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc944fe7-f8a7-4227-bb11-41b75a8d3585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a300e45c-4b20-4130-986a-2314b31a7198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c62e303-2ea0-4c57-8fa5-551ff9a4b287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef0d84-eb98-451c-899a-6a29ede0d2e8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697ac59e-73ce-47aa-a18e-e6bd8ce06f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cf806f-2abb-4b7c-9e5d-98d835132044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e445d74-85cd-44a3-bfa8-827fdfcf101d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fd282e-e562-4cfd-b092-ad84b4934c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24ac0ab-7218-4ea4-a7d0-5cd772c7c2d4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9de7d0-aafe-415a-a75d-b9b98570d088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84022169-7692-4c41-99af-5c528c36c7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da011413-bfc9-4232-8ac8-291ebbf17010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28162951-c59e-4e6e-9d83-4fddd8481d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1940ab9-c5c9-4fff-b219-72bf8d1194f4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cd270d-7bc5-4749-96ec-dac8c9ec71bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35aca16-7749-4888-b596-2f4265b5809d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82eecb-cfb8-4c79-84f9-50f2ed93c94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8093d980-fc80-4768-9a3b-99ae2ee222f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5954a0-c40b-43d0-89c5-afa56fb6df49",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d88fb96-3324-4f67-bb33-27f11de4c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e2ada9-0146-4e1e-8f97-d89dcd3dce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e09ef78-301f-4b4c-a712-8799f0dc2d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcce4f8-651f-4d57-9424-91f8bb321ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b607be-5bcb-402a-b50f-3cc490ab5730",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17965a4-a61b-46cb-a20e-338f162620f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9d7ad8-3edf-4e9f-94be-230958d8b2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce069932-67cd-4750-8533-d4eaa766f39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d7444b-c64e-42f5-b303-c08bcce0f37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79cf320-0379-49ba-a783-785b077c4674",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cc005c-5b60-411e-8f25-d762cd2fadb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ad830a-9a7c-478a-a23c-325c80ddcaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5166eef-154c-4966-8944-2bb80e8218ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104018a0-c52d-4c89-949e-0c2fd2e99828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693644b0-4faf-4e38-9f6f-039f936e7290",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed51b1f-cf1e-4b57-bb3a-427560820407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a277343-e18f-4a8a-9e98-8395b54991ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1bb487-bcda-4af7-8e88-84f5a28ebc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eaec723-f4e8-4c7b-b8c8-a566b248a7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ecca9c-b032-43c2-9177-70a76f8a0345",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38936300-cd7d-4732-aea2-25d06269fe81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62365a42-bed9-40da-a87c-f5845c92b086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b3e51-2c5b-4b30-bbdb-abb6e6de727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34fae5b-0d73-4911-8161-ba80ec96a241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8920da93-c9a0-4be9-a139-8b118394b299",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47569f0-112a-4b41-8291-e60f2434fecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6e4a26-1ecf-4e69-b06a-4c103bae4251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2471551-95b8-4607-b011-6e0753c3e50b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb284c5-3516-4552-bbc9-d261f751814d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ebf531-b717-46d1-b542-409a9cf2d9f0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4356357d-7a90-4964-88d4-fc9172433415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4636357e-f217-4ad4-b29a-882f0100febf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa4d44-1217-49a3-a808-3ad0c008c909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269fbcc0-23ae-4466-88cf-0fdb50093093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f8442a-898c-466b-bc6d-561fba539304",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d9f873-ef0e-49c5-8483-88b8321f3e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71310183-1a1a-4297-9151-997cd8ca6a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a94152-8210-4baa-9e01-27fc05e1d01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e98b08-2d4b-46a9-b7a2-885f488f4f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4711d290-6c60-4b4d-b9ae-7b8114ae1a60",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca741f7-69c5-46a7-93cd-121d623eb5bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb58ac59-c7a7-486a-9028-7085a300f744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6518e98-9f9b-489b-8bdc-d311aca64345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d15c6f-2859-4bd7-948f-2f04a0fec19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab27cc8-fe5a-4962-9e0f-940e4a984d7e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa26eb04-1ccc-4471-8cc6-4c69207e0d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1516db28-a7a7-440c-bf5c-3ae46a5a75ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde6fb7-d969-45cd-889a-e83b5fb05d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787c2efe-ecb6-45b9-bc7b-6e6cbbeff8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcd14f3-96cb-40d1-9e63-641f731d9926",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73711f-a3bd-4ed7-a53c-f67c4d98bce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5487a6c7-fd1b-41a7-b382-7d5246c9d3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2693c163-91a2-4f42-a9e1-18a82f3b11ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495fb0ed-55d1-4fea-8778-78ab9e48b4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48520b2-5be6-451a-a8f1-f91bc67590a3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fc6f2d-5ce1-4a37-8e14-ea4e227161b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece1c815-1f86-4bc3-9080-914f1df8724b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c136372-9f1e-49e1-b256-873287def5e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4690dac6-c26d-4acc-bee9-9ff699680c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35883122-b6c3-46be-a1f4-0750f19bc421",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa98e39-7eed-4001-8707-4920a8489e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc838ae-4aaa-4d7d-a1ba-f21b39761261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5791ed7d-7b3f-4fe3-b030-b26546a1ddd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6273683b-1ef3-4588-9fb7-b3156f98d9de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "522e3722-970a-4692-bfc4-6d4b858afd81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fbd51d9-4b88-4295-a556-973d8b4cc349"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35061575-e66f-4ae0-8ee2-b76f6f7942c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cc04163-66d0-416c-9916-84531518e3b7"
                    }
                  }
                ]
              },
              {
                "id": "87a25c9f-df7d-4461-bc06-a02fb41f85b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27660c4b-4057-44ee-bddf-339942edf6d1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138ac2e9-9097-4374-b7f7-716e92c3a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "febf2100-84a1-410a-90a5-821a835556c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871f779-d028-490c-a63e-e1e74e138dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e8165cc-bc92-480d-a7d2-36f18b23dc21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7588c87-96c5-4a3f-9080-1913447c8e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0f12053-b182-4c6c-a57d-6bfb654746f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10c77c81-90b7-4a81-9c78-bff326624b66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db188345-c8ad-4c97-ad02-03157fe61fa5"
                    }
                  }
                ]
              },
              {
                "id": "faeddbb6-c28b-4f6c-b341-6432a1b4efcb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "56f0ab6d-9445-4d97-a5bb-0d1c5ae347a7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf53289-0cdb-41ef-9a25-c3c069254d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fa7dc90f-f760-4893-910d-122afe5e5ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177a064-a767-4a8c-bafc-42a13bb70c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69dde1a-d9ed-435c-9054-1328579ec9b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fed0a90a-5f3f-4f94-b799-97fa217f217f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37a1a599-3657-438f-951e-8c080dcac27e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de62c79-1622-4662-895a-83d5da8280dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b72757e-356a-4e5f-aab5-fedd454bef40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d62446-d916-435c-8709-7f8c920cb9c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641cd93a-522b-4a33-a9fc-140687d90009"
                    }
                  }
                ]
              },
              {
                "id": "7f7f831b-d6b6-44d0-bb17-c75c6e7f868a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d04a668-db03-4c1c-aeb6-74681acff1b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "babd8f2f-0866-4469-b8d8-3103ea0ecfd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa71555e-27e3-40ee-a360-a6e1d48625a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9393428c-d809-4007-9713-5602ba469aed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda83719-fc38-4729-b647-95ebd1348ce0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "28836884-ab1e-4e93-a13e-1e47a4e417c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5564535f-5f03-4c43-b761-0fa837e85702",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d508403d-7e85-459b-af59-51d166e7540f"
            }
          }
        ]
      },
      {
        "id": "ad9296a4-1d97-4fc2-ab61-66e9603181d6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ddb7b24f-073c-4f8e-ab06-7a83ef307562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7d3cd44-d5b6-4576-a036-213e0ed8641d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67c27730-5b8c-4c1a-9dcb-3ae4950b633b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a41a5c-30de-48ba-9ea4-bcf07be52413",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "84f24187-6d8c-4e66-84ae-c6606a7ce066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6873be8-4d94-4937-9b37-969ce38076c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4191be0-3de9-47e3-ad8f-b9f41c581664"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d997dc87-e16d-46fc-ab2b-dfa4045fe69b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb5e16a-e250-4f19-9404-7b07719c42c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc6efe00-fef0-4eea-be53-f29d7f6ac5eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f393ac1-fc4d-44ca-ad2b-3d12bc43398d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df26b3be-935c-42cc-9b29-009535e80bea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f4a60e92-73e4-4b16-8947-cf0fcefd4be6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dffa02df-143a-4541-9333-3b258e7c152c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1ba32cd-49d8-4c76-9e0a-474ea79246be"
            }
          }
        ]
      },
      {
        "id": "813c9e58-ba85-4c48-80a7-7a73a09b51bd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c4b9e75-ef41-425e-bc37-fa5275eb2b1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9165e70c-f132-4b67-ac6b-77adc09e73e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d999e73-31a7-448e-899f-e1929146563d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95867f08-c32f-4e9d-a8bb-2122f05635d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c838632-8158-4f6a-bb34-f1933ca1bd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561113dd-ff0b-40da-96c5-90129b47d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15590c37-4fff-47cf-a886-7d7bacb8b230"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fee9d33-5f67-440c-9a26-b6526e876abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33323eb-81d6-4723-995d-4204a1f4c67c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc26acfd-9d14-4323-acba-e3f7e0700179",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97ef5918-1ce7-4162-9800-e0c04b6f5ebc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80e3abaa-f288-481e-873c-be0d1e826726",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acc5f1f1-4a51-4d8b-86ff-345f6c9d41e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5e49ce8-2a8a-47bb-999f-348c00d7f0d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7bb4912-a9e4-458f-899d-06a656a17836"
            }
          }
        ]
      },
      {
        "id": "a807d0fe-a549-4a29-850d-0c46c504f4fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "793d6865-0ded-4e00-b86c-945fefca971e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec05e556-20e0-428d-bb37-dec7b2aa75c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80dafb29-0d59-444a-a378-7c5a9cfc5bf8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab67bd6-4e68-440f-a0b6-d4014f67832f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a09d7e48-e3f7-4c33-bc1d-28441f9bd5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e67903-820b-4805-bf73-0fb219fad81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5394691b-97ad-4b35-9e69-56cb52bb0aee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b4b0be-de0e-40fd-abd1-30dad749d985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed314135-9037-43ed-999f-66f7f25d807c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9c2d671-6d38-4890-a602-cce3c5e36ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d93065a-d54a-450d-89e3-74262df7a61b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "466eb552-4c52-4c39-b466-c65b2f856791",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2014fd7-dd8a-4709-875a-c059fb775019"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "111c5636-f755-42cc-a6e9-f9fb3ac5c5f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf6c4623-4e20-48b8-8cb9-0280fdaac336"
            }
          }
        ]
      },
      {
        "id": "f351fd45-8eea-4e3a-a180-805f01037c1f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a35d78a-2de6-4e2d-89a6-72633fdfd2ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e8519c0-75d8-46b1-bea6-905f26e3428d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa6113d9-baa0-4ec8-8d0c-55217eeda029",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaf8d2f8-ae86-4ca5-95f8-5e5da7ec6fab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3786e695-91f9-431c-8965-2c5b505b91ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 301.6161971830986,
      "responseMin": 7,
      "responseMax": 30700,
      "responseSd": 2354.103215189559,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691713870861,
      "completed": 1691713968073
    },
    "executions": [
      {
        "id": "c5298ee1-b6dd-4ee9-951f-e906f025364e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a69bdbe-0e19-4ba0-a28a-4b4d0852653d",
          "httpRequestId": "8360bf4a-a94a-405d-9423-2966ae9f0745"
        },
        "item": {
          "id": "c5298ee1-b6dd-4ee9-951f-e906f025364e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6b09c41e-ca72-417d-9db3-2ccf9df9801f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "79fca6c9-26e9-486b-910b-168dab3e2622",
        "cursor": {
          "ref": "6ff6a2e7-62b6-42ed-8b3e-b0a17b206edc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "105cddd4-a9b9-4f56-b015-90236cd02c46"
        },
        "item": {
          "id": "79fca6c9-26e9-486b-910b-168dab3e2622",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2346b9f3-56b3-4919-99c4-f3c69313f1aa",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "927029b0-e394-4ce6-9829-e35ffb8f162b",
        "cursor": {
          "ref": "6daef1ae-e45f-460f-a9af-a72e9f5e90d0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ef9ede7e-7df6-4dca-a962-f75e79885bb2"
        },
        "item": {
          "id": "927029b0-e394-4ce6-9829-e35ffb8f162b",
          "name": "did_json"
        },
        "response": {
          "id": "2d9f185f-e79d-49ae-a9a1-d0aaab160767",
          "status": "OK",
          "code": 200,
          "responseTime": 910,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311c47c-a7c9-4b0f-b04c-8b2d3d6adb99",
        "cursor": {
          "ref": "1b35f163-8c42-4b90-88aa-96e983fcdb7b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d46095c9-dc75-4b73-a079-34b22e89d710"
        },
        "item": {
          "id": "2311c47c-a7c9-4b0f-b04c-8b2d3d6adb99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0a823c7-cba7-429d-8ea7-0ca582e75174",
          "status": "Not Found",
          "code": 404,
          "responseTime": 989,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311c47c-a7c9-4b0f-b04c-8b2d3d6adb99",
        "cursor": {
          "ref": "1b35f163-8c42-4b90-88aa-96e983fcdb7b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d46095c9-dc75-4b73-a079-34b22e89d710"
        },
        "item": {
          "id": "2311c47c-a7c9-4b0f-b04c-8b2d3d6adb99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0a823c7-cba7-429d-8ea7-0ca582e75174",
          "status": "Not Found",
          "code": 404,
          "responseTime": 989,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b7fc1d-6147-49fe-a1fe-8cb07fbfe1ee",
        "cursor": {
          "ref": "c1265ace-de89-4b48-908d-589d77d81cd9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b131d761-1cb2-4779-96c0-4277c3ed380e"
        },
        "item": {
          "id": "28b7fc1d-6147-49fe-a1fe-8cb07fbfe1ee",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5cbf551a-86f6-45f6-92c1-edb1633598e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 111,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a372b8-7f84-4d08-9c53-f5df8ea26a31",
        "cursor": {
          "ref": "748b7d15-b33d-4322-9fd9-26e0b51b6250",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d4218011-bb02-451b-8828-91b5aee5a1a7"
        },
        "item": {
          "id": "55a372b8-7f84-4d08-9c53-f5df8ea26a31",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8d996b93-355e-43cf-9ddc-f320b2ba3338",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3824672-590e-4427-988f-f8834b6ba887",
        "cursor": {
          "ref": "bfc1e8ce-550b-46d9-82f8-d8b96b9023af",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "39295fab-ef58-46ed-b5be-7fe2e7231f97"
        },
        "item": {
          "id": "a3824672-590e-4427-988f-f8834b6ba887",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b9f1147-b69b-4699-980a-61ced673800a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634b1877-e496-4ab9-ab66-fd40b8708e08",
        "cursor": {
          "ref": "a067f542-7420-48c6-8659-64df88f9e0e2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01f53563-275d-4ef7-bf46-9b4189a74beb"
        },
        "item": {
          "id": "634b1877-e496-4ab9-ab66-fd40b8708e08",
          "name": "identifiers"
        },
        "response": {
          "id": "10ec1696-a9e0-4d47-9165-8cb63520a4d3",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad950bb-c922-400b-b60b-776d3d1a3b7f",
        "cursor": {
          "ref": "d86adc46-aa09-4efc-ae07-ee61fab7bb2a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0287c008-1b7c-480b-ad03-7ee25cd1ebe4"
        },
        "item": {
          "id": "7ad950bb-c922-400b-b60b-776d3d1a3b7f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ce935771-e2ef-40fd-b2f8-3681c87dd405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a12a1df-fcc5-402d-a8af-842707e309a5",
        "cursor": {
          "ref": "6f4deabf-3c97-4350-b78d-5e10b4f4b239",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c1a3fbc-5b0e-4fa3-98a6-7b6f55428b31"
        },
        "item": {
          "id": "6a12a1df-fcc5-402d-a8af-842707e309a5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e6bb24cb-1be0-406e-aa52-2e6fa87b7010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc8ee93-23bf-4354-b7de-d54c6b0c86ee",
        "cursor": {
          "ref": "7a260d81-35c3-4ef3-979b-972b57b594e1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8add6426-b06f-4e79-9143-d3a3b0305349"
        },
        "item": {
          "id": "cdc8ee93-23bf-4354-b7de-d54c6b0c86ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1afaf75c-6df7-4a61-b9b5-52a11a5ba92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ad282-e0da-4142-925d-813c6c5d73c3",
        "cursor": {
          "ref": "20cf205c-cd76-48ec-83ac-99802f638260",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d19a481-28cf-4433-a4cd-e01ba2adab74"
        },
        "item": {
          "id": "a96ad282-e0da-4142-925d-813c6c5d73c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7c69364-00f2-4607-a4c2-7339ed66902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a07688-cf11-4129-affd-7d6174bcdaea",
        "cursor": {
          "ref": "1cb47bc9-ee3d-40a4-91db-10084a98f9aa",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "706c8c22-7693-4bcb-a8a8-17248196a693"
        },
        "item": {
          "id": "67a07688-cf11-4129-affd-7d6174bcdaea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "205e7806-5184-4157-82dc-6aa1102cf905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373c7e9-147b-4ae2-b77a-ff185da9718f",
        "cursor": {
          "ref": "974e325e-6a76-40ca-b3e6-e48f5dc43bd2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8734024c-4307-48ef-b959-63f0dd449d5e"
        },
        "item": {
          "id": "2373c7e9-147b-4ae2-b77a-ff185da9718f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eaef0866-3f36-43fa-866e-f364ba5d3d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eae60b-e454-4641-b8a0-82f9bb11a107",
        "cursor": {
          "ref": "a29a0c88-57a6-41a1-84c3-760c1b610b04",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0dda4867-3df6-430c-9089-6e691d272b89"
        },
        "item": {
          "id": "26eae60b-e454-4641-b8a0-82f9bb11a107",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0bf0eebf-8993-46aa-91b5-87ac353017f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7399f2-0307-4c00-8731-8c354dfc8aa0",
        "cursor": {
          "ref": "36a59417-068f-4512-a78e-6ec16c0b3347",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "97ddcc93-7679-42bd-98dc-cdccaa0bb2e4"
        },
        "item": {
          "id": "fc7399f2-0307-4c00-8731-8c354dfc8aa0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "20b7a7e3-88b3-46ad-adc9-fd7ab94a5c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa16c3f-9844-4d62-9b62-5fe6964e55c9",
        "cursor": {
          "ref": "44fe28b5-9c06-49dc-805e-9dad12c9351c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c2edf00e-405d-4ff8-a575-09baea0c050f"
        },
        "item": {
          "id": "6aa16c3f-9844-4d62-9b62-5fe6964e55c9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "087d459d-39f7-4803-8804-f6b13c440c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b70e35-52b8-414d-a684-b2a56b637fd3",
        "cursor": {
          "ref": "43435d4a-8908-4852-b599-539e2fc67077",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "58c260e7-ceda-4f2f-a8f8-a80e2dbe5862"
        },
        "item": {
          "id": "25b70e35-52b8-414d-a684-b2a56b637fd3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6d9f41f3-23ec-41a4-bb34-b60b1f679f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e265d095-5fc7-461d-ad6a-15aa20d58edd",
        "cursor": {
          "ref": "841241e4-a48e-4d42-96d8-dfa28c333c22",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7cc9b2a-8f7d-43b0-9146-2999e7e4770e"
        },
        "item": {
          "id": "e265d095-5fc7-461d-ad6a-15aa20d58edd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0fe2722c-1dcd-4d90-97f4-87f7b7280807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04787f86-b30d-475c-ad02-bf5dea825521",
        "cursor": {
          "ref": "f54288b2-14c5-46ff-addb-07042b3bb53e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2d5c3cf4-1a34-43b1-a40f-2704d1b9a8c4"
        },
        "item": {
          "id": "04787f86-b30d-475c-ad02-bf5dea825521",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9240253b-f4a6-47f9-9c77-d8af60610801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fe4091-357a-4f8f-a7c9-c8267019c9ce",
        "cursor": {
          "ref": "3c5933fe-932c-48bf-8b66-9f7f486b047e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a87d17ad-81c4-4a78-bf54-d84bcf9120e2"
        },
        "item": {
          "id": "f6fe4091-357a-4f8f-a7c9-c8267019c9ce",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b209a8d7-3300-48fb-b348-ed2c925f822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1663a6c-4c3e-4843-bd27-ef4f9f5b97d3",
        "cursor": {
          "ref": "9b0d9ed2-f26d-48a6-89c1-9641f602dddb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2d34d33-a8b9-434a-8ef7-a0a34d84187f"
        },
        "item": {
          "id": "d1663a6c-4c3e-4843-bd27-ef4f9f5b97d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eb722b50-a436-431c-a3c2-f60a92fb4e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af3259-3852-4e02-b435-8ce788398c14",
        "cursor": {
          "ref": "525e0385-f0b0-4d5f-aec8-c41dfaf36b40",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3b0444d4-ac10-4988-86f4-d9abd41fe702"
        },
        "item": {
          "id": "d7af3259-3852-4e02-b435-8ce788398c14",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e043c26d-73af-43ce-89f3-856132530772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ee9051-7b2b-4f97-baad-00cc97d3caf6",
        "cursor": {
          "ref": "6b2d0e43-444c-4339-801d-0ce15c243480",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1f2d32e4-32a6-4120-9d10-e266b5b478f5"
        },
        "item": {
          "id": "b6ee9051-7b2b-4f97-baad-00cc97d3caf6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cdc81c37-66b9-4a17-be02-7fd8a527dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2c62e-e0e4-4d60-9ce3-b40e73ab14f8",
        "cursor": {
          "ref": "cbcd5095-7647-4379-92e8-316e5156ca01",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad7d8684-4bc7-46a3-b5e8-ba121f4697b4"
        },
        "item": {
          "id": "3fd2c62e-e0e4-4d60-9ce3-b40e73ab14f8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dbfc81c4-1274-4af8-a773-38d68c0ab94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c2b09-a9ea-45ec-9907-83b990ee8f03",
        "cursor": {
          "ref": "50e970aa-4d54-45d5-ba2d-f9efc7dc1259",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e8fd9493-a0cf-4630-8bd0-d7245dbd4a8f"
        },
        "item": {
          "id": "0a3c2b09-a9ea-45ec-9907-83b990ee8f03",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "62827f74-309e-48fb-a8ac-536dcb838adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4ffc47-f0c8-49d8-93a5-a7fb9e40c4ed",
        "cursor": {
          "ref": "7f5d8806-d3f1-467c-b5bf-20a29a8f5efd",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1aa9cb1-0fab-44ea-9a72-a2e69f3c3aee"
        },
        "item": {
          "id": "6f4ffc47-f0c8-49d8-93a5-a7fb9e40c4ed",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f6090e54-9492-4883-b40e-22b8a238454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ac88f-a79a-43d3-b973-104a399d9243",
        "cursor": {
          "ref": "3ac52445-83b6-430a-bcb7-1cabb44dbba2",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f5162d1a-9c55-4e74-939c-1f56385f4daa"
        },
        "item": {
          "id": "449ac88f-a79a-43d3-b973-104a399d9243",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9ee6a74e-663d-4bf0-bc84-a600c96cf5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4e6926-a34a-4ee6-b392-91b6838a4b95",
        "cursor": {
          "ref": "add743fa-7eac-45e5-bdee-13abc2ea9435",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "06566ba7-87f1-4deb-b27b-89585d867f0f"
        },
        "item": {
          "id": "7c4e6926-a34a-4ee6-b392-91b6838a4b95",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73c6950c-c2dc-45b3-973f-a5a503368565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34964e4f-91c2-4b53-ba42-a0a8d9a227f3",
        "cursor": {
          "ref": "be0d98f5-bb56-4289-ba1e-739e1294cd43",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3b06e8d4-18a2-4896-b41b-22d05d7005e0"
        },
        "item": {
          "id": "34964e4f-91c2-4b53-ba42-a0a8d9a227f3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b0ba5cbe-6991-4587-8a76-eedc8fa4a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f93768-f6e3-4eb0-8c64-869a12f3add6",
        "cursor": {
          "ref": "d3c08f44-6bf3-41d6-8b79-e87ff9d3363e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bf998b31-4cbe-487b-937c-51c96bafdd57"
        },
        "item": {
          "id": "52f93768-f6e3-4eb0-8c64-869a12f3add6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9ee01597-3bc0-4256-8f71-b7cc5189e1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c8c753-243c-498e-8662-a2623f5f3576",
        "cursor": {
          "ref": "08b80d43-5375-40eb-8598-ecfd1a320062",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e92c643c-3279-4092-aa87-0e947bfbaee1"
        },
        "item": {
          "id": "91c8c753-243c-498e-8662-a2623f5f3576",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "62307fa0-d288-4144-b64c-24ad1195442b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4699dc89-bc59-46e5-8392-87a93cc702fa",
        "cursor": {
          "ref": "7dd8c754-ac04-44db-bac7-a92246700953",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "711fb174-dd58-4fd1-9425-468eeed058b9"
        },
        "item": {
          "id": "4699dc89-bc59-46e5-8392-87a93cc702fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "93a245d9-531a-4e1f-a331-1b3664c3515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b73970-de2f-463b-a254-94635e173687",
        "cursor": {
          "ref": "864c536a-953f-4073-ba63-0b5d5d11b1db",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "28833237-ec5f-4536-9ea2-0766d4087fbb"
        },
        "item": {
          "id": "f2b73970-de2f-463b-a254-94635e173687",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd697709-704c-4fb0-a19f-77d87440ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82fa680-7be8-420e-b151-bd25089e1374",
        "cursor": {
          "ref": "53011222-daa6-4b00-859a-45a535acdebe",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce37d24c-d4cd-4d01-a0ad-36d408b28261"
        },
        "item": {
          "id": "a82fa680-7be8-420e-b151-bd25089e1374",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "26d4125c-373e-45b0-ae57-34b727540d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a9682-eee9-49eb-bf07-56662c4c96a2",
        "cursor": {
          "ref": "65aea5aa-7fef-4e4e-a0f4-3beb99f5d75c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b580bb5c-3e01-4e26-8981-bb5ca9cde2b9"
        },
        "item": {
          "id": "807a9682-eee9-49eb-bf07-56662c4c96a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "909a1563-5703-423b-b486-f6234aa3a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0672467-fd73-4ad7-8eb8-1a1c9b1c1369",
        "cursor": {
          "ref": "bc233fe3-4afc-420f-b4fe-9de18a35e901",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11ffd9b2-553a-49be-89f0-63d414a64843"
        },
        "item": {
          "id": "e0672467-fd73-4ad7-8eb8-1a1c9b1c1369",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "058ff9cc-96bb-476a-94cb-385136398c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a1b5c1-52e1-4d09-b1d0-2029baa68446",
        "cursor": {
          "ref": "23ee633e-790f-41f7-aabf-89aba7e98e77",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "93259e6f-5ec1-4895-a755-1c25a94a7cc3"
        },
        "item": {
          "id": "87a1b5c1-52e1-4d09-b1d0-2029baa68446",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3a4b1778-6d40-41e9-968d-4beda17dc532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fba9a8c-9fce-4dd7-92db-9f9e91e8bff8",
        "cursor": {
          "ref": "77787a23-10b6-4e56-839e-54366ca80bd3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d702bccf-3347-4eeb-abb3-b5ae5146395f"
        },
        "item": {
          "id": "7fba9a8c-9fce-4dd7-92db-9f9e91e8bff8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6270e9b0-9d96-4705-9230-83b08e913248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f367ec-64a0-4dec-aaa4-5ebea4e806af",
        "cursor": {
          "ref": "64349403-8d35-43be-bca0-39145979ccbc",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5a4a1ac0-1b5b-47ce-81ea-bd47dc047812"
        },
        "item": {
          "id": "46f367ec-64a0-4dec-aaa4-5ebea4e806af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e920020-4f70-4f99-8a07-d8993eed910c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2261456b-d8d9-4a27-a2bf-3514636eaa18",
        "cursor": {
          "ref": "7e99beb7-184f-4678-b393-ec10d61ea807",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "effd5973-b0d0-4b3f-bf42-f264593dd142"
        },
        "item": {
          "id": "2261456b-d8d9-4a27-a2bf-3514636eaa18",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "acff363a-9ab4-412e-ba25-46e8c4774021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e7b3a8-0dd4-4b9a-8da9-24e48686061d",
        "cursor": {
          "ref": "93bdfbde-91f1-47db-8f19-60629f520b64",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e9ba0f8e-183a-4270-883a-797cf8ef662f"
        },
        "item": {
          "id": "20e7b3a8-0dd4-4b9a-8da9-24e48686061d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2df863fc-a774-47bd-8faa-d63e8e4ba624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e5f193-fba3-401e-8913-813272103d2d",
        "cursor": {
          "ref": "6a84b9e4-5768-4209-851e-3d113b5b93f0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "18023cc9-3ead-41c4-bbc7-953e6d2214b0"
        },
        "item": {
          "id": "79e5f193-fba3-401e-8913-813272103d2d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af6dc70a-e0cb-4efe-85d7-b6abb482f058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12bbf40-5c40-4a6a-917f-885a0e71a15d",
        "cursor": {
          "ref": "9904ea5a-60df-4820-8722-f997f818eed5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "874f5a99-3fbf-4b82-be01-f0413bc123b5"
        },
        "item": {
          "id": "a12bbf40-5c40-4a6a-917f-885a0e71a15d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e4f09945-b5d9-4086-86f7-90a1774b589a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a98e4b1-8185-489b-9a1b-793c87102338",
        "cursor": {
          "ref": "80590655-6312-49e7-a655-e563bd249c4c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "544bd7d7-9955-4abb-bdd2-9aa8fbde5dce"
        },
        "item": {
          "id": "8a98e4b1-8185-489b-9a1b-793c87102338",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61fe2e12-f1c8-4b5d-ac87-7179d7380b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d54663-57bc-458c-a960-0210a6550469",
        "cursor": {
          "ref": "459e6865-f728-4d6c-bbc5-db9f7d7429b3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7c1e3af2-1b9d-47d5-8c76-70f04c2fa2ce"
        },
        "item": {
          "id": "d1d54663-57bc-458c-a960-0210a6550469",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2fb222dc-69de-4a1e-a56c-963e995a663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065fe74e-d6bb-4c52-920a-e67d510c923d",
        "cursor": {
          "ref": "85845ad8-c6b0-419a-b4b0-69c476a96e6c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "03908804-b639-468d-9ba5-42468418deaa"
        },
        "item": {
          "id": "065fe74e-d6bb-4c52-920a-e67d510c923d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "724cb47b-f29d-4cb7-9d5e-c1098382190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31900a8-9656-449e-a911-ba7439aaeb80",
        "cursor": {
          "ref": "d6c6c28a-21fc-42ea-b5c3-19f1c3b7681d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1cc6f2e4-cdb6-4ee1-b224-20b7b60b38ee"
        },
        "item": {
          "id": "e31900a8-9656-449e-a911-ba7439aaeb80",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f52331b7-203e-4a83-a21b-71b522f5e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc371e3-c151-4d24-a965-4f839f092c1a",
        "cursor": {
          "ref": "95dd062f-6d53-4a13-88ea-178aad66c9df",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6d633df4-4b90-4466-99ee-6c654ce3f5e2"
        },
        "item": {
          "id": "4dc371e3-c151-4d24-a965-4f839f092c1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ce58e2f3-4426-483f-a7ed-9043f7af7d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a280e-99ef-4080-a64c-5d6780f31d25",
        "cursor": {
          "ref": "d7945eca-671e-4a66-a3e6-871106a2ac91",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "173d63e5-5ace-4a0b-a7fd-dc5470cfd7b2"
        },
        "item": {
          "id": "298a280e-99ef-4080-a64c-5d6780f31d25",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "40f7b913-8b9b-4a8f-8415-74fcb8809ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd704f09-580e-4134-a8ff-99db9e44c2ef",
        "cursor": {
          "ref": "4af510d7-8893-4e0a-9ee2-5754f0979029",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "619a089f-4e23-4c1d-9458-a2231132b0d8"
        },
        "item": {
          "id": "bd704f09-580e-4134-a8ff-99db9e44c2ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ed034ca0-3b13-4460-9c26-5c3e76e141cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9e5e99-ef68-4b7d-8a3e-f40fa53b9bfd",
        "cursor": {
          "ref": "a2c4161d-0c0f-4191-be05-a253da3525df",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff67de53-1bf4-4414-85c4-e892b8fbe0ab"
        },
        "item": {
          "id": "8e9e5e99-ef68-4b7d-8a3e-f40fa53b9bfd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "68bfefd1-052e-405d-95b5-57079e39432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cfd4fb-dc62-4818-9704-09cd34a9c154",
        "cursor": {
          "ref": "b6eddd32-0a9d-47b4-92f2-5bb7c8a3e8cb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "270cb901-4e8a-4e19-9be8-02177714796a"
        },
        "item": {
          "id": "08cfd4fb-dc62-4818-9704-09cd34a9c154",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fd3a08e6-7dce-4e3a-bb14-422538c77e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a3a3dd-48ac-4a77-8028-343de24c3736",
        "cursor": {
          "ref": "57dbcbfb-c11e-4a68-8d3e-c71f4ac70fbb",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de1cfb0d-4cb9-4b2a-90d4-12aa4a6f7591"
        },
        "item": {
          "id": "08a3a3dd-48ac-4a77-8028-343de24c3736",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6ecae7f3-ddc9-43ad-b716-798657a2995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe05ab-054f-4636-af2d-ed6532116bf7",
        "cursor": {
          "ref": "335d62c3-bdb4-413b-af15-f5a99ab16316",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3c39aaba-e254-4272-9362-8940f8131187"
        },
        "item": {
          "id": "febe05ab-054f-4636-af2d-ed6532116bf7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e272d786-80f4-4253-9d34-b47fee1a25ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7af9801-decd-4ff6-bea9-cab96a07a759",
        "cursor": {
          "ref": "387e10d8-30bf-4e5d-9fc9-e6df45d90485",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d022f3a2-5d14-42d5-879d-b38c078d7edd"
        },
        "item": {
          "id": "e7af9801-decd-4ff6-bea9-cab96a07a759",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "012c4ba5-1f7d-4961-8369-ef4956fbb510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42d8e2-7496-4016-9250-4825e4497b35",
        "cursor": {
          "ref": "992cad12-f9ca-440e-97fb-691d6e38b7c4",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8dce1f24-6993-453e-95c5-474a3d2dcff0"
        },
        "item": {
          "id": "3b42d8e2-7496-4016-9250-4825e4497b35",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f02a28d0-b9dc-408f-a5cf-b2a5c068ee38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a17c347-39b9-4f3c-a359-5a3bb491b29e",
        "cursor": {
          "ref": "cd1ae4c1-78ae-47aa-8680-8092969027ca",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a728974d-acec-4cc9-966a-ad8c967ea8d0"
        },
        "item": {
          "id": "6a17c347-39b9-4f3c-a359-5a3bb491b29e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "16a61709-c6c4-403f-9b82-e5504c0b8dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903ca2df-d0fc-4324-98be-a73e0b931295",
        "cursor": {
          "ref": "57242e98-ccdd-4140-baf9-5553088736d7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c9f0bf9-c05d-4764-bb91-e343c6198698"
        },
        "item": {
          "id": "903ca2df-d0fc-4324-98be-a73e0b931295",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e10ef892-adbc-4178-992e-23582eb8fe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c21744c-6a4a-4579-b2bc-f7e427910a16",
        "cursor": {
          "ref": "0d8f98e1-a2be-4d68-bd2a-da6aac762234",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27d35ca8-1934-49e9-b3f0-0a17ab72014a"
        },
        "item": {
          "id": "5c21744c-6a4a-4579-b2bc-f7e427910a16",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "acf37e0a-175b-466f-a43b-e8e1f990ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a45037-aab0-44ef-b40b-5c90d7b8d0b8",
        "cursor": {
          "ref": "669064b4-b263-4188-8391-ddfd4f987930",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f55326c-58fb-4fdb-af72-27b68dafd486"
        },
        "item": {
          "id": "f6a45037-aab0-44ef-b40b-5c90d7b8d0b8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "db179466-f10d-4a0f-aa68-3ae6c885fd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26f91e-e586-4f62-ba91-8e95e58da237",
        "cursor": {
          "ref": "c3ecaa88-f10f-46b9-ad14-d4b2d8d71457",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "241480a3-9e37-4fa5-a3a1-2f4983182891"
        },
        "item": {
          "id": "8a26f91e-e586-4f62-ba91-8e95e58da237",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac064f2a-45bb-4ddc-b7c7-1a2b5099ccb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594b825-6930-4a5e-a522-463bc36f46e9",
        "cursor": {
          "ref": "1e738a8d-a9ed-4892-a41a-8c1277cb2895",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "da6deafb-1e11-44b3-a358-21fd5124a20a"
        },
        "item": {
          "id": "1594b825-6930-4a5e-a522-463bc36f46e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9ad6df0f-0822-41c7-a28b-dd4553cec3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a84022d-cd86-494c-b3f3-fcf373fd801f",
        "cursor": {
          "ref": "343b6ad8-c342-4fcc-ac13-17c74330fa53",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "62ffd10e-4378-4b4c-a92a-b50b6434f764"
        },
        "item": {
          "id": "1a84022d-cd86-494c-b3f3-fcf373fd801f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bc35af2a-65ef-4d52-bd7b-7928e1dc93b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a72026-e274-47ec-8772-54095c1832a9",
        "cursor": {
          "ref": "1960f9d6-aa1a-49c6-9db3-7b567ecd3dfc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aa6cf3dd-88a7-4b9a-8d8d-403e6a564d0c"
        },
        "item": {
          "id": "61a72026-e274-47ec-8772-54095c1832a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b69496a4-baad-481e-b01f-604a008bcaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a693112-9497-447b-969b-24ad4f31f9c8",
        "cursor": {
          "ref": "f50b7457-0d05-44e0-9ad3-021293c9fa0b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7612de78-4cdb-4693-ae4e-525613c4329c"
        },
        "item": {
          "id": "9a693112-9497-447b-969b-24ad4f31f9c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a918209-2886-4eab-bd2d-62f09deb876f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab30c7eb-1803-45a6-be92-b876e0a72cc8",
        "cursor": {
          "ref": "acb178d4-6e9c-4f4b-815f-e139983b82b8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ce379c74-41eb-483f-bef2-90f9993d72f3"
        },
        "item": {
          "id": "ab30c7eb-1803-45a6-be92-b876e0a72cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dd8c4567-0761-4f90-825f-6da085559d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94732628-756e-459e-bb6b-dce9a7387c45",
        "cursor": {
          "ref": "15cad62d-3212-44e0-b386-80ade329a1fb",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1f448b48-d94d-4374-a646-b5894f41b45c"
        },
        "item": {
          "id": "94732628-756e-459e-bb6b-dce9a7387c45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3a5ce6d3-319b-4860-9aaa-3494e09ae3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be0a2c5-8b1c-46d3-9287-ce91799acb76",
        "cursor": {
          "ref": "2e6d6781-582e-42ba-b3b1-bb498a49457b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b37de01-d7ae-402a-8581-244ef035bda5"
        },
        "item": {
          "id": "5be0a2c5-8b1c-46d3-9287-ce91799acb76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7bd5a472-d0cb-4dae-9cba-bd4fa14b0d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55718008-0ed5-48c3-80e6-2c36c241997a",
        "cursor": {
          "ref": "876dfdc7-9e13-4daa-a6c1-47bf52bcc917",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8451e36a-9c7c-4b9b-97ea-73b60309e2e3"
        },
        "item": {
          "id": "55718008-0ed5-48c3-80e6-2c36c241997a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "446bb613-c688-4805-8f39-0ddbdfdb1824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5baca5-e317-4a57-ade3-3569b30d060f",
        "cursor": {
          "ref": "1a3e5246-ea09-4f66-9dc6-ee137342fff9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f07e720-cc0b-4877-839e-4e132febb033"
        },
        "item": {
          "id": "7f5baca5-e317-4a57-ade3-3569b30d060f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9f2b8d26-1678-4a59-8fce-890793557820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb65f9-80e6-4778-9bdb-fa962335a748",
        "cursor": {
          "ref": "8d9f8676-1626-4fc3-8a37-c3a2d4afaa30",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8adeafc6-d080-4956-8c8a-5faff79b84c5"
        },
        "item": {
          "id": "51fb65f9-80e6-4778-9bdb-fa962335a748",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e971c0fe-1948-4b55-a4ec-0f19560aee52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226dc3a2-64a2-4afc-bd25-ee5947f26808",
        "cursor": {
          "ref": "c827f036-2711-457b-bb8f-6b323d3059bc",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "378340c3-803e-4ec4-8aaa-0a24ed3f5930"
        },
        "item": {
          "id": "226dc3a2-64a2-4afc-bd25-ee5947f26808",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "32854144-2093-4d70-be2d-722ca05b0aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812bae23-1c96-42c6-ac88-e13c8913a33a",
        "cursor": {
          "ref": "96164bf2-b340-443a-afa5-938a24283e80",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8b9bf7e3-aa61-4bc2-a36e-a2c331d1b292"
        },
        "item": {
          "id": "812bae23-1c96-42c6-ac88-e13c8913a33a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e586f3a7-b126-430c-8433-7c596fcb28c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2603c3ef-6caf-4165-8dac-e28287eb019a",
        "cursor": {
          "ref": "ef2633c5-ea49-4b97-aeda-fbae914aa147",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4592a66c-0f38-4c32-92b2-f96920945b8b"
        },
        "item": {
          "id": "2603c3ef-6caf-4165-8dac-e28287eb019a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1b1d779d-38c7-4a27-9f1e-73899a5f14b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce4d55-c02e-4ebe-a618-61a01ac5125e",
        "cursor": {
          "ref": "31a3de4a-8757-4695-bb52-a03f51412b8b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8d475d47-6153-4fa9-8cdc-f3bd9b7a90f3"
        },
        "item": {
          "id": "12ce4d55-c02e-4ebe-a618-61a01ac5125e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32419df9-271c-4e1f-8316-b6be8f6375fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84d59d-2a86-49d0-bcea-9574e2ed1eda",
        "cursor": {
          "ref": "904763ac-d89d-4340-b7d2-3c9ac831f036",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c76c4f99-3d5a-4f14-8bad-2857f5f80457"
        },
        "item": {
          "id": "3f84d59d-2a86-49d0-bcea-9574e2ed1eda",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9de12c3c-071d-422a-809a-781f83283976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e71f63-b805-4efc-bc12-616580e79851",
        "cursor": {
          "ref": "7a0d0946-b021-4883-baed-1b73957efcb2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea861ad9-7ecd-45e8-a68c-67bb886a3a9f"
        },
        "item": {
          "id": "b0e71f63-b805-4efc-bc12-616580e79851",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2e606b53-0e3b-42e4-9639-1236f877ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ef9314-5f14-4606-b1cc-61c1693bacf6",
        "cursor": {
          "ref": "b35fa8c7-7e67-40ee-8ae2-6fae13bc2943",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "678fc326-fd53-4a5a-9ac7-cc482bc7e0a2"
        },
        "item": {
          "id": "72ef9314-5f14-4606-b1cc-61c1693bacf6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4134c5b8-aedd-42d6-aff7-f99f91d78962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00401c4-4678-4cd6-bc14-25d3b3d66534",
        "cursor": {
          "ref": "59c17065-e65a-4ebf-beb1-ec59df47131a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2abb3868-4ffd-4908-86fe-253db24a0894"
        },
        "item": {
          "id": "d00401c4-4678-4cd6-bc14-25d3b3d66534",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "11b868ea-f5b5-48c6-b31a-65b1f2020abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dc3408-b7c8-45e9-a450-9d36aa152cee",
        "cursor": {
          "ref": "500da4ff-dacd-4397-ab06-d185d91a5c5e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "49638d66-accc-4a54-a518-6d5ee17ea403"
        },
        "item": {
          "id": "b1dc3408-b7c8-45e9-a450-9d36aa152cee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "55ef8cae-c50e-45d8-8270-a6a87583845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d40ca-5354-4687-a975-f7ef33ea5559",
        "cursor": {
          "ref": "6e9a9f4d-d3a0-4236-b404-2262f3090ba2",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "96d42090-5628-4475-af2e-071e15435703"
        },
        "item": {
          "id": "8a9d40ca-5354-4687-a975-f7ef33ea5559",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7a7b434e-b60f-4b1c-809d-fd47c791051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc7ec25-81ea-49b6-b95c-6f1d0efaef15",
        "cursor": {
          "ref": "3a0859f7-1ca1-4c6f-8219-4ca65f315cb0",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3ca299bc-090e-4329-b45e-e8b9922899cd"
        },
        "item": {
          "id": "fdc7ec25-81ea-49b6-b95c-6f1d0efaef15",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6811486c-136b-4831-b25e-b929ba592cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ad9bb5-b73d-415e-88de-cdd30572ad18",
        "cursor": {
          "ref": "2f8ede9e-4cda-4e1e-b99b-8d4c494ce864",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "80457ab3-ddb9-449d-90c3-0cbddb87f8de"
        },
        "item": {
          "id": "b4ad9bb5-b73d-415e-88de-cdd30572ad18",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fe8508c6-0c6c-4356-bcfc-575b032ccb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cddc2a-c5d6-4000-b413-8f6e7141195c",
        "cursor": {
          "ref": "6c61b5dc-de5a-44da-80f9-32fde8ab55c9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c5c86c62-5b9a-4a3c-a00d-30fa454624b8"
        },
        "item": {
          "id": "b4cddc2a-c5d6-4000-b413-8f6e7141195c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5934b22a-1678-4b96-9e61-aa35a48e50de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb398f8e-1e81-412f-8d1c-e291ef9c3f29",
        "cursor": {
          "ref": "c3b9b6fa-247c-4444-a342-6fb2a4e8f559",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a35bd9c-5c55-4451-896d-930ef3c54571"
        },
        "item": {
          "id": "eb398f8e-1e81-412f-8d1c-e291ef9c3f29",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de0138f0-1e5b-4c05-bdb7-6ae50208b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ed2e76-2ad4-46f8-9b5d-bf3b8608b893",
        "cursor": {
          "ref": "fbb6ed47-b457-4e49-9c2e-6fdde97718e9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "76689fee-b058-40a2-af7d-317a70205661"
        },
        "item": {
          "id": "38ed2e76-2ad4-46f8-9b5d-bf3b8608b893",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52eec453-fc89-45c4-b9ae-53fd781666d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479f211-84d2-4a95-9124-7d30f6a358a6",
        "cursor": {
          "ref": "82e8f5d9-8d3b-4388-a669-79aa6d4679b2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "71bf3cd1-cbd6-4321-8bc0-6b1c6a7db1a5"
        },
        "item": {
          "id": "f479f211-84d2-4a95-9124-7d30f6a358a6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03e27ae3-cc2b-4903-b9a8-d9614a4d8c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68881c99-b6db-43ab-abcc-f728be73b1e0",
        "cursor": {
          "ref": "d76e1ca1-e8ef-496e-96cb-0a1b12a378cc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee540380-cd1a-47f8-ad72-14cd7e0d8a75"
        },
        "item": {
          "id": "68881c99-b6db-43ab-abcc-f728be73b1e0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b1f0e650-4dec-46ce-b7a0-b17a4ec816f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b95465-550f-4eb5-b6de-d92de52982dc",
        "cursor": {
          "ref": "e5fdf6a8-15b5-4fbe-9186-17605db7ee33",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9299e8b7-aceb-4eb4-9f38-bfcf09dfebc0"
        },
        "item": {
          "id": "01b95465-550f-4eb5-b6de-d92de52982dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e883612-7885-402b-8313-557482f49c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102b361-39b8-4808-a45f-e99f2436ea55",
        "cursor": {
          "ref": "871501db-abc7-4864-952c-adbc895aee0c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "96177623-eda4-49a6-b049-0cf5b02c72c9"
        },
        "item": {
          "id": "4102b361-39b8-4808-a45f-e99f2436ea55",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0456b883-9907-4bd8-80d7-a41be5684958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcdd648-647d-42cb-b478-c5020f5c90d2",
        "cursor": {
          "ref": "d9e5462b-a168-470a-b69a-b547d99c2200",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aada3052-4a88-4ed4-8a5f-2624abe78da2"
        },
        "item": {
          "id": "fbcdd648-647d-42cb-b478-c5020f5c90d2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb581741-93dc-4847-8cf8-dde4c22bc401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec2a725-3951-4f3e-b916-701f6057ad7c",
        "cursor": {
          "ref": "7d976bce-827d-4cad-bfe7-01af4f1055ce",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6b9cf931-0c37-4d7b-aede-06b460f978c4"
        },
        "item": {
          "id": "5ec2a725-3951-4f3e-b916-701f6057ad7c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "10e0c51c-f4e7-4689-930a-1d1d99fed326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a04032-a0fa-471e-a8fd-23f97458b6bd",
        "cursor": {
          "ref": "5ac8e074-c94b-4f90-8042-7df1fb6c843e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "290e9f67-7b9a-49ca-8bbd-51e2cdcce62d"
        },
        "item": {
          "id": "41a04032-a0fa-471e-a8fd-23f97458b6bd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "afd6e600-49f2-4cee-b179-417d17249efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6955e04-c013-4475-a236-d519766e82b2",
        "cursor": {
          "ref": "60080220-1723-48f8-a1e1-9dff1969e1ce",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "30d8691a-57dc-467f-a066-184db9b29ba0"
        },
        "item": {
          "id": "d6955e04-c013-4475-a236-d519766e82b2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b460de22-dff4-42b4-aafc-78b19d20c4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a00b1-1086-4311-b31e-2bc65d35b38c",
        "cursor": {
          "ref": "6d1a3304-4dd9-47ae-9f06-44a64f49ec06",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "52119019-8efa-4db0-ae3e-2e7da24104cb"
        },
        "item": {
          "id": "6e6a00b1-1086-4311-b31e-2bc65d35b38c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b721fdae-bd46-4ef0-9704-0a10788d4191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebcbaff-b5d1-4af2-999f-0fd3eaf29ea3",
        "cursor": {
          "ref": "63851726-4782-448a-8412-a20943730ef6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ee842fb7-185b-4cfa-9304-072185cf37f3"
        },
        "item": {
          "id": "9ebcbaff-b5d1-4af2-999f-0fd3eaf29ea3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e4752d64-ddac-4962-8ceb-23a993055abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9090f2-e584-40eb-bcd7-7593723866cd",
        "cursor": {
          "ref": "f2eca288-9bf7-422c-ba4c-fd57b5e5c8ed",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2780ddd8-1045-491b-b5b4-4da73a55ea6d"
        },
        "item": {
          "id": "5a9090f2-e584-40eb-bcd7-7593723866cd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "41d0ac34-718e-4418-aaaf-21a4951cbde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22f3117-57f5-4b94-9afd-0e7e97b10ab8",
        "cursor": {
          "ref": "d39c58ff-17fb-4d73-8db1-a3360ce61e6c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "50ad22b3-7b7f-4e9a-859c-745158c77555"
        },
        "item": {
          "id": "d22f3117-57f5-4b94-9afd-0e7e97b10ab8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90ba004d-2b83-4c0a-a447-3e7ee49a42ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b7b0db-a3e8-4ea9-840d-b457ec0081ff",
        "cursor": {
          "ref": "9f606fe2-d54e-4792-af62-b6602297e0f2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3961dbce-8a33-4968-99a4-d0adf13ad35a"
        },
        "item": {
          "id": "67b7b0db-a3e8-4ea9-840d-b457ec0081ff",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f1b6d45d-a97e-4993-bd13-a31fb77ffc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e8996-fb27-43a0-82ab-dfb63d1ba0e7",
        "cursor": {
          "ref": "4f574056-0678-4b99-8783-04fe6e2bd93e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f838c304-ae14-476a-83e3-f9a12d6b2ee4"
        },
        "item": {
          "id": "814e8996-fb27-43a0-82ab-dfb63d1ba0e7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc7420da-3b2d-43d0-a600-ebe09b183220",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebef10b-5a36-4693-8115-8615c36e99d8",
        "cursor": {
          "ref": "a931c60e-2d9f-4962-812b-0a744ab03aa4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "697231f5-9878-424a-a89b-b113494d00bd"
        },
        "item": {
          "id": "bebef10b-5a36-4693-8115-8615c36e99d8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4ba9b696-5fa0-4244-b344-3d0b0915d0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "847193ed-e807-45f5-a169-4807429db64f",
        "cursor": {
          "ref": "5751dab9-1120-4e0f-aba3-300ae6499903",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c39d6152-0872-4c8f-b44c-7855a5a06b0b"
        },
        "item": {
          "id": "847193ed-e807-45f5-a169-4807429db64f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "10cd1175-0527-4b55-9225-00221aee9aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "50624f09-7ae5-4c75-9cf3-8de614571124",
        "cursor": {
          "ref": "08ef9307-bee2-43ed-bfc1-95a5f1561aa3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3aafefdf-2580-496d-b710-2b3d18f64e74"
        },
        "item": {
          "id": "50624f09-7ae5-4c75-9cf3-8de614571124",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "46687422-a371-4153-8c8b-cb9d5c8e9df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d703e5d8-b040-47d0-9955-5f16b01de06e",
        "cursor": {
          "ref": "1a5bbc89-47a0-4dbc-af8d-159c418d195f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d2df5833-4b4a-41e3-bc89-cce7ec82c4e0"
        },
        "item": {
          "id": "d703e5d8-b040-47d0-9955-5f16b01de06e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "337f29e9-9b72-4ebe-821b-7f958dac8a11",
          "status": "Created",
          "code": 201,
          "responseTime": 30700,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87dc8f5-30d6-4c6a-84a0-a892cb7f600b",
        "cursor": {
          "ref": "006c2054-7397-4cc7-9b74-ec376f64749d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "669b9f4b-9705-4e80-abb0-327eaa6e1d78"
        },
        "item": {
          "id": "e87dc8f5-30d6-4c6a-84a0-a892cb7f600b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6fbfc38d-7daa-4d16-9472-9c42baf368ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ad5087ec-4ac5-433c-af74-cea0e58e0ae8",
        "cursor": {
          "ref": "fba835d5-62c6-4760-ad1d-53cec1a21f40",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5775ddfb-d132-42db-9ddc-493cb0b541b5"
        },
        "item": {
          "id": "ad5087ec-4ac5-433c-af74-cea0e58e0ae8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "33252cf8-683c-4e60-adff-202a79af4336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3f7cd0e5-2f0b-48f8-92c9-ec5f0056dd49",
        "cursor": {
          "ref": "3d2554fe-3d2d-45b3-a244-108acad8d3f3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "966b65c6-d71c-4c2b-ac0e-81bb50e59b27"
        },
        "item": {
          "id": "3f7cd0e5-2f0b-48f8-92c9-ec5f0056dd49",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e00cd00b-ef41-47ba-8789-f7c4416426a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f679f0dd-8364-4889-af3e-58be6e3bbd8e",
        "cursor": {
          "ref": "70ce5cfd-efa5-4dd2-b8e0-cbd4612a0f20",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea1ae139-6efa-4088-988e-dbfa9ca43574"
        },
        "item": {
          "id": "f679f0dd-8364-4889-af3e-58be6e3bbd8e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ac34a63-4f93-40bf-8c97-b9424c4c4dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1b68eb-0df6-403f-aa1d-631d29c39134",
        "cursor": {
          "ref": "5aa9be00-6f0d-4eff-934a-4e073a103247",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b9dce68-a131-4556-8daa-953e39b313c8"
        },
        "item": {
          "id": "cd1b68eb-0df6-403f-aa1d-631d29c39134",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f572d15-56a8-499c-a6a6-90cf7b66895a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696383ba-ea1c-4416-bbb8-e4fd05b085b1",
        "cursor": {
          "ref": "f0f92b8a-d731-4e89-b2d6-c81c8b682e91",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76e05bab-f4de-4151-8d9d-2049531c3845"
        },
        "item": {
          "id": "696383ba-ea1c-4416-bbb8-e4fd05b085b1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7b64dcf9-8b2a-40b1-ab08-0c1fa2aa8976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2979a66f-e740-4433-b5de-6c2a1e05f654",
        "cursor": {
          "ref": "1fe28172-3357-4a81-b742-3419ad7cf5de",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "39eb663a-4e87-4076-bb59-e1dfabe19a86"
        },
        "item": {
          "id": "2979a66f-e740-4433-b5de-6c2a1e05f654",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8459dec6-5425-41f1-8412-d711fa3e8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817f127c-4a19-4d91-a5db-3098328d5d33",
        "cursor": {
          "ref": "e1fbd494-ad62-499c-b0f8-e251f8762eb0",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ff0b543-45f3-4e14-86a1-29c904ad510e"
        },
        "item": {
          "id": "817f127c-4a19-4d91-a5db-3098328d5d33",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "535d022d-184f-4318-9038-6a1a97de3d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64058f99-e879-4d22-97c7-287243fff6c3",
        "cursor": {
          "ref": "1181fad4-4066-4e2e-99c7-4774e0fe979e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ffea61eb-6540-4d9a-a738-ada7cfdab5f6"
        },
        "item": {
          "id": "64058f99-e879-4d22-97c7-287243fff6c3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf0fea55-e062-415a-a41c-68ac8021a7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7aa0c2-cac3-4be8-8ef4-1f83aee9bd9b",
        "cursor": {
          "ref": "853c9e0a-f25c-4629-95dc-003e34714174",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "61cca407-9073-4616-a885-bd5e946067a5"
        },
        "item": {
          "id": "df7aa0c2-cac3-4be8-8ef4-1f83aee9bd9b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ff98891-2a68-4278-881d-78d15557d725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66603eaa-fddb-4277-8c92-5ca4c5d3a3db",
        "cursor": {
          "ref": "d8f781c1-7ebe-48ba-a4f0-404cf0a903d3",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ccee4c2c-5140-452e-a6ba-0e37de5a16fb"
        },
        "item": {
          "id": "66603eaa-fddb-4277-8c92-5ca4c5d3a3db",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17d66b7a-ed6f-44b0-928d-155d3adf5926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a93fae-bec4-40b5-a2f9-c165859c86ac",
        "cursor": {
          "ref": "9062c22f-0df9-467d-9466-50bc4cf1c2f8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "493e5958-3be2-472d-94db-e7da77586c01"
        },
        "item": {
          "id": "09a93fae-bec4-40b5-a2f9-c165859c86ac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf6adefe-db67-4dbc-989f-2d3411790f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe033c9e-43c8-4f0c-b4cd-22f6b2e799fa",
        "cursor": {
          "ref": "bcf2007a-7d23-409e-9e66-7c07dd47a38d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6694a375-dcee-4176-a13d-85c93d7c8e5c"
        },
        "item": {
          "id": "fe033c9e-43c8-4f0c-b4cd-22f6b2e799fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1595f614-54b5-4efc-9a9d-50dc57f5a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d86a6c-dec3-4249-876e-60e5e5ab1e28",
        "cursor": {
          "ref": "394351ae-4b3b-416d-a4be-242c602f8933",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f486bb7a-557d-44fb-a19c-f87e9e8c5a1f"
        },
        "item": {
          "id": "55d86a6c-dec3-4249-876e-60e5e5ab1e28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4ddf6a60-b57e-4130-9e94-fe9dcefe5e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84d8588-521e-49c7-af32-adf464cd7433",
        "cursor": {
          "ref": "9878b2f6-5580-4da3-9656-e7ec3f2dc942",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05486305-c87c-4043-97b5-82b8e9313634"
        },
        "item": {
          "id": "b84d8588-521e-49c7-af32-adf464cd7433",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e167f355-10ba-426a-8b43-f22cd0bd62c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd00b2e6-4f07-4c02-b60b-9d0693deeb7b",
        "cursor": {
          "ref": "f35859c2-e347-404c-bbd6-38b3b5688cd2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "864360ae-0ad6-4428-b996-0f2115e91319"
        },
        "item": {
          "id": "fd00b2e6-4f07-4c02-b60b-9d0693deeb7b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0843606-73c9-4620-884f-863310d9a543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4e75fb-ee46-4a81-b728-20e2c8f30a11",
        "cursor": {
          "ref": "cc5de9eb-e479-490c-817e-41e7d67106ae",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fe4c582b-d83a-45bc-a118-356e54797881"
        },
        "item": {
          "id": "7e4e75fb-ee46-4a81-b728-20e2c8f30a11",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8572b6cb-64a5-4b10-bfec-d406161510e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a1e545-d2e5-4d27-a1e7-6ae23746780f",
        "cursor": {
          "ref": "5a526257-c28a-40dc-9488-4cadd0755c47",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f5c4427e-c15a-4765-ba54-901a6465d254"
        },
        "item": {
          "id": "e9a1e545-d2e5-4d27-a1e7-6ae23746780f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9917ae94-68e2-467e-8b84-0ef974e47768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e79f746-1ccd-43bb-a818-52a5e839aad0",
        "cursor": {
          "ref": "52004427-6b41-43f9-aabd-3ca8b063eb18",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6dd801df-8b5c-4c17-8682-2c12e0d375a2"
        },
        "item": {
          "id": "9e79f746-1ccd-43bb-a818-52a5e839aad0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "44a40fd6-8a38-4cbf-ad75-35e8836cba12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe43a60-003b-46ef-9960-c99d17ed8e0c",
        "cursor": {
          "ref": "f4304bf6-d72b-4046-8479-8cba8a427acd",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "16fe03eb-6831-48e4-a53b-3f35a39c4edc"
        },
        "item": {
          "id": "cbe43a60-003b-46ef-9960-c99d17ed8e0c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8039b670-49ce-4055-a3f6-d6af65fc371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a8ad32-4bdf-4262-8d8f-b45a85072045",
        "cursor": {
          "ref": "50e98d94-6317-45ae-afbf-0fdcb2d4ca9e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d5bfcb29-285f-432d-a114-f9feafc0b7c0"
        },
        "item": {
          "id": "f9a8ad32-4bdf-4262-8d8f-b45a85072045",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3d689f4c-ad7a-4a1e-86e3-1cf870c7e0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeceeaf0-b2f5-42b8-b4fe-fd02a46998ca",
        "cursor": {
          "ref": "81441655-7191-468e-b3ee-d882488f8db7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c09edf81-c551-43ec-90d8-8b48b1d19b97"
        },
        "item": {
          "id": "eeceeaf0-b2f5-42b8-b4fe-fd02a46998ca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ad5b9a2-2102-4a2d-a920-07df1b350067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905f626-e394-45ca-8949-5897d6170ec1",
        "cursor": {
          "ref": "e123e444-f611-42ce-9f8e-dec1faaafec3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a79df3d4-d635-486d-8d56-97dbc442960b"
        },
        "item": {
          "id": "8905f626-e394-45ca-8949-5897d6170ec1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "290c1ddb-92c8-44cf-82d3-c8c45bfbdd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a06218-64b4-4831-922c-277e46023399",
        "cursor": {
          "ref": "f1a44399-a725-4ab7-a27c-01da264b1801",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5fd64fa-1bea-4b6e-803d-0a247e770088"
        },
        "item": {
          "id": "92a06218-64b4-4831-922c-277e46023399",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef6f4fd8-5e46-4bff-b3d5-9dc48780ee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5231ca90-07e5-4c4e-8d4a-2cee414085db",
        "cursor": {
          "ref": "4af8a15e-799e-4615-8dd1-a3c0fd113dbd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "414ddc86-c0e8-4c0f-b59e-ee76f6bca7af"
        },
        "item": {
          "id": "5231ca90-07e5-4c4e-8d4a-2cee414085db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d430396b-05cc-488a-a437-a559a4373353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85940de9-30b3-45a0-b400-b5b0de4ea85b",
        "cursor": {
          "ref": "2968093f-c7d8-4d6f-a6d2-422e7e64e80b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c625b362-d46f-4bb7-9340-e4ba8fd7fe5c"
        },
        "item": {
          "id": "85940de9-30b3-45a0-b400-b5b0de4ea85b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66fc942b-f731-4bd1-ad3c-5669af9abb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed715529-e4aa-4423-92be-69124de370ae",
        "cursor": {
          "ref": "4a927b96-19ef-4555-acd6-1bff647b0eb2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4cdfe9b7-0c6e-44af-bf0e-50e1e22cfeef"
        },
        "item": {
          "id": "ed715529-e4aa-4423-92be-69124de370ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c461da31-3347-4bd7-94c4-279f7842436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f46ec3-39ac-42a8-83c1-209512fd48f1",
        "cursor": {
          "ref": "40ff4f1d-cde0-4256-9e4d-c730c677122f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8f5caa5f-a76e-42b8-ab01-9cd464fec4cf"
        },
        "item": {
          "id": "33f46ec3-39ac-42a8-83c1-209512fd48f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "84ae803f-ccd8-43f6-9887-cb8abbcdaed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96edcdd0-2090-45e3-89d8-b69d0d894bac",
        "cursor": {
          "ref": "ad52b252-77ec-4ac9-86b1-756361102816",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "518f3374-91f1-47a7-b620-96d6f07c5b58"
        },
        "item": {
          "id": "96edcdd0-2090-45e3-89d8-b69d0d894bac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "243da316-fc6b-42a8-b93b-df2a243aecaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70033e2-313e-4332-8e28-771a21e88865",
        "cursor": {
          "ref": "ef05665d-5dc5-48fb-84e4-ef1e4b18526f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3a931763-e1f9-483e-af71-419d38bd8784"
        },
        "item": {
          "id": "c70033e2-313e-4332-8e28-771a21e88865",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64cbd4a8-ecc3-4f9f-bf2e-0a953834abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5cefb-d242-4c1e-bc53-83de6c549d19",
        "cursor": {
          "ref": "c4df0b4e-2405-4a9c-8446-bb4483681860",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1a1160d9-264c-4fb2-9672-874c714c5407"
        },
        "item": {
          "id": "79a5cefb-d242-4c1e-bc53-83de6c549d19",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "afcfd9ba-7206-4d5c-bad6-c204e4232779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19b6374-e927-4ee1-9e21-30d3420973f8",
        "cursor": {
          "ref": "228b1127-d084-4860-9253-8012cbda65c2",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8f757871-0568-44b7-8c9e-14c27c760884"
        },
        "item": {
          "id": "a19b6374-e927-4ee1-9e21-30d3420973f8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1bcccc39-783a-4603-a4cd-535b486f5d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1f7cb8-290e-4e6c-8c54-da5271964118",
        "cursor": {
          "ref": "cfaa2106-39be-441e-8530-78f6482b8671",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fd4ff8a5-f36e-443b-ac7a-02f506e1c9a9"
        },
        "item": {
          "id": "2d1f7cb8-290e-4e6c-8c54-da5271964118",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bd78e97-1600-40e6-b22f-ad7f60c70af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb94a453-a7b6-424e-9c56-a84b1b0fbd3a",
        "cursor": {
          "ref": "cbf3c3fe-5437-46c8-b405-459d3e3f03fe",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "84a35c35-9c43-46a5-be35-788728527507"
        },
        "item": {
          "id": "cb94a453-a7b6-424e-9c56-a84b1b0fbd3a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf27af08-9e73-4f7d-882e-7795fb187a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ca3517-cb16-4451-943f-4a0552e9764b",
        "cursor": {
          "ref": "a35fdf6d-5c69-4143-8c94-8d7e73eb3240",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a7f3946e-9671-4202-894d-8e33bc23e09c"
        },
        "item": {
          "id": "44ca3517-cb16-4451-943f-4a0552e9764b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49e2d08f-cec9-4bc9-a933-69a6c169f1d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a018db86-f1e8-43f5-ba02-6ed7afcf5e6a",
        "cursor": {
          "ref": "94f88056-896c-4432-b15d-e92333d4b994",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bc5e59d4-f0e2-4637-a8fe-5a07d41a552e"
        },
        "item": {
          "id": "a018db86-f1e8-43f5-ba02-6ed7afcf5e6a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ad120245-ed8b-4159-9f18-2a6754c7a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d7ea69-f5aa-4114-bf42-539ee3bcfb2e",
        "cursor": {
          "ref": "5be44b60-4c7d-4dda-9c06-9774166ff687",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f095f9ce-3871-42c3-98be-9dbd5801fdcb"
        },
        "item": {
          "id": "73d7ea69-f5aa-4114-bf42-539ee3bcfb2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aafc2877-8bc3-4ed7-b56e-c2ace63451ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24d9606-5698-4273-bcae-79bf1eddef99",
        "cursor": {
          "ref": "96eea6fb-a60a-4d3a-ad94-d0df17f96516",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3042471c-6fde-4da7-800d-c1baf8b6acb5"
        },
        "item": {
          "id": "e24d9606-5698-4273-bcae-79bf1eddef99",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e68abee-5e95-4665-9050-b8628228a068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a72f8f-5f11-4b1d-8a21-a916a39288ee",
        "cursor": {
          "ref": "53ebd75d-ac8a-4b24-b69e-51628d3986da",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89cd7151-882e-4e08-8edf-2f51a045c785"
        },
        "item": {
          "id": "e5a72f8f-5f11-4b1d-8a21-a916a39288ee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89ebaf9b-f541-4a95-af4d-e8edf2f84786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d274c0f9-8b87-4e8b-b4a2-f1691a4783f4",
        "cursor": {
          "ref": "8756cdda-ecb7-4398-9ae7-a920a7da2b3f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f1410973-6a43-4c5e-829b-5a305ca51f81"
        },
        "item": {
          "id": "d274c0f9-8b87-4e8b-b4a2-f1691a4783f4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2030e14a-bdf6-4261-b1a7-c17f6082369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3184d15d-24d8-4bac-8657-7aedacd6eaee",
        "cursor": {
          "ref": "34cd2b65-7d3a-43da-b125-094bcf2f27a0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "898a087c-84ac-48b3-a803-649cc8a9e96a"
        },
        "item": {
          "id": "3184d15d-24d8-4bac-8657-7aedacd6eaee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f73aeb9-c845-4d5a-ba64-c141a938bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440d6cc8-6368-4b35-8239-f4a184906dfb",
        "cursor": {
          "ref": "d95d1a35-366a-4b85-a21c-10ef511250dc",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "70657071-495d-4b56-98e8-56ec348f53da"
        },
        "item": {
          "id": "440d6cc8-6368-4b35-8239-f4a184906dfb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0eaa975-9391-43cb-b030-514e72ec7c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5ac2a0-a354-4cff-930f-f7c1c0c9a1a3",
        "cursor": {
          "ref": "f40f815a-a7c9-4a56-9dcc-102f17346880",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eecc228b-4c27-4850-9b84-2a0b944e2338"
        },
        "item": {
          "id": "5e5ac2a0-a354-4cff-930f-f7c1c0c9a1a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b4624b6-6955-48fb-addb-9c8ea161d8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0713750-0a7e-4e21-86b0-ed6997aa2e81",
        "cursor": {
          "ref": "67ab7921-30d0-4b27-b9a0-ae1592ec8f4e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5345dbc0-db12-44f6-acdd-9a46d47a834f"
        },
        "item": {
          "id": "f0713750-0a7e-4e21-86b0-ed6997aa2e81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "515019ec-36a0-4080-b077-d677a235758b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e1512e-aea5-4929-a61e-0088d973fb0e",
        "cursor": {
          "ref": "762f1b11-65fb-4dae-a87a-dbbc4b8c1142",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0e46f81d-6a84-457e-ab48-3d4ed2f5b380"
        },
        "item": {
          "id": "28e1512e-aea5-4929-a61e-0088d973fb0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d99b391-d5a2-4b9d-9a7f-a4861cbfd730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae3b3a-cb55-48c0-abb3-0801c85b206f",
        "cursor": {
          "ref": "882a51f1-0156-4d1f-9168-d3436f94ad01",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8b196b7d-976b-4739-8bea-5edc784bb38e"
        },
        "item": {
          "id": "95ae3b3a-cb55-48c0-abb3-0801c85b206f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "afdf666c-3770-4832-831f-9092cc72227d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d3dade-0550-43a2-bb37-bb63adb37bcc",
        "cursor": {
          "ref": "c3125555-5800-4c58-82b2-c1a21ca44ba8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "293f91a6-1a96-4aca-9768-0ccff7444a8b"
        },
        "item": {
          "id": "15d3dade-0550-43a2-bb37-bb63adb37bcc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee9ba250-4395-40f3-b287-f355708c4b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8871157a-a2e9-4be9-943e-95fddd1d5db1",
        "cursor": {
          "ref": "3d7b0734-5f4a-46e0-a443-419d620489fc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d52d8ac5-83ed-40ae-93ad-f0ab318f5fbf"
        },
        "item": {
          "id": "8871157a-a2e9-4be9-943e-95fddd1d5db1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cf992aed-61d1-4968-a22a-3d688af01a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0624a053-8f3b-4bc0-8627-83d0fb1556ee",
        "cursor": {
          "ref": "06f1d79c-e96c-4a70-99d7-a0a4483e9b3d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "151aaf6a-8e55-4f18-af25-4c742c2bd590"
        },
        "item": {
          "id": "0624a053-8f3b-4bc0-8627-83d0fb1556ee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f60f46b7-6569-47dd-b54d-6ec306fe2e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e13375-754b-4e0c-bf44-2cf49ac5511c",
        "cursor": {
          "ref": "f050e4cc-000b-426f-a6fa-b45e12abef5f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a2153617-1579-41c8-93d1-29d7d32db1bf"
        },
        "item": {
          "id": "21e13375-754b-4e0c-bf44-2cf49ac5511c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34a2f6b7-d16a-4141-805d-a1bec666eb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff32c3-f74f-45c0-a1c9-a2e776226640",
        "cursor": {
          "ref": "0c696dec-7bf1-431f-9fc5-0f11b44b5908",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "682da919-60fe-4b94-b491-ce1bf38a9494"
        },
        "item": {
          "id": "80ff32c3-f74f-45c0-a1c9-a2e776226640",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e402b3ed-f854-42c7-b0a3-aba5cade2436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3e521a-509d-488c-ab24-19374df770f0",
        "cursor": {
          "ref": "d3178ae4-b60d-463d-9783-8accf9f03153",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fa510cc8-7f45-4f34-a962-7faaf07c910f"
        },
        "item": {
          "id": "ea3e521a-509d-488c-ab24-19374df770f0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61c30303-68be-404b-9967-ab2e0b28ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b280843c-8987-45c5-90dd-55cdf1ac0485",
        "cursor": {
          "ref": "cc849bb0-334a-4c03-ac31-8694021f7ae0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "01005dd0-c65c-408b-ac7f-26cabbcfcdd5"
        },
        "item": {
          "id": "b280843c-8987-45c5-90dd-55cdf1ac0485",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1e5d146a-f346-4dfa-a972-c3cbfc76b998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4519d91-b4f9-4a5b-b354-0a0fc5843882",
        "cursor": {
          "ref": "e9fe86b7-a98c-4a2c-b9a4-3c892869512c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f3d63156-9225-4e08-a2ed-8a4ac9bb0a9b"
        },
        "item": {
          "id": "b4519d91-b4f9-4a5b-b354-0a0fc5843882",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa334a8f-3c56-4b98-af7b-d00444983be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1455d01c-5acd-4bc2-bb06-a94647e55177",
        "cursor": {
          "ref": "20c1ba68-b8e7-4f73-b76a-7613260f0beb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6bc5cc29-5c4a-4c48-8fee-aa1309039a9e"
        },
        "item": {
          "id": "1455d01c-5acd-4bc2-bb06-a94647e55177",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "de5391cd-72e1-469c-ae31-954501e47e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a2d467-3d6b-4798-a2dc-ae595df7759b",
        "cursor": {
          "ref": "b89ac31d-9234-4d1d-9e17-6111ae0b4ff0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85f65f2e-e24f-4409-8ce2-2c6ead324af0"
        },
        "item": {
          "id": "c2a2d467-3d6b-4798-a2dc-ae595df7759b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a101be88-8376-4caa-a7bb-ed763e1866cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdfbd41-7443-4286-b25e-99e94aff0df7",
        "cursor": {
          "ref": "b3944cca-e562-4452-adf2-c2b9532939f5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f110df03-f530-4076-a0e3-78cd148bf4ab"
        },
        "item": {
          "id": "4bdfbd41-7443-4286-b25e-99e94aff0df7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2779e56b-b12c-42b6-bb42-2e6a355b0e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869a7dd5-1b90-4e06-aa8b-dc3aae9d8c31",
        "cursor": {
          "ref": "3742e6bd-4050-4625-9560-fe38acb7cd7f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "12c76874-68ae-470d-b5c3-87c165fa472b"
        },
        "item": {
          "id": "869a7dd5-1b90-4e06-aa8b-dc3aae9d8c31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddcb0fe6-9bb0-4126-854a-44cd72c02923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391a8df7-3fc9-4377-baa0-118a773a6da5",
        "cursor": {
          "ref": "171c9185-6536-4002-86ea-095157cbaf4a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2625e662-7719-4aad-82ad-46a1ce003efd"
        },
        "item": {
          "id": "391a8df7-3fc9-4377-baa0-118a773a6da5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "755a407a-5e1c-4171-91cd-6249a54061c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f94e57-df23-4c4e-9a36-4b1f727421eb",
        "cursor": {
          "ref": "dee1983e-a8e4-42ba-b12b-decfeb9aff21",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d400d291-ac82-429d-b230-01a3124e0ba6"
        },
        "item": {
          "id": "24f94e57-df23-4c4e-9a36-4b1f727421eb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7b0ef39e-83a1-4adb-9800-a1f21e5d48d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4740c5-67ca-4bc4-82d0-a4487b0c0b9a",
        "cursor": {
          "ref": "373ca004-0f4f-4555-bb6f-e3a177ab3c5d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb801ecc-ff01-444f-aecf-9513ff5e4ae7"
        },
        "item": {
          "id": "2d4740c5-67ca-4bc4-82d0-a4487b0c0b9a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d4e8122a-2534-47df-89ed-b0d920eeabdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026fbf2a-6e4c-4011-b1fb-c01936796665",
        "cursor": {
          "ref": "d73d208d-fc59-48bf-98a1-d7b15b186f47",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2e477dba-84e6-46f2-90be-838f07d107a1"
        },
        "item": {
          "id": "026fbf2a-6e4c-4011-b1fb-c01936796665",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "97f703e2-faa9-4c1d-b8f8-d6549773a48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6071f2-6a14-4acb-8bd7-710a648396c7",
        "cursor": {
          "ref": "c1939956-5183-4a5a-b2b0-d575b9ae53e1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8e526e20-37fb-4071-ae72-ab94dfac5828"
        },
        "item": {
          "id": "8c6071f2-6a14-4acb-8bd7-710a648396c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "632bae23-a2a5-4cd7-a7ee-8769472a3605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fae9bf9-1a88-484b-99c4-8c94f3ee524c",
        "cursor": {
          "ref": "698c7619-d619-4346-a00b-c2e88c36f865",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "03f2c637-987d-4b5f-8edf-24abc915e56a"
        },
        "item": {
          "id": "6fae9bf9-1a88-484b-99c4-8c94f3ee524c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b04c008f-e304-40a5-adf4-bfe3bd726ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bef6c4-b21e-4d37-80fb-6f9bdac4eade",
        "cursor": {
          "ref": "21231b33-f1f0-4470-ab17-613bbf41c33c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac26283f-901d-4789-815b-978ad04b5641"
        },
        "item": {
          "id": "42bef6c4-b21e-4d37-80fb-6f9bdac4eade",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73da0101-3303-48d9-9b6c-55f46589a48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ef246-4419-4a95-ac75-347bfec8c169",
        "cursor": {
          "ref": "aca1b10c-2338-45a6-881c-ddbfdc187389",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "137bc200-ba51-45df-8e5b-6de3d6172443"
        },
        "item": {
          "id": "a46ef246-4419-4a95-ac75-347bfec8c169",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc570a1b-1b21-4b9a-90f3-21755585df93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a1ac4f-9a52-4408-bdac-29257f38db9c",
        "cursor": {
          "ref": "74ec93c8-b504-4bbc-a15e-81b00b12adde",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "26f2ff8e-bfe4-4621-85bb-8d5f9d485163"
        },
        "item": {
          "id": "26a1ac4f-9a52-4408-bdac-29257f38db9c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "61904b87-8a08-4246-b1ee-aaccf7ddf965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3288d3d-987c-4a89-b8d4-94bc48cc0cf9",
        "cursor": {
          "ref": "74e82f91-fad2-4862-bfd3-694e2c515435",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1b2b3581-cab3-4185-8bf2-6c5bfe5d49e2"
        },
        "item": {
          "id": "b3288d3d-987c-4a89-b8d4-94bc48cc0cf9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "465e1b72-634d-403f-8a8a-d433279ecad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2d6d7-b355-4377-9551-6322ddb9b0f1",
        "cursor": {
          "ref": "9a61e1c7-fc88-4944-bd2a-0af7ff6d3d59",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a2cf6cae-6ec6-42e0-ac9b-c818e39bb8e6"
        },
        "item": {
          "id": "83c2d6d7-b355-4377-9551-6322ddb9b0f1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "01f31ffd-c5aa-42e1-b00d-25e9e8b755a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98bf2ba-04fc-4398-b446-06cf30547719",
        "cursor": {
          "ref": "181ce427-e465-4427-baba-3eebce81cf9b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bc5bc3e8-8753-40e5-b186-45a9b0211ca4"
        },
        "item": {
          "id": "a98bf2ba-04fc-4398-b446-06cf30547719",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "104626c4-f911-4e3e-9d2d-4f0eaa2ecf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5b2341-cb5d-40df-bc0d-f1f63e338d00",
        "cursor": {
          "ref": "7664f8c5-455c-418e-b05b-bf0544652348",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3027f6ec-29d5-46fa-bb85-6890901d7ac5"
        },
        "item": {
          "id": "1d5b2341-cb5d-40df-bc0d-f1f63e338d00",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4bdb97d3-57b7-479a-a998-d581f4b4837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5918978-d09a-44d8-950b-328b62f5f435",
        "cursor": {
          "ref": "6fc47ce5-3ae8-4bb6-91cf-ec46bf65edd8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "27bca7c0-f1de-4dde-9f6a-dfd23a65ba2c"
        },
        "item": {
          "id": "c5918978-d09a-44d8-950b-328b62f5f435",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "29f1678a-8188-4472-9c77-0ffece3329ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826eac5-771c-473b-9e9e-2dcf6707c44f",
        "cursor": {
          "ref": "4d296472-d3ff-4c44-8537-1d983c0b597a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f22ed0c8-06d4-469c-95f8-636e57ece94b"
        },
        "item": {
          "id": "3826eac5-771c-473b-9e9e-2dcf6707c44f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2d1407e9-6c26-4162-a34c-a7dc4c13cbab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a780fd-575a-4549-80da-e7ee0888692b",
        "cursor": {
          "ref": "c8d3ab4b-9575-4ed8-b22f-5c0f4da544c7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7f6bb491-001b-45a3-b34e-1dbd9bfa2e52"
        },
        "item": {
          "id": "05a780fd-575a-4549-80da-e7ee0888692b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c098772c-14b8-4072-a11f-9942d97dcc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e95df-15ff-446f-a917-6d614d666077",
        "cursor": {
          "ref": "6449dfb9-9b56-4d3e-a8f4-c77b6778327f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2711875a-4a82-4648-96e9-784f4e1e7a33"
        },
        "item": {
          "id": "bb6e95df-15ff-446f-a917-6d614d666077",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "46a39c5a-a7da-4c0b-b227-11c00c667fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ed635d-7cd4-4695-a322-d77707c4995a",
        "cursor": {
          "ref": "5fa8cb05-09a5-4511-b760-ce0fde444fea",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e1bb95fc-3b7d-4f1b-9434-1cbc87db8230"
        },
        "item": {
          "id": "68ed635d-7cd4-4695-a322-d77707c4995a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89990d22-4aeb-40f9-a6e0-1886ab274937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4748c-0c82-4e91-b5e1-7beb77923a25",
        "cursor": {
          "ref": "aa619f57-1674-4754-bf80-28381fb3c341",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4ffe4d8e-f118-42f8-a6d3-4e9ad21658e9"
        },
        "item": {
          "id": "62f4748c-0c82-4e91-b5e1-7beb77923a25",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4b895e44-02a3-48bf-8db9-e06d03fc0c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35efcb2-5893-467e-b88b-74d8c517e020",
        "cursor": {
          "ref": "39b243b7-6d17-4294-b9ca-cf08b2829ae1",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1cf28ae6-6bc9-4c5a-9106-eb149a593a37"
        },
        "item": {
          "id": "f35efcb2-5893-467e-b88b-74d8c517e020",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0b2f1cb-908c-49c6-8494-5e9952b1b7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7735cbc-5fb5-4263-bc31-8022906af770",
        "cursor": {
          "ref": "7be59301-0c81-435d-adc0-9bc309b1c005",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "603c0353-6d7a-47d2-aa88-d5635316478d"
        },
        "item": {
          "id": "d7735cbc-5fb5-4263-bc31-8022906af770",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c3d6ab19-3e9f-4e91-9a3d-3f17fa4c9b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c62b19e-7c2b-4a89-b5cd-6bcb34764867",
        "cursor": {
          "ref": "b20e9c1f-175b-4ac0-aced-e9d04d9026bd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d392c7d3-dc65-49df-88dd-42707f379513"
        },
        "item": {
          "id": "8c62b19e-7c2b-4a89-b5cd-6bcb34764867",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8aca5a62-ac87-46a2-9ea4-6c8edd8f1a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beda227-b0a2-41d4-9f68-ba3c94df7546",
        "cursor": {
          "ref": "f09ab3bb-c552-4c38-b571-7ccfcdddc9c6",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f8d23102-3d58-409b-8a19-dbf042f4ec02"
        },
        "item": {
          "id": "2beda227-b0a2-41d4-9f68-ba3c94df7546",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "898219c9-91a5-4496-9412-f495bdf9fe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943c8e35-fbf5-4dcb-bef5-96a1f7407866",
        "cursor": {
          "ref": "fb3cd65d-8d73-4dc1-baec-c7baa6c93cd7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "765903e3-3bae-4ca1-abb6-07600b69e996"
        },
        "item": {
          "id": "943c8e35-fbf5-4dcb-bef5-96a1f7407866",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e4ca1a0d-de03-43d9-ba33-a71402d2409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8763fa5d-b1f6-45c6-824f-ccd8fa066c6f",
        "cursor": {
          "ref": "37ec5da3-f686-4297-beba-b9335cfe8d63",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2bb9d3b3-ac95-4eba-ba96-0fcf33a7d1c7"
        },
        "item": {
          "id": "8763fa5d-b1f6-45c6-824f-ccd8fa066c6f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "21abfd9f-13a8-49e6-a4f0-8f5c0cf7ccb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f11a7-cb53-4de1-a8f0-7a96b35df2bd",
        "cursor": {
          "ref": "faa962e4-407a-41d4-bf9a-f77357bbf0ec",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "271e25dd-16be-43fd-af8e-78fcdda0aa63"
        },
        "item": {
          "id": "9d5f11a7-cb53-4de1-a8f0-7a96b35df2bd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fd7b899f-1cc5-4835-9754-5155d77615fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e0370-756f-4879-9dc9-a68e184c4006",
        "cursor": {
          "ref": "11acd2fe-30be-4a47-a8fd-f8bc3ffaa05f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e88617e-6f5a-4319-b690-cb87c6e2f0fd"
        },
        "item": {
          "id": "da6e0370-756f-4879-9dc9-a68e184c4006",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5828c543-7bab-4abc-a823-118c70c1f85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8758b480-7d9a-4083-885b-3490a498ab2d",
        "cursor": {
          "ref": "5d1d5c3f-cad3-4fe5-866f-64ec0afc016e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cde934ba-a070-4a46-82e1-fcd05a222f92"
        },
        "item": {
          "id": "8758b480-7d9a-4083-885b-3490a498ab2d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9ba15101-d02e-4245-980d-b2bcaf57c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad841bf2-fbf7-4396-9566-aad28cdf6063",
        "cursor": {
          "ref": "0db30069-de04-4c8d-b03f-f52c86f78829",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0bb616a2-1bc3-426c-9601-4d14d13bdffb"
        },
        "item": {
          "id": "ad841bf2-fbf7-4396-9566-aad28cdf6063",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6c02b3c0-10e8-4e8d-87cf-04060edc6651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8081471c-69c3-4f68-8f63-545117177b7e",
        "cursor": {
          "ref": "e748bc89-6fbe-4bdf-a473-e7f306d6a27e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "97f2acc6-de27-416b-833e-841c5a4ddbc3"
        },
        "item": {
          "id": "8081471c-69c3-4f68-8f63-545117177b7e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "de5a6e0e-77b8-4a84-9c55-553968e61dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223964f0-eddd-4cfc-89c9-d7d3be275250",
        "cursor": {
          "ref": "a4ed5c0c-e7e2-4265-bb65-148fd06a32a5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d314a991-c45b-48f7-aec4-0eeda68d9b33"
        },
        "item": {
          "id": "223964f0-eddd-4cfc-89c9-d7d3be275250",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fdce2b3a-5f6a-42db-ae5a-e9b5adf3a99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e75062-fbaf-493e-92a5-28f6b510068f",
        "cursor": {
          "ref": "1bfa8af7-2b01-4cbd-8907-e20e2b95cf96",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8f3ada31-fd85-450f-aa42-53acf37831c9"
        },
        "item": {
          "id": "79e75062-fbaf-493e-92a5-28f6b510068f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0b4b8972-0b88-45c1-8c88-03c21d526612",
          "status": "OK",
          "code": 200,
          "responseTime": 533,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "16e9f7c3-939d-493b-966e-84391d63303e",
        "cursor": {
          "ref": "2ebbb470-ea49-43c0-846e-c12dea702a2b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1df8b549-f8bd-49be-9d0a-48f57a4b12eb"
        },
        "item": {
          "id": "16e9f7c3-939d-493b-966e-84391d63303e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7702eaa-c433-4179-92ce-a379a1969a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da7118a-a4d6-4db1-bbf9-35937b4311fd",
        "cursor": {
          "ref": "9f77a9df-6704-49e5-b8b7-138ca7723bf3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d177dc5-e636-4b18-a1fd-15f8d9831266"
        },
        "item": {
          "id": "3da7118a-a4d6-4db1-bbf9-35937b4311fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9d9ac4d0-73e4-41c1-8de8-d873de9fffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680a05e5-f041-4deb-9786-92b736422f27",
        "cursor": {
          "ref": "28e0108a-39d6-457e-a39b-e4461a86592e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5b037c5c-bbad-4167-a18e-83b5ed3b5328"
        },
        "item": {
          "id": "680a05e5-f041-4deb-9786-92b736422f27",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ad9d664a-7398-41b9-ab7d-e81855303b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459d841f-fe72-4e1b-88f9-3535ff54ce29",
        "cursor": {
          "ref": "1d7b3e8b-fefb-4676-bf9f-1718438f249d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "753bafb9-e458-4b6e-b1aa-9b6de1b6fd60"
        },
        "item": {
          "id": "459d841f-fe72-4e1b-88f9-3535ff54ce29",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e40711e9-ac1b-45da-b369-25695401f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c8482a-9a9a-4326-8cfe-cc101d7e8231",
        "cursor": {
          "ref": "67cb5135-1e9c-4fee-9d8c-d22315ed5249",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6f1f6b1-39dc-4a41-a25a-80734d4a5f86"
        },
        "item": {
          "id": "41c8482a-9a9a-4326-8cfe-cc101d7e8231",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8d0da2c7-7b10-403e-9bdd-ec6ea6041f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83e417e-ba1c-42d9-8ef7-c022a2b10790",
        "cursor": {
          "ref": "d3e9aafe-2520-400d-bad0-53ddaaf7796d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bcb3508b-e063-4d66-b012-90630c6e7d2d"
        },
        "item": {
          "id": "b83e417e-ba1c-42d9-8ef7-c022a2b10790",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "97621791-2a7a-4ef8-b058-127532e63092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad8b609-dc0b-4151-9464-a02bc33b2582",
        "cursor": {
          "ref": "c163d8b9-badf-490b-b816-4fe74a58fa00",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c52ab16d-6c07-4c3e-b7a9-0c17012e442c"
        },
        "item": {
          "id": "6ad8b609-dc0b-4151-9464-a02bc33b2582",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5fefa3ae-2f65-45c3-9326-94c829353aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaefbc7-489a-4156-9450-26d50a9a75e3",
        "cursor": {
          "ref": "6b3955a5-e293-411c-998c-03087285da6b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ac095473-b3a3-45f9-9204-574f7cad7669"
        },
        "item": {
          "id": "ceaefbc7-489a-4156-9450-26d50a9a75e3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f7d224a-d01b-4f0d-a67b-b0673b674dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced0e714-b982-47c3-bcb1-40dcd8e72efb",
        "cursor": {
          "ref": "2f512ccf-fcaf-4bab-a01a-19af68aafece",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c79ac033-a933-4731-b8c8-8a7d3adda77a"
        },
        "item": {
          "id": "ced0e714-b982-47c3-bcb1-40dcd8e72efb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "05df2000-8acd-47dd-bf71-cd42956901ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad315af-ef5e-480c-abff-929dc3257c4b",
        "cursor": {
          "ref": "1523d26e-3799-46be-bc1b-172e9f94b8ba",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc7bdc82-e093-4b78-b7cd-5368f796b819"
        },
        "item": {
          "id": "fad315af-ef5e-480c-abff-929dc3257c4b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "859c622c-2f28-408d-986d-b3ef3ea0c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cc1d2d-f479-477d-bba1-50ef72174e7b",
        "cursor": {
          "ref": "7c2a41c7-5a4d-4d8e-9eb1-dcfc149afeaf",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2e5e970a-8cc9-432a-84ac-952c92d5aa43"
        },
        "item": {
          "id": "61cc1d2d-f479-477d-bba1-50ef72174e7b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1531a928-ee40-4ad4-8449-3296de965793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6a9d57-d12c-4693-ab33-86d4ebeb262d",
        "cursor": {
          "ref": "e8dd28d2-6d9a-4c41-9062-22df4e28172a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f5e4ca1-915b-4bb2-bf25-055cd7c137cf"
        },
        "item": {
          "id": "9a6a9d57-d12c-4693-ab33-86d4ebeb262d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dccb2395-c1ee-4e3c-82a3-68ece8e81d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25602d0e-035d-48c2-b7d3-03283382a2ec",
        "cursor": {
          "ref": "ec87f9e1-b40a-47fe-8441-95b0f848bf45",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "012c2249-0ec0-43f2-97e1-005c04d9e0bc"
        },
        "item": {
          "id": "25602d0e-035d-48c2-b7d3-03283382a2ec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b5825b00-219a-47db-a4e4-eafbcb447b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250821af-3bb6-4831-8903-f20a63a15a3a",
        "cursor": {
          "ref": "c6a87864-093d-493f-9235-f2c486785e58",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cd73d2ef-ca83-4bad-942d-6bebaa8fc7f8"
        },
        "item": {
          "id": "250821af-3bb6-4831-8903-f20a63a15a3a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b6d3c88b-3774-4296-9837-298038c70012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17abd1b0-c846-4c3a-81cd-9173c6f90c8e",
        "cursor": {
          "ref": "1ee6d31c-89b1-48fb-888a-bcfba611001b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "be55a5f4-04f7-4322-a38d-67fd6fced473"
        },
        "item": {
          "id": "17abd1b0-c846-4c3a-81cd-9173c6f90c8e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "74aa0c06-0c0f-45ae-9a2b-b547ccee0ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b1bf9-2fab-4c53-85c5-67dd9e0c3058",
        "cursor": {
          "ref": "603f777e-b4d2-4157-8c35-8a55a0129585",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9dba2bd5-bd4e-43b3-8f6b-a822e4e1c341"
        },
        "item": {
          "id": "f79b1bf9-2fab-4c53-85c5-67dd9e0c3058",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9d91bbc7-b830-4690-b6e7-f9fa95defe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eafbec-4941-49bf-94ea-de6c89a45381",
        "cursor": {
          "ref": "0c15a21d-7e57-4af9-a48e-06f3093b6ddd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "14e72b57-0610-41cd-817c-4f683c512f20"
        },
        "item": {
          "id": "03eafbec-4941-49bf-94ea-de6c89a45381",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "546bba4b-5868-4be4-8e25-273386e1654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef27508-4bc1-4326-a58f-328068ff69ac",
        "cursor": {
          "ref": "a4986415-f1e1-403b-9ed9-4ac5696c89bb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e67ab1aa-47bf-44a3-9435-f6bfe05ef75d"
        },
        "item": {
          "id": "7ef27508-4bc1-4326-a58f-328068ff69ac",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e5608d75-b137-47be-b782-94ceb61bdb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5934a3d6-d3ae-4025-a948-96b52137636f",
        "cursor": {
          "ref": "4947d38c-415b-4ae7-ac2a-e7b1ed20938e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe24f8fc-be40-45b2-b15f-576a432d442a"
        },
        "item": {
          "id": "5934a3d6-d3ae-4025-a948-96b52137636f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a22dd70e-57c1-4c9a-a8a5-942be6670163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b7432d-bcf2-41e4-9f08-4e75bfc8868a",
        "cursor": {
          "ref": "c4203600-f441-4d89-af54-0798acdba46f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "97086dff-e664-45b6-b742-eee8ca83872d"
        },
        "item": {
          "id": "d5b7432d-bcf2-41e4-9f08-4e75bfc8868a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "55a47c29-b4ba-4256-b7b3-158af87fabb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79fb67d-db2f-4410-b664-5fa203a1a7d3",
        "cursor": {
          "ref": "f02fec7c-4c6d-4652-acdb-ad0fa848d208",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "639d89c1-4be6-4503-9706-f8d28705e569"
        },
        "item": {
          "id": "d79fb67d-db2f-4410-b664-5fa203a1a7d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5f0bc32a-3fc4-4721-a1d4-d16a9ad4d12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c883d-213c-45e9-9110-6b197cf64289",
        "cursor": {
          "ref": "a36ca66b-1fae-49ac-b18c-e0610b17ac56",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "73abce15-abd2-4925-b7bf-2952c6931bcb"
        },
        "item": {
          "id": "867c883d-213c-45e9-9110-6b197cf64289",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e181d0a5-570f-4a4a-acac-fe71f2ce46a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800adfe8-599f-44f6-a966-c8e9b8087897",
        "cursor": {
          "ref": "57f99efa-d0aa-47d0-ab00-dd21c8a17583",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b39fddc9-fe7b-4a83-8e2a-7c551bfadb4a"
        },
        "item": {
          "id": "800adfe8-599f-44f6-a966-c8e9b8087897",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "802fcbb5-170e-424a-b3c1-5f0858273e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb136761-99d9-431d-88d5-c061a81ad943",
        "cursor": {
          "ref": "cb253b5d-6c44-4dc6-82b2-e0e5be2672f3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "36b6cd74-8aab-45be-bf25-c16fa6a9eb40"
        },
        "item": {
          "id": "fb136761-99d9-431d-88d5-c061a81ad943",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "772e5356-c58a-437e-9a9d-6707e4193272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ad1da-9876-469d-94ea-c4181698e772",
        "cursor": {
          "ref": "85add54e-141a-476c-8dd0-30597f69dfce",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f74a1574-5394-4549-bce4-598a45c2c397"
        },
        "item": {
          "id": "b15ad1da-9876-469d-94ea-c4181698e772",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "794bdafa-d840-45ab-aca3-0bdad6475ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7b550-fc72-4bc6-84c0-f28c6691306f",
        "cursor": {
          "ref": "0a8c2e65-3614-4c0f-97b1-92ee1fd7ca91",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "825dffe6-dff4-4ead-8e26-937b50d5836c"
        },
        "item": {
          "id": "a4b7b550-fc72-4bc6-84c0-f28c6691306f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "623cd6cc-a4af-4861-ab30-617f885cbb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24d5ffb-1079-4278-8759-9337aee66196",
        "cursor": {
          "ref": "ea57e217-c09c-4b0b-a411-930dd9dce243",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9518cf75-9c59-42b8-9bbf-1d295d010109"
        },
        "item": {
          "id": "d24d5ffb-1079-4278-8759-9337aee66196",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "10dbc83c-3c41-4a3c-9ca4-809e57b23c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f167267-3cda-40da-bcb1-a4460e469819",
        "cursor": {
          "ref": "7ce1ca5d-4b7f-4e2d-b7e6-7bc27a153a4c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe50bed3-f612-4aac-a888-624996e4efa9"
        },
        "item": {
          "id": "6f167267-3cda-40da-bcb1-a4460e469819",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "722d8f6a-1905-47ec-a7e2-11cef71068f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331eb5f-0c34-4bb9-a705-01d55e0ce000",
        "cursor": {
          "ref": "e5463cb8-1296-4153-a409-7999b8d5d7ca",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a9c5257-701f-41e2-88eb-20887b538c9e"
        },
        "item": {
          "id": "3331eb5f-0c34-4bb9-a705-01d55e0ce000",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "06270f69-6947-404d-b927-01b4a7d365b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccefe45-24a8-415c-a346-1122e4935185",
        "cursor": {
          "ref": "7fceab2b-d76f-4044-8a4a-8e2d057d72c5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03554808-006b-4cf4-81fe-28fc05ea9a10"
        },
        "item": {
          "id": "7ccefe45-24a8-415c-a346-1122e4935185",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1aebda79-fd23-4997-8a4d-722d672bd530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014be5bb-6c74-47c0-bef7-4eb894acb201",
        "cursor": {
          "ref": "e3eebbbf-409e-4ffd-9d89-088e2334ae36",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "180e5938-3ae6-4e10-a8f4-71320e9b6dcd"
        },
        "item": {
          "id": "014be5bb-6c74-47c0-bef7-4eb894acb201",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a425be92-f311-4f4b-947d-82da034c665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c702da5-855d-47ed-a9b1-5b0da803e676",
        "cursor": {
          "ref": "97e0f717-4b03-44e4-a3f9-593a8889e720",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e50b712-a165-4aaa-ad2a-8174a2c1312c"
        },
        "item": {
          "id": "9c702da5-855d-47ed-a9b1-5b0da803e676",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "84adc203-c2ed-4d04-8987-63f767ff2d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab65712-26b1-40f9-9452-d9182aa8ff76",
        "cursor": {
          "ref": "6fdf0e49-15e9-4fa9-8d34-1e991f641aea",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e5e5a13-edd4-4446-8a6b-51dc0078230a"
        },
        "item": {
          "id": "4ab65712-26b1-40f9-9452-d9182aa8ff76",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b067c6a1-39ba-4250-849d-f362b4b28e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae275ba9-7134-4201-9961-c113fcfbb04c",
        "cursor": {
          "ref": "32e1f6d3-e3fc-449c-9ace-ddbe5791972f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "81aca8da-81d6-40b6-a573-d7eeea00c46f"
        },
        "item": {
          "id": "ae275ba9-7134-4201-9961-c113fcfbb04c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "97bd999c-ca09-4609-b69f-9f6ca4f07a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8121d03-e845-4cde-92b3-8a008584f5a2",
        "cursor": {
          "ref": "6751342d-786f-4da7-84d4-cb75788ed4b2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "798546fe-252a-4320-863d-956d69f61c85"
        },
        "item": {
          "id": "c8121d03-e845-4cde-92b3-8a008584f5a2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b3a439c2-355c-49e6-9e77-d309d8c8210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9443406a-dc4a-4683-b818-6535ff219d8d",
        "cursor": {
          "ref": "e675ce3a-2c54-4c86-92c9-3b185265948b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a408c63d-c683-40c0-8123-09d3e69d416e"
        },
        "item": {
          "id": "9443406a-dc4a-4683-b818-6535ff219d8d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "09b69258-dd7d-48f4-ac5a-78d381edcd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c3114e-e7f2-4206-a547-8fb9172e0304",
        "cursor": {
          "ref": "620f3f14-ab46-4f55-b2be-85b4cc375570",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d4959c2-dd65-4e8c-ba4c-7b8428465a86"
        },
        "item": {
          "id": "a0c3114e-e7f2-4206-a547-8fb9172e0304",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9ebc578-6520-426a-8604-14f6e0695257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef449052-143b-4a7b-9958-f88b333ca7ca",
        "cursor": {
          "ref": "6f003b60-f854-4c23-8183-2ebfe402fe97",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bb375753-2508-4fa9-81c1-64d4f176f1bf"
        },
        "item": {
          "id": "ef449052-143b-4a7b-9958-f88b333ca7ca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "14fae056-53f3-4241-a5f5-c6428f1a77a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bbab2d-d5be-4427-9e65-14d9abf685a8",
        "cursor": {
          "ref": "251b2077-9616-4b7e-867a-28772b803b46",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "94e7faf1-eb33-4731-a21c-a77efebc44b0"
        },
        "item": {
          "id": "32bbab2d-d5be-4427-9e65-14d9abf685a8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "03e0583a-c05c-4d73-8578-2018f4d55ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbece4f7-5d35-401d-90e7-6d4e78da8c99",
        "cursor": {
          "ref": "c4d5812c-a7e1-4990-b760-489ce6602351",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4db19968-7292-4855-a5d2-241a25308346"
        },
        "item": {
          "id": "dbece4f7-5d35-401d-90e7-6d4e78da8c99",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1eba947-f5e4-44e8-99f7-956898f1475b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2cab3f-5a34-4dcc-b363-8fa3945766b4",
        "cursor": {
          "ref": "26cbfd8e-d1bc-4fab-9697-672dfcf66c23",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a351ca6a-b6b8-48e1-8ed4-77588208f11e"
        },
        "item": {
          "id": "0d2cab3f-5a34-4dcc-b363-8fa3945766b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "beab5bea-977a-484d-a925-eaf57c842ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605e7b3b-8d95-4d86-bd07-b6ccf332c7b0",
        "cursor": {
          "ref": "75b0ef78-9f94-4628-b638-c895118cb139",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "15fc99ab-c24c-4d2b-aa7e-67fd8a2aac08"
        },
        "item": {
          "id": "605e7b3b-8d95-4d86-bd07-b6ccf332c7b0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "039fccbc-69e2-4a91-920f-4c52d2ee9a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be50028-84e2-4425-962d-467fb607aa41",
        "cursor": {
          "ref": "0840e524-ad45-46e6-aa29-f0718f75d5f7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4fe07f2d-72b4-4073-ab5e-3f800812198b"
        },
        "item": {
          "id": "9be50028-84e2-4425-962d-467fb607aa41",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bbe73087-c1bf-4e0d-9edd-dc6f82893b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ac7556-fe09-4177-9dc8-b430abacbe16",
        "cursor": {
          "ref": "1cce0bc6-9c4c-4a0f-b861-6fe52fa9d743",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "192a2fc9-cd33-4ed8-94e6-a80b1306867e"
        },
        "item": {
          "id": "88ac7556-fe09-4177-9dc8-b430abacbe16",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9b7a5c8a-1594-4def-8933-43ec847f677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff60d14-968b-42c5-8db5-52b2f278e549",
        "cursor": {
          "ref": "2f8dbde2-333c-4e8f-bcf7-deb1b6018db4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a774e00-df13-47aa-a1f2-2de8118b5495"
        },
        "item": {
          "id": "5ff60d14-968b-42c5-8db5-52b2f278e549",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "44474fc4-ef1d-449a-aee1-8dca58d29df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699dc2f7-db89-4e6a-88e9-d67606ded773",
        "cursor": {
          "ref": "80c7a7fa-4d67-42ab-844d-47e973881f54",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "48a7d23a-1302-468b-9f92-b051755c530a"
        },
        "item": {
          "id": "699dc2f7-db89-4e6a-88e9-d67606ded773",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50b119ba-5aff-4859-b1e8-6be01b45106e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f13378-204d-4c3e-b5e2-5fa3e0842994",
        "cursor": {
          "ref": "71bc35fe-152d-4fe9-ab45-7415891db624",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b9c1825e-470f-4530-b893-86a06e355afc"
        },
        "item": {
          "id": "09f13378-204d-4c3e-b5e2-5fa3e0842994",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "72da1b21-40a1-4698-8f5e-274dd1a501b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f1460-4f34-4a4b-bc56-480a8604f016",
        "cursor": {
          "ref": "91f926f1-c0e8-44a4-855e-6375eadbf690",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "790cced6-d1bd-4a5a-bbc1-b879f8a51ed6"
        },
        "item": {
          "id": "907f1460-4f34-4a4b-bc56-480a8604f016",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "907bf7df-c6b6-4bc5-986c-eb0676d417c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1bbf18-02c7-4b89-9f59-16ef247c34da",
        "cursor": {
          "ref": "3391dd00-8324-406f-880e-ce08255321e1",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02e1cfdf-8cf4-414c-b0a7-856453e51631"
        },
        "item": {
          "id": "5e1bbf18-02c7-4b89-9f59-16ef247c34da",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cc968095-8bd7-4a08-8583-1844b582171e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5f03f8-f680-4c72-9411-64f650498e8e",
        "cursor": {
          "ref": "6697cba4-d38b-4951-8d94-4fa211e79649",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb67488a-b75c-4733-a507-5aa2fae1d50d"
        },
        "item": {
          "id": "df5f03f8-f680-4c72-9411-64f650498e8e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4bf37a1f-f4b5-4e65-bb3c-31d3675f33b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cf9b41-1407-4cdb-9e52-dfe652030eb4",
        "cursor": {
          "ref": "952ade54-46a9-4c25-876c-67a758b0bcb6",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4a05289-4bb3-4e6f-85ed-5a116dc92115"
        },
        "item": {
          "id": "77cf9b41-1407-4cdb-9e52-dfe652030eb4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0fda5b3a-536f-448c-b489-f7ec106ffe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354751b-8265-4abe-9f62-403ecccc4561",
        "cursor": {
          "ref": "5efd7a8b-abab-487f-8c9f-0ab2e4aad7bb",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d8d55024-adc5-4dba-bcde-080551941753"
        },
        "item": {
          "id": "8354751b-8265-4abe-9f62-403ecccc4561",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0931bf32-44dc-45f1-a965-27da9b97f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433fb7ad-a213-4c26-b7bd-9f4a076d986d",
        "cursor": {
          "ref": "b3d3bc6e-e68f-4157-ae89-b8e338d7b81c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61ff1625-831a-4679-8fc0-873cb80e6ac6"
        },
        "item": {
          "id": "433fb7ad-a213-4c26-b7bd-9f4a076d986d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7c05ae6e-9070-444b-9679-5f795aa729d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f517ca59-7939-4d55-9b44-81845d4ac12c",
        "cursor": {
          "ref": "984926df-b0ba-43d3-980c-851e8e9e0171",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "60f3c656-d01c-4753-9782-fdab806aeb67"
        },
        "item": {
          "id": "f517ca59-7939-4d55-9b44-81845d4ac12c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60880798-c514-481c-b102-3646d6557cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e1035-ba8f-4995-acc3-206177151c05",
        "cursor": {
          "ref": "c25c394d-7d5a-45ad-9c05-d5d46ab29b80",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a0eb654-2451-425a-967a-19ba3b0db688"
        },
        "item": {
          "id": "465e1035-ba8f-4995-acc3-206177151c05",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3c76b796-67ed-4941-8464-225c9d8ed136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfc6b8e-4a8c-41da-9fe4-06fe2b311c0a",
        "cursor": {
          "ref": "ae4471d9-dbc5-40b7-b324-546873f9c94d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ea882525-6a08-4416-a9d2-b24da56b9c7b"
        },
        "item": {
          "id": "1cfc6b8e-4a8c-41da-9fe4-06fe2b311c0a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e7488519-0f0f-494a-9598-346e3ea1fa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee4f909-2494-402f-930a-02de3ee52406",
        "cursor": {
          "ref": "a38060f8-d6b0-4967-83dd-be68e190cfd9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bc318fdd-7569-4942-b80a-7a51ab78791f"
        },
        "item": {
          "id": "bee4f909-2494-402f-930a-02de3ee52406",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c25a538e-d146-41be-9b9d-0b4f6d202ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d838e34a-fe9c-4753-9711-55809bcaf4a2",
        "cursor": {
          "ref": "bde2bd0f-4a34-4ef6-ab5a-190ba0e7943a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9a85fcaa-1a55-4e4e-8a4f-7e619a49a195"
        },
        "item": {
          "id": "d838e34a-fe9c-4753-9711-55809bcaf4a2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eee4c7ee-e962-4420-b998-b16ce9e8f6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb3832-4e2c-4424-8a9f-9054decdffe0",
        "cursor": {
          "ref": "cb7b02d4-2630-4d20-b62b-1aee8d5e17e6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ced1a9d6-b658-488b-86ec-8ea0e64d5fa0"
        },
        "item": {
          "id": "d1cb3832-4e2c-4424-8a9f-9054decdffe0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3c02853d-215a-46fd-8b60-f5f89acb52b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5977241-b36e-43b9-92dc-e94f9344d156",
        "cursor": {
          "ref": "d6733e56-6114-4710-85b0-8ad0d08984a1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ee4f7569-475c-4f2d-b969-a1e51f0e0dfc"
        },
        "item": {
          "id": "e5977241-b36e-43b9-92dc-e94f9344d156",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "191da275-7647-49a9-8c93-9d384c342f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236b8bf-a457-48e0-a414-31f6749c96e2",
        "cursor": {
          "ref": "aab332db-eafe-4994-ac5d-aa922a7aea6d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "11331b54-f1c0-4b72-8159-ce07059d4146"
        },
        "item": {
          "id": "e236b8bf-a457-48e0-a414-31f6749c96e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bf1db664-14c0-46fb-9aec-9e6e26f25d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce3b577-7fc6-481a-b880-06170dc41485",
        "cursor": {
          "ref": "f5459ca6-5239-4086-8383-99d918f3b9c2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8c0eebba-d07b-4dbf-8f8f-f6cbcec7e602"
        },
        "item": {
          "id": "fce3b577-7fc6-481a-b880-06170dc41485",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94096301-7811-44cd-9cac-66f789771142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0893632b-da51-43b6-b1d1-313e2549b573",
        "cursor": {
          "ref": "1433a2aa-889b-4935-bbd3-0a47189d9b19",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "929f23eb-18c0-4468-ba60-1d18b15f5fe7"
        },
        "item": {
          "id": "0893632b-da51-43b6-b1d1-313e2549b573",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e3014277-b640-4f34-9014-98ecfe45c5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8983ce-61b9-40a0-b243-84b5e320acc0",
        "cursor": {
          "ref": "74362f34-c03d-4142-a06b-7805415beaa6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f5a675d8-3422-4769-8ba9-f86b3305e576"
        },
        "item": {
          "id": "de8983ce-61b9-40a0-b243-84b5e320acc0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57837fee-4019-47ff-8ee4-2683a7ef3ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef0d84-eb98-451c-899a-6a29ede0d2e8",
        "cursor": {
          "ref": "483cc19d-bb3a-4ec4-959a-570539a01cc3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8998bf35-7b66-4eca-b7f0-bbe3f5d9aaf4"
        },
        "item": {
          "id": "d0ef0d84-eb98-451c-899a-6a29ede0d2e8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1f2187f5-c40d-4c43-966d-fef246fd0308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24ac0ab-7218-4ea4-a7d0-5cd772c7c2d4",
        "cursor": {
          "ref": "252af1de-689d-44c9-836f-6efa07ccdb6f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "76536390-d4ed-4fa9-bef4-1770f9a51325"
        },
        "item": {
          "id": "c24ac0ab-7218-4ea4-a7d0-5cd772c7c2d4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2792bf08-e57f-4dc9-80d8-6f453a5ffcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1940ab9-c5c9-4fff-b219-72bf8d1194f4",
        "cursor": {
          "ref": "c3181a8c-cea3-4b76-a4ec-e4709187dba3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "468b6f07-7c41-4d87-ad5a-9502b9bafe2e"
        },
        "item": {
          "id": "f1940ab9-c5c9-4fff-b219-72bf8d1194f4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "df3b413c-2078-414c-a1ac-3e588733d4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5954a0-c40b-43d0-89c5-afa56fb6df49",
        "cursor": {
          "ref": "e8bfc220-dc41-47ab-ab9e-23eb32fa653e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9c6f7bb9-4c1f-43ec-9dc9-87ef8f1ab407"
        },
        "item": {
          "id": "6c5954a0-c40b-43d0-89c5-afa56fb6df49",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "11bc16e0-ce10-44dc-a267-e3b1b40a6e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b607be-5bcb-402a-b50f-3cc490ab5730",
        "cursor": {
          "ref": "da2bb2a3-025c-4d59-86e6-ec39b076d917",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "313d27de-7cab-46d6-b13b-ae628a4cd1c9"
        },
        "item": {
          "id": "23b607be-5bcb-402a-b50f-3cc490ab5730",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "563f382f-47ef-4dc8-9715-ac844ea30fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79cf320-0379-49ba-a783-785b077c4674",
        "cursor": {
          "ref": "6aae4cfe-e177-4590-b31b-1d66be3ef766",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "11eb4031-5932-47d2-ad91-98b473219d74"
        },
        "item": {
          "id": "f79cf320-0379-49ba-a783-785b077c4674",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f7b8053-7629-476d-b83a-d330b1368ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693644b0-4faf-4e38-9f6f-039f936e7290",
        "cursor": {
          "ref": "e601a31d-67d8-4a9a-8744-054a1aeb4a6b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "977bf488-3d31-4fda-ae4f-1631da8064b4"
        },
        "item": {
          "id": "693644b0-4faf-4e38-9f6f-039f936e7290",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "26a20fdb-67a4-4b5c-be60-a0fd6636f9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ecca9c-b032-43c2-9177-70a76f8a0345",
        "cursor": {
          "ref": "4ef67c4a-8f3f-4473-9e62-779c2a65c6b1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "22afb3e6-f9da-4c85-a375-d507838da75f"
        },
        "item": {
          "id": "a7ecca9c-b032-43c2-9177-70a76f8a0345",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2b091c80-765c-422e-9970-976e105ce070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8920da93-c9a0-4be9-a139-8b118394b299",
        "cursor": {
          "ref": "f7b5f542-0e6b-4179-8c17-7daa989f2a8c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e4572f1f-876e-4a54-8f4b-82e6fc3cc768"
        },
        "item": {
          "id": "8920da93-c9a0-4be9-a139-8b118394b299",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "33627e91-d481-452a-9858-3b59fd278e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ebf531-b717-46d1-b542-409a9cf2d9f0",
        "cursor": {
          "ref": "5ceca24c-f523-443c-a6bc-b6679b01488c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "78f61462-34a2-46ba-a3f4-408cb185902d"
        },
        "item": {
          "id": "06ebf531-b717-46d1-b542-409a9cf2d9f0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90529cd5-ec56-47af-ab64-ad4cb98725dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f8442a-898c-466b-bc6d-561fba539304",
        "cursor": {
          "ref": "25f56501-9a93-43e8-8801-73276ff3f791",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6709748f-1e4c-4b58-bfae-ce7ddc145d80"
        },
        "item": {
          "id": "84f8442a-898c-466b-bc6d-561fba539304",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "30461899-87d0-49d5-a6ed-fa65e59af69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4711d290-6c60-4b4d-b9ae-7b8114ae1a60",
        "cursor": {
          "ref": "fb56a99d-8a9c-4e0d-a5cf-59eece93b64c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9c112f01-ad2f-4dd9-a136-d51197c50a4f"
        },
        "item": {
          "id": "4711d290-6c60-4b4d-b9ae-7b8114ae1a60",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "baa8b63a-a8a7-421f-8717-c559b1273010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab27cc8-fe5a-4962-9e0f-940e4a984d7e",
        "cursor": {
          "ref": "5159ff18-3151-4ab8-a434-c99ad6984983",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2e841c07-5a57-447a-ac3f-49533af5c7c9"
        },
        "item": {
          "id": "aab27cc8-fe5a-4962-9e0f-940e4a984d7e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "06ad199f-baed-4549-a2f6-d12a75c20596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcd14f3-96cb-40d1-9e63-641f731d9926",
        "cursor": {
          "ref": "482756e4-c492-40c7-813d-ee5c2e0ec01a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "41774970-5916-4614-ab8f-e2836f6ce3d2"
        },
        "item": {
          "id": "5dcd14f3-96cb-40d1-9e63-641f731d9926",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8ece2ea0-dc32-413b-9ef5-b56ea4ba9432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48520b2-5be6-451a-a8f1-f91bc67590a3",
        "cursor": {
          "ref": "c4710156-9bc3-47c9-affc-a6a566222ef8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "744cb5fd-f3fd-42f8-9a25-d56de57bcf71"
        },
        "item": {
          "id": "a48520b2-5be6-451a-a8f1-f91bc67590a3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "92e4962b-1901-4d88-b273-4c817216d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35883122-b6c3-46be-a1f4-0750f19bc421",
        "cursor": {
          "ref": "b0109d56-b698-4ef5-a9c0-622020f1aacf",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c0c36f7d-3974-4ca3-9af2-ebc4bf504e97"
        },
        "item": {
          "id": "35883122-b6c3-46be-a1f4-0750f19bc421",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8f2f7977-7226-4a0b-94c7-261b16180d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27660c4b-4057-44ee-bddf-339942edf6d1",
        "cursor": {
          "ref": "a0133553-e7bd-46cc-b2be-366ef7fa917c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ade5c8da-45a9-47bc-a1f2-283735f5e3e0"
        },
        "item": {
          "id": "27660c4b-4057-44ee-bddf-339942edf6d1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6b0bd3f-bcb1-4fec-8731-05cb1ec8828f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f0ab6d-9445-4d97-a5bb-0d1c5ae347a7",
        "cursor": {
          "ref": "0c1b756d-f0fb-4e20-ab48-7229c757c499",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7d76094d-e5cd-429a-ace7-73214a00a154"
        },
        "item": {
          "id": "56f0ab6d-9445-4d97-a5bb-0d1c5ae347a7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "700c1119-4486-4b7f-a081-792522ad173f",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a1a599-3657-438f-951e-8c080dcac27e",
        "cursor": {
          "ref": "937cd78a-a810-488d-9298-23654b018b26",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "432a2885-ef84-4acb-a89e-bf7489c2bc15"
        },
        "item": {
          "id": "37a1a599-3657-438f-951e-8c080dcac27e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a7559877-37e3-4480-8d98-12351bdecf91",
          "status": "OK",
          "code": 200,
          "responseTime": 19760,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7f831b-d6b6-44d0-bb17-c75c6e7f868a",
        "cursor": {
          "ref": "d7a39f5d-1957-4d35-80ae-ec7cc01544c2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7bd85229-8819-4d71-8c6b-1ec13dbccf80"
        },
        "item": {
          "id": "7f7f831b-d6b6-44d0-bb17-c75c6e7f868a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b3a885a4-2f17-464b-b471-8b82bc03fc4b",
          "status": "OK",
          "code": 200,
          "responseTime": 15809,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c27730-5b8c-4c1a-9dcb-3ae4950b633b",
        "cursor": {
          "ref": "23e0ddc2-000f-429f-924d-647537e3cd1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01caee31-1171-4b90-be8e-b7f1dcb0708e"
        },
        "item": {
          "id": "67c27730-5b8c-4c1a-9dcb-3ae4950b633b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86bc32e2-2ca1-4605-b636-22469382e452",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c27730-5b8c-4c1a-9dcb-3ae4950b633b",
        "cursor": {
          "ref": "23e0ddc2-000f-429f-924d-647537e3cd1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01caee31-1171-4b90-be8e-b7f1dcb0708e"
        },
        "item": {
          "id": "67c27730-5b8c-4c1a-9dcb-3ae4950b633b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86bc32e2-2ca1-4605-b636-22469382e452",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d999e73-31a7-448e-899f-e1929146563d",
        "cursor": {
          "ref": "f256ce2d-554d-4057-bd4f-a8e7e1fafdbf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d58d7d18-573f-484c-a475-76e816df99cb"
        },
        "item": {
          "id": "7d999e73-31a7-448e-899f-e1929146563d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f8f4fdf-6c6a-4996-80d2-ef129665f4fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dafb29-0d59-444a-a378-7c5a9cfc5bf8",
        "cursor": {
          "ref": "ef7a45f9-9cb2-4847-90f8-fc1ec4047f0c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e7220f7c-bc29-4d36-adb0-9128f51bf898"
        },
        "item": {
          "id": "80dafb29-0d59-444a-a378-7c5a9cfc5bf8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "36888697-c4c5-4684-a5f1-df352c113af2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}