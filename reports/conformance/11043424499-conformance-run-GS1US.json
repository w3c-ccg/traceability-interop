{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "383df326-a816-48c3-b709-4e4d483bd0ec",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbd3fad2-ba11-406a-8a41-7a3adee803b9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52375f00-1f6a-4aa2-87c5-54a932ae9f2a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9b4e94f5-b188-4d2a-9e3b-cb85326467ac"
                }
              }
            ]
          },
          {
            "id": "d0dbb2c1-1a1f-40d3-a207-40844a8cbf3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7875bce7-2306-41b8-99dc-107f690e6953",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d99fb0c3-c39a-458f-b534-38e2a1a970f1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a90a1d4e-96a8-4822-9cbf-c8ac2e063497",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "48db41c2-9aa0-4c31-8d33-8fbaec53a4a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "583f0af2-4719-4bb3-bdb8-d37ed404c8cd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f6dd91-cd93-44e2-b169-93198917eb47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a04659d3-af0e-4876-8d50-920e1cc8d5ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c80a9936-17aa-4823-b53c-740bdf5ed22b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "941d7866-5047-4b54-8542-57ca5f6b0d26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ce6d3b7-6d31-4c9e-9f50-d6e070ef171f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81a681be-6e52-452b-9819-7c045321cd0b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51084fa0-1269-4d11-960f-08922c9845ea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b03ba747-c5a7-4a77-9c65-2639af079f65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31e25ee6-2748-48e2-a9f6-9f5d05c3e694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a31084d2-b023-44fd-90c2-e810b65df6f5"
            }
          }
        ]
      },
      {
        "id": "3f4a0bd3-0f0d-47e1-a03c-a758fd5ad5c0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "754c202f-43d0-4268-ad25-7dc8318ef3ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff8ac86e-aa0b-4c66-87e9-68db3cb9bdc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4634c41-cafc-4fb3-a58b-b9de3ad8fd23",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab2ded-f5c5-440a-8db5-96f0c1b49b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "064e809f-8c53-4b6e-b4be-a7b0944d95c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daea8a9c-e2a8-4075-aca4-a9b5e8f6cf26",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12f4d8f-fcbd-4dc1-9366-7f540e786168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f73f795b-5acc-497b-b721-cee3bc1a6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e2b516-dd90-4695-8d85-74070c1bb5ee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6ef9c7-9ddb-465b-b9d4-2c3c63951566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50832085-9a89-437a-9daf-32a3212108b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1819a36b-b6c2-40ba-a491-f9875be6a172",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "163c5224-fcf8-4447-9845-793b792037fc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd9247a-71fb-4d1f-9164-e5931381b673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cdd21e2-2c8d-4fb7-b2e4-3e2cbb191136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbab8b5-2843-4c5c-87de-58f79e245b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdd7887-676a-4ce7-aca3-13b3dbdcc36e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "132be5ba-44a1-47a6-b27e-4770d5fcdc34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7be4e113-1285-4b9a-befa-d36292bcc81c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e91690da-80aa-40ed-a240-4e8bae2074b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "48942050-abd8-4e7f-a52d-b786dc84cab2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25c4db1f-47a7-439c-bf02-b903ee4094d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0ae15281-486c-4e92-9958-fbfc9b3ea3b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46e6bd0a-dfe9-431d-9912-124e0ce88eb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0edefd06-5c2e-411f-8ede-d70afc717804"
            }
          }
        ]
      },
      {
        "id": "87158741-eb18-46e6-8755-25ad63557b89",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "974d2f3f-ad52-4ec8-987c-a38f828db634",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20b06132-73cf-4787-b0cc-337a42a6d995",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7152158d-c585-49cc-8a7d-4c7dcf2e34aa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9611b13-2b72-410b-bcc3-1887a4a16795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df46ec0d-d4c3-40f4-ba65-b632c36c0f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efdea12-d688-4e87-aad1-cd6b3f80d4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6c2163b-52f2-4641-a70d-55c877fbfa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9ca1b-feaa-44f4-bf10-868d78cfbbcf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560d8f8d-6499-4bcf-8be8-3b5fd870786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ff24d8-879a-4ed2-b02a-eed739a191a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb71f61-08ef-485b-a39a-6f587af5aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32262c92-7c83-462b-9134-721e779e68c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281e78d8-eb41-4450-9a3e-d42df6bdbfa6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ba3db-0d46-46e8-95c8-c339b4ff98ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d1946f-4b8a-4973-b802-bb5589fe310e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfd9d13-d048-4cd9-9c27-4d72220de440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d9a664b-205a-47a4-8443-f41758edfbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced33a6-6dc8-4424-8282-09167249cce4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ad28b-0e3d-4222-9636-81c8b81e66c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ead4613-b5a5-4508-9453-f12406aa2285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaa4ced-36ab-48fb-be57-35243df997d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2411d0e-f4a9-4460-8c6d-18699c3a1497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb180b6-7e59-45fb-bdae-6d245236cec9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721eecfa-3ec1-4711-b8a5-4ba7fdb420b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38874c44-56d8-4ba4-bedb-076b1de0802e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be18bf2-a412-4e37-aa34-a1c9176c3fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ecc9d89-e0f6-4d5f-a532-aba0fecc7570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec9275a-a5dc-46ce-9158-13c27b9ace0d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282a8b6f-6085-4451-8f4c-e4ee6f277515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d378bbc-aaf6-4a55-93c5-79d214ce871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a2842d-c3c1-40b9-b23f-3aea9d3746b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31aae56f-d4a8-4f3a-abda-750d73ef2c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04d3d27-bd66-4966-9152-9d40465dd37f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffa81c1-6fbc-4f0f-9000-a5bf26ffe604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8d794a-391b-4771-b6cb-b264cdb11080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c807f9-e3d7-4bc5-8dbc-0a79eb86b09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "065be1cc-43c1-41ba-ba69-76fafef1be64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb34559b-4c1e-42ad-93d5-ce29a4e87aca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7501e26b-189e-418c-aea0-b20f5c5c8c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c975fd5-75ea-4eb6-84da-18c61a0564df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50ae9a5-97f9-4c75-9c7a-e34ff5e84d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb84d58b-359c-4379-be2a-83cd90dbd828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e290790-f9f2-42f6-9606-ccbc1e864ec4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a551155-5892-45be-8365-d7051407c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411e77ad-7e0b-4b98-8065-52114d07cbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eda311-8f82-484e-87ae-0afe09674dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "256e1c77-0d31-4c56-98d3-1ee933dcc563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f71918-296a-4b9d-8856-a6f89a6faea9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1737fd-7757-4144-82df-d6c2d7cdcf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dc7a7c-75c3-47a0-b6f7-bead9425c2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a04b6-da58-4875-a9c5-319a9bb7229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314d7745-28a0-41cc-beea-55279a3ff9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c98719d-98cd-475c-b541-78b61b25fbbc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbfb786-8e63-4d44-9b2d-0c3a767346cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae71d1c2-6ed0-415e-91a1-406a89f7e242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9240a00f-ac9a-4819-a751-974dc514e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe2553c8-6ebb-4938-8a45-8179b2f6c249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80bd50-6b42-435f-a591-c0cccc515d95",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661dd972-64c9-44ee-9a48-bb9333840df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaff450-09b6-498b-b2c7-b778aa948056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9883190-8cc5-466a-b747-2a9e1866b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08157dce-9082-49c3-9b34-dfc45160d190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914724c4-06ae-4ac9-86b4-ba065f29556d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ad93bb-ff25-44c8-ac5d-8e3899992429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a22824-22da-4bca-b537-e6c1ca576836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38accd0d-35b8-4bde-ab3c-291d843ed580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "684c5676-7646-4a40-b9d5-2fef0f0020a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53349261-d95b-4ce9-93ec-0b09fb79fbdd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33698a5-0076-4ba2-8b41-44a467fd8f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fd251a-c9a5-4ce5-9a1d-efe55c7d977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68667543-54f0-41d7-8bd9-e9943de8b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0933d3e-d44f-469f-bc82-ee790f54c51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132102e5-1fc4-4d29-ad72-3147ceeef66b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a66dab-4608-475d-8dca-6462e3ff3e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67029474-2632-400a-96df-fae5d63f0e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178fd2ba-b59f-49ad-8800-b6e4d76c71d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82865eac-885f-4aba-985a-787367df69fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d99ff30-3c59-46d4-a0d3-d0426f512d38",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45aacee-d3f2-4975-836a-b2cfca7f278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23806d28-2426-48ad-a6fb-fdce2610c516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2ec5bf-2bcf-4c58-a2da-2adf6b88227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdd9133f-86b1-4f3c-8865-e38ef81c38ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034b8cb2-406b-4e79-b94c-76bcdfb24969",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a33909-53f8-4fac-a8a6-8258a607bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356e16b9-422a-4214-8207-f7cd97b25ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5247c2e7-e638-46a9-af23-6dccf78b575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ec66de0-7598-4e6e-9be8-a7748e0b9c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d92b15-5905-4caf-bf20-35b11b11b193",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15e70c1-27ec-40f4-89bc-1e933d985cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b69ccc-10e4-4ede-8327-fcd1b9f3ae35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f469ffe-614a-4ad8-96d7-ddf21c325e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e397056-4aca-4b4a-b1e6-1100bd3eeeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a455ae8-9e63-41eb-8ce7-0c36de32c062",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063a7d25-d6c5-49d2-a719-9989fec9e93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2ba791-2b3d-4699-8db6-20e908fc7f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a23438-d8e0-48ce-b8dd-339f5f01aa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "070e5b67-cb4e-4cfc-81d9-81567f21bdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2db2b9-617c-4694-9cbe-897cc6995e15",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6ce43e-83c2-434e-9f64-ea15cafa9b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28105403-d0f1-4e6e-a9cf-7a622099ec2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d23108-930b-4f6a-ac2a-5cbe94ae91e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19849e00-c027-4157-a3d4-bc3537496b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9316e7e-0a8e-4975-a28d-82abae561aab",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbdbde2-39ed-4b14-942d-7d09bd177b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718eb590-d91c-4d71-b9d5-ffa38ac28fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0176a05-0a12-4057-8ebc-cf8212e1c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4f8ce4-0955-484d-8570-526f241276f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a99f266-37e7-4f7c-beb2-69f8b0155487",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37f158c-ba09-4e73-9dd7-b915d8c52818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852ef762-ec91-45e0-bbe8-c5ef08f52354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9101cbd8-4cc8-4b10-a235-5cdb2aee672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0843b744-0f45-4cf0-be69-4aa60d89354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a4ecf4-0606-46b0-aa15-48e4766b0e21",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6be445-2801-4e93-afe1-882b260d1538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c879684-5ded-4d9c-ad8a-735945885eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479269ec-a657-4dd8-a372-3d28c1de6173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b30087e3-cd3a-4fbf-b80b-fb4198170a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d34de0-4b11-4198-a258-5cc6dbe2e176",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a390e522-9fec-4d12-922d-b06bb151acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7473bab-d5c3-409c-bbc1-5fe0435ccfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb68e7-a23f-48f4-b13e-5d8833f3ca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82cc2add-e882-481f-b11c-3a828de7307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619eeef2-2cd3-49fd-bcbb-d2965c7da592",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f7c4f7-8735-4829-b095-113c33229604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffd391e-90fd-4081-a864-4f3665a48cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0448a5d1-eb8d-43db-9122-73d194b221f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "268fea20-5b50-48fa-8eb4-6086220df2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca4aea6-b8bf-4303-93fc-7c3c21ae0ea3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5434fe92-12df-4ab5-815f-15b7fb1b886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9320bd98-d2d5-4ebe-8a3a-42302337b9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2b836-8187-455b-a455-e3df1f4f71d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4ba5a2-b250-4bd8-98b5-e25f6a6c5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316a268d-0502-4042-9375-a59631077f91",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89926651-71dd-4cee-87ba-eb603dd0e3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d87b2f-d6b6-43f9-9f0d-6c9ae38d6c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb99480-52c3-4df3-a7fa-b3c348a00487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "122239ab-0ad2-4e03-969b-0813da4b153b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2d9e7d-2a96-4720-a570-319dfc25be42",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ad1d2-7ac0-4929-bc10-cf9e0e19b2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b1107a-e40d-42be-8c3b-b4169fd5c9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c09e266-b7d6-4b22-a521-8ec380ada3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c944490-dad5-4e96-a8ea-1aaf64d64932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aad741-a48a-40bb-bcfc-f5574135a503",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a9a917-2cab-473e-8820-61d08bdbb042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f8d788-f564-4269-9e17-fd23d15efe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9defbb23-fd40-4c72-894d-01340d608e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a482d019-ad9f-4599-b393-1505abb5f3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5666a4c4-dbef-43e7-b7f1-2b20457ec492",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e81f09-7b91-4158-8c73-d0a95cf5ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f9c10a-45bc-4e8e-9cfe-2b1280f7fca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f394ea-12fe-4baf-ba4f-19228ed514e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5453d403-5cc1-41b1-b4c1-240a4793735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee935fab-cb9d-44be-9b0a-c444b8666b4d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df612e70-2332-4dc8-88c2-10759a89028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bb39bb-26e4-41e4-a010-6fd37f761fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c157a6-17d0-42ea-bf91-9eb3a8025663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "588f40e0-99b7-4179-a0da-de7aa7f6302c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e150e938-4274-4642-a1f2-a38fa6ac4a45",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f84e0ba-854e-4d53-8683-8d26aed2c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3063f0-7765-4e8b-ab56-a8ce8f32fbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa334ff-3da3-4b5f-9dc7-b7a91c71cde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3000d392-6423-45d1-a5f6-e800ffcc0e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e427cc91-35ce-4fa4-830f-49f3d3bf2c86",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d1c799-6d7e-4f07-a189-bfcea96b05c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53372b2-707a-4637-bb84-5c390f4872a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e222cdc2-00f8-46be-9fc4-e9095a6ad745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df49faac-1e13-4c43-b1a1-9a35c5db3f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41411d9c-56e6-4340-8c6a-cb9424fc7495",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9eebd-895b-45be-a191-e840c87012ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7464ccf-7372-4b0d-97e7-a39e9c1c59bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b775ea-c66b-4d24-847a-8d07b9989fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e088cd-41fc-4709-a015-a86a83e053bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca19739f-23f8-409b-9289-d3b5d55c19f8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910d315-5cb9-4835-a4af-430ece013060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca42b879-0a53-4dc4-8047-3f042570bdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198c8637-92fb-4c61-bb43-8d5151a84bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a273c502-7f9e-4eb5-9264-3e39cbdc7550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a1279b-6ef3-4115-b237-bffd15182948",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0984ab7c-18e9-4a02-837f-3abd318202d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30a76c1c-3ac5-41b8-add8-7311aa4f55bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd60ee6-58c9-4faa-975c-eba0be97fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc77c8ec-58cb-4364-a8c8-3251ca22bfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aba801-9ea0-4869-94c6-596d1858bd49",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d8ead4-0264-41c6-82ba-6638064d1db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22aa4bb-973c-4a99-a0fb-abda47b6da0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdaacb2-d39c-46a5-9df8-76a9cfef2cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5767671-31f4-45e9-9af7-8410f3f9e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ded02a2-76d4-4242-a6d0-f1f0016a9606",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6832976a-0f0e-49bd-b5ec-10304441afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321199b7-6beb-43a4-ada4-4298f051ba1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c30c49-f4c7-4af0-b6cf-7e40f83dbdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2546e558-df58-4e11-bf77-6c463c6d5950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f88cc43-3a20-4b28-ae03-4af0d472e6ec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7d96c5-1f79-4f59-8143-37d0b85d685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a6e06d-f5f7-44b2-97da-d47cbb3b3e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8739f799-5a9f-4ee2-adc1-f11336aff6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaf3a86-ede8-4e6b-9371-a89e223573d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d50efe3-5dda-4c04-afc1-30679974a113",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea36d636-65c9-44d4-84ff-0e5d65b58f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650f40e8-943f-42ad-a81a-3f6b395c1a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2be143-52d4-4309-b740-883e3820d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd61a734-f509-4e2e-9ca0-343025fdfcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c347940b-0a08-4267-acea-80e60f017f6b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c80de8-e78a-43da-b76e-ff17ce625b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1626f6c-dbcb-4904-96d4-3577c4ef2323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3608bf5-220a-402f-a77c-ab5d80124c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa13a46-9c3e-4a2d-80bf-18030c53c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a23029-53b9-4ea3-89ea-2a2b1d4126f9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb1688c-2ae7-4e2c-8970-3e846613c253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d20b08-86ee-4b75-9a6e-3621dc60451e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214ae8e-0d48-4e70-9926-485016e15631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d86458-0b62-4cd0-9a0c-b5349436d3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993d946e-ffe7-4e34-9bbd-4789a2a946ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655343d3-a928-4c83-a21f-ca5d245e4387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3307635f-bdb0-47b8-9272-1132e12f5415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb782f5-3bd1-43c2-b077-86aea38e1473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c954b025-f06b-4a09-96d9-dee1ffe14cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360fd05e-7c8b-4ee9-ac74-0dfcd8875358",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f8f1d3-0734-412c-9a3f-5a5e5a24f5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92420b6c-263e-4a01-9ec4-ffaa568bd48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a19dcf-2955-4c9f-b19d-b69671f8d737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f441052c-d586-4f5b-9a2f-1c7ceb46e00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce53fabc-78d6-4c34-9888-681f0db5b132",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f16325f-a4fc-4c64-99a6-5f4735625b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42e9f8f-3f64-4496-8069-156ad46ce329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023216d0-6433-408f-b005-ee57781302e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7587c6d5-8e93-4d0a-ac3e-66773bdf7d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b606ca-3579-4367-91cb-1a8432a26556",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f081b60-258e-45b6-bb15-f4a29e7a8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c71100-5051-49b2-9dea-0fdac94c02f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72c85b-59d0-4706-b6b5-5592cea6d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1240eb2a-0045-49c9-920e-5dd44d7f88a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2aaee4-5d6c-4d96-8be0-c4900f093944",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fc5964-2c5f-4212-83cd-8073e1718357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32e9976-c097-49dc-acd9-ae300c1efc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12aef34-4116-4268-a530-f85fde5b08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "207469f0-f2a7-4f70-8edd-cd54cc4a9f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312fbe7-f61c-4978-b364-61ee06235c44",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c7c5e-c845-4acf-bd59-08b139dd1cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651ff22f-ea7f-47af-a81d-c66e01c636b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d361616d-5061-4ff6-b4b1-68fb6cb5d137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a734a0-d860-464d-89e4-778f6ff513a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87485a22-a20f-4e46-a776-97cea785a065",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28098bd9-b1f5-4d6d-916a-868452b50bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed4f61a-b03b-4b61-bde4-5079b3266260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638ef788-2dff-45a7-b730-add91cd34b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3219b0-d587-47c2-a444-b4487f0b2652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f2a251-8e77-4a2d-a996-b75c310bb7b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6681a2-8134-4b71-b39b-8a026cb48538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72e195b-e92c-491b-81bb-c2956db67ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cafd8eb-1d0e-485e-ac3c-8ec5a6445e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4593f5c-be72-4882-859b-683628bd4551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303a4a3d-041e-40b0-9ddd-9eae4ba4d73d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cae4fa8-1999-4087-81a1-bb1eaf6e72e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a20114-218f-421a-9aeb-600a5c3c70fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9afe9f-5e12-4a67-845f-07d63fcf230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f5ab71-8e47-41b9-af56-1507dd6d5045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3738a84f-ed17-4d61-9df5-663ed8472a43",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fdf7a1-9917-423d-8ffa-9501da43b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084f02a0-2f9c-4686-8af4-3a1828dbb999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3edaf63-e2a3-4d48-a394-e659e9bf7df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9630acb0-3dfc-42a9-963b-560776cd12da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95affa78-0f76-4e94-a6d5-295697c548a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04575e29-f7fe-4a7b-bd79-9ab61fdf9203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5ae7d2-83a0-4398-b956-a989ef505edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b9a16a-3b76-48db-9486-897a468d0b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0084a62-4113-4871-b119-58d3e4d79a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f6b06-692d-45a9-bc21-b79cf5c06a25",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aefa501-2d87-4b25-860d-a62cf5140ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f92b40-a7c4-4c09-8d6e-beae2aafe1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8017713-8796-4be7-b267-899924d50f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "661953ee-0bea-409e-913e-eb3637176941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999c21e5-3634-4dfb-838f-66cf187f06f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceb7c5a-ed1c-493d-ad33-ca5e05af9932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a55ce4-56b9-45cf-bc51-5f9ed046cd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df63fdce-d18e-4896-9f58-ff249aa75c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "923550d6-c9c3-4c9a-bdc4-bd99fd43a6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bcd5cb-bee4-4d9e-bb63-42f456682bb0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77efd9c1-2420-4b04-9742-af52da88c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8279441e-32f3-4683-9718-7c45c06e92e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b975b209-825f-42cb-a31a-ac02a0217bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fbaf97-9d13-4e56-b321-0bb6aed90042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35c50ac-8d69-4233-b11e-42f77c36da8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9184ef99-8815-4bec-bcea-5f13689be917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce08cab-3af9-47ee-a368-620513a5c054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9065d2-c271-4ac5-a860-695e25d552e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02dba23c-1ceb-4309-91c5-7df886f34b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12160ac7-e559-4181-a319-15d9e0824709",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0ac6c-0a8a-46a0-9d23-75ede13d0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe51ca3f-16db-492e-99ff-80cf4165b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25522fa-327d-497f-bd6f-29ac4f8cdc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e135ec5c-b83e-4e2e-a4dc-62d9a2a7145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ed3d75-9b5e-4c55-adb0-e1f839e1832d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b28fe5-5372-4fe8-b6b4-a0e96cef09ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446502ef-fac9-4f74-998f-d319018d1687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47284c50-2c93-4689-8101-3661f6db039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d919a8bb-846b-4e52-9908-602f6a82094d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4a15ff-6660-42c3-9dc2-3b71abc983fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae18758-13c2-48fe-95b8-1d616de8cca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa52bac-28de-4098-b4f6-b45d4d51a4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f926bc9-01d3-4091-8393-54a663d56788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b321e46-4fd8-412e-ab9b-90d44d3b3973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1b6954-114b-4650-9119-b9a413f348f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0278abe-75d9-454e-b225-5743c27008b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f40524-6714-4428-b6dd-35ed2edf0cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7299165a-2899-45db-a28c-e2f5a86024b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e41166-e864-4cbc-b4a9-cca84c5c3853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cdc14b-9aac-4425-a874-0c656c08b4dc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afcde63-7c51-46d1-a257-7375e5482014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fad4a43-df8f-450e-8946-95e531e6e422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1744cb70-ea42-4df4-a3cc-c1bf4515dd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "03fff8d2-4ce4-4e95-bc3e-2b21b681b9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674dcfb5-68c8-475a-93e4-972ada191f7c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc26a2b9-8f1e-4b93-a05a-036e667ba617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9573c4b1-2d92-482b-90b6-2aa4171110cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59c83b-57bb-44c7-850f-a74e74361df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf50cc6-9205-41c3-a752-d3e9a61b46ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99601b24-cac4-478f-9ce8-49bce9b318ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6a39dc-9f20-4416-8c1f-d0a00f3de8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57720f7-a428-409f-918f-89e049f79665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a878b1d4-b9f4-4239-b062-2802e8c12cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "326bdfb7-4177-4d06-8e21-650319528fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59dab7d-c7af-44d2-bbed-6032b6813de4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd51735-157b-4d6a-90e8-98c74605db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8051d197-6eb3-42f6-8cd1-1f272b0248f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ed80f7-0b87-43c3-a98f-a6b953803423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "182d26ed-26e3-4c3f-b61b-eb81958a84cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a0ea6d-13d9-4f10-a266-dab175b52e05",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f416ac-e8af-43dd-8dea-be859f790a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cdb983-ae4b-46cf-98bf-655a8c02dfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfc657c-98bb-4b75-a025-cb587c2672ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e60409-2806-416f-b67d-571178624fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204326f9-1f70-41aa-bc88-6db5566eb199",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d520c5be-d46b-461c-b767-6041fc154b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972a670e-0e5b-4963-b5fd-e66d33c69a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb91728-857c-4f1d-87c1-047c9244a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "128b13e9-eeab-4f74-ba66-0bb25d69d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a9719-de12-4b27-a4ba-4f6efbc0da6e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fa1c92-2b98-40e3-8d47-5990681a372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b7cea9-4df9-4f86-9668-19dc0ee1de81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675bb357-fc1d-49ff-8f33-93ab8b186d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "262b8f71-2b58-41b2-9892-2887ae80c0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb9a184-c68e-4de9-9262-f3bbfdc51e5c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2764708a-8f9c-4920-814d-a14c7b466363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46989ef-c3e4-4baf-a848-162b8d8300dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e122d0-f90f-4c69-b224-472143524483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df00ee1-63bf-4229-8d89-ac02a0dd0ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1844beae-029a-4af1-9ce0-29050f7cf103",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a225b17-e972-4350-8aca-e933090afe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799a3e69-9d2b-4438-8d46-b496c20d6372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc231476-4567-4551-81ff-abaf4c76a7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfb865d-d33f-45c2-91a9-6f483f2898a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23626c79-5c54-4a34-bfb3-57635ec11d6d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6535eed9-27a4-42d3-b7e7-041a44d469b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fba4ac9-007b-4822-9165-c2763ec18ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b66374-58cd-44e9-9cf9-fdb8633ec796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d116d24f-a115-47b5-a097-17d991a19c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ce4af4-9476-4a3a-b90f-a37590bf73af",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0a5712-d3e7-4eb8-888e-b4fe3642cf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c619581-f421-482f-835d-ad257ddbb4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138dc2d5-39d9-4280-821e-b82026d2ce5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c5aa6b-aae1-4741-9bf8-0f243e9e5a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e4adf4-687a-495d-8d08-0d4870a9f011",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbc92fa-25d1-4f39-b030-55056a521dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e7fa2f-9778-40d1-b1a0-cd2c7f01fcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b116a7-37ce-4b61-b1a2-e506489cac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aaa5616-f09d-4bb8-8b1b-722ead8c1a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22f66c0-889e-4434-8e26-f99ee968fe41",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ebbed-e357-47d7-b1e1-19ab16dabb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11683338-7c06-4512-a0f9-7742d2a75607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863b473c-5e65-4345-804a-73e47a2b8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca68d486-83af-4de6-9927-394f51603541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40605a53-c175-4f11-874f-c9c28890b8dc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f60b1-5c57-42e1-a9e4-6b4e308411c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff587f23-cf02-46ed-bb26-1aa3c7838a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99858b49-934a-47d5-b24e-65d289b3cc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e10564-56ce-4521-a3e2-c2f5ebca6e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbb01f2-3a90-48bf-8fe3-d6dec5307670",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d19232c-c147-4df9-ad7a-7234be5acb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769f7ac7-e398-4a0c-bd45-998877e99626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bc57b3-0a1c-4131-9ba2-2af1a65cf693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb1c56-7d39-4171-985c-d553c03d5513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9703da-9bcb-4eac-86bd-d902984f9d1a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5f6f68-0b3e-4a4a-8bf1-342fa4483e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172db060-46dc-4ca7-9702-05428e50d872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd492d8-ee4f-44be-a7f7-ec51941d8951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a180a6-cc83-4e79-ab3a-4f07a0256eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d11c92-100c-46da-957f-f1c46427b9cc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f97fe-f4f5-4e54-9f11-7dec28dc9857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8090a066-817d-417a-a934-cf5296ea8383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9c36ae-b101-4dbb-8c8d-a270822f18cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfec1af2-3411-45c4-8560-a2c938cca62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f9735a-2e1a-4796-b497-acd552b7dd90",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677be008-aa47-4293-956c-033fcb3a1543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bf8ad5-29ee-426b-ac09-01334cfa2271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79b2f20-24f5-48c6-8049-c602ce5d8d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c48e8ff-7233-4d29-8c28-4384bf6776ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf32aae-6213-4c48-ad60-8ecebd2092f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef7786-590f-4135-8acc-2d823f9b01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0931ee-11e9-4848-8256-9c7f2306a125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8d2a7e-4f9a-4eea-8a89-948089318b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32459b49-e8f6-49c1-97b5-4d0381b6f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f96626-6bb3-4668-b303-c2f0a6559ae5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba83357-d2e7-400b-9f87-cc72a1af4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b73901-6d39-4dae-aa56-da6b4b45f28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e930b97-04ce-452a-9bd0-2dee2734ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c858973-1b27-48db-85e5-3c870f3538a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0daae-ddbc-4c71-8091-368bde2e0c0a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e227ce1-cea0-4318-bbc8-918eff16ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1cdc92-cb92-4971-a096-68b8537f7123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9254968-8c9c-4cca-a9d9-54860eb53217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cef62ae-0c87-4916-81ad-2663bf4c76a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c0fdb7-c5c3-40a5-8050-b7f6f43123c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045addd4-62af-4e29-94e3-97b898077db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0113eed-0b32-433c-8307-4e8d4611aa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479edfd5-b1c7-40ba-8ed2-c87f634f7fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ee6d8f-c42f-411d-a369-e778402f067d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c197a0a4-504d-45fd-b455-519e2acd487f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ca759-cb08-4cd2-a595-cfbaa8b172e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be756559-0455-480a-aae1-afd61d930a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882e55a2-57bd-46e5-b997-5ec2bfa4e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "592aa920-6eaa-4661-a990-967330e388bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebbba8b-e470-44cf-8ba9-7a2648af6f0b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f520e0-5f55-4d22-9fbe-6126df4c62ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6d6de9-96b0-42ea-a818-de586f487bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e18462-ff14-4c86-9266-8e6f637af2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "031ef734-93ab-4719-b3ef-b2d859d99052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b715ab3-0b6d-45be-bd87-a65e9aee67bb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f4facc-d2b8-406d-bea6-f0dc6a716194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5df560-4e71-4514-87bf-b189b2b9e175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4146f46-7fce-4b2d-a9cc-3c89f5f499e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5f685a-af23-4a0f-8317-e079e4e3d9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1d931c-2bc3-4075-9b1f-7f9c6881af32",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbfbde0-0333-4c4d-afd6-1effd5327f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd31318-8960-4e7c-8662-aaaae8d76d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a594bf-7b0e-42f1-8011-211e3da96028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35425325-9e6c-4aca-9765-226a88dfd258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744c57eb-8b2a-4ae4-aab1-99df17d0e737",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5a205d-fe16-47f8-86f6-d6ca7a523de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a287dc6-1c66-4f92-9ac1-61501f8bc205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff10d96-34a7-44b5-b875-9a2c345f1370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d97fa8-3a83-42fa-9c44-dcb331bac164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf081ffc-a6da-4f18-aae4-9fa8ce77c43d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b6f66-9bb8-42af-a98b-27399dd44319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e88419-aed1-4f1e-a364-85ae0216d4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f5794-7e5d-49ec-aebb-ed41b25aa81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d1d72e-3dac-47a0-8490-b42310d118c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d6bb7f-fe1d-49ed-9f82-241cb0942507",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f0b14d-aa5c-46f1-98af-0eed1753b8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4b0320-17e0-4096-9e7e-693fbe04628c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8260d955-20c0-45e0-b762-46e1e9ea348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7acc158-d8f0-46c1-befe-1f711f19b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2631b984-f9db-4662-bbcf-95acb64fc5ac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9361a928-6636-4f0e-83e8-5a75947abe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a89934-4682-46e2-a212-35899b0f123e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fb783d-4e02-4dd6-af6f-03911c46085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a760e6-e5dd-40a1-867d-70ca850ab6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0622182a-79fe-4cf2-aebb-13180adf4d71",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f719d4-c903-4f9f-a45f-3d75c7c1922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d2f79ef-7867-431b-b4d9-d59ee8c0383d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d547d930-e8e3-42c3-9f6e-82bb053fe55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7337e4-74f3-406d-8c80-6faf667c0fd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f70ba78a-9cad-4698-8e4e-6bccbb643358",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11b19e0b-7b88-4dbf-8daf-3a925fe61f2e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b234e8d7-2a7b-4051-ba8e-e7aa8379a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9353cb3f-5fe3-477b-ac64-30f09664a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed0b9aa-90a7-4ae6-be82-48abd90d5b47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc24c103-094d-4f09-ad9e-e7bb9c594e8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d192535-1eba-43d9-be06-c9621748c506",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9e81931-1bf8-4ef8-90af-9bd80a99c226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ac49db7-5ca5-49ba-9046-ea4c8e847270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e65a2b8-a2cd-4bea-805f-495811180d3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "552cb746-b975-49fa-80d3-059ca7d622d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68079501-7e95-4ec5-b939-963671d86a75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86b4cbb1-c748-474f-b5e0-cacd09a94bf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ab69013-9c8a-4c0d-93ad-f06330db9af2"
                }
              }
            ]
          },
          {
            "id": "e2cec00a-6b13-41c8-8d71-60e6627701ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ea0d25e-12d6-40c4-8017-0a4f2da5fb9c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d0587027-0c3b-42bc-a114-91d9a28222fc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35255c96-dd06-4e71-8aa1-e1c09b298724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6d69a072-7335-482b-92c5-105277ec9d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f5deef-78bb-4b2e-a863-a9fe17cf29d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9297fbe-7c33-4d02-bf71-8c51c0f5f34c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9eeff806-3e2f-4bcf-94ab-5910b36e36ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e4e76ae-583e-4bbc-a269-2d4819c4addf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2a6bffa-8433-4516-960d-30513cb37e7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "742f90a6-4211-4408-b6e6-b2cadce43fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89a1a395-b14c-4ab6-ad0b-18e8140d1de8"
                    }
                  }
                ]
              },
              {
                "id": "d6ac78c3-8147-48f3-a41e-047b8dcd04ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c6a584c-d9f0-48dd-9820-80a506908d92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eebc975e-82c6-434f-9b96-bb6426b9f112"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "001576aa-8bc6-4d78-89b9-97964c114732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dcb4e46-3c9c-4495-9802-3edf18e1d660"
                    }
                  }
                ]
              },
              {
                "id": "7cea3099-4c43-4eea-a0a4-728c2c82968f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d03ba9d-6a8b-4f65-b569-058101db21d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a387d54-8e2a-4183-b90b-08a1fcedbdaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c531aa6-d0c1-4265-bb36-da98b884d439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21ddea45-2d97-4dc5-bcd5-296961f0f89e"
                    }
                  }
                ]
              },
              {
                "id": "540c055c-c9c8-4822-ba55-2ea8bd42d363",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b80ea7-c7d2-4b29-b80b-b81fd3d0dc4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71780fed-6dfe-43b8-ab92-597ec1131c78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70b07f35-aa16-4dd9-8c02-60b27f2c6da6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e7d6394-682e-46eb-b00d-552f326d89fe"
                    }
                  }
                ]
              },
              {
                "id": "04b4f0e9-5e20-48fe-b183-a3d433bffa0c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2da1c979-e188-4030-9528-cbc22a16d21b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a11c02ba-c734-4844-bb02-1e3604968475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af6da9c2-fb7f-46d7-be13-e921617da202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c35c9dd1-0aa3-4cfe-b600-25c82ede5edb"
                    }
                  }
                ]
              },
              {
                "id": "8ce49ff0-bbf7-4b9e-af94-4ddc5479f4f2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6d52af-9d74-44e5-9d73-12f7e552158d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afd39074-5b66-4efd-b93b-5cb868a58e28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30b34fba-dc28-4f61-bc2c-840b0547e47d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60a57885-2228-44f2-91fb-0e25760e1d1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8850f701-9761-46f5-a20b-58043a46a9a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9840f72-6386-4855-a19e-ec318f9a6e66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e02ca189-d2ef-49f3-808a-4a7b215da30d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3003d70f-f56a-41c4-8dc1-079656a74605"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed13c7a7-52cb-466e-aad2-78d7ebfd4143",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e269faf-c986-4391-a99d-0b4bda94e0be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80a489c8-ee84-4101-b6fa-ac2d57fbdd16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a83c8537-eee2-47c1-8d1d-1169ae2073d6"
            }
          }
        ]
      },
      {
        "id": "ac328290-e231-47cc-b5df-14af097939bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "96cb6ac9-a24b-446f-9ddf-20370422e123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cf34944-04d7-4956-840b-9c116d0c8ec8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d970f12-5071-4a2b-b5dc-18417004c012",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3d2c52-13ab-4603-ae66-7d2f1ab1fb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cee6c3f-a10c-4e6b-9fd3-d0a97e674a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf3cbc-49b4-46c9-98d5-51f0b7465010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd67343-0868-455d-a56a-36d49b6b5bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaf401f-b18d-4190-b54c-329f157b37b5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d9a7cc-5c44-473f-a7c5-3f9228234607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a07ef11-4166-4e50-b125-359fa96f8cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3301a815-7260-4751-8746-d6ece1aec725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1effc59c-b03d-4e06-a114-3d89b2587081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf3faec-714a-4eb9-a0e8-a69dde6ff077",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a3f3c-51d1-419d-8837-e0ec46d5ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9641dc-ec11-4307-a15b-0fcb2cf7b07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2bca3d-c7f3-407d-8671-37d85f5251d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bee9a4-631f-44e0-b2d7-d31df20de832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde565dc-ace0-43a7-866c-166e5d14a963",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1b2ad-1030-450a-9e5e-38defe68da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd4e04c-8c2e-4b92-bb44-6836a0c5b8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a2e77c-298b-4b87-8dcf-e2a26f95d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e267766-abc8-447a-a400-8b6859b90a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4162b9-890a-459a-95ab-1a9de0156ec4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e90e7ec-8980-4899-af3f-6a5507c45b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92813847-c169-4251-a966-91981d5190b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2a2166-c1ec-4242-80c0-38067b371e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a81fe68-456f-42ed-9446-3d6564e138d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de6e401-812d-4eb9-b974-e8bd12128070",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f1a55-ffa2-4021-8ebc-633a07fc0d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefd9bd7-d42b-48f5-9331-b746ccb339eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b966474-d14a-4831-8252-5c9f510b8c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cb8c38-cc28-4728-8ef1-934ec83c6e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa147e3f-e3e4-4788-80e8-ceccb3ab6b5f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba9dea5-6177-414e-8114-fe3b44308054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721a46df-d39a-42b8-b901-2925090dd10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d55ec8-0c60-4de7-936e-8bd9b6b3740a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cf6ab8-8666-4ec9-9194-c8ed946c0b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8a410d-5b75-45a7-a20d-4c4b18b0dfd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235062a8-e0ae-402b-963e-914e36ad7562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7648e1f6-63ca-4502-ad82-bbab2d67a286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db45d028-fd84-4fd0-8aa5-67556ed51cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d06943-1b03-4f8b-8955-315fe5501206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cfcb07-f7cc-43fb-a080-0bf8fbb5113f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5a732f-2436-4290-9edd-6d199f8ec007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe74c81-8e43-4e08-8e9e-be744feb2f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd91fcf6-e918-4e40-b8c4-7cb65c286a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d28edc-c63a-4784-8662-5779f82b496d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d04cf19-559e-4dcb-bdda-0a7330c01233",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abdd007-391a-40a5-afeb-bb73fa73cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e0d2ba-f0fa-4ea5-9523-93a82866d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dfaf26-90e7-4e1b-850c-ae3792507c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa29a2c-0aac-47ec-b2c1-92ba61e0c63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14947e3e-5e3c-4ede-9f56-68f6992bd857",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2611aee1-2dbf-40aa-a85f-a2759f74483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc07ff7-bfe5-4428-b164-cfcc4a8ab570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d457965b-1de4-4511-99b0-d7be1d2b66e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6d58b300-db19-487f-b576-7f5b2321f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0312d489-7f12-4d9a-bfd8-bc1d84cd6f46",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f65971-6097-41c4-b0f5-171d70ce354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4170919a-d082-4ecd-be53-b885762ef9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304074e5-d3ca-48db-bd72-f3ac8927e55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7220993a-9a89-4972-90d1-147a53ea3a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50d6518-facb-427e-a086-c3e5aa714c9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38960bad-a778-4385-8612-800c617046ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405df5b2-ce0b-4d83-af76-ba7154e52b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc240308-dfa0-4d02-a550-9987054bdf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df05e78f-7b68-4b34-9df5-e5954f49e1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a95065-3d2f-4403-b0d4-0f0537e3825d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3148c6-523a-442a-8d22-ff5bdb616202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e0c1f9-5a43-4de4-bb95-f57cbf290257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c99c81d-e3b9-4f26-9bd9-0554da517e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c88d54-1648-47a1-959e-f6bca984fd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b5aa5-8d29-4513-8127-69e192ebb452",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a69aa3-b0d0-4b93-9689-819600eb1656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2722f2d1-af63-49f4-89c6-250b23be1f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d1268-8fb2-444e-ac70-6095647bbd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccac5aa4-9038-4e12-b6fe-2f9162699c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24add33-f687-4da6-8174-c3ef5ce7120c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f4e420-6a91-484a-b2da-c240c5c651ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d32ac5-6f64-4b31-a252-fe50b684526c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1081d6d-90c7-4be6-929e-ee82564099b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0052c1df-8302-455b-97d5-4d3d8bb82667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef71b34-21c6-4319-b083-3369fc52096c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f330198c-351f-4942-9e14-3c1b85bf331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820423c7-1a65-4496-af8a-56c27cdf8c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62894a01-dc33-43a3-8829-ffd821971400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "830a906d-e287-4ad1-bf91-1a25a04185f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703f84aa-5cfd-4502-8837-3e1eac3b3a07",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720f3b58-ca80-4844-9640-7b8298cfeb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe415be-76ef-42e5-a45f-d5d6f9e0f15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b087d-4925-4aea-b823-7d7e8bb1d4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c67d4b9-3608-4398-9884-b0c35da92a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ededc48f-4125-48f6-b1c1-628db68a66df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53089595-312a-496c-bfb8-f7e37985b019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f67f375-4869-44ce-a0cc-f788a1c75cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c372dc40-f087-482c-9961-4f82f2a716d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f672e5da-ac67-49a0-9f66-1aa9421d9e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5bf409-6d08-4cf7-a858-4dd63e86b5d0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc9c2aa-71dc-4870-ae72-c0a9b106686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add6e376-e254-4105-9f00-28c0cc6af0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c28467-6488-4d0c-893e-2ca6a149ccc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "721ee53b-e302-4cd9-88e0-5214229d8acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26bc33-de26-43f9-9790-9b3fcd81d28f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d05e1c-f36d-41a7-aaf2-7a45612f2388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b6e7e9-55e8-4458-a22c-0886f6f2aa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0616c9e6-efe7-4318-904b-24bd402af710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2819ea45-7c33-4fe7-912d-f98233dfc51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338a6801-9852-4a38-9a6b-fa8ba725b896",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e397f34f-f67a-4096-9e81-a15071c631b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f16eb5c-53ec-43c9-b09e-2fa66d1893ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c963b8ec-611a-4acc-ba76-044b5dcf90b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8f9cae-2422-42a6-9717-f0a1a618bb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d30f67-5319-4e34-ad9a-c3b44b948f05",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57604762-ed00-4e2b-a31d-a5ed14ab281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdb26a2-22ec-43ad-95a8-487110e7ef2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0d402e-ab49-40da-8caf-2dae6b9455dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2add14-fb2c-45f0-bf71-02c3f5dbb476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eece99-6a66-47b4-a989-bbbdd5b8dd32",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c466a0-d1eb-4a3b-b09f-14a72d2e8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfaf676b-f2cd-4bc8-9757-b1fa56cde60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6adc7-fc92-4f34-800a-66aa268fc56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "922c0b55-3fb5-4788-9583-4f5f4886c84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49230dfa-4e96-4e3a-b470-d3339ea8fc56",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf03f35-ed70-4cc1-b59f-c7540dde931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a64e1a0-3c81-4cf3-bf33-5f49aa8c356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3baeea-4452-4a6b-a58f-13268d0ec1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d2fd4e-b903-4e88-b0ac-e002911cd06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5346bd5-5692-4505-80a6-aea3b4da43b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0815d86-bfeb-4a6e-8514-9dcc9c4d6c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df0c514-2aa2-453f-ae8e-5725cafee76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71aeac2-e034-402c-ba86-edfbbc8e8295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "166dc8a3-fbaa-4174-acfd-5f2ae82d22c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5918c598-d746-4c18-8798-0db40f0c4dea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fe1ba0-42c4-42cc-bb29-615756532923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc36fc7f-7431-4862-af21-d766a92126bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c769c-bbe7-4302-8d1b-676f5c448781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad91def-1468-4dc0-b591-4d20d5f262dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bad7f6b-e2f0-40fd-9bf7-954042300aaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf16400-e864-43b9-be5d-6367dae163d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad2bd2a-e8d9-419e-916c-675b35a348ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039f075d-75e7-4cc2-aeb8-b70416feaefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43344bc-b9a4-4555-be08-af4c49943da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d700e3e5-0014-41b4-a802-3e8a979d721b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522e9df1-99ff-46fb-a8b2-b4e7c63fac89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e38d4-d296-46cb-bc48-fa5a494bf64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668acf22-6e48-412a-8fb4-b69205e89272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af576e7e-9e81-4698-ad01-46fb746f4408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df627ccc-746a-4132-ac64-7ae4812b8794",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2d4b1-7b68-4748-96cb-4a95183e94e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457705f-7c5c-4de9-967c-0b82f283c5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc20d2-6b60-440a-8fd5-2c1aa5471130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b03964e-3561-4f67-9f96-d9bb07afb7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c2d5da-b320-4805-9cd3-4a0ad6a54e2f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ad3c49-e437-4fc9-95d3-cdd24b5983f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d622a60a-2ce2-4519-837a-4a7bea330872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7cd7f-9daf-4e6b-8a4a-1feddb46bbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af63fef-93f1-4ce2-a1a7-ce21f5e4a14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a37abc-65b7-432d-bb28-280176883709",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cf018b-a8c2-4124-9d0b-b638c3438a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f471429f-fa98-4db0-903a-9819aa3744c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f61f84-db20-4b9c-8186-803be312b429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6606214a-cb84-424e-86d2-1452d052a4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6de1895-1658-4c17-b839-a950438dd544",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f7fb89-7529-4eda-9cf4-7e576d0f10e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c3e968-a4d6-499e-bbe4-42c66cf6e677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084d611e-bec2-4df1-9f24-113f8895be17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f64924a-e2d2-4542-aaa2-a3ec778d29fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47ee8d2-6e3f-45c1-a1f0-324592f5add7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9523b3-d6f5-412b-aab8-ca27daa698c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b17ab3-fe95-4320-9c31-8cc453474c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e318e86-0034-4df2-953a-b5b5000bca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e19f9c8-7713-493e-b8a2-c9f7d4a81dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116dc064-4cda-464e-a3b5-3e3085404c47",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9df9d6-47f1-44a6-8b1f-0bc1c146ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eab9ad-a0cc-4737-980a-b1b4c2322812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce76ee29-5051-455f-9b5f-dc42627ad5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf95020b-f0ff-4d4d-9ca7-c9b0672c81a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc65af-dd66-44cd-81e2-2bc1d376be1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b129ac-b6e1-4501-abda-22f486419b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1739611-e4db-478f-9f48-674cc5000226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f490631-9f28-4853-8c36-ee054df2b46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18527a2e-3937-4af8-927d-ce81317af290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7061adb-11df-4315-b526-6967d98ad29c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6ca288-a2f5-4321-bbb3-41ebe04a6b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8413e5-b31a-473c-814c-4b80d82b2a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e766d04f-98d8-4baa-902e-01189f26e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6698c64a-0083-4c87-9172-22b3e52e6b8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29f84e38-1b8c-4167-a5a2-77d694c27a67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0d651df-66fa-4b0a-9473-329f0e45e980",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208ebef5-09af-4329-b386-1541c2ac5c56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "806198fd-e277-426e-af5b-978bd60e9055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b988222f-8627-470b-9df1-1cb1fb18f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e75d03f-778d-4e7c-b38c-4715af414161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddd2a90f-c541-4689-abdc-b89a2bed3cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e19de596-3feb-4a93-abee-b0f4c2fe4950"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3be150dd-4433-4007-bfd2-4f6a2e78641b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fc1dcb7-a978-46d1-b532-1d74442dfd38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a23d8bdd-b540-46af-bc43-f450367b2324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "417a1bbe-ee89-4e91-b3d0-d6fb996020d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc9a0f30-122c-41c0-b9f7-d1b689b0711f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c5259a1-3c86-4969-9894-0cd2b0b7fa53"
            }
          }
        ]
      },
      {
        "id": "e3c1f385-9169-488d-8c0c-67b2e2ea8159",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "42256b42-2d88-4a6f-a368-dd58d41cd49e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db5e1571-042c-4123-9e4d-b5a9c8dcc4d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e150dce1-1efb-4893-b761-6c17df5fe546",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a94953e-366b-4c66-b164-81dfde9e1848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab17c175-48e7-4e62-a821-35a4625f4bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51571a3-ffe6-402c-b327-9e799b9cdc78",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcd31e0-7e23-4dd3-8837-3d23f6147724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ad472f-fc8c-4a60-93d7-5e69caaeffec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0817ee8-dae9-4e7c-9077-812d799420fa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea7604-06d9-48eb-bc3d-3dbdcb208a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04c5db8-8fe3-4009-9cf0-58bf53fd7082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649444ac-a9ea-4bc9-ba3f-1142db52664d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f44927d-cafb-4c7a-bad1-3b1efbaa56e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1ac8bd-6362-403f-a60a-78a884e6b75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817b1508-661b-4724-9c75-734c3a13db84",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791b51fc-5a4c-4109-9f3c-c6edeccac86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e171c708-e140-4cf1-9a3e-01fb40759d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050ca2cf-1225-4314-b96e-edd01e9b1ab8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0e364a-22bb-416c-ae9d-28a7b9c4aded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486851c-6c32-4a84-a722-d2e99006b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abe4959-41c5-42a5-aedb-e4a59040e008",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c772bdf-156f-4ab0-8f31-5ef763126827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fd4d55-e748-465a-a38e-e2548880ed22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eafa23-95e7-4d5e-ba14-a31b78bd3fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c30b43-f962-4d09-b883-abe223bdbd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e590e3e4-2f46-419d-aee0-a0ae7a0edc3b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf071393-9812-4d92-8f9e-71bebf2fbca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f039e71-3987-422e-9acf-b8a64f43b514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8308f24f-e31e-4154-8019-4a2c5942083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e7c3e4-f26f-48ee-a3c2-f4776e80fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb20579-ee66-4f5c-bc05-ac2c10a61ed6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ee38c0-8f6b-4344-9db0-8f71a562f15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1f5495-f5ac-4dd1-9baa-c27d597f17a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941c0ecc-3c98-4875-9f32-da6b537eee35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b63fbd3-4aa8-460b-afa3-4f5633c1e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9f1dcc-07b0-4c40-becb-d0fc7a9d3259",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f12abc7-a793-493f-b618-15bd3ea81dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb0f502f-0de6-4f20-bfd6-ddd9e54ef7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a060ce-0740-4d55-a6ee-5bf62b436b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a0f5e5-2ac0-4002-a68b-65aff0c835f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e67f505-473e-49c3-a498-ac60ea4f1abb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f58a03-94d0-4c83-badd-0467d99770e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1f5630-6b5f-4916-a1e0-94dff3b56b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75db7ec-5a67-4cef-8658-97783010f177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd5bdb2-4e28-4369-b080-8a513f2f56ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b86419d-bb4f-4de5-957b-c1a853f88f1f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeb48e1-9fd4-4f2d-bb0f-977690ac42d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802cb868-0036-44f5-a3d1-399013d70174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a5375b-957a-4204-ae39-33e50e8d794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79690ef1-d213-4754-a926-502d3684f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e78424-5cb5-4079-8665-afbf34cccedb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25901087-9f14-40bd-aec8-73af0f3e7c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97369476-844c-41a1-b206-e6dab53f553b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ff3670-01b0-4642-96ce-70a09d8b1641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5630eed1-ffa7-44a0-a7b1-5b340c46eac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5c7d0e-3d9f-452a-b5b6-1e8cdbedd713",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3b5046-b765-48a7-b5c0-a00b9850134a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d9b45b-5890-4a52-a445-699722a7559e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687a98a6-2531-457e-b7f1-b5396de3509b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df02aea-daea-480f-9205-b6836e69bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dacc93e-cc31-4499-afee-525aecbe8fea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa4fc3-678f-4ee5-97a2-e39dfaab1f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b70d524-6987-43db-a9a3-17f4da89fb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932ffb6b-c01d-4d78-9290-25eb80388e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34857cc7-cfeb-473f-8951-66d57bc40c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffaf226-e581-4a5a-a8a8-364e2fcfec5c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a8ade-1b46-4bdf-9fe2-519373be08e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfdb6fb-b8a7-45dd-988e-2806eae47a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fda9ec-9d86-4c00-83f6-65a685861ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a61891e-0358-4102-841c-e7212baddf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a116ff-93a6-4df3-9570-145de5655790",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5da77-d7a2-4e00-8a03-2bce1f365552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfec085-5a0f-48f9-91ac-78b3f30b90c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4d14ae-e89b-4682-95f7-ab9e192d837b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8d0df5-0c50-4508-9539-b6bd63e74ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025b9221-e054-461a-a93d-7de2e9d55201",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1529658-c7e1-412b-a8d0-23e38013c3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce8ef52-91e1-42c6-b47c-a88ade870907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76421c32-7695-4d54-8e8c-c97ec683e8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23062979-6a7c-4fb8-9abe-362a4bc477af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60bdc57-8d82-4ad6-a810-5c254f7a4671",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7257ae-fa2e-48b3-abd4-b4eaacdb9aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddac93b2-d75e-41ce-b7cf-0e8f24eac50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eb8353-0246-4158-82db-54f9c59f35cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13318acf-fb40-4d88-b29c-597fd7d3da60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3141d34b-c8dd-4b59-a87c-aa4b4c879b39",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a415b0-f7ff-4b91-a59d-a3dec91cb5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b971acf-3be3-401e-9627-75b69cf9b0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55a9451-fdc1-44b8-90c9-210f2b91ad1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510f5800-5ea1-4403-89be-50698844d522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2c3715-a291-4504-83e2-b816782c3c76",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f80bb17-ae72-489f-a360-5993f2ae20b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6e9b7a-9437-4daf-8bfb-eae1c9969164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4404cfa-dd7c-4783-8983-800806d9eb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a901ee-6849-441c-a06c-f888b45df1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eab91a9-fe69-4689-a4ab-7f5fa4e1f86d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19d17a-96e4-48f4-9371-a659bde3da64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64a329e-80c8-4038-bc4d-7e53fa8dc4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ebc4b0-6226-43ed-94e0-282f34a8792e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0386b2a-9d33-4c7a-bd31-862690d4f017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b760c-4527-4730-9f0f-98aebbfc076d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3caed9-682a-4b41-97a8-d390cf28ba17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961c1438-402e-45fd-85e7-dccec87a37ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f004c9-7efa-4398-935c-3b9a913c5916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084a03bc-7930-41dc-8b6d-ef318a018138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0722d20e-68f5-41c1-bb87-f0a6c512fdc2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd63846-b497-461c-86ca-bdb5a5b96e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1028064c-cc2c-4433-bd2d-17646926a670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a50711a-a0b7-45d7-a1b6-dea62f766028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47993c4a-605b-426f-abb2-44b9c0a49019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374dfd63-266b-4d4f-8c98-08ff4afb1a5a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cc0680-f2c1-49c6-b22f-2d1ad209be48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d503abe-4354-43cf-b9c1-5333248398ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903c2576-328c-4711-acad-2ee58a54ff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734a83df-fac7-4d2e-a67f-192936b47a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cebe307-52e4-4708-9b51-82c89c450c6f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339f60ce-4a54-41b1-9841-b6f321a816a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a20374b-d225-46a6-81f7-1f77eac41f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d07184-520f-42b6-8024-0947c943f81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fbbfd5-91b9-46e8-80d5-83d2f49f1962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77575404-1288-402f-9db6-4a52e76a8adb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b07a335-4472-46a9-8d36-65359b80fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f92557-f9d4-4f3a-91ac-7c93b34411fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc2f0ba-115e-4b61-88cd-35dae6effd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f91d6f-a1b5-46ec-bc62-9ba5f81781fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac5d4ce-2484-43df-926e-dc5373b704fa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68859930-9506-4e70-b135-fcb9199ed94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36f8940-fb72-4bfc-83cf-fb7e8d55ca1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8feca5-fe50-451c-bd9e-4ab56ad0aef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf7e2e5-0454-4d9a-8b67-348acf19858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f115faa0-35d3-41c6-bffc-00394bf76bbb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb0eb0-3d5d-4a13-bf8e-1842efe3e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcdb8b3b-cea6-4c54-ae4c-04457b393ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293115bd-f381-46d5-b768-449fa80cc0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cfc341-28b5-4c91-b242-e4e29dea07c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada7d4a-73c1-4578-b31a-75b95a01478f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e82091-caef-406a-a0e3-db188ae0cce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344f0fe8-f9e3-45a0-9173-fe1dd7addb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c1e75-7333-4fa5-a569-d36cf95b9a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0492c947-fcda-4c2d-8a77-e291bc8fbb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b274d035-85e2-40d2-81d5-63c9b30d4eac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e29b3e-7b3b-49b1-b371-645d34148b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9abe8e77-43da-4d3e-88c9-cefba26c2640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4234ae4e-8c7e-43c2-8831-c6a83805aa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c847c7d2-89e1-4727-a2cb-b9f65c487d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f7556-b7c6-4b04-b463-4c3892bf998c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef44d7-ab4c-48dc-b6e1-5dc3cdecd749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe16dd7-019d-425b-8cc6-a827c7c54132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631df0f4-eb22-43e6-975a-e2fd2bcbb007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a294afc-cb80-44f5-9039-2be3beae8f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e32183-92e4-47bf-84ef-9321eca36851",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73267291-e478-4661-9e03-3a21f13f6431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202e6568-acdf-46e9-a628-568aab997aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad327ff6-f500-440b-8e7e-f6cf9f4044f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3f4ff2-7170-4a7a-905a-ddbb1b9e4a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b2fc8c-fecb-408a-adcf-8312a87dd9c3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9b585f-a419-419b-bac4-0cd6db704091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa63bd68-41da-4d45-a820-eeb3b0d26c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450e30c0-4e8b-47d5-bbc2-c01642bebc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7c6bd2-299c-4063-be88-87f1d4a7eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020b998e-485e-4737-af3a-db79c9496ea6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6ab3e1-2a11-453f-b797-d405278fc04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96eaf64-de48-4054-acbb-ce7f23bfbd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c29ae-0694-4f05-9def-de9b9b8671c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac59325-55e0-477e-9550-ae1c0cbc6784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d730818a-e58b-47fd-8b00-abf771d94a04",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72709915-c90d-48d3-9ba0-590456200db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a7b4c6-7a25-4db5-b1af-79d4e8a0c66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f10d8a1-28a4-4b1d-9981-1c876fa795fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd84bea-bf75-4a78-8885-2dc0b3a9a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c993ba0d-4000-4da4-b015-c2b03f495f3f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f9d0e-d867-4b28-a276-d4cff906d6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b608b-06f4-4c61-944e-2a4885a9cb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15f8033-e951-40d1-b8e9-11b5de70fe70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d7a29e-b2e9-47c3-a87e-9d9c8fd817af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dab8d6-4e1c-4493-a4f5-70d21f8ef910",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4262c7-cb91-47af-8650-d0d581e7cb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dcbaa2-9dc7-4c93-b6c7-bc3098deb0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb42c4e-280e-4ff1-a775-0c0d2d4a8842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee24bc1-4812-4440-8d1f-2c83be7cd3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c97663-1595-4c0a-af2a-b045486023b9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b373e8-abbb-4bd6-b813-1e29b520632f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2050e001-663e-4ad9-8c9c-9a29e80fba10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7750dd4d-eefe-4607-a8b2-545c0dd59994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebf23e0-68c1-4c8f-a264-e2f992351309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0151e479-a869-4f37-b5f1-38e3ca7580be",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d05e14-e2d1-4d03-b7ce-24e8dbb56b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff24980d-fd44-4f63-8e81-22da641055a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fb0f9c-fb10-40d7-af93-9d4834538615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a35425-3b16-46ef-8484-98dc2b2d80bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa2200f-98a3-4b85-82c8-e50f5d17b9a9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89916c8-2831-4993-9a74-9b28ed69fac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1186b443-da65-4f6e-ae99-ea300ae4c4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99ebd5-6bce-4988-ac5c-8360f36bf719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ca20d-c2af-4c80-be1a-f5e255cb166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d852c9ba-9c74-4fde-ba55-d740b14ff957",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b59a70-241f-4c57-be74-783a8f6034d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5bd600-8204-4b7c-bb5a-97bd782708fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541cf758-9c0c-4a05-b950-0fad6fcd7d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03007054-a852-42dd-84d2-cef176981ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f791c75e-fcdf-4cc4-8a99-ae2d54370e73",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4233c3d-9c0b-48dd-affa-1cb2b643ef4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b434890-3d2f-4b80-b31c-6e7543878acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0004db-2683-466d-9e0d-171d537997b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c382b5ea-335f-4fe5-a8d1-0b7cae781035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029062f-ad21-4551-aa8f-0ea38ac47a4f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b9a532-ba02-407e-84cd-e453a23d4b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f46bdba-442a-4b84-91f3-3d5a84f1d605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2276e9-5d76-42e6-8b19-425979085f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f713fae-8b95-445e-87d1-00a7391047a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b47cac-1d88-4e5a-95e4-12914d638689",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46afecd7-7549-46d4-bbd1-3facf7af3a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c89f51-1519-493b-bc52-87f6bb603b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b39cf-fef8-42e1-8881-47c99f765d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9df362-0457-4f4e-8615-84353cef2fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d58d74f-05bd-43a8-9bb3-e710ef93af62",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bae997-8bda-45cb-920e-384090e31786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372af845-0157-4077-8be8-6514411c77f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b87cd07-91d7-4ce6-8bd0-4931c950d97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2801645-c83d-4be4-82ce-8984e8e59673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ecedf7-7ef5-499b-b330-16cd93557fdf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e9ae8-d56c-49c6-bc23-dbd4730c3f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc477780-cbcd-46a7-80af-04e7eb8c5cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef079b3-6567-408e-a238-2b90ca1daed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aee2ea-821d-453c-8b10-7e4920cb3bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8c08fd-ad18-4753-bd7e-65ee3db962c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071a9530-e101-4c7c-9515-8465f09404aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e9ffe2-5d2a-4c68-9ca5-92451b967310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816b3b62-0bd2-421c-b7b2-755f20c8a3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2343c16-99e6-45c9-a866-88ece911a4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b6f0f5-0a3a-42f3-b3fb-704c5201614f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3232888c-34be-4146-aa3f-58d503ff3d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad421660-b27c-47f0-84c8-5e134d2a6f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a23e4-b624-4432-9d3d-f9f56b45b3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec7c17f-ae2b-4cc7-9034-9d0d9190ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07f21b5-279f-4261-9ab3-03c9031750f8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4340f54-ca86-46c1-ae0e-9a2ef0490889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4823db0f-3c5f-475d-8dd5-2b366698975d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d22b89b-4b00-4690-8598-6e53a55cb36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af782495-3d71-47a9-a5f3-3d0ab81f6356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a6563-4d1c-49e4-bfa3-fa21875c54c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4fe343-3772-45e9-9944-f2c97a5d51f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c03c74-fed3-4b46-b0ab-54413ae54174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9bb83c-a597-4a3f-8a8d-10e2aa7405d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52179b0b-7706-44c3-aa70-7428b1fe611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c414678-6232-40d8-9272-bf59fb2c68a8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36425e0c-d8bc-416d-af56-edaef2d2c748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ef290-f1ea-4311-84b4-0a1dbca01bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2663370-71aa-4546-93ab-8d84f570d1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8e402a-2ccc-4220-9252-374f29cd47da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7059f29e-206c-4c0c-a981-0ccd1d3d6148",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4464073a-cc6b-4c16-9a75-53b3237c0f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0013ea38-f851-4219-a523-9e47640f6a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b10bfe-54bc-4229-b9c1-e90b01725cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e742c30-9bc8-49e9-8b6a-2d76a32e84f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e9e33-4662-49b5-9374-7d7bf53e0042",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd178b9-37e7-4f27-a1ac-f99d4174e162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36274bfe-44fc-41fb-970e-8e33f6bd365e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706dd014-73f7-4cc1-b780-c747d5dfa6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af52cfd1-ad6b-4a87-b4d5-2b5ed572af52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c75631-4ac2-4fd7-9094-5434dc0bf9ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea2b30-f208-4c21-bda0-936bcd7fe4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93c0d0d-ef7e-4ea4-b384-2c6d5458a043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fc3dc-7f47-4646-a3c7-b308d9e941bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3ab9fa-749b-47ff-a564-db0d67fd290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7227ab31-8ab8-4531-8629-9181e1e65ce9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9542abbc-518d-4e75-bd5c-faacadaf8cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7952ed63-6945-42cd-9dcb-841a61d50987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ab2a03-3771-4bde-9502-2abc516fed19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3ea890-ca5c-4020-9190-afb72a5e6e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8973c554-f0da-4384-baf2-f0eb41561ea8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d419803-d786-4187-b357-d01db674c950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c161211-2f20-43a4-82a5-4af5d6cb8607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74156b4-b74d-4ed3-bfc7-82e233484668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5749d272-a3d1-4d8e-be92-180f9f3fd258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7072238-9408-46e9-9e07-558b7dca5413",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823ef01a-6881-4407-8bd5-33f2c8866c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697122dd-25da-4138-afe9-771b71f77348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb33f619-64b3-43ac-be56-067c6016ba2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b918db-c820-4c80-818f-47080372b54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2291807-6b7c-4cad-b50d-400029a67ea6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e92df78-a65b-49d2-aa53-ef81cc2adef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1620d185-37c6-4af7-a23e-2093d536e6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba601717-78d2-4649-830e-dd8bc4c6e986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213a4311-f1f0-461c-bf8c-759a0d7000c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2c62ab-659d-45ac-a080-7e94134c997e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4433f6a-4f41-4c84-963d-7dd8a869e453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a178551a-cece-447d-bb07-c51b829e0a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0dbb3d-ab93-4628-b73b-78dbaaa09f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5694f5-b742-48c2-b24f-6946007fa677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afe4bb6-c60b-4190-80de-23896195528f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12597e0d-065f-4cdc-a13d-ddddfb3acad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe62595-e4cf-4bce-9a26-8d313e1caf23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce7a17b-3d7e-4b4f-b037-8304574ca765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0885d83-55cd-4e32-a50c-6d7ad32c10da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50880527-aec1-421d-bbb5-1b603c6c68af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d64778-1c69-4d6f-9ad3-3f01a2cb423b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04edea92-2057-4814-911a-6a0a71a6546c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832fa7c9-c53f-4b17-8a5c-622d2f6a06af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bb888c-4e52-4123-8db7-d2e07f0dee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9287a644-877c-4bd2-81b5-1293ac862661",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b2d416-ca94-4eb8-9b95-55dc73e0e487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac09a0ab-723c-4dd9-905d-f261e33d636c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66c7775-cddd-49af-a79d-747851c193f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5986ff9a-388e-4423-8772-22a16b20e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89645c18-675d-40cc-b9fb-5b90f8ac1f2f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198334c4-825f-45c2-a111-b9729aa6eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad20a9b-07c5-45cb-bfcc-e906202a2b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70c594f-cf26-414f-90eb-de0d4afe678d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e666c20c-84a3-404f-a98c-2c7992a2085b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff1afa1-160f-4af5-9bc2-9466a5485042",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255db051-690d-4bb6-ab6e-9aac00847a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334cf655-98f7-4638-95f0-cc1fe092d7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d3e91c-c8be-4a30-9c11-a54adbdac11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcd4d7d-9da9-4db5-9afa-a5b30e29e611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d968147-70f1-47eb-9195-781fc14a9eb3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217f44c3-68db-4c1c-afdc-ca68ce02e390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19be2b7-5f5d-4a46-8202-7c83a02ddbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb72f51-6dc0-4710-8b78-29c681d21a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524f774b-89e7-4450-9d11-8e744fba30ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1395f020-2afc-4119-b040-8f5d9c6823f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bedd12e-3829-489b-aee1-7186783c8a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d1f9a1-caec-4ed1-80b9-ea44a60fcdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a9e7c7-6014-4aa8-89fd-b7d421c420fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3cb8fa-7423-472f-9be6-29ddba0c7f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be87c9ab-6545-4333-961a-98579dfdad57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70bfc13-d5fe-4389-be88-41f1af703bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7791d6b9-7920-4395-97b4-d0846b46bdd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe1fca-4a60-475d-8ac2-7f0f7f38db9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14543721-95ed-4f0c-b06a-edeeca816b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216b0a7d-2b5e-44db-a13a-fdad2f99d84c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab8a7e-959d-43f6-b896-8dd8ce02af74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810b5059-822f-4e77-a75a-246c11e16f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d795f03d-baa0-429a-9b03-683ec3c8c85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052875d2-ca2d-410a-8145-6eba7f906769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b26b5a-2c7b-4110-95ae-4a8aa0f58206",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c5c5c4-b8df-4f6b-898e-49f695e044b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c0e20c-9dc0-44f7-bcff-4b7ef9faafb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e347a1-a0a1-4b1d-9b66-f6dd09dd0c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104d253a-a8c1-43b8-8582-5f390802efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35457df1-31ee-4d95-aad8-87f2e32ed6eb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5230a90-6996-45df-ac0c-4c53a139947f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf8a39f-fd2c-4e49-a36f-916cd81fd7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082d44ef-415d-42ed-a46e-dca7d9042023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35400da-c59a-46b3-baf3-332b58f7fdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf62b8-4798-412f-9617-0060206ff44f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118882b6-23be-4a4a-8701-5ac565aaf1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b82d930-ba28-48ca-b05f-f6f8e29aa50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e29257c-07a4-4045-b04a-932377764e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5465293-1cc7-4b9d-9c84-73c7824cc5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93158a32-d5cf-4f4f-8d59-9e061bb6cb3e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350adb0e-b170-4616-a021-3c4f31c82027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896d9080-ca80-4339-b3bf-470ddad29aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e4e59-02e3-4f32-8653-493d44a3c144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcec6441-a125-48af-abfa-647d8e10e4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3548445-7d12-4537-8c0b-559256e41363",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39392bcc-7928-4f15-a4b2-e33405189c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9cd1ae-4e29-4ebf-9add-144ad9eeb5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d3729a-fd0d-4bb4-9127-da06b405f599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdbc15c-f34d-424a-8462-bf254a68c1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a15c4ec-a819-4c6f-a043-f93ebc3d4b2e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbda6eca-8db3-48f7-a5a2-c5b45c49ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1e2302-1fa4-4f5e-adc1-95e6ecf7e657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22322e1c-e102-4f6a-8d8b-4bb7965c02cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443ad443-2e1d-4647-ace4-c4ca7371aec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e58d7-bc96-4a12-98b4-3739accfa0ee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238ff70f-0b83-4e8d-8776-fca67f6b43d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cb9914-41bf-4cf7-952b-4d4745361877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18a10a8-921e-4c96-9bc1-0c283c5e472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be48d60-0baf-4442-a7b6-eb921cd2aa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c16b75-7294-4886-abb3-9d36cc01c29f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26342637-cda7-49ba-99cb-a4cf9f35e367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9dffda-26a7-4841-acf9-02cd1138440f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b193e74f-6fed-47bc-aac8-6649d9634b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5176d33-7a23-4e14-a314-e1c67f128dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c75451-d6c9-44cd-ab28-c479cd9b9e72",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b289b53-1103-41d2-8fb0-87ea5c7fef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055fa630-6c2f-4c42-a476-21717d143b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af145600-2132-47a9-b307-392c460a1ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e02958-f856-4bd7-aa23-fe93cd1830d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe40d1e4-7571-420f-b501-c23e233c0e61",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04420077-debf-407c-a842-85c9212faa03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c295818-96be-4e4f-b018-45204d17d3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6dbca2-5ff7-4b5c-b157-194a5e56d1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ccc7fa-5ea1-408a-bc09-b2d908890eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110db111-a652-46a5-8e0a-a2841ac22422",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ab7f7-6866-4feb-b7f2-cfea1262b1b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f78f0d4-af53-4d55-92b0-cde3f3d78b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103c5cd0-6162-4ab5-9d4f-230bbe7e205c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62df16f-93cf-4a6d-a035-5a01a42ebdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2439e44-6c3d-49cd-afea-3e15c07c6718",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1481e440-fb93-49cc-b978-c1170fffdae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c6029b-a7a4-4ddb-b468-925e486debf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b42a262-527f-4da6-9679-ac06d9507068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeffa0fb-8212-4a4a-9b45-2cef404a1da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5da8b4-72f2-4022-b4b6-a1709effd08b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c598c-ae15-494b-9ed5-286829f01771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510b439c-d883-4454-b6b5-c9ee36b65c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69bae4b-b279-469c-b2e3-1b110d925731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98941f8c-d1c0-4c74-8ab4-b7271e269d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42071de9-8840-4bb6-b4bf-41f1db3a2a57",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607d8219-aecd-40b4-9da4-4756859d724a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c1533f-84c8-4c30-aebe-6a2f50962368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46efca7c-891f-46dd-90fd-a1ac3da51389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf5fd85-eff9-41fa-9d8a-3eb570888d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51a69e2-d311-4ba8-a899-bd8b437b0183",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e8474c-b21d-4ccd-8ef2-1ef2b6a425ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11329af9-e015-4c7f-90fe-6215e170c9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd17e91-b4a9-4039-a2e7-1a63dc67df92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7106d2-f560-42f4-916a-5db15ddcc7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005641c0-7b5f-44e7-b735-5704aaafeacc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4454f863-6587-4e6d-bd04-b0650d55c5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7730054-861b-4929-bc6c-35af94219cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beee5e8-17b4-4b13-8dc3-a58455d7c4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b56212-fb5e-46c7-bd27-51b73afbc3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dcece4-c1eb-4eae-bb3e-c7b18150f8ee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57209d9b-0157-4bba-b7e2-b54447b2ed56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86acf9aa-306c-4baf-9dcf-d455bc3c37d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721cc98c-4e2f-40cb-87f8-73bbf442330f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c801edd6-a707-45c5-9bb1-a3d861a5d262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50309f8d-9043-4ed0-8f99-3783c7ea9e87",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3920ae-179d-416e-978f-7efe7a9b4ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824c2961-b1a4-4c05-aace-56da0053dcaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02be72a-1215-49b1-b5d4-fa7b39fb0e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a69f0-276f-4d85-b13e-190df3066552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3473ac91-e77b-44ec-be80-d4ba1616e55f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d29546-2d8f-4cb8-84b9-57cc70f42afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba48ee3-4f1e-4a67-8846-d039248787ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f6463c-849b-4641-95ab-745bab0d3d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7b8d4-fe02-4f35-9d62-6d7c3d51c642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aabc190-78ca-446d-b4c4-4953d76dde18",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439cc7e-8596-400c-beb7-b44ef1180324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca62e48-10ea-4e56-ba8c-aa936b4ce84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86fe5e4-e27e-44a6-9732-16da398c4b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e16a66b-1c98-49fa-b02a-5ef655ff4ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3e612d-a7cb-4502-9599-54886f6f0228",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec715a7-3c73-4ef4-af05-0870332e26c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e641573-9f82-49c2-9037-937effe81aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7ecc8-aec8-458f-9c21-16f28dc3b3be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac939f9-69d4-47ba-bcb2-76759667bcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a0fe85-87a5-483a-b638-afaacb85d8cc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a596cb8e-b1e4-4bda-9f2b-5341dd18c69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746ca56c-d18e-4ef9-8df7-2e9055f6c2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7167b8-b5c2-4f15-9274-8e3930666ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49a6110-17f6-4bf5-b4cd-51f3a255e3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d561d09f-4e67-4bfd-9a73-ed6d11c3c558",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b22072-414d-4018-be16-1c77da9f18a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6794232-e009-4c01-a64a-7575a3e8d448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1d3f9e-e5d4-459e-b1e8-a55456c28ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd3b91a-6465-4ce6-ba23-b0ccce66112e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4d2906-3cce-4ab8-8651-c6788b15c4d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b2c65c-0e61-45c5-b85a-9ad1022efe06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6d859a-757c-4c9c-acb6-bd90961af201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4fc0b-909c-4ff8-aef7-cfe5769d72b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d09240a-1454-4594-85cb-aefef442de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f97203f-9502-45d5-b24e-ae6379d11fad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5287d754-3a77-4cfb-a2d1-7eebbb0fbd41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90cd9f4-a07a-4bf7-ac5a-fc9300b259b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03708d6-d111-4ad7-828e-7ce250d8e624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140ac633-3def-48ca-834d-1b5daa7707b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d44cd76-9f39-41c6-a168-a7b95c893811",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324460f-d060-4dd8-ba80-80803c6b07c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555f9100-8f0d-4aa1-9b87-aa964ccf5733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4fbc5-c95d-4367-9ec5-cb749fcfb2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29717c1d-ea27-4b34-83b7-184be1f4b0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a81265c-ce40-4130-89a4-d9db9c0bf90a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161eae39-0333-4dd6-bba8-73d7e5000e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e668768e-ef2e-403a-ab5a-46b4450687a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2b241b-b07b-4bbc-80a2-e884d6021aad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d971d-3394-4d86-b5d7-661564a9b9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a645b77-3443-415d-ab4e-3673f6a0c2f4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b146207f-b136-42df-aab6-e624dbecce05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fbf744-d6cf-4598-8650-3c66dd388952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b99815-8a59-4ac9-9950-104f74e1abcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71d7f1e-2f45-4637-873b-edab888754a5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe841f88-3d3b-48d2-a07e-f4e50dd8fd2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3bfaf2-80e4-4a72-b7df-828325b7de66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28c9b02c-66bd-4156-88b1-48b199b0c215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efc69d6f-ed75-47b6-8ab8-995eb92dbdbf"
                    }
                  }
                ]
              },
              {
                "id": "2a7cba57-8b3a-401e-b551-6cf727da78ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78a02d36-ba1f-422e-b187-2e909e5a0bb1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56125e72-292e-44bf-b4b2-a99fb8352f54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f750bb68-c899-416f-8e47-979b9357ae94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6ed90b-0cdf-4181-9a18-2c0d80956459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bfe16bd-ee9b-4103-948a-8486c6dfab99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4162e3e-6af5-4e4b-b0cc-c03ccb6a36c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d3edcdd-3035-46b4-beda-25f60d3da55b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a9b10c-e81f-40b6-a310-48231775aa45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62eb0c32-f10f-417c-bbde-b75670a89fd2"
                    }
                  }
                ]
              },
              {
                "id": "8e5f9f6b-2f30-4beb-b81a-092182288a5c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "28eb22be-b1c0-41dd-a170-c1abcbb6c9e9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b94484-3f4c-45c6-b863-47303f5b378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "498ed3c3-b7a1-49ce-bf70-30044965ec8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fbd96-98d7-42b6-be57-64854fa3deb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cf3622-6d7a-4332-a23d-0b255ce8bd11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1665c172-2bed-4f3c-8871-8b11308b502e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19f7bce9-e6ff-448d-896d-696846e5c8e4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46ca957b-9cdb-435d-b57e-16ec15d14503",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f7b3479-22f4-427f-8b10-9da8a6db8e94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08d81814-3b0b-479f-9603-0bbcc5037a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4f2864b-2ac8-46fb-85a7-5e8d384f8204"
                    }
                  }
                ]
              },
              {
                "id": "9937f1f2-13fb-4fc8-b3ee-ea8e67f7c959",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5a2afb8-0d42-41c6-be12-14b6f300fd31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a79da55-ddb8-44c5-9b33-cbd222b9c623"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c3a1f9b-61d4-4d74-aa07-88a3d194cede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1936cd2a-dd5a-467e-8eed-2c9053eaab0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c7e130b-471a-456b-ad1f-af68ed4bb536",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f696a757-5ce2-4ded-884d-c5044203f746"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07c00288-e82f-411a-ab99-eb41e52da751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbb86a61-ebe6-4451-8368-74824a9a6bba"
            }
          }
        ]
      },
      {
        "id": "219f745b-9ba7-4370-af83-c18fcef40f09",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "20cf0f34-265d-4640-9acf-cbae1f279331",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84a326b8-0019-475c-b2e3-e47f5529b7ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e146865-a034-4385-9a37-422eac06f2cb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ad7e1c-79fe-4741-a48a-ff12e15ba150",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed01bb29-bbe0-4474-a239-0960c85a0c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a00478f-5198-425a-861c-053bb937f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "719b62f2-e133-47fd-96c4-d8eee72f304e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "290f4658-abc0-4299-a4aa-26248317426b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3a243c-10c5-452f-9cb4-720376f2a671"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bafa80c5-fe40-43ff-9529-29a18f5a5861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e0f9451-926c-4e1a-a6e0-1d7fd54c5d3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c25bb435-e6c2-47eb-9635-fa01e0c93d3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1d9d207b-959a-4041-abe0-6b8476efeb4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7732cab5-e048-4466-b5df-dfecae7dc205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bfc11f6-aa80-475b-8a97-b16b59024313"
            }
          }
        ]
      },
      {
        "id": "972a8a9e-74f4-494a-b453-b062f603d742",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a19c4db6-40ef-45b6-8fc5-097b8a557ae4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e99221f-5e23-452c-922a-0d51153061bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e9eab8d-51a0-4685-a061-9fad89cbc058",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955a6a40-7414-4572-bc6a-00e5268d1cb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27afacaa-3468-4aff-a978-62f5b72369cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3cba39-cedb-4f77-ada5-393f99e3b74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7fa6e4d-75ea-4b9b-945a-cc14b46e666a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13827b31-ac03-4881-998d-f51161636d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6213da-35b1-4fe3-90b9-5dd7a75e5113"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3416715b-51d3-4ca8-ad4b-bbaa0e6b91ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f3e0825-0d10-4ac9-94fa-13e808e31158"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb094f6a-e9eb-4897-a2ee-7073597a7b32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c022d265-c126-49d4-8f21-30c58796e71f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d953a623-6968-459b-81c6-1b1ea9d8c8f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7499453b-2802-45aa-96c0-725186edcd77"
            }
          }
        ]
      },
      {
        "id": "e4e1618a-e12b-4b98-affe-e9749ed01cb1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5aa62d8a-fa3f-4904-89bd-a32146aee25f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be28171-0b7f-421e-ace0-cf3cc300dcf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d57f6c5e-c506-4eed-880e-7cbade9ac314",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553517f8-e24f-455d-a48c-4aeeca39b3a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "217c709d-d5d7-4867-b82f-385b7f566d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddd2331-b77f-4ed8-8e1a-627a9bae42fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccda5e43-fea2-47e5-ada4-964e74fdde6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc792da2-58c0-4d15-8122-266a15f1b6dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0076f5b-2e76-48bc-a369-13f38a885551"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb11e310-137f-4b47-be1d-fcbe43376863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c519a2ca-e863-4942-9ebc-02c22dcf237e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89c7d85-9ce4-4ed1-a063-f55fc63cb5af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56e58fa1-e674-4b14-8917-0e8e726d3c78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5a744b8-408f-4527-9905-67d41dd1ddce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46326bc5-15be-4148-8881-cb1b5b15e257"
            }
          }
        ]
      },
      {
        "id": "d7670f30-e46e-4951-86d2-0072df32ba73",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "099e1aee-503f-47b1-8bf7-79421b0692e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4d8355-2270-4303-91cd-eaa842ace57e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "64de91bf-8265-4c50-9d6d-ae4b98f924ff",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17972f5d-3b04-405d-9d34-eec54f02d8cf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76304a56-194c-45aa-9908-d9017febdf18",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 169.484126984127,
      "responseMin": 6,
      "responseMax": 13149,
      "responseSd": 902.4110582223683,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727311489427,
      "completed": 1727311540441
    },
    "executions": [
      {
        "id": "bbd3fad2-ba11-406a-8a41-7a3adee803b9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f85e1533-a556-48be-a491-c35265b9a1ae",
          "httpRequestId": "3102061d-f2ff-46a5-b569-780790dbbf71"
        },
        "item": {
          "id": "bbd3fad2-ba11-406a-8a41-7a3adee803b9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09b2c799-7838-4ffb-9dc4-e082acd38b4f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "d0dbb2c1-1a1f-40d3-a207-40844a8cbf3f",
        "cursor": {
          "ref": "7a5f525a-5c66-4f88-ac1c-b6024231a06f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "93f6a20d-8232-42fe-8f7d-bc4ed672a3f4"
        },
        "item": {
          "id": "d0dbb2c1-1a1f-40d3-a207-40844a8cbf3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "71fae41a-fd43-49f2-99b5-387c3bca015e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "583f0af2-4719-4bb3-bdb8-d37ed404c8cd",
        "cursor": {
          "ref": "2a968587-9118-42b1-a7f1-5ec0121e57b4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4cdacbe6-256f-4e99-99d5-c8614276f0a7"
        },
        "item": {
          "id": "583f0af2-4719-4bb3-bdb8-d37ed404c8cd",
          "name": "did_json"
        },
        "response": {
          "id": "06393073-7d46-4463-b967-640c67266ed4",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4634c41-cafc-4fb3-a58b-b9de3ad8fd23",
        "cursor": {
          "ref": "d9bec512-84f5-4fd1-8722-51d16af054b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0036b770-4c3d-4231-8268-8e301a6cd4cd"
        },
        "item": {
          "id": "d4634c41-cafc-4fb3-a58b-b9de3ad8fd23",
          "name": "did:invalid"
        },
        "response": {
          "id": "e566b9a6-17e9-4dcb-a3cd-a68a92a239ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 437,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4634c41-cafc-4fb3-a58b-b9de3ad8fd23",
        "cursor": {
          "ref": "d9bec512-84f5-4fd1-8722-51d16af054b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0036b770-4c3d-4231-8268-8e301a6cd4cd"
        },
        "item": {
          "id": "d4634c41-cafc-4fb3-a58b-b9de3ad8fd23",
          "name": "did:invalid"
        },
        "response": {
          "id": "e566b9a6-17e9-4dcb-a3cd-a68a92a239ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 437,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daea8a9c-e2a8-4075-aca4-a9b5e8f6cf26",
        "cursor": {
          "ref": "f245dcce-ee17-4937-8758-aee787f386a6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bddd859c-9e8b-4355-ae51-c122bdcdb4e5"
        },
        "item": {
          "id": "daea8a9c-e2a8-4075-aca4-a9b5e8f6cf26",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "505fcc9c-e7f2-4f3c-893b-3ba9ff16a736",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2b516-dd90-4695-8d85-74070c1bb5ee",
        "cursor": {
          "ref": "faf99040-9e21-4629-b627-44f72578a585",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "97293189-a21b-4d1a-bee4-52e2f851dd4b"
        },
        "item": {
          "id": "43e2b516-dd90-4695-8d85-74070c1bb5ee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "89a2da2a-f52c-47d4-a5f3-3d7216631002",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163c5224-fcf8-4447-9845-793b792037fc",
        "cursor": {
          "ref": "ca3d7063-48aa-4dd6-ab0a-a063759cf93a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "651ec5b7-bb0f-4f90-ab18-c93b0dc1ffd3"
        },
        "item": {
          "id": "163c5224-fcf8-4447-9845-793b792037fc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "19d7bec2-44fd-45ee-aac5-f4be8f111b24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be4e113-1285-4b9a-befa-d36292bcc81c",
        "cursor": {
          "ref": "de359a15-86c0-496e-aa2d-fd45fa7794fd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "949de7b9-1050-44f2-8f16-beebb86ae47b"
        },
        "item": {
          "id": "7be4e113-1285-4b9a-befa-d36292bcc81c",
          "name": "identifiers"
        },
        "response": {
          "id": "2d7a8637-94ac-42ab-b8dd-3b26c6689e1a",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152158d-c585-49cc-8a7d-4c7dcf2e34aa",
        "cursor": {
          "ref": "14dd8aec-93b7-4987-bd4f-21c0b317b4b6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cb609fa8-ff8d-448d-8a14-d24fed989e69"
        },
        "item": {
          "id": "7152158d-c585-49cc-8a7d-4c7dcf2e34aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "da4c8b78-2991-4de3-a4a0-d1635b2ec76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9ca1b-feaa-44f4-bf10-868d78cfbbcf",
        "cursor": {
          "ref": "c4ffc95f-f919-48a5-a416-17071d9ef8e9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a2317e5a-0452-4568-a3ce-2552e84b76ae"
        },
        "item": {
          "id": "62b9ca1b-feaa-44f4-bf10-868d78cfbbcf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a85b22c5-c222-4808-94c9-1e850153b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281e78d8-eb41-4450-9a3e-d42df6bdbfa6",
        "cursor": {
          "ref": "5b94c019-4790-426c-9b20-5448f87bc02f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2a5afda1-d2a2-4271-912c-1e837bc14b48"
        },
        "item": {
          "id": "281e78d8-eb41-4450-9a3e-d42df6bdbfa6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "88d46aec-7d78-47f7-81da-87d57ba36bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced33a6-6dc8-4424-8282-09167249cce4",
        "cursor": {
          "ref": "6ebf9ef1-9922-4596-9660-191f24422f6d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97c8792a-5d17-4e99-bf09-6ec042a0329d"
        },
        "item": {
          "id": "aced33a6-6dc8-4424-8282-09167249cce4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f222beb6-646e-4e5b-a82e-4d3dcb9a33f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb180b6-7e59-45fb-bdae-6d245236cec9",
        "cursor": {
          "ref": "2b042792-897a-47f3-b864-d27a22749756",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3276e26c-cfef-492f-91ca-3e1c87c9e037"
        },
        "item": {
          "id": "ccb180b6-7e59-45fb-bdae-6d245236cec9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42f9b108-9b36-492c-882f-e7d291fa8c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec9275a-a5dc-46ce-9158-13c27b9ace0d",
        "cursor": {
          "ref": "a594c598-9e39-4434-80dc-7730e217265d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5965aeb1-b98c-44eb-881d-ccf8378d571d"
        },
        "item": {
          "id": "cec9275a-a5dc-46ce-9158-13c27b9ace0d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e60e9732-b48a-4ee6-9991-b6aff67e544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04d3d27-bd66-4966-9152-9d40465dd37f",
        "cursor": {
          "ref": "dd9b485f-56a2-417b-a0e8-5aec4e56ee64",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "384ae021-d8af-47fd-a041-52de4824c793"
        },
        "item": {
          "id": "f04d3d27-bd66-4966-9152-9d40465dd37f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b1e01b03-c28c-4881-977f-8dd29e7c83f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb34559b-4c1e-42ad-93d5-ce29a4e87aca",
        "cursor": {
          "ref": "86d4cfed-63b3-40dc-a49d-fc326bfc8f0f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d9108331-853f-4678-a6a0-5e14401055eb"
        },
        "item": {
          "id": "bb34559b-4c1e-42ad-93d5-ce29a4e87aca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8540b0e5-035d-43fa-b3d8-34b2c0dcdff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e290790-f9f2-42f6-9606-ccbc1e864ec4",
        "cursor": {
          "ref": "1cd7848d-91a1-4f87-a88f-144466248a29",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7556f107-985a-4c94-9fe2-a5a8b8479932"
        },
        "item": {
          "id": "0e290790-f9f2-42f6-9606-ccbc1e864ec4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dd0fde64-b683-4504-aadc-0a3430d9c937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f71918-296a-4b9d-8856-a6f89a6faea9",
        "cursor": {
          "ref": "1ae5d973-74b7-46e4-acdc-a746ecc1b122",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "822433a7-8ca4-4150-91df-aa12ab8c94fb"
        },
        "item": {
          "id": "88f71918-296a-4b9d-8856-a6f89a6faea9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f158206f-9399-4597-80a3-2e83f9fa7e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c98719d-98cd-475c-b541-78b61b25fbbc",
        "cursor": {
          "ref": "3b689c9b-9169-4314-a39d-b1f6eb2b613e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5606e24-658d-42f8-adb9-cb4b5e041c67"
        },
        "item": {
          "id": "7c98719d-98cd-475c-b541-78b61b25fbbc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "636be1a8-e0ef-40f3-8636-4d380d9f8657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80bd50-6b42-435f-a591-c0cccc515d95",
        "cursor": {
          "ref": "29c77dc3-8c3b-4e84-89b0-f898e6946143",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f1a9bc62-4a53-4045-bd3a-fc3cbf7aaa85"
        },
        "item": {
          "id": "4c80bd50-6b42-435f-a591-c0cccc515d95",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1deb40c5-f39a-45c7-83f7-624d3808b62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914724c4-06ae-4ac9-86b4-ba065f29556d",
        "cursor": {
          "ref": "2bfcdc29-ab47-4b19-8e23-2d5033a70933",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee3fc9a1-6c95-41d9-908d-b501e69dc56a"
        },
        "item": {
          "id": "914724c4-06ae-4ac9-86b4-ba065f29556d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cca1f0e9-d22b-4720-a9e7-4f16bd4a0515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53349261-d95b-4ce9-93ec-0b09fb79fbdd",
        "cursor": {
          "ref": "84082e85-c151-4f44-a8f6-6d183759d26b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "92454e2e-6ab3-4886-947b-c391ac43aad5"
        },
        "item": {
          "id": "53349261-d95b-4ce9-93ec-0b09fb79fbdd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6e7420f6-e1fe-4b2d-b334-c668341d0700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132102e5-1fc4-4d29-ad72-3147ceeef66b",
        "cursor": {
          "ref": "1198dd29-ee76-4272-b759-12e799f8770d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "63845505-9bb5-4be8-88f3-761f694d56cf"
        },
        "item": {
          "id": "132102e5-1fc4-4d29-ad72-3147ceeef66b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "35fca9bd-1cc1-4429-9a8d-0c669be66ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d99ff30-3c59-46d4-a0d3-d0426f512d38",
        "cursor": {
          "ref": "80914f8b-3392-4a57-90a3-968f7648214c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "078e4016-3c06-4ad3-a5af-3739e0764323"
        },
        "item": {
          "id": "7d99ff30-3c59-46d4-a0d3-d0426f512d38",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cdcff31e-4966-4ca3-a5db-f1346f62eb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034b8cb2-406b-4e79-b94c-76bcdfb24969",
        "cursor": {
          "ref": "15ad9831-b241-40c8-81c9-374e126f7fc8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d08a922-49af-43fd-b5f8-b3c264252a9c"
        },
        "item": {
          "id": "034b8cb2-406b-4e79-b94c-76bcdfb24969",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "79111582-de1f-4dc9-9d23-204a70e0231a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d92b15-5905-4caf-bf20-35b11b11b193",
        "cursor": {
          "ref": "d1970f44-c34d-47c3-afbc-a7666189fa7d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eb29993f-b28b-47e4-b139-f2b92cea1907"
        },
        "item": {
          "id": "90d92b15-5905-4caf-bf20-35b11b11b193",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9028c35f-e69f-4d36-8970-c0ca6039f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a455ae8-9e63-41eb-8ce7-0c36de32c062",
        "cursor": {
          "ref": "7853cfaa-4cca-4846-8957-574776cf4674",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "99b0245d-a4e5-4860-b5a4-5dfc3007a488"
        },
        "item": {
          "id": "6a455ae8-9e63-41eb-8ce7-0c36de32c062",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f4082647-b7ff-441e-bb03-ab815cd272c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2db2b9-617c-4694-9cbe-897cc6995e15",
        "cursor": {
          "ref": "54968512-2838-441b-96ad-e8f28906b543",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2cbdf8e8-8815-4e3d-84f4-01c802a2a7ec"
        },
        "item": {
          "id": "4c2db2b9-617c-4694-9cbe-897cc6995e15",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31020522-8990-4902-81ef-9d543adc7d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9316e7e-0a8e-4975-a28d-82abae561aab",
        "cursor": {
          "ref": "86fff3bf-2b17-4135-bc66-5f6affbd8798",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "89204549-4e53-48be-bd83-7ef289fd95fc"
        },
        "item": {
          "id": "d9316e7e-0a8e-4975-a28d-82abae561aab",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ca7f8693-9548-4f15-9682-44da62ad2129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a99f266-37e7-4f7c-beb2-69f8b0155487",
        "cursor": {
          "ref": "e38ea6db-49ec-431d-865c-59ed0b1728c4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2a66959-1057-47ab-b50c-1f2e0136dc6f"
        },
        "item": {
          "id": "0a99f266-37e7-4f7c-beb2-69f8b0155487",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d6aa1bb-53ac-4ac6-92c6-42e8c1720379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a4ecf4-0606-46b0-aa15-48e4766b0e21",
        "cursor": {
          "ref": "8bc03fe8-af48-4842-8513-f14df3cbe6e2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ffeca29c-6769-43cf-ab2c-4d9f483d6235"
        },
        "item": {
          "id": "25a4ecf4-0606-46b0-aa15-48e4766b0e21",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "81381d03-2955-474d-8944-16e46d345153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d34de0-4b11-4198-a258-5cc6dbe2e176",
        "cursor": {
          "ref": "04a67be6-f4d6-494b-bcc6-7ac2a5da2da2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ff71b77e-11ba-4f7a-bfe0-2803ba9147c5"
        },
        "item": {
          "id": "f3d34de0-4b11-4198-a258-5cc6dbe2e176",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2184a7fc-72b9-40cb-a2e5-6dfb5fe652ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619eeef2-2cd3-49fd-bcbb-d2965c7da592",
        "cursor": {
          "ref": "b184cfed-3a39-44a0-8f05-0986817163ea",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "743a06dd-ec67-4155-9141-16b05fc1a669"
        },
        "item": {
          "id": "619eeef2-2cd3-49fd-bcbb-d2965c7da592",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "855680c4-861d-4e52-bb4d-beb70ebbd76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca4aea6-b8bf-4303-93fc-7c3c21ae0ea3",
        "cursor": {
          "ref": "004077ed-e03c-4992-ac2f-ddc475c10eaa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dd5a1493-5c2d-4578-89db-c8c4288da93a"
        },
        "item": {
          "id": "bca4aea6-b8bf-4303-93fc-7c3c21ae0ea3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eb9f3e39-c066-4b1a-994b-ec3efe6b352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316a268d-0502-4042-9375-a59631077f91",
        "cursor": {
          "ref": "a57a7e99-3a9c-48e6-8142-030bd366eca4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d73b33fe-70f9-493c-a562-144ea1eb9487"
        },
        "item": {
          "id": "316a268d-0502-4042-9375-a59631077f91",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9b056c91-b206-4dd9-8af9-cf10a7fddb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2d9e7d-2a96-4720-a570-319dfc25be42",
        "cursor": {
          "ref": "ec5c7c21-fe14-4163-82dc-ded9cb7e8571",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "500112ad-acf8-40a6-9efc-3b386a1b0095"
        },
        "item": {
          "id": "1a2d9e7d-2a96-4720-a570-319dfc25be42",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "962d0772-7262-4429-84d9-17ec5a172c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aad741-a48a-40bb-bcfc-f5574135a503",
        "cursor": {
          "ref": "baff6d5a-43a3-4d54-8d4b-2ac1d90aeec5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "50c13b2a-6cad-418f-96cf-4a0b3de8e5ca"
        },
        "item": {
          "id": "80aad741-a48a-40bb-bcfc-f5574135a503",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eb9c4280-3612-46df-9171-f1fcb304112c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5666a4c4-dbef-43e7-b7f1-2b20457ec492",
        "cursor": {
          "ref": "0d8a902a-07e1-473c-9d0b-2bd499ebbef5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "311c4e1a-7acf-4fac-973f-fe4dcea5d574"
        },
        "item": {
          "id": "5666a4c4-dbef-43e7-b7f1-2b20457ec492",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "15c16077-cf60-426d-98d0-234afb7c6747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee935fab-cb9d-44be-9b0a-c444b8666b4d",
        "cursor": {
          "ref": "cbd31930-be14-4066-ac7e-4008275b637f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf795c36-0193-484f-9f1e-bf95ba2886dc"
        },
        "item": {
          "id": "ee935fab-cb9d-44be-9b0a-c444b8666b4d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "67d2738f-7bda-4132-afd5-4a23c308d71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150e938-4274-4642-a1f2-a38fa6ac4a45",
        "cursor": {
          "ref": "955331ca-77bd-4642-ab0e-e096f199d322",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "376231f3-d0dc-4678-8207-b55cb4acb3a4"
        },
        "item": {
          "id": "e150e938-4274-4642-a1f2-a38fa6ac4a45",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "168d7cee-b758-4b48-b604-602be4397f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e427cc91-35ce-4fa4-830f-49f3d3bf2c86",
        "cursor": {
          "ref": "17ccf205-69a0-462a-8d1f-6f080f4c1978",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e2d1355d-f358-4502-93e5-c72fc79d81f8"
        },
        "item": {
          "id": "e427cc91-35ce-4fa4-830f-49f3d3bf2c86",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e5281cd0-1899-427c-913d-5a26a3a3c1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41411d9c-56e6-4340-8c6a-cb9424fc7495",
        "cursor": {
          "ref": "eeb2caf5-a6dd-447c-aecb-e746988bfc1a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b30d8a84-44f1-4c73-8604-f118654d9953"
        },
        "item": {
          "id": "41411d9c-56e6-4340-8c6a-cb9424fc7495",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "24a7c9d2-490a-4117-81a0-ca8fd7e53b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca19739f-23f8-409b-9289-d3b5d55c19f8",
        "cursor": {
          "ref": "64ae5aa5-e98b-48ec-bdce-7edac6d6d048",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d7103ef8-59c4-4e71-9144-9fe119067cee"
        },
        "item": {
          "id": "ca19739f-23f8-409b-9289-d3b5d55c19f8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3078ac0a-e529-4190-bdc0-f7427e9d03ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a1279b-6ef3-4115-b237-bffd15182948",
        "cursor": {
          "ref": "6254f992-7ecc-46a2-b0ec-d98757838d53",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ad9be941-fe96-46d1-a640-7a6098206de7"
        },
        "item": {
          "id": "59a1279b-6ef3-4115-b237-bffd15182948",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2d59ab6-2d1e-4520-910f-c931953515ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aba801-9ea0-4869-94c6-596d1858bd49",
        "cursor": {
          "ref": "6776e98a-4669-466d-8290-8ec946de92ac",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6938cbc9-26f9-4f91-94f5-5165d9cadbed"
        },
        "item": {
          "id": "75aba801-9ea0-4869-94c6-596d1858bd49",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6700e01f-831e-4938-a44c-06b643186b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ded02a2-76d4-4242-a6d0-f1f0016a9606",
        "cursor": {
          "ref": "22b7f8c9-16a4-4884-b466-a4f61b0af9e5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "37ab0bc8-fbdc-4aa0-9e86-8234ed81265f"
        },
        "item": {
          "id": "9ded02a2-76d4-4242-a6d0-f1f0016a9606",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f6f5218a-d772-4227-a375-f43b7c8f8abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f88cc43-3a20-4b28-ae03-4af0d472e6ec",
        "cursor": {
          "ref": "4fd48180-ca78-4e3f-8d1b-68a1c45b36ea",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8667761d-c051-4fe1-b936-9f600b44b56e"
        },
        "item": {
          "id": "6f88cc43-3a20-4b28-ae03-4af0d472e6ec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77f55663-0a62-478e-9f3e-7967ffe7a1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d50efe3-5dda-4c04-afc1-30679974a113",
        "cursor": {
          "ref": "7fd0de06-9196-46d8-b194-971e2744bdd9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5b38f111-ef24-4f51-94c5-1b22661f7e96"
        },
        "item": {
          "id": "3d50efe3-5dda-4c04-afc1-30679974a113",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ac62f9b9-5a19-4c8a-8343-dbbfe8691a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c347940b-0a08-4267-acea-80e60f017f6b",
        "cursor": {
          "ref": "38f29ea0-0a16-427c-b734-4c05ed506349",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f622ec1-10bd-49be-b2ea-52ef1d55adde"
        },
        "item": {
          "id": "c347940b-0a08-4267-acea-80e60f017f6b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7c966406-309e-4ff8-b081-e1910ebce4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a23029-53b9-4ea3-89ea-2a2b1d4126f9",
        "cursor": {
          "ref": "cf064639-86b3-409b-b114-305b714efead",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46e6aeef-2d81-49ea-87d8-6994c9b44d88"
        },
        "item": {
          "id": "a7a23029-53b9-4ea3-89ea-2a2b1d4126f9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f386a83d-862c-4f1c-b9d7-e47d62d7c1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993d946e-ffe7-4e34-9bbd-4789a2a946ae",
        "cursor": {
          "ref": "e91fa211-70b4-49bb-9071-7b4a8d8b7eeb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e8dfd8ca-a513-4426-8f27-f587fe80754d"
        },
        "item": {
          "id": "993d946e-ffe7-4e34-9bbd-4789a2a946ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fbc3fb1f-a01c-49d4-9941-0483bec601eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360fd05e-7c8b-4ee9-ac74-0dfcd8875358",
        "cursor": {
          "ref": "07a6677b-ab3d-4040-a293-44babed7255c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e257390e-df80-4c29-8a70-104ffcbe16a1"
        },
        "item": {
          "id": "360fd05e-7c8b-4ee9-ac74-0dfcd8875358",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7230b3ce-2dd0-41fc-9c44-a22ac48b5b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce53fabc-78d6-4c34-9888-681f0db5b132",
        "cursor": {
          "ref": "57929161-28aa-4fda-b59e-3118e9aa808e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17e28663-3e12-4b92-9c9f-1e8815cde79c"
        },
        "item": {
          "id": "ce53fabc-78d6-4c34-9888-681f0db5b132",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ce825e1-7291-49be-a2f8-73a8d4b4b246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b606ca-3579-4367-91cb-1a8432a26556",
        "cursor": {
          "ref": "f2b3987a-d8a6-4991-9769-2f5ae49d5bd7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46a1ef37-c24c-4966-8db4-896b4f0893cf"
        },
        "item": {
          "id": "48b606ca-3579-4367-91cb-1a8432a26556",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b8eab69b-2765-477c-a92f-f2d83a954518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2aaee4-5d6c-4d96-8be0-c4900f093944",
        "cursor": {
          "ref": "9a3722ea-004d-4e15-ad21-32799153dd23",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "054c179c-887d-4b2e-b953-eceb88393a78"
        },
        "item": {
          "id": "7b2aaee4-5d6c-4d96-8be0-c4900f093944",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e0c2781b-4574-41a6-96b2-a5638e5aa6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312fbe7-f61c-4978-b364-61ee06235c44",
        "cursor": {
          "ref": "637bbe5c-e1e7-4164-aba5-f7bce1421aec",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d7687c43-de8c-4852-b3e5-bf5bbf46721d"
        },
        "item": {
          "id": "d312fbe7-f61c-4978-b364-61ee06235c44",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a519b90e-5495-4b33-85b2-a58b7d9020ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87485a22-a20f-4e46-a776-97cea785a065",
        "cursor": {
          "ref": "fad796ae-2f29-4c02-8fe8-3e0759a8fd3d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f538f0c9-9290-405d-9e71-5454219e5bf5"
        },
        "item": {
          "id": "87485a22-a20f-4e46-a776-97cea785a065",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d847cad4-cd5f-4f9d-badf-da9ba75a56bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f2a251-8e77-4a2d-a996-b75c310bb7b9",
        "cursor": {
          "ref": "a5924c00-8919-47e1-8ee3-bb0edfc59818",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3c4cd6ca-4126-482b-aab2-b5855b1a4266"
        },
        "item": {
          "id": "17f2a251-8e77-4a2d-a996-b75c310bb7b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "deaea3be-2ef8-4913-9fea-49f51eb7a26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303a4a3d-041e-40b0-9ddd-9eae4ba4d73d",
        "cursor": {
          "ref": "3928f904-6e50-4b83-a5cf-4d7629def188",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0305b8c8-2e44-4eb4-ab40-1bb8867ab4b3"
        },
        "item": {
          "id": "303a4a3d-041e-40b0-9ddd-9eae4ba4d73d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4b8594ee-b3d1-498b-906c-a36af4d3b406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3738a84f-ed17-4d61-9df5-663ed8472a43",
        "cursor": {
          "ref": "097029e2-f116-4925-85bd-a35acc250312",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6012f7b1-a0f2-4f42-811c-71cc395102ce"
        },
        "item": {
          "id": "3738a84f-ed17-4d61-9df5-663ed8472a43",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d7b0124c-7934-4c18-b5b3-a0ce341621d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95affa78-0f76-4e94-a6d5-295697c548a1",
        "cursor": {
          "ref": "ec735d53-a8cb-4a53-abab-a8a766a5e829",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe876746-0bc1-4ed4-9f20-fe1a4a81ba3a"
        },
        "item": {
          "id": "95affa78-0f76-4e94-a6d5-295697c548a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e7047ee-d8ac-45d3-b1ee-e7be2837ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f6b06-692d-45a9-bc21-b79cf5c06a25",
        "cursor": {
          "ref": "58262300-bc65-4d31-be0d-7913e20c1330",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efedd626-326e-49d1-af55-8012adccd8e8"
        },
        "item": {
          "id": "616f6b06-692d-45a9-bc21-b79cf5c06a25",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6c172337-0573-40ba-beba-29c0ffe3d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999c21e5-3634-4dfb-838f-66cf187f06f2",
        "cursor": {
          "ref": "bba5dd25-7d66-4759-a02d-a0b1ba4bfda9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a725e649-0198-4d86-88f5-462be751ed27"
        },
        "item": {
          "id": "999c21e5-3634-4dfb-838f-66cf187f06f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "842a1534-53ce-46cf-a50c-d32080c96494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bcd5cb-bee4-4d9e-bb63-42f456682bb0",
        "cursor": {
          "ref": "98fd42e1-3df9-4b51-9572-dc36139b81e2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "caf044f7-162a-4f4e-b91c-a2471adca154"
        },
        "item": {
          "id": "c1bcd5cb-bee4-4d9e-bb63-42f456682bb0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f143c4fe-363f-4a4a-93ab-3e1017bc1247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35c50ac-8d69-4233-b11e-42f77c36da8c",
        "cursor": {
          "ref": "c8a32bd6-2136-4d95-a632-39c0cd473dd0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b71fb9f-1661-4c68-8a57-a965b9133256"
        },
        "item": {
          "id": "d35c50ac-8d69-4233-b11e-42f77c36da8c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eb6af719-c1b8-4719-8d41-13a8939c394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12160ac7-e559-4181-a319-15d9e0824709",
        "cursor": {
          "ref": "f4e70f73-c7f7-4d7b-aef9-1a407fdccdc1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "74b7d31d-321b-488e-86dc-8ee97e59afef"
        },
        "item": {
          "id": "12160ac7-e559-4181-a319-15d9e0824709",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "782f8574-985b-4e6d-be97-1ebda5398ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ed3d75-9b5e-4c55-adb0-e1f839e1832d",
        "cursor": {
          "ref": "82044482-fee9-40d5-b3a2-60d13dbfd376",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "383edfc7-fee1-4228-97e8-7458403e5a6d"
        },
        "item": {
          "id": "07ed3d75-9b5e-4c55-adb0-e1f839e1832d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67f1c3d1-cfc4-4588-a13d-4d7d328440e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4a15ff-6660-42c3-9dc2-3b71abc983fc",
        "cursor": {
          "ref": "5ae414ea-f845-4327-9ea7-8b90098823f7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bb440dd0-86f4-49ce-8d19-8aeb5e09acd5"
        },
        "item": {
          "id": "1e4a15ff-6660-42c3-9dc2-3b71abc983fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60915294-b013-4051-a64b-a51a83f3c897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1b6954-114b-4650-9119-b9a413f348f8",
        "cursor": {
          "ref": "f6984d69-b1a5-420a-8732-da56c726bec4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7a53262-9ea5-44bd-bb8a-c2cd1ec0acf4"
        },
        "item": {
          "id": "be1b6954-114b-4650-9119-b9a413f348f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "06b38b6e-c3c8-4bb1-a6cd-d80a5941e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cdc14b-9aac-4425-a874-0c656c08b4dc",
        "cursor": {
          "ref": "7d9f624d-455f-4def-9244-775c6a190cae",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c2912660-e2d3-4a6c-8a7a-e57c31e58a3d"
        },
        "item": {
          "id": "c2cdc14b-9aac-4425-a874-0c656c08b4dc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "88598f92-f814-4639-8ad2-923c754272fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674dcfb5-68c8-475a-93e4-972ada191f7c",
        "cursor": {
          "ref": "5d75b319-89d2-4dea-89fc-918dc1540517",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e4857ce2-f44f-4010-882c-6712651b07bc"
        },
        "item": {
          "id": "674dcfb5-68c8-475a-93e4-972ada191f7c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5cf5ae58-f977-4822-8875-b37b618a1d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99601b24-cac4-478f-9ce8-49bce9b318ff",
        "cursor": {
          "ref": "dc38d2c9-2108-460d-ba4d-1238f95fd36c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4dcd31e7-c8d1-4ccd-ba00-36ea54d3a427"
        },
        "item": {
          "id": "99601b24-cac4-478f-9ce8-49bce9b318ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4e4e44f4-1df3-4345-80c0-32b12f283bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59dab7d-c7af-44d2-bbed-6032b6813de4",
        "cursor": {
          "ref": "9cc2a5de-3023-43e6-9a3d-c85b2b90d081",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e8eb1c17-5454-4130-9afb-ab9d70b5003d"
        },
        "item": {
          "id": "d59dab7d-c7af-44d2-bbed-6032b6813de4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3960240f-022f-4bf2-9c33-13371ba26660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a0ea6d-13d9-4f10-a266-dab175b52e05",
        "cursor": {
          "ref": "5d10a8d9-e2bb-4ad2-a9d4-9c4cf68ddbe2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3939d8c9-0662-4059-9d04-5a4d3e75ad2f"
        },
        "item": {
          "id": "46a0ea6d-13d9-4f10-a266-dab175b52e05",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b7d690f-6f86-4ebd-9a26-e3127aa3325e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204326f9-1f70-41aa-bc88-6db5566eb199",
        "cursor": {
          "ref": "bc61a2b6-1b6f-4c6a-a8e6-439ae882b8bf",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7d354a10-18de-4fcf-af77-6b6cb93faa45"
        },
        "item": {
          "id": "204326f9-1f70-41aa-bc88-6db5566eb199",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "575c5de0-df4a-4c91-8fd6-c6955926f8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a9719-de12-4b27-a4ba-4f6efbc0da6e",
        "cursor": {
          "ref": "cc406420-b2f3-492e-a0e0-ad64efb9d4e1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fbcf3cd1-f2f6-46d9-9ab6-606811eee2a3"
        },
        "item": {
          "id": "e56a9719-de12-4b27-a4ba-4f6efbc0da6e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ce68ef86-4b3e-4579-87be-ca822a5f6014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9a184-c68e-4de9-9262-f3bbfdc51e5c",
        "cursor": {
          "ref": "3d42c7c6-1b38-4a26-a345-e366df5196d0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3faea6e1-6a69-4f9e-91c9-9b973d1bf798"
        },
        "item": {
          "id": "3bb9a184-c68e-4de9-9262-f3bbfdc51e5c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c6f36368-33eb-4db7-bf36-c21581a81581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1844beae-029a-4af1-9ce0-29050f7cf103",
        "cursor": {
          "ref": "6a6f8466-9657-4b09-94fd-e8708d18ed44",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d1b25426-2457-44b0-a793-4c17590f13d1"
        },
        "item": {
          "id": "1844beae-029a-4af1-9ce0-29050f7cf103",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8a25c4a4-3c22-493b-97e3-e9760b241e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23626c79-5c54-4a34-bfb3-57635ec11d6d",
        "cursor": {
          "ref": "c675f176-8544-4285-8bd0-562da2b1557c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c9db289a-4c59-4406-8136-bba6370a2796"
        },
        "item": {
          "id": "23626c79-5c54-4a34-bfb3-57635ec11d6d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e2b5327e-92cf-4898-8bcb-cfffb0d214b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ce4af4-9476-4a3a-b90f-a37590bf73af",
        "cursor": {
          "ref": "daf3ee86-c016-4586-9dba-7aea7923448a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f89d0710-44a1-4e70-99cf-f0b5d842a735"
        },
        "item": {
          "id": "70ce4af4-9476-4a3a-b90f-a37590bf73af",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "08c01841-d49e-4db6-bbc3-077ac9c948ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e4adf4-687a-495d-8d08-0d4870a9f011",
        "cursor": {
          "ref": "2dd9194c-23c2-44c8-9e28-32c56bfc462e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e526951b-f27b-4cfe-b4aa-cf49a522107d"
        },
        "item": {
          "id": "b4e4adf4-687a-495d-8d08-0d4870a9f011",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fddf8d52-a552-40ed-8c8e-49fb9dc67194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22f66c0-889e-4434-8e26-f99ee968fe41",
        "cursor": {
          "ref": "5d95a8b6-cb39-47b1-811a-e23a35034173",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66d89e90-ccba-42a1-bf30-1a531a3e29c5"
        },
        "item": {
          "id": "f22f66c0-889e-4434-8e26-f99ee968fe41",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7362c2b2-457d-4fcc-a692-47c16faf79f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40605a53-c175-4f11-874f-c9c28890b8dc",
        "cursor": {
          "ref": "9db9bf04-89f5-4948-a90e-1bc0893829be",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "30fd96e3-9d3c-458f-a056-ac6c57da9fca"
        },
        "item": {
          "id": "40605a53-c175-4f11-874f-c9c28890b8dc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fbc40617-7f80-4acb-93db-ecfa87dacdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbb01f2-3a90-48bf-8fe3-d6dec5307670",
        "cursor": {
          "ref": "fa082b3b-7020-447b-a4d0-5757b1efceb8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "632fbd11-d6aa-44fc-9407-7e6e0b9daf61"
        },
        "item": {
          "id": "4cbb01f2-3a90-48bf-8fe3-d6dec5307670",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "69ec8fad-3568-4e1e-8a0a-50c48ec2a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9703da-9bcb-4eac-86bd-d902984f9d1a",
        "cursor": {
          "ref": "f61743a3-4adb-4cde-9030-2e8a39084ebb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff179c73-afbf-45ea-bb70-f62614fb2a89"
        },
        "item": {
          "id": "0b9703da-9bcb-4eac-86bd-d902984f9d1a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db53fbcc-59fd-4c59-bfd9-603e00819186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d11c92-100c-46da-957f-f1c46427b9cc",
        "cursor": {
          "ref": "7211b32e-aaee-4a94-9025-220b2d62dfe9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a035774c-38c8-4924-baed-0a9ee6616864"
        },
        "item": {
          "id": "97d11c92-100c-46da-957f-f1c46427b9cc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8c4c7120-78d0-450b-ba92-1b01ee76e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f9735a-2e1a-4796-b497-acd552b7dd90",
        "cursor": {
          "ref": "75c7a7ea-d7af-41e6-a0d8-8fa37fc0ec4d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "11354053-5379-4d69-b3dd-9a8b3ed54337"
        },
        "item": {
          "id": "99f9735a-2e1a-4796-b497-acd552b7dd90",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b6022f1-a1d7-4370-b823-2d600e2233eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf32aae-6213-4c48-ad60-8ecebd2092f7",
        "cursor": {
          "ref": "1c98fdf7-8d8d-43d3-b78b-817fee9afa2c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9d71cd4c-8284-4083-b5b1-727e88cba0d6"
        },
        "item": {
          "id": "adf32aae-6213-4c48-ad60-8ecebd2092f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b9b2d24-b838-43e1-8e6e-d9bf90f5f36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f96626-6bb3-4668-b303-c2f0a6559ae5",
        "cursor": {
          "ref": "38fcb40a-dbbb-4e7c-a32e-46e0c6a96bd5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "799fd79c-664a-4b74-a82f-290ceb3d44b5"
        },
        "item": {
          "id": "75f96626-6bb3-4668-b303-c2f0a6559ae5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a13034b6-6a32-41ea-8445-c86073e80008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0daae-ddbc-4c71-8091-368bde2e0c0a",
        "cursor": {
          "ref": "82d78222-b65d-41f4-a1a2-cbc106436c35",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9610d4f9-bf5b-4c48-80bf-4a32fb2a6a96"
        },
        "item": {
          "id": "96f0daae-ddbc-4c71-8091-368bde2e0c0a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ae832499-436e-4549-aa0e-301f23f82c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c0fdb7-c5c3-40a5-8050-b7f6f43123c8",
        "cursor": {
          "ref": "94530398-3650-48ca-b0ac-7aad7cfc761e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8d485f64-2381-412c-8d1d-a65aa8f4537f"
        },
        "item": {
          "id": "d2c0fdb7-c5c3-40a5-8050-b7f6f43123c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "497c8154-ed90-4448-ba80-a8e0bdbd8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c197a0a4-504d-45fd-b455-519e2acd487f",
        "cursor": {
          "ref": "eb4a607d-0450-420f-b9bf-58b8daec7c33",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a5977e0-0a2e-4cc3-807f-e4495f4ce1c0"
        },
        "item": {
          "id": "c197a0a4-504d-45fd-b455-519e2acd487f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "190b9600-32c9-4685-bcb0-ce7accef3428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebbba8b-e470-44cf-8ba9-7a2648af6f0b",
        "cursor": {
          "ref": "2c66ff99-01d4-4fa9-b3c9-d7f7f393ff1c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bbcff0ed-f7f2-465a-9e4f-31facfba777e"
        },
        "item": {
          "id": "bebbba8b-e470-44cf-8ba9-7a2648af6f0b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "be07646e-81bb-43d4-ad6c-f9135e1cde5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b715ab3-0b6d-45be-bd87-a65e9aee67bb",
        "cursor": {
          "ref": "39b2755b-f52a-407b-92c0-446ed8b84090",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e316e578-51a4-4253-a3de-acf3bc58de1f"
        },
        "item": {
          "id": "9b715ab3-0b6d-45be-bd87-a65e9aee67bb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b9ccff22-85e2-4207-9991-d04fcef197a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1d931c-2bc3-4075-9b1f-7f9c6881af32",
        "cursor": {
          "ref": "16bd40a7-795a-4ebe-af07-8eb44cb18297",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0c738328-785e-4a5a-87a8-ae4285fa5f24"
        },
        "item": {
          "id": "2e1d931c-2bc3-4075-9b1f-7f9c6881af32",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "da098a83-311f-4726-b59a-410b5d0329e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744c57eb-8b2a-4ae4-aab1-99df17d0e737",
        "cursor": {
          "ref": "919f8b04-3f81-4700-9af5-cbcbba8722cf",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "739160f2-a78b-4c74-afae-92b3496f89b9"
        },
        "item": {
          "id": "744c57eb-8b2a-4ae4-aab1-99df17d0e737",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "42944abe-c394-4455-80db-cb9e6407893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf081ffc-a6da-4f18-aae4-9fa8ce77c43d",
        "cursor": {
          "ref": "c2b38454-c9d2-4c80-8e54-ec89fb885102",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f71314b2-3d88-45f9-bb85-3b16f76b3bdb"
        },
        "item": {
          "id": "bf081ffc-a6da-4f18-aae4-9fa8ce77c43d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d81fcb1-13c3-4fef-9f59-b5f75ca0d971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d6bb7f-fe1d-49ed-9f82-241cb0942507",
        "cursor": {
          "ref": "ce810036-4059-45b1-a213-467b2f526941",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce93262e-7786-4c16-8037-35696dcc823c"
        },
        "item": {
          "id": "53d6bb7f-fe1d-49ed-9f82-241cb0942507",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6188f4a8-c42f-41e4-a412-f15d63e5b1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2631b984-f9db-4662-bbcf-95acb64fc5ac",
        "cursor": {
          "ref": "016592c3-f6d8-400f-a620-a3dbfefeecc8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2a946bae-4b37-465e-a256-02564492c248"
        },
        "item": {
          "id": "2631b984-f9db-4662-bbcf-95acb64fc5ac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2c53081b-c532-4efc-a0f2-4f945a65251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0622182a-79fe-4cf2-aebb-13180adf4d71",
        "cursor": {
          "ref": "d8342261-7ba6-4c45-965e-19a07cf11219",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "892d0fd4-2e5e-4a9b-afd1-5e711de548e7"
        },
        "item": {
          "id": "0622182a-79fe-4cf2-aebb-13180adf4d71",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "66d8ff9e-3349-464d-81c3-cc873d655458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b19e0b-7b88-4dbf-8daf-3a925fe61f2e",
        "cursor": {
          "ref": "a3cda3fb-47af-430e-b171-57bb25d01389",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c022d1a-7b37-4486-9b45-f7601fc7030c"
        },
        "item": {
          "id": "11b19e0b-7b88-4dbf-8daf-3a925fe61f2e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f99cdb2a-ae4e-41eb-ac0e-aea4a27c498f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0587027-0c3b-42bc-a114-91d9a28222fc",
        "cursor": {
          "ref": "541c1f66-524a-4baa-9bd5-57d9ffa8045f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9e16d933-7de1-4459-9613-77dc1ad48767"
        },
        "item": {
          "id": "d0587027-0c3b-42bc-a114-91d9a28222fc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "35cba8b3-82f4-4a5e-88f1-d8031d08805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9eeff806-3e2f-4bcf-94ab-5910b36e36ba",
        "cursor": {
          "ref": "9e4dd1a2-99f6-429f-b3d5-fa4bb4793ea7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "823409e4-9bd5-4822-a14f-633f0fd068c2"
        },
        "item": {
          "id": "9eeff806-3e2f-4bcf-94ab-5910b36e36ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "799bec7b-54ab-49ba-a6a7-8212ba77ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d6ac78c3-8147-48f3-a41e-047b8dcd04ba",
        "cursor": {
          "ref": "b1902fd8-766c-4410-850f-b9eeaa0d35ea",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "66b0d654-8848-4254-8345-f1691106ec48"
        },
        "item": {
          "id": "d6ac78c3-8147-48f3-a41e-047b8dcd04ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2ac47653-df8c-404d-a356-106075bf9db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7cea3099-4c43-4eea-a0a4-728c2c82968f",
        "cursor": {
          "ref": "2ecca66a-ff99-43c7-ace9-626ae8a8d2b1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5adc128a-c5d6-4fd9-b64a-1fbea8a38b0e"
        },
        "item": {
          "id": "7cea3099-4c43-4eea-a0a4-728c2c82968f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1494ebab-a030-4e08-a3e7-ba85d7cf6567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "540c055c-c9c8-4822-ba55-2ea8bd42d363",
        "cursor": {
          "ref": "a950af30-8455-48c7-9727-1390307e3f1a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3d1f5961-9f65-4cfd-bb25-9a62f6c82280"
        },
        "item": {
          "id": "540c055c-c9c8-4822-ba55-2ea8bd42d363",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0e2f6193-fc45-4974-aa1e-6550ffc9476b",
          "status": "Created",
          "code": 201,
          "responseTime": 13149,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b4f0e9-5e20-48fe-b183-a3d433bffa0c",
        "cursor": {
          "ref": "99462c10-8239-4b9b-9c5b-cb69d114d6cb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a07cf8f2-30fc-42d9-8e44-2e322a24ea31"
        },
        "item": {
          "id": "04b4f0e9-5e20-48fe-b183-a3d433bffa0c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "302975b8-05e0-472c-b80a-d87c9c2b2dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8ce49ff0-bbf7-4b9e-af94-4ddc5479f4f2",
        "cursor": {
          "ref": "954c55e6-1876-42b6-861e-f874cf00ae4a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2bfdd78b-09eb-4723-b714-dc34f036dca6"
        },
        "item": {
          "id": "8ce49ff0-bbf7-4b9e-af94-4ddc5479f4f2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "67fb8c7f-21ae-4cc4-8795-b012058de264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7d970f12-5071-4a2b-b5dc-18417004c012",
        "cursor": {
          "ref": "07bfa6e7-b0c7-4737-a67a-ae572feb38db",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef3b412e-a4ea-4aa7-928d-bc62a5aa67c1"
        },
        "item": {
          "id": "7d970f12-5071-4a2b-b5dc-18417004c012",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff7a20a8-13f9-449b-9e99-0538d4fd4975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaf401f-b18d-4190-b54c-329f157b37b5",
        "cursor": {
          "ref": "50b8b82a-35d0-4c4e-8a9f-0e4557dc7c1a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b8a2ed8a-0a14-4855-8e7b-06f34e2e0427"
        },
        "item": {
          "id": "adaf401f-b18d-4190-b54c-329f157b37b5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a9a87e36-9b5b-4faf-b11c-b9cd8ac18c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf3faec-714a-4eb9-a0e8-a69dde6ff077",
        "cursor": {
          "ref": "5aa9bf03-648b-49da-946f-8e643beaccdf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "abd21d14-9749-46fc-8f36-e075c2afc6ad"
        },
        "item": {
          "id": "abf3faec-714a-4eb9-a0e8-a69dde6ff077",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "31e6ab25-b93b-4940-80f8-5aaf9c28d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde565dc-ace0-43a7-866c-166e5d14a963",
        "cursor": {
          "ref": "0ac93e7b-c6c7-4d5f-8dc5-089ae2c0e6b6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8e9093ed-9257-4d1f-818f-4487a75f4c16"
        },
        "item": {
          "id": "dde565dc-ace0-43a7-866c-166e5d14a963",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3752ba5-9bfe-4f49-b39c-b565342dda6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4162b9-890a-459a-95ab-1a9de0156ec4",
        "cursor": {
          "ref": "c3b6784c-7eec-4922-b9bc-6f9788645ede",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a13a6e28-894d-4059-997c-8bdffcd76c3a"
        },
        "item": {
          "id": "ea4162b9-890a-459a-95ab-1a9de0156ec4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea870041-8655-480b-9134-0221cac0092c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de6e401-812d-4eb9-b974-e8bd12128070",
        "cursor": {
          "ref": "a4e111ec-3109-4187-b5c2-4c4303ea71e0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "91b09da2-5390-4213-bc0a-ae712cf6d8c0"
        },
        "item": {
          "id": "5de6e401-812d-4eb9-b974-e8bd12128070",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30884578-a6b7-402e-8cce-8069c4da30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa147e3f-e3e4-4788-80e8-ceccb3ab6b5f",
        "cursor": {
          "ref": "b59c6b9e-297d-4926-8221-924836209d3a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c92d2d11-fb8f-488b-a1de-7ce10089e999"
        },
        "item": {
          "id": "fa147e3f-e3e4-4788-80e8-ceccb3ab6b5f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a6918d7-ac20-4dd3-9347-d3fc6c9c3930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8a410d-5b75-45a7-a20d-4c4b18b0dfd0",
        "cursor": {
          "ref": "e4c9f526-90c1-4248-a052-3fddabaff0db",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a935e1a-94ed-4b15-8652-fbdc65ac58da"
        },
        "item": {
          "id": "1f8a410d-5b75-45a7-a20d-4c4b18b0dfd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5627e8c5-d23b-4fc5-9016-90ee3dace441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cfcb07-f7cc-43fb-a080-0bf8fbb5113f",
        "cursor": {
          "ref": "01c5bc1e-839e-4966-ab18-741b5f3ec6fe",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9bd816b2-0f40-4112-aef3-3005a2d6d872"
        },
        "item": {
          "id": "d3cfcb07-f7cc-43fb-a080-0bf8fbb5113f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e7655fff-27f4-4367-86be-00dee94dd83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d04cf19-559e-4dcb-bdda-0a7330c01233",
        "cursor": {
          "ref": "4cfd7bbe-698b-489d-983b-e1b69edd4d84",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c11f4ef-f472-498b-b5cd-8046b1c3855a"
        },
        "item": {
          "id": "7d04cf19-559e-4dcb-bdda-0a7330c01233",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d8c928a3-2955-4459-91dc-37aad6255d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14947e3e-5e3c-4ede-9f56-68f6992bd857",
        "cursor": {
          "ref": "01e02ea6-18f2-4982-9767-a89171b061d7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11930e81-c4b6-40a0-9d0d-6b99f2c45e7c"
        },
        "item": {
          "id": "14947e3e-5e3c-4ede-9f56-68f6992bd857",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "865a827f-dc5b-4ab9-b57e-d36f246e30f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0312d489-7f12-4d9a-bfd8-bc1d84cd6f46",
        "cursor": {
          "ref": "9ba571e8-7963-4650-937b-05b5a8fa11f0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ca151b5e-2bb3-4b3e-9536-29b5c1ab01a1"
        },
        "item": {
          "id": "0312d489-7f12-4d9a-bfd8-bc1d84cd6f46",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b3a5d03b-0b72-494e-af0a-72a20e34abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50d6518-facb-427e-a086-c3e5aa714c9f",
        "cursor": {
          "ref": "a945deda-528f-45c5-9789-87049b37b70a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a866aa90-3ef5-4012-bf89-5f37fe6315b0"
        },
        "item": {
          "id": "c50d6518-facb-427e-a086-c3e5aa714c9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3862560-f83c-4029-a3d7-5ebbaad5bc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a95065-3d2f-4403-b0d4-0f0537e3825d",
        "cursor": {
          "ref": "ecc895b1-7112-4c0a-ae9a-30b82f38fb9d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0564b964-c72d-4903-ac31-d3fd18460016"
        },
        "item": {
          "id": "b6a95065-3d2f-4403-b0d4-0f0537e3825d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "30a0735b-b298-4726-a49c-3b71ab2a8f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b5aa5-8d29-4513-8127-69e192ebb452",
        "cursor": {
          "ref": "87a97dd7-8835-4c5d-9482-d09a6657f1c2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cd9f5488-9b14-4d40-ad6a-bbc242cae17b"
        },
        "item": {
          "id": "c17b5aa5-8d29-4513-8127-69e192ebb452",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e844d324-e0ad-4812-8ad9-0179e1eb1594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24add33-f687-4da6-8174-c3ef5ce7120c",
        "cursor": {
          "ref": "36e3f700-9c2f-46a2-a32a-93f72e0b9255",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6426c3c2-8ffa-4f9b-83d3-27bbef819b42"
        },
        "item": {
          "id": "b24add33-f687-4da6-8174-c3ef5ce7120c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0725d010-f0b4-4b1c-a270-f6f857429fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef71b34-21c6-4319-b083-3369fc52096c",
        "cursor": {
          "ref": "96266e9f-f803-41ab-af1f-57a3450ba704",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "01637cff-8dfd-488f-99b1-f7c127562c65"
        },
        "item": {
          "id": "fef71b34-21c6-4319-b083-3369fc52096c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f523621b-1a47-4945-87a5-e0bc509865ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 127,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "703f84aa-5cfd-4502-8837-3e1eac3b3a07",
        "cursor": {
          "ref": "28c1f3ed-a9b5-456b-a346-e70f6777ab1f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f63465da-fb95-489e-9c4e-8b71d3d04981"
        },
        "item": {
          "id": "703f84aa-5cfd-4502-8837-3e1eac3b3a07",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "27c5417b-4a11-4357-90fc-421cf0c1c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ededc48f-4125-48f6-b1c1-628db68a66df",
        "cursor": {
          "ref": "e304eefc-e311-41c8-bd2c-a2c2452fca14",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "13fdfe76-68a3-4caa-9001-d2f491aec790"
        },
        "item": {
          "id": "ededc48f-4125-48f6-b1c1-628db68a66df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef2c6b91-942e-4d95-b58c-36dc7197c6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5bf409-6d08-4cf7-a858-4dd63e86b5d0",
        "cursor": {
          "ref": "4d01d5c1-4827-4f1b-a330-e95ff5f0a82b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7274cbd3-0f7d-4d73-b96d-efb2eea74efc"
        },
        "item": {
          "id": "9b5bf409-6d08-4cf7-a858-4dd63e86b5d0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ca9f925-dd36-400f-bcfe-b15deaef079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26bc33-de26-43f9-9790-9b3fcd81d28f",
        "cursor": {
          "ref": "f12681d6-7764-43a5-bc53-df4c09c65d0d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ddb49aaa-09d8-40a7-b2ae-ec6fdf86d027"
        },
        "item": {
          "id": "9c26bc33-de26-43f9-9790-9b3fcd81d28f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4001b608-b425-442c-a06c-8d36d624206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338a6801-9852-4a38-9a6b-fa8ba725b896",
        "cursor": {
          "ref": "224732cb-c87e-4809-b254-e7dc77661528",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2ac1b08f-6b01-4b39-baa5-659f063844fa"
        },
        "item": {
          "id": "338a6801-9852-4a38-9a6b-fa8ba725b896",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d4f370b-42ed-450b-91e5-579d1ea570ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d30f67-5319-4e34-ad9a-c3b44b948f05",
        "cursor": {
          "ref": "8be816dd-2fc5-4e23-a531-8c6895ac8230",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "407b4b85-5352-46cd-9a08-19cb7986740c"
        },
        "item": {
          "id": "27d30f67-5319-4e34-ad9a-c3b44b948f05",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "24af23c9-734f-40f2-9ce7-804a838e8e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eece99-6a66-47b4-a989-bbbdd5b8dd32",
        "cursor": {
          "ref": "5cdc4afb-061c-410f-aaf2-13da42c16f42",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "47864c69-6861-431a-b73d-73cc57a055c4"
        },
        "item": {
          "id": "59eece99-6a66-47b4-a989-bbbdd5b8dd32",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b41860d3-cc8d-405a-b2cf-5308d0ba45d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49230dfa-4e96-4e3a-b470-d3339ea8fc56",
        "cursor": {
          "ref": "721160f2-fd33-466e-8edf-454bbdb93642",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1cc10d5c-e06e-454c-bd84-cd4563994775"
        },
        "item": {
          "id": "49230dfa-4e96-4e3a-b470-d3339ea8fc56",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "903a1a22-bd48-4ce8-b8cb-7679854686ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b5346bd5-5692-4505-80a6-aea3b4da43b5",
        "cursor": {
          "ref": "62a69905-b231-4410-b0de-ebf9957152db",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4ab24f79-822d-4461-9a47-e62693125e2c"
        },
        "item": {
          "id": "b5346bd5-5692-4505-80a6-aea3b4da43b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c87475d-6cdb-455c-9910-e25bf28657ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5918c598-d746-4c18-8798-0db40f0c4dea",
        "cursor": {
          "ref": "6fc67953-c680-4218-aeb3-21ea04cbf84f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3393bbad-face-4e7e-9d34-f657981c3127"
        },
        "item": {
          "id": "5918c598-d746-4c18-8798-0db40f0c4dea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9eab9b43-591b-4d74-aba6-4d7cb151e5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bad7f6b-e2f0-40fd-9bf7-954042300aaa",
        "cursor": {
          "ref": "4255943e-afb7-4d15-a6a2-c30ca5396526",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5ada90e1-a175-49e4-89d7-523655e24a6d"
        },
        "item": {
          "id": "1bad7f6b-e2f0-40fd-9bf7-954042300aaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2dd03706-9a2d-4c4f-b6d0-0514fb6a125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d700e3e5-0014-41b4-a802-3e8a979d721b",
        "cursor": {
          "ref": "44751919-435f-46e0-87a3-88ffc6006296",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "11b2d831-7853-4396-be55-3a700998d802"
        },
        "item": {
          "id": "d700e3e5-0014-41b4-a802-3e8a979d721b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6355432-86d5-4496-9ee8-43d7268af933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df627ccc-746a-4132-ac64-7ae4812b8794",
        "cursor": {
          "ref": "2290b76c-baff-4ca7-9155-de9c7fc67ebf",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "afd60fca-4f68-44de-b293-6e6bcdc2828d"
        },
        "item": {
          "id": "df627ccc-746a-4132-ac64-7ae4812b8794",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1bb554b5-8f08-4804-ba74-d714a2089947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c2d5da-b320-4805-9cd3-4a0ad6a54e2f",
        "cursor": {
          "ref": "8d30efc8-445b-4220-ae60-dd9cbf23d1cf",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22167e1b-2edf-40d1-887b-e1f97528991c"
        },
        "item": {
          "id": "57c2d5da-b320-4805-9cd3-4a0ad6a54e2f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b567a3e3-7803-4857-b9c2-b899550b383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a37abc-65b7-432d-bb28-280176883709",
        "cursor": {
          "ref": "0bcbc7c4-ed9d-4eee-87c8-aeaaefe2f41b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "15845be5-bb43-4c30-859f-09539324da88"
        },
        "item": {
          "id": "e9a37abc-65b7-432d-bb28-280176883709",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c7c0708b-8f0a-439e-930f-7cd26c56b2bc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "d6de1895-1658-4c17-b839-a950438dd544",
        "cursor": {
          "ref": "b52455bd-60aa-4132-8315-dd34f0ec4bef",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3979cb58-f059-4780-b01c-d9b4a4effebd"
        },
        "item": {
          "id": "d6de1895-1658-4c17-b839-a950438dd544",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "362ebe18-bdf3-482c-a98d-a5468f68b924",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 124,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b47ee8d2-6e3f-45c1-a1f0-324592f5add7",
        "cursor": {
          "ref": "56c13f59-86f7-4058-b9f4-dbb7b52c465c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a14f2ea4-c78f-4942-a5ca-d292b5b7b97f"
        },
        "item": {
          "id": "b47ee8d2-6e3f-45c1-a1f0-324592f5add7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d3319f77-4b13-4b04-b6a0-5913706483bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 118,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "116dc064-4cda-464e-a3b5-3e3085404c47",
        "cursor": {
          "ref": "32f4b731-734c-452b-a669-c83f449f1087",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6083f4bb-5c86-4529-8b7b-de50985125d9"
        },
        "item": {
          "id": "116dc064-4cda-464e-a3b5-3e3085404c47",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18d93306-c577-438a-b9f8-78cca3663cb1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 158,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "29dc65af-dd66-44cd-81e2-2bc1d376be1a",
        "cursor": {
          "ref": "6c850d4f-5178-4f1d-8582-ceb9d5bbebe6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "495c2d27-1342-417e-a2f7-945145bc9d7b"
        },
        "item": {
          "id": "29dc65af-dd66-44cd-81e2-2bc1d376be1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d1ce200c-fede-4dd7-ae14-4dc0896d3583",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e7061adb-11df-4315-b526-6967d98ad29c",
        "cursor": {
          "ref": "f0494ee2-b5cf-496f-84e1-7143c07427f9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ac9712e4-3c5c-4003-b5e9-33c2401a7332"
        },
        "item": {
          "id": "e7061adb-11df-4315-b526-6967d98ad29c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "21f7d045-d0ae-4adb-9ed7-1bc00d2a15b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b0d651df-66fa-4b0a-9473-329f0e45e980",
        "cursor": {
          "ref": "aae29121-a7e4-4aa6-ad3b-d3ec002e06ec",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f962f767-87a4-4c59-816f-f1a9f233fbfd"
        },
        "item": {
          "id": "b0d651df-66fa-4b0a-9473-329f0e45e980",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f6204d53-48c1-4e48-bd09-9a8673c059f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150dce1-1efb-4893-b761-6c17df5fe546",
        "cursor": {
          "ref": "898ea711-c9c7-4cc8-b568-71de08fff1b3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "468f2c67-0639-4675-9b5d-0e7e46be8a4c"
        },
        "item": {
          "id": "e150dce1-1efb-4893-b761-6c17df5fe546",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dc494256-9697-4271-bbbb-d9c935f06a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51571a3-ffe6-402c-b327-9e799b9cdc78",
        "cursor": {
          "ref": "317f1e23-3169-4936-9e7e-98160b1da7f4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eef5809c-a0bb-4ef2-af5b-c20fe5f93527"
        },
        "item": {
          "id": "b51571a3-ffe6-402c-b327-9e799b9cdc78",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "920104b5-7ab7-4f20-9b8a-7ec64dbab9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0817ee8-dae9-4e7c-9077-812d799420fa",
        "cursor": {
          "ref": "1299c40c-73d7-47cb-8faf-ccd406d845bf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "99b3f51d-ce19-4f6d-b8a1-85efd408079c"
        },
        "item": {
          "id": "f0817ee8-dae9-4e7c-9077-812d799420fa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "043f0b9f-c52b-45c2-b00a-ac6dd3ba082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649444ac-a9ea-4bc9-ba3f-1142db52664d",
        "cursor": {
          "ref": "ae9c5727-2021-43e2-97b0-550563792665",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4417fca2-93a7-4390-bdd9-eac57da86e75"
        },
        "item": {
          "id": "649444ac-a9ea-4bc9-ba3f-1142db52664d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e4c24538-e44c-4c8a-9293-86dabca25928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817b1508-661b-4724-9c75-734c3a13db84",
        "cursor": {
          "ref": "bd1a7fc6-fcdb-4b5e-9d50-7f42bba5ce4c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b0efd0b8-e090-4975-8259-e8a0f1f0fb6d"
        },
        "item": {
          "id": "817b1508-661b-4724-9c75-734c3a13db84",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fc6bbbc5-c1c0-4b9e-9407-910f6ed8b84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050ca2cf-1225-4314-b96e-edd01e9b1ab8",
        "cursor": {
          "ref": "9c2cb663-a967-44ac-afb0-df708e76f841",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "06d5a9b9-30f3-45e9-a80f-a7b3c47997f8"
        },
        "item": {
          "id": "050ca2cf-1225-4314-b96e-edd01e9b1ab8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7534716-c5f6-410c-bbde-a9ee990150e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abe4959-41c5-42a5-aedb-e4a59040e008",
        "cursor": {
          "ref": "00a52fe5-3e05-4990-b307-3c4d2962ffb6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1e74cf41-e389-448b-958c-4c91f1251b38"
        },
        "item": {
          "id": "3abe4959-41c5-42a5-aedb-e4a59040e008",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d14e650-8f2c-42f8-b398-091ff5193bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590e3e4-2f46-419d-aee0-a0ae7a0edc3b",
        "cursor": {
          "ref": "63d68a9a-5911-4718-8139-ec22c3d7d3d0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a60e5d62-df10-4208-8ce2-49d5a4beb2ef"
        },
        "item": {
          "id": "e590e3e4-2f46-419d-aee0-a0ae7a0edc3b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "63255100-3dc9-4cf7-8aa5-c432175095d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb20579-ee66-4f5c-bc05-ac2c10a61ed6",
        "cursor": {
          "ref": "994432ae-91b8-4dea-a5fe-5d62069ee810",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18904983-b2c1-4da7-a852-5f3f1ac3bbbd"
        },
        "item": {
          "id": "acb20579-ee66-4f5c-bc05-ac2c10a61ed6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "314b1d24-9030-4218-ab7b-74578b0efa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9f1dcc-07b0-4c40-becb-d0fc7a9d3259",
        "cursor": {
          "ref": "a8e12a37-fb79-408b-8012-fbe1de44e3ef",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "32002e44-965c-4bc8-891f-6459ff9eb189"
        },
        "item": {
          "id": "bf9f1dcc-07b0-4c40-becb-d0fc7a9d3259",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "89878930-e90a-4ee8-a4e0-ebc9c333bd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e67f505-473e-49c3-a498-ac60ea4f1abb",
        "cursor": {
          "ref": "32308130-9944-469d-8f52-1857fea1cf98",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3159bdd4-14ff-4149-a5cc-5febf418ff11"
        },
        "item": {
          "id": "4e67f505-473e-49c3-a498-ac60ea4f1abb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e72f8389-4114-4f33-a06a-f701b6e75467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b86419d-bb4f-4de5-957b-c1a853f88f1f",
        "cursor": {
          "ref": "90eac2d9-2e41-4e9b-8866-ced2cf117609",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a0134ce-686a-4d5a-82c7-66c9f737f8db"
        },
        "item": {
          "id": "3b86419d-bb4f-4de5-957b-c1a853f88f1f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2836ba84-c161-4b3d-944a-c0fbb5eb87b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e78424-5cb5-4079-8665-afbf34cccedb",
        "cursor": {
          "ref": "c9951d45-a3a5-48be-908b-cae49d0d9a9c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d5b4ad80-5cdc-4b8e-a98f-9cc4a360c395"
        },
        "item": {
          "id": "05e78424-5cb5-4079-8665-afbf34cccedb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a343e2bf-3162-46cc-aa9a-b51e1a68aadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5c7d0e-3d9f-452a-b5b6-1e8cdbedd713",
        "cursor": {
          "ref": "b2cf6ccf-0b7e-4554-a782-38173a24eeb6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1f5d0ee6-3d9d-44f4-9f0a-c1d3a3ddb418"
        },
        "item": {
          "id": "de5c7d0e-3d9f-452a-b5b6-1e8cdbedd713",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "446cb6f5-395f-447a-9232-d7e991955a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dacc93e-cc31-4499-afee-525aecbe8fea",
        "cursor": {
          "ref": "2cb2aac3-ac25-4afe-8bf9-3659114554f1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c97c72d-23de-43fd-97fd-8e355e20d9b7"
        },
        "item": {
          "id": "3dacc93e-cc31-4499-afee-525aecbe8fea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f7829aad-bb0b-4b40-b8d5-41eeeca76d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffaf226-e581-4a5a-a8a8-364e2fcfec5c",
        "cursor": {
          "ref": "0016df4f-0548-42ab-a27c-ef41edb60d55",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b520a9ae-812d-4ada-8320-780f05131083"
        },
        "item": {
          "id": "7ffaf226-e581-4a5a-a8a8-364e2fcfec5c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "41418d26-caee-431b-8ee9-d80f07814b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a116ff-93a6-4df3-9570-145de5655790",
        "cursor": {
          "ref": "4fb51192-e899-428f-94e5-ebcbf18fe394",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "63332d97-7a7f-472c-9c0b-5108b8a0ab5b"
        },
        "item": {
          "id": "d1a116ff-93a6-4df3-9570-145de5655790",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "00635b22-6515-4e7f-b067-336d5437f628",
          "status": "OK",
          "code": 200,
          "responseTime": 271,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "025b9221-e054-461a-a93d-7de2e9d55201",
        "cursor": {
          "ref": "48573e84-df24-4d6a-b40d-57636f76ec92",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "36190747-13f3-48e3-a79b-5677b519a31c"
        },
        "item": {
          "id": "025b9221-e054-461a-a93d-7de2e9d55201",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e996c69d-3cb8-49c7-980a-6c660c6f2d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60bdc57-8d82-4ad6-a810-5c254f7a4671",
        "cursor": {
          "ref": "d2b9015a-1c53-465b-96a2-11082409cf14",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "236d7413-9da9-4680-a871-105a358d498e"
        },
        "item": {
          "id": "f60bdc57-8d82-4ad6-a810-5c254f7a4671",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2237b8ea-e679-4191-969e-828e1bd89028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3141d34b-c8dd-4b59-a87c-aa4b4c879b39",
        "cursor": {
          "ref": "be336bdf-433d-4e0f-8306-e69930b1bedd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "72e8e5f8-cea6-4484-bd64-257627a00af8"
        },
        "item": {
          "id": "3141d34b-c8dd-4b59-a87c-aa4b4c879b39",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "45e0e013-9c71-4cd3-9586-2fdd2302c44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2c3715-a291-4504-83e2-b816782c3c76",
        "cursor": {
          "ref": "b56a77bd-aae1-422e-846b-929eea57fa44",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9774a4e5-4357-45b6-84c9-4f5310475053"
        },
        "item": {
          "id": "7f2c3715-a291-4504-83e2-b816782c3c76",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "610351b1-9674-4b4a-be53-8c902e76ecd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eab91a9-fe69-4689-a4ab-7f5fa4e1f86d",
        "cursor": {
          "ref": "85da6945-7820-4f28-be4d-ad0fcf49d919",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3859ba5e-e04a-4aad-9328-6edd5a47b0d4"
        },
        "item": {
          "id": "2eab91a9-fe69-4689-a4ab-7f5fa4e1f86d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9955a121-6f97-4dc1-8f5d-031405c061a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b760c-4527-4730-9f0f-98aebbfc076d",
        "cursor": {
          "ref": "ccf00f51-cf95-4d05-be11-c70a4de23373",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e0322141-a656-4a28-996d-b6851c00b5db"
        },
        "item": {
          "id": "778b760c-4527-4730-9f0f-98aebbfc076d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0016f71a-8c49-4f99-9947-2390428363f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0722d20e-68f5-41c1-bb87-f0a6c512fdc2",
        "cursor": {
          "ref": "265fae98-0352-4930-993d-4cda83833f19",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5088d972-516e-4991-9e5b-08dc7f66bbdc"
        },
        "item": {
          "id": "0722d20e-68f5-41c1-bb87-f0a6c512fdc2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cbcd85cc-c4ca-42cf-9c18-3a55e37f9aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374dfd63-266b-4d4f-8c98-08ff4afb1a5a",
        "cursor": {
          "ref": "cd8d8b93-387f-47dd-8366-b1407fd22c78",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "29acfbec-87c3-4aa4-926f-1eb7698e7d43"
        },
        "item": {
          "id": "374dfd63-266b-4d4f-8c98-08ff4afb1a5a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "da37ca15-6b03-44bd-8be0-3b1a62d390e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cebe307-52e4-4708-9b51-82c89c450c6f",
        "cursor": {
          "ref": "76c0b3f4-3d4c-4076-a876-a6f7d3155eb0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "238312c1-8d9d-434f-b084-e5f204632d70"
        },
        "item": {
          "id": "7cebe307-52e4-4708-9b51-82c89c450c6f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a83ba4bb-bc71-4c97-bd15-9e9af67ad5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77575404-1288-402f-9db6-4a52e76a8adb",
        "cursor": {
          "ref": "1c197c81-ec2b-4e3d-94b0-2439cdde0eae",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7ceee62e-992f-4fb4-b177-8aba3b253c81"
        },
        "item": {
          "id": "77575404-1288-402f-9db6-4a52e76a8adb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dca65d0c-2475-406e-bbc6-7b607935127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac5d4ce-2484-43df-926e-dc5373b704fa",
        "cursor": {
          "ref": "de2d0cc1-bffc-493f-9025-592683de1a0d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e81cb5b9-2792-4580-a81a-049bded31874"
        },
        "item": {
          "id": "eac5d4ce-2484-43df-926e-dc5373b704fa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b313029a-2755-4699-9cc9-cf2216570aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f115faa0-35d3-41c6-bffc-00394bf76bbb",
        "cursor": {
          "ref": "50632d43-ec72-4877-9e27-1206d6ad9170",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee553f46-6105-4cf1-b3ad-f3b64919509d"
        },
        "item": {
          "id": "f115faa0-35d3-41c6-bffc-00394bf76bbb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7112424f-a874-45e8-aa40-0602f3ce6750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada7d4a-73c1-4578-b31a-75b95a01478f",
        "cursor": {
          "ref": "05b02e0b-d7cf-494e-bda4-1b85518abf57",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d8e1c365-a745-4211-9d07-436260b50f0d"
        },
        "item": {
          "id": "7ada7d4a-73c1-4578-b31a-75b95a01478f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8b9a1599-98e7-46b7-b950-b973e9b568d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b274d035-85e2-40d2-81d5-63c9b30d4eac",
        "cursor": {
          "ref": "a329fc17-897f-4042-b56c-4c76c04ab4cc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0507572f-285c-46f8-92b1-879521dfa407"
        },
        "item": {
          "id": "b274d035-85e2-40d2-81d5-63c9b30d4eac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "be00fec4-ba88-455b-b38b-8b01e0880a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f7556-b7c6-4b04-b463-4c3892bf998c",
        "cursor": {
          "ref": "e8f6c6da-aafe-4e4b-8dcc-58a7d6672086",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5bc05385-c2f1-4fdb-83db-571cc5003108"
        },
        "item": {
          "id": "c82f7556-b7c6-4b04-b463-4c3892bf998c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ee7063a-45d0-47d8-8a71-8889055a7ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e32183-92e4-47bf-84ef-9321eca36851",
        "cursor": {
          "ref": "1e3ae420-232d-416c-bf34-1e028fe7acc2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "203b4fd2-ef5d-4e5c-9789-2b1ed9bf4ee2"
        },
        "item": {
          "id": "27e32183-92e4-47bf-84ef-9321eca36851",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da48b28f-7452-4858-baad-dc97dde6d44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b2fc8c-fecb-408a-adcf-8312a87dd9c3",
        "cursor": {
          "ref": "ec30fc7e-e45a-452c-b4b6-e0d984d13d18",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5d97dcd-5e5c-4867-b973-2343631a3053"
        },
        "item": {
          "id": "00b2fc8c-fecb-408a-adcf-8312a87dd9c3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b0ff11ee-876f-4907-bff2-3f55ec4dfad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b998e-485e-4737-af3a-db79c9496ea6",
        "cursor": {
          "ref": "5732795f-a8df-4d79-853b-5ab2ee4f1462",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a1e2d1a8-b5b0-4ebb-a0d0-004a4cac0746"
        },
        "item": {
          "id": "020b998e-485e-4737-af3a-db79c9496ea6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1487003b-5563-4935-9f05-13ca40373033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d730818a-e58b-47fd-8b00-abf771d94a04",
        "cursor": {
          "ref": "f553a1c4-8092-4d4e-9053-4111699050fc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08e04f5b-5efd-4028-b07b-28ccfefe269d"
        },
        "item": {
          "id": "d730818a-e58b-47fd-8b00-abf771d94a04",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f8b0fbac-bc55-43ec-a6f6-9cf8829f79f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c993ba0d-4000-4da4-b015-c2b03f495f3f",
        "cursor": {
          "ref": "1b2cb18a-7db5-4f3a-9e0d-e369b0a5c74c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac73f4ae-338d-404e-87e2-79eb9b39cab7"
        },
        "item": {
          "id": "c993ba0d-4000-4da4-b015-c2b03f495f3f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1e9e1c5f-167e-4b96-a0f2-39cc19b733ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dab8d6-4e1c-4493-a4f5-70d21f8ef910",
        "cursor": {
          "ref": "4fb3d005-705e-4c29-b0c0-795394278c91",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "58c33ae8-1272-47d8-8512-20f91b43dc9b"
        },
        "item": {
          "id": "31dab8d6-4e1c-4493-a4f5-70d21f8ef910",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51555f69-7e60-4786-b7cb-e82974f6373d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c97663-1595-4c0a-af2a-b045486023b9",
        "cursor": {
          "ref": "b785276e-b793-4695-899e-5e8e8f5f13f4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "973e70c7-62c8-4268-9a17-120e900fad2e"
        },
        "item": {
          "id": "33c97663-1595-4c0a-af2a-b045486023b9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5e327a4b-5796-4535-a8cb-cd43b63a3397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0151e479-a869-4f37-b5f1-38e3ca7580be",
        "cursor": {
          "ref": "e8d5a0c7-ac2d-42cc-ad92-9d59eef68e97",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "df1f9168-538f-4473-a55c-aa08b4a31ac0"
        },
        "item": {
          "id": "0151e479-a869-4f37-b5f1-38e3ca7580be",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13915a19-d013-42a4-bb09-b30a6a2eb86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa2200f-98a3-4b85-82c8-e50f5d17b9a9",
        "cursor": {
          "ref": "2bf7e87a-ab05-4e96-bde0-c2ac5a25c81f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4dcf0c97-fc18-4469-8c01-4349565264bd"
        },
        "item": {
          "id": "6fa2200f-98a3-4b85-82c8-e50f5d17b9a9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c90eb8d7-cd7a-4842-b7d5-66b9db2921ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d852c9ba-9c74-4fde-ba55-d740b14ff957",
        "cursor": {
          "ref": "ac135817-41c3-4bbd-8a9a-c23c9a145bf0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd06d0af-5cbf-44c0-8a80-3d63e0f33845"
        },
        "item": {
          "id": "d852c9ba-9c74-4fde-ba55-d740b14ff957",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2efce94b-98ab-414c-a0e3-718afefeea37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f791c75e-fcdf-4cc4-8a99-ae2d54370e73",
        "cursor": {
          "ref": "9b6954d8-acfb-475f-b32e-7a1ba5cff6c0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f2ebf033-ae59-480b-8089-9bf3449d2ae0"
        },
        "item": {
          "id": "f791c75e-fcdf-4cc4-8a99-ae2d54370e73",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dd3f0b50-b940-4498-8fcf-9de4a4e8f313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029062f-ad21-4551-aa8f-0ea38ac47a4f",
        "cursor": {
          "ref": "716de854-b94d-4c4d-b8bb-ca98be12df47",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5ccc843-02db-4f66-86ba-c8a37a93cb21"
        },
        "item": {
          "id": "0029062f-ad21-4551-aa8f-0ea38ac47a4f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "45a202f1-e2aa-4342-9f10-ed91aa0c7cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b47cac-1d88-4e5a-95e4-12914d638689",
        "cursor": {
          "ref": "b377ec29-328e-4e3f-9d9e-8214b7824ac0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5467f0b5-1642-46b0-97d2-03f2b16f0e8d"
        },
        "item": {
          "id": "d8b47cac-1d88-4e5a-95e4-12914d638689",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6840948d-9df7-4c0f-9b64-2aca1103ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58d74f-05bd-43a8-9bb3-e710ef93af62",
        "cursor": {
          "ref": "bca53cf7-0dcd-4f81-9bc0-1bf80a98677e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40d20c8e-a2ce-4ed1-9b6e-c185ff133117"
        },
        "item": {
          "id": "7d58d74f-05bd-43a8-9bb3-e710ef93af62",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0cc7cd87-d72a-4965-bb2e-f6a8b8b156ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ecedf7-7ef5-499b-b330-16cd93557fdf",
        "cursor": {
          "ref": "fd1297cf-44a4-4935-a005-2614ce3127a7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "21f43e39-c9c0-45e1-9d32-9ba562fab027"
        },
        "item": {
          "id": "55ecedf7-7ef5-499b-b330-16cd93557fdf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bbd841fe-2772-4232-8ba3-481d9a5a020e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8c08fd-ad18-4753-bd7e-65ee3db962c4",
        "cursor": {
          "ref": "e9b20791-590d-4d0a-9063-652db03eb327",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "56b33cc3-ca59-4074-99bb-8edd5f0eb772"
        },
        "item": {
          "id": "1d8c08fd-ad18-4753-bd7e-65ee3db962c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d7b30a69-ecb4-4e60-888a-0f26a43a2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b6f0f5-0a3a-42f3-b3fb-704c5201614f",
        "cursor": {
          "ref": "3a5d36f3-64b5-4cb1-aca9-e876f07c10fb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3185709f-b579-4f39-8d2c-12599c71d612"
        },
        "item": {
          "id": "60b6f0f5-0a3a-42f3-b3fb-704c5201614f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "316a4a69-a104-4565-80c2-e329eefe0b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07f21b5-279f-4261-9ab3-03c9031750f8",
        "cursor": {
          "ref": "20168a2e-fbba-46ca-81fb-7334b432616e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7a7481b2-4626-4bd0-ac85-5bdcb332669c"
        },
        "item": {
          "id": "a07f21b5-279f-4261-9ab3-03c9031750f8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "56523535-e59c-4a22-9ba7-35040751ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a6563-4d1c-49e4-bfa3-fa21875c54c4",
        "cursor": {
          "ref": "a5a6c1f8-452d-440d-9775-c435554c601c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a8b99092-2f96-4158-90c3-c460bd0ded85"
        },
        "item": {
          "id": "0c7a6563-4d1c-49e4-bfa3-fa21875c54c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "677d194f-f15c-473a-9e0f-f1a006e689d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c414678-6232-40d8-9272-bf59fb2c68a8",
        "cursor": {
          "ref": "c45cc276-4845-4841-ad66-175b73aaacdb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3f64ae56-a7b9-47ef-9dae-a190a4e354af"
        },
        "item": {
          "id": "8c414678-6232-40d8-9272-bf59fb2c68a8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e94b9501-7077-4c97-9a21-0c397f06cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7059f29e-206c-4c0c-a981-0ccd1d3d6148",
        "cursor": {
          "ref": "61619371-b075-4b6f-9e65-f6cadd42f74e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7ef99769-39d9-4a7c-8f25-5bc166fcc540"
        },
        "item": {
          "id": "7059f29e-206c-4c0c-a981-0ccd1d3d6148",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dbfe7b22-17c2-403f-ada3-cd59c7780f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e9e33-4662-49b5-9374-7d7bf53e0042",
        "cursor": {
          "ref": "072c34b8-c646-4939-a7ec-20d47b14d592",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "934b400a-cb9e-471f-9983-29c02ee3d765"
        },
        "item": {
          "id": "dc4e9e33-4662-49b5-9374-7d7bf53e0042",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "74013784-3af5-438a-a9bc-5dac46bc7653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c75631-4ac2-4fd7-9094-5434dc0bf9ae",
        "cursor": {
          "ref": "34405e12-ecb2-48f6-8266-8f089ff3c282",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c94a99b3-fc0c-45c9-be1a-5820c486da18"
        },
        "item": {
          "id": "b4c75631-4ac2-4fd7-9094-5434dc0bf9ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2217e4a-71a2-42ea-a1a5-b144ab5a8482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7227ab31-8ab8-4531-8629-9181e1e65ce9",
        "cursor": {
          "ref": "2ef4722b-ad47-4b1b-b596-480281b1b077",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0c533363-ea00-4ce3-845c-56c54707c0f7"
        },
        "item": {
          "id": "7227ab31-8ab8-4531-8629-9181e1e65ce9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6361a0c-fafd-432a-b802-e2348326b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973c554-f0da-4384-baf2-f0eb41561ea8",
        "cursor": {
          "ref": "4945866a-a0a2-426b-ad2f-0902810740f3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2ea71efc-257d-472c-ab82-393a9f03d96e"
        },
        "item": {
          "id": "8973c554-f0da-4384-baf2-f0eb41561ea8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c024e09a-a803-4b78-b0f4-43baf3fe68a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7072238-9408-46e9-9e07-558b7dca5413",
        "cursor": {
          "ref": "56ca2358-c888-441b-94f2-bf08cfc9a7ac",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "22049f7c-c127-4968-9b7f-37ac20b1b285"
        },
        "item": {
          "id": "f7072238-9408-46e9-9e07-558b7dca5413",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "31c13d61-7af4-4261-a499-2c137232de99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2291807-6b7c-4cad-b50d-400029a67ea6",
        "cursor": {
          "ref": "4d3e5635-7f4d-495d-a3d2-fc0507f0df6c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca73e71b-b53c-49b1-86da-44b668d8b1c1"
        },
        "item": {
          "id": "a2291807-6b7c-4cad-b50d-400029a67ea6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d5319269-e457-4d5d-84ef-5506aca64949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2c62ab-659d-45ac-a080-7e94134c997e",
        "cursor": {
          "ref": "d9708e9a-1847-44af-8c57-5c24e26b931e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dc9cd8ec-592a-494f-8377-264bc80311aa"
        },
        "item": {
          "id": "4f2c62ab-659d-45ac-a080-7e94134c997e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e939dc3e-b688-4220-8af7-7c12a548fa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afe4bb6-c60b-4190-80de-23896195528f",
        "cursor": {
          "ref": "86a9f805-06a1-4ba1-8c36-8d0ac8164330",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "695a7bb0-94d4-4669-8411-08198b5fd504"
        },
        "item": {
          "id": "1afe4bb6-c60b-4190-80de-23896195528f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84f1a782-54e2-4a63-8b43-94fbd5fb355b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50880527-aec1-421d-bbb5-1b603c6c68af",
        "cursor": {
          "ref": "96cd3070-a7fc-4456-a918-c9675939def5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f817461b-7ecd-428f-985d-dcfc7d961bc4"
        },
        "item": {
          "id": "50880527-aec1-421d-bbb5-1b603c6c68af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "344fee8e-7f0f-49ce-9a24-42a819e8ae79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9287a644-877c-4bd2-81b5-1293ac862661",
        "cursor": {
          "ref": "8fb72d88-bffd-4743-88ac-29e55eae40fb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a7d81622-1ba0-4fa8-b910-9ebb868a4e2a"
        },
        "item": {
          "id": "9287a644-877c-4bd2-81b5-1293ac862661",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95145927-87b0-4725-9511-a7c75d064ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89645c18-675d-40cc-b9fb-5b90f8ac1f2f",
        "cursor": {
          "ref": "95a2eb14-6fbe-450f-9d50-f270154c7aba",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c6b33dc7-72b7-4745-bf14-7f432eeeae1f"
        },
        "item": {
          "id": "89645c18-675d-40cc-b9fb-5b90f8ac1f2f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c015ccb-48a8-4d92-bfaa-1d0b346d0f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff1afa1-160f-4af5-9bc2-9466a5485042",
        "cursor": {
          "ref": "245fbe71-fd0d-45ab-831a-8dab97a33d7d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9de7b720-8c5a-4d6d-af1a-aa3360540f4c"
        },
        "item": {
          "id": "6ff1afa1-160f-4af5-9bc2-9466a5485042",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b82f11fa-6375-408e-b800-45aaaac7f6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d968147-70f1-47eb-9195-781fc14a9eb3",
        "cursor": {
          "ref": "17ddc093-c2db-4a50-846b-b29be85b80cb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "63e14d93-d5bb-4a28-a065-7a3a7cf57272"
        },
        "item": {
          "id": "8d968147-70f1-47eb-9195-781fc14a9eb3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b728e1cb-af81-4554-9300-eb918be86247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1395f020-2afc-4119-b040-8f5d9c6823f1",
        "cursor": {
          "ref": "6dc37062-1d4f-444b-950a-c49c1ee79f4b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "71d10e34-88bc-492c-88ac-45821b6748fd"
        },
        "item": {
          "id": "1395f020-2afc-4119-b040-8f5d9c6823f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "460e053e-c33c-41bd-a7ac-4f01d44772fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be87c9ab-6545-4333-961a-98579dfdad57",
        "cursor": {
          "ref": "67819361-895c-4d0d-880f-c487ff2eb344",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ba3bc1f-fdc2-439e-b982-2c2a9a9478f0"
        },
        "item": {
          "id": "be87c9ab-6545-4333-961a-98579dfdad57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f37340be-7e25-43d7-999b-3ce9fe05f9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216b0a7d-2b5e-44db-a13a-fdad2f99d84c",
        "cursor": {
          "ref": "b007ea6b-ba94-4740-a621-d80dbb9d12e7",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5b7990b5-66c7-4537-accd-bf886b50aa1d"
        },
        "item": {
          "id": "216b0a7d-2b5e-44db-a13a-fdad2f99d84c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66b31b24-8d51-4844-8865-70431bfdc5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b26b5a-2c7b-4110-95ae-4a8aa0f58206",
        "cursor": {
          "ref": "c4286ecc-6783-4159-aa27-6683d1e223b2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c3d0804-0df8-47dc-a386-f8b27cb0c064"
        },
        "item": {
          "id": "f9b26b5a-2c7b-4110-95ae-4a8aa0f58206",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e1aeca55-a3bd-430f-a520-46c886040eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35457df1-31ee-4d95-aad8-87f2e32ed6eb",
        "cursor": {
          "ref": "4755995f-4f3b-46a6-88fc-ea54eac6670f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2771ab2b-3bf6-4006-9bcf-583a26c626bf"
        },
        "item": {
          "id": "35457df1-31ee-4d95-aad8-87f2e32ed6eb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dcd1d484-73c5-404a-9b1c-d733aa532cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf62b8-4798-412f-9617-0060206ff44f",
        "cursor": {
          "ref": "d03b813e-1d28-40b8-a870-ce2b3af19d9a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e6664bad-c9d2-4614-876d-849cb985051b"
        },
        "item": {
          "id": "9aaf62b8-4798-412f-9617-0060206ff44f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6c20bdf7-7c35-4337-b586-fcb74aa5094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93158a32-d5cf-4f4f-8d59-9e061bb6cb3e",
        "cursor": {
          "ref": "194c1429-5eb9-4210-8250-5408b26132c7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0fb917e7-0340-42f5-8ebc-6f7b9d88af9a"
        },
        "item": {
          "id": "93158a32-d5cf-4f4f-8d59-9e061bb6cb3e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6df55adf-bcd2-4f73-9c70-41da29489bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3548445-7d12-4537-8c0b-559256e41363",
        "cursor": {
          "ref": "b8371af5-8c8b-4958-a530-99529362230e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e2079fa5-5ec6-4b32-a207-01706d7e2457"
        },
        "item": {
          "id": "d3548445-7d12-4537-8c0b-559256e41363",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1222378b-9cbd-4c3c-9ece-582986613ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15c4ec-a819-4c6f-a043-f93ebc3d4b2e",
        "cursor": {
          "ref": "2ba92336-798b-459f-957c-aa4f62cce220",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7acce442-8034-4db4-8278-5c5a195a39c1"
        },
        "item": {
          "id": "6a15c4ec-a819-4c6f-a043-f93ebc3d4b2e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "749cca2f-34c0-4052-8a4f-eef1a3c615a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e58d7-bc96-4a12-98b4-3739accfa0ee",
        "cursor": {
          "ref": "2264cc5b-0d52-44f2-ad18-e9476c268f1d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4953daa9-9170-4112-b474-01d32e420299"
        },
        "item": {
          "id": "0c7e58d7-bc96-4a12-98b4-3739accfa0ee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4e84646c-1939-4235-b269-8b7a6852e9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c16b75-7294-4886-abb3-9d36cc01c29f",
        "cursor": {
          "ref": "012edd9d-7bb6-4234-9f5c-a99d8a2e981f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "247a33ec-938c-485f-99d4-5d0f944e6965"
        },
        "item": {
          "id": "f4c16b75-7294-4886-abb3-9d36cc01c29f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3ea97c1a-36b1-45d6-a751-2789ffc6db46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c75451-d6c9-44cd-ab28-c479cd9b9e72",
        "cursor": {
          "ref": "af8a904b-2001-4b66-943d-991c6cfe2c7a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "14db844c-05d6-4c1f-b017-1259ed310bce"
        },
        "item": {
          "id": "b7c75451-d6c9-44cd-ab28-c479cd9b9e72",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3d05e7fb-43f0-41e1-bea5-694cb06decdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe40d1e4-7571-420f-b501-c23e233c0e61",
        "cursor": {
          "ref": "584bb748-4a9f-47f0-837d-eb9140b04e74",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9e904a49-573f-49da-a95f-81a39b171f1e"
        },
        "item": {
          "id": "fe40d1e4-7571-420f-b501-c23e233c0e61",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "856a578b-838c-4718-a50d-d47f57b2602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110db111-a652-46a5-8e0a-a2841ac22422",
        "cursor": {
          "ref": "b8e8605a-45ba-4d95-881d-81902efa6d8a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df06d998-7101-49c9-aff2-c8dbe34a6241"
        },
        "item": {
          "id": "110db111-a652-46a5-8e0a-a2841ac22422",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1de4403f-4baf-40a7-a477-c6df1951e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2439e44-6c3d-49cd-afea-3e15c07c6718",
        "cursor": {
          "ref": "c83220bc-3ec3-4c56-a0e8-d1903cd21992",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "febf4dec-8b04-40c5-9167-da04960c2d5f"
        },
        "item": {
          "id": "a2439e44-6c3d-49cd-afea-3e15c07c6718",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "28c04acf-70bc-48ef-b05e-e7fa16f53009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5da8b4-72f2-4022-b4b6-a1709effd08b",
        "cursor": {
          "ref": "3ef5ca00-c3f6-4a74-b8fa-a316bb1d6c32",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5ecbcf9d-c3e3-4d4e-889f-e3efee15ce82"
        },
        "item": {
          "id": "aa5da8b4-72f2-4022-b4b6-a1709effd08b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "54a0be1a-03fe-4e50-97a3-a6b2ce496d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42071de9-8840-4bb6-b4bf-41f1db3a2a57",
        "cursor": {
          "ref": "c5f7dab7-1f4e-4e48-8285-8bd6c473d837",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "464d921c-d234-4939-8e43-35dfb892ee0d"
        },
        "item": {
          "id": "42071de9-8840-4bb6-b4bf-41f1db3a2a57",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "baff9980-0ae0-4b0d-9450-c50d5b6adf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51a69e2-d311-4ba8-a899-bd8b437b0183",
        "cursor": {
          "ref": "f5bebf8e-6f7d-4c64-998a-c2c89b1429d1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2d499231-9413-48d8-8a4e-7633866e0292"
        },
        "item": {
          "id": "e51a69e2-d311-4ba8-a899-bd8b437b0183",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8a86e7a0-7944-459a-bd85-05b37a92a367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005641c0-7b5f-44e7-b735-5704aaafeacc",
        "cursor": {
          "ref": "f1cb9bc9-2d93-4228-a097-35bb5636aced",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "80bf62b9-cf3b-45b4-85b1-14641a674c66"
        },
        "item": {
          "id": "005641c0-7b5f-44e7-b735-5704aaafeacc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "feacd2e2-5623-49b5-9c41-9e01f09af958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dcece4-c1eb-4eae-bb3e-c7b18150f8ee",
        "cursor": {
          "ref": "bcca55f7-0e5a-45f4-b784-7d566b8e9ff5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae148962-1b72-455f-bee3-2287a09ebaf5"
        },
        "item": {
          "id": "82dcece4-c1eb-4eae-bb3e-c7b18150f8ee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "42304076-1f0b-4a3d-90db-eea1e2122a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50309f8d-9043-4ed0-8f99-3783c7ea9e87",
        "cursor": {
          "ref": "63a7ab01-2065-4523-9d7c-9d6e6cbd68e3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3cad52de-ed68-4794-a95e-a9ba30deb416"
        },
        "item": {
          "id": "50309f8d-9043-4ed0-8f99-3783c7ea9e87",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a4c26fa-6e72-44af-892d-c711082141a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3473ac91-e77b-44ec-be80-d4ba1616e55f",
        "cursor": {
          "ref": "13e5029e-96a9-40fa-8389-b78248fa5d17",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "229bd192-8db7-4296-b645-1d0a693dab59"
        },
        "item": {
          "id": "3473ac91-e77b-44ec-be80-d4ba1616e55f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "732d23bb-90cc-4b20-9c11-6a0b544abd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aabc190-78ca-446d-b4c4-4953d76dde18",
        "cursor": {
          "ref": "cb0943d7-2cfd-4ec6-8fff-1d683066a8d5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "efcd24d4-4645-447d-ad53-5b80fa9efee2"
        },
        "item": {
          "id": "5aabc190-78ca-446d-b4c4-4953d76dde18",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cf8ab1f7-3e51-42a0-96e8-188afdf7a845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3e612d-a7cb-4502-9599-54886f6f0228",
        "cursor": {
          "ref": "248fc1ed-6050-4377-bf7d-1f3a0d11fe13",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0ed148fb-381b-4bd9-8485-eb5ebe4c6e8d"
        },
        "item": {
          "id": "1f3e612d-a7cb-4502-9599-54886f6f0228",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2a901292-30a1-45cb-9bfa-eeeebfc8ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a0fe85-87a5-483a-b638-afaacb85d8cc",
        "cursor": {
          "ref": "13f5a46d-ce3b-4f13-b69a-69dc6da5b748",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b0067c33-070c-4590-8daa-dd2692ae4d8c"
        },
        "item": {
          "id": "02a0fe85-87a5-483a-b638-afaacb85d8cc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "44a2e72a-be75-4215-b89a-ce16825b4f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d561d09f-4e67-4bfd-9a73-ed6d11c3c558",
        "cursor": {
          "ref": "dc741357-a4f6-442b-b006-915b424bc1f9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "58c7ba32-6237-43e4-8738-ffaa0a6292ff"
        },
        "item": {
          "id": "d561d09f-4e67-4bfd-9a73-ed6d11c3c558",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e8873939-acfe-4cd3-8933-d6f9dbea3ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4d2906-3cce-4ab8-8651-c6788b15c4d5",
        "cursor": {
          "ref": "90af673d-4f08-4711-9cf4-739a324ac50a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e9de736-4872-4ff2-9a5b-069b4a822155"
        },
        "item": {
          "id": "7f4d2906-3cce-4ab8-8651-c6788b15c4d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "04ee5e1f-e1ba-4c39-ad99-33d3b6436e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f97203f-9502-45d5-b24e-ae6379d11fad",
        "cursor": {
          "ref": "387d0c59-7f81-4af3-ad7f-a8aaf130031c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4274de07-b3c1-479e-ad64-e23c2f7457dd"
        },
        "item": {
          "id": "2f97203f-9502-45d5-b24e-ae6379d11fad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b6a9347f-f4d1-456e-8f84-2feed2b329a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d44cd76-9f39-41c6-a168-a7b95c893811",
        "cursor": {
          "ref": "478ecccc-3287-49ee-92fd-6fd8b8507941",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c13fbaa-c5b7-4658-8328-4b973cf22359"
        },
        "item": {
          "id": "2d44cd76-9f39-41c6-a168-a7b95c893811",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a16d6dff-8ee6-4b56-9131-b1c335167338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a81265c-ce40-4130-89a4-d9db9c0bf90a",
        "cursor": {
          "ref": "60c65dee-7782-433f-b2df-fba50f3de0f8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a53af2e3-4030-48f9-871d-ca7add0790e7"
        },
        "item": {
          "id": "4a81265c-ce40-4130-89a4-d9db9c0bf90a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a9b4c76f-e1e5-4351-99e1-275fe0f761d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a645b77-3443-415d-ab4e-3673f6a0c2f4",
        "cursor": {
          "ref": "3b725654-572c-4073-92d0-8a07b3746085",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9dabc7e-9568-4a62-9ec4-b8df9375ad23"
        },
        "item": {
          "id": "2a645b77-3443-415d-ab4e-3673f6a0c2f4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0a442049-1e6f-48a3-9079-facd9c6a94ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a02d36-ba1f-422e-b187-2e909e5a0bb1",
        "cursor": {
          "ref": "a5bbcfb6-b041-4d14-9e56-8d34f5e1faaf",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "92fc5c89-6545-4a28-8a06-26da565bdcea"
        },
        "item": {
          "id": "78a02d36-ba1f-422e-b187-2e909e5a0bb1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "769cd194-a9fd-48dd-bc5f-c93dd35e9b6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eb22be-b1c0-41dd-a170-c1abcbb6c9e9",
        "cursor": {
          "ref": "7ca631d8-2e8c-47a2-bb1d-cf8f8f21f201",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2bed8fad-9bf6-42df-ada9-20c8db5a303c"
        },
        "item": {
          "id": "28eb22be-b1c0-41dd-a170-c1abcbb6c9e9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc7a4210-5746-4428-9c06-d0f37944f55e",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f7bce9-e6ff-448d-896d-696846e5c8e4",
        "cursor": {
          "ref": "daa21140-4bd6-448d-8b1d-11171be96dca",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9f1a2080-cfa3-49ad-bb8a-79cff913b065"
        },
        "item": {
          "id": "19f7bce9-e6ff-448d-896d-696846e5c8e4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "82ea38dc-442a-4a2d-b7b3-1e6b089d0800",
          "status": "OK",
          "code": 200,
          "responseTime": 4071,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9937f1f2-13fb-4fc8-b3ee-ea8e67f7c959",
        "cursor": {
          "ref": "8812b56e-318c-4ea4-a2f2-5f526aab845e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f5cdbbdf-1199-40a3-ae78-6827dc527fff"
        },
        "item": {
          "id": "9937f1f2-13fb-4fc8-b3ee-ea8e67f7c959",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fc2de798-6aa1-443a-9e2d-6002294013a2",
          "status": "OK",
          "code": 200,
          "responseTime": 4424,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e146865-a034-4385-9a37-422eac06f2cb",
        "cursor": {
          "ref": "b31d7156-fdfa-4f97-adba-d1194f56996b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "947a3c9f-be46-4c7d-a61d-e550787de4eb"
        },
        "item": {
          "id": "6e146865-a034-4385-9a37-422eac06f2cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd4f676e-a90e-488f-b5e8-2f534985a743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e146865-a034-4385-9a37-422eac06f2cb",
        "cursor": {
          "ref": "b31d7156-fdfa-4f97-adba-d1194f56996b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "947a3c9f-be46-4c7d-a61d-e550787de4eb"
        },
        "item": {
          "id": "6e146865-a034-4385-9a37-422eac06f2cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd4f676e-a90e-488f-b5e8-2f534985a743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9eab8d-51a0-4685-a061-9fad89cbc058",
        "cursor": {
          "ref": "80188c41-cd1e-42b5-ac7a-8ca29b8c448a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "381bf398-15d0-409e-9b7f-bb08f2fed2da"
        },
        "item": {
          "id": "0e9eab8d-51a0-4685-a061-9fad89cbc058",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "444faf5a-eb46-455a-a7db-c78cd28e97c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57f6c5e-c506-4eed-880e-7cbade9ac314",
        "cursor": {
          "ref": "8a642c09-d8cf-45e4-ae51-ab8aac2c3e35",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10b4616c-6a58-49cd-bb70-ff336b8fa93d"
        },
        "item": {
          "id": "d57f6c5e-c506-4eed-880e-7cbade9ac314",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3ff59dc6-d972-402d-aacc-bb4201d12b76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}