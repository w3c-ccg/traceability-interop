{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2964926b-68c3-4e5e-868a-1826fa3dc616",
        "name": "Clear Cache",
        "item": [
          {
            "id": "26ed8253-0f20-4523-b1b0-14761c577f85",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3372f726-ab49-42c6-86e0-77ee573975cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3350c64-de1a-4a1c-95df-a046e8b9ed54"
                }
              }
            ]
          },
          {
            "id": "8b67e018-00d1-4a8c-b68d-a0c17b328814",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54b46f17-3314-4c54-b0b6-861735b88c9a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d4d96ba-9ad5-4498-aca1-37cee1c0b356"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b5b182e2-8fd1-4aa3-a384-b58f23604e27",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5b8a0508-a4d4-4bfe-aaa6-c5b1d03318eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1e5c217-80b7-47b0-ada6-89ca274a8b29",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6613a9fb-13df-44a2-9c9d-85675c0a7c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1707d2a-8eb9-4da9-882b-c5ac9e7722fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc179e05-0308-428f-b8eb-d07c173342a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3540f02f-8f7b-4906-b41b-bc106846d123"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23b708a1-8415-4533-b110-20a70881e7c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efd616a3-1f35-4159-a9d3-bdddd6caf95c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2b94bf6-9ca9-4199-a4f6-31fae4377f9d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98530788-f3bc-4a98-ad68-9d1fa0f62609"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8383eb56-40a2-4670-9747-e5f90330eab2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b1a327a-2078-4a59-8978-5b1d9f7992fd"
            }
          }
        ]
      },
      {
        "id": "b5d5746a-590a-44bf-81b4-04661f79d1df",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c9575775-e851-4be5-89f0-3ca064326b21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da2f722a-6cf8-476d-83fc-e5fd8ea1cbf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d27ca7e-9da4-4d76-9de4-c48914717017",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15997d9f-6c53-4143-ac78-53556a89780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea86df0f-879a-45d4-9db0-78f82571abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6501c05c-a9fc-420f-abf5-f0d50ece8d05",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a53eed3-1bd5-4685-957d-22807953eb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ee97081-94af-40db-870a-439701915f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d76bef3-8792-40fa-94c2-d62297f19098",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc402e5-83bd-4db2-9c09-783f65e4751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81fa20fa-69ca-4f99-a572-369ded442dbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "921a15f2-8b96-4ae5-bf2f-c008928d19f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb5cbaf2-65c4-43e7-ba6e-2362966f369a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7716117d-48ee-4f1f-bc1c-dfff5a87f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1d2b3ff-b548-46f8-85fe-f23bc238bb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b3787-efc2-4c8b-838f-a7bd4e8d60b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b65f509-4f4a-4710-bcb2-42fc5c859161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa7f6871-8c25-4aa7-99fa-fa87b1c14ea8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3533adda-c5ff-4537-83d6-fdbde4833a97",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bb9d9d3-b883-4fe0-b11d-77d65211c72f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d224e48-500a-4b15-9868-2a37d4cb2a2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87e86c0c-8e5f-4a27-b45f-fa97b6a72096",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d70c72df-177a-4774-b7b0-a5fc08fa32f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ee84ba9-8e44-4395-ba0b-39d9bddeef4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ccb71e5-e7c1-44e0-8293-1d653a4e646e"
            }
          }
        ]
      },
      {
        "id": "1d3ed3a5-78f6-4e7a-b3f7-fd62b789355d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1b4b6d1-1aa8-4ab2-a5dc-e780b1f789a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a21b6f5f-caba-4dbe-b326-a58bfd53b617",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa885308-3956-4452-9822-31d13dbfdc29",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eec8586-5707-41fe-8c55-819822f91ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0809ca-6f78-4baa-b479-239bd1b4b636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb7e251-a1f2-4ac0-9ff2-ddc45ff68244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dec0d22-80f4-4c4b-9baa-2521fee9b307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c66272-5b91-4c04-80c1-11ddd510ecd9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48661f7-b820-4d03-9eaf-9a919fbb2f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1488092-9c3a-4bff-b7d9-2f9fd8128954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f563df-b21c-4cec-83b3-82a7c44610b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cb908fa-1f38-4f7c-ac9b-a940185f946e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2547febe-4299-4901-ae9d-a3269b07ec10",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed998ba-0dc9-41aa-b5ac-4c60231f2363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f24dfd2-86c4-4c7a-990c-bb6c5c392d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f56433-6b9d-44ad-b5bc-bea03c305837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0492909-bce7-4790-9479-3df8f33eaf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108f503b-3a40-455e-ad81-e0471ef8d23c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188cde88-8d21-4785-8112-cc0d7ed9955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f733cb-7c3f-436b-bef2-32e55e590a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22991886-4891-4d4f-89a9-0474624b95e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e211e16-f8a8-436c-b6dc-df1cafc26f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e5a0d-1850-407d-ba78-3d9ada363c0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bec2c-c8eb-4ef8-9690-0aed539ab0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3742e9b-965b-442c-9241-42950517e0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d1498-df03-4ad4-9cc3-fb83bd421940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7117a07e-5ddd-4c1d-9005-326082d89f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd9d01-943d-49f9-836b-d166c424b9fe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a571305-2f5e-45ae-b4bb-5713e199709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2b59b2-c12d-4925-821b-723e4c41b12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72515e91-c0a0-4016-aed9-6a5c1acc1333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb179909-bdef-4ff8-aab0-e9806becabfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718a6f83-3788-437d-b804-c9e4a9f35d3b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a78a77-0a93-4a71-8230-976d37c3b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67abb2f-ae6a-45f9-9739-32d8b41f80b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b08bb0-fa8d-4940-bdfd-15211ea367ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23148d94-3fc1-4c29-bc7c-c55800b9b271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a136a903-ceee-441b-9a85-13cf73e317b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33826e42-44c2-4b2e-a453-ba29e2e495e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1770be-7593-4f9a-b4c2-3233d06a2d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21051b69-c114-44d6-a159-d1bf94ce90e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "909b19a5-216c-4d2a-a9d7-a094f3caa634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce383094-4164-4235-a32f-0dec72a108b7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b7912a-cc41-4927-af70-4ef3a5a74ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24f971a-c2a9-46e1-a868-6c915063701d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67f522c-ded9-4201-bed9-5954f07cacb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51d5147e-3854-4909-9402-fc60e7f391aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53510646-860a-49b9-8425-e321b4c42911",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd82e67-12bd-47d4-b807-3a9de1629a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731ac9bf-746d-4d0e-bc47-2706afc42856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20373087-fdbb-4f4e-aac5-f16111023989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a105e9f-17c6-4c55-b59e-62cc4c9d5629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277a455f-ac54-434a-a7cd-5398afd20fb9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4c9535-776c-4e52-b06f-2968d5d63ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a224cfc-7563-4e29-9240-e2f20d943172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a82122c-5e94-42d8-b8ca-cfa3022a191a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7bd0c19-95c7-4bb2-9a27-62b0bde8e091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd6385b-a87c-47e1-872d-84eba62a36dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1428dd82-0827-4466-b501-495559acb94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf039b6-422c-454c-93e2-4060e4b9644c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63bd227-689e-4a88-bcf4-6afc524232e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b04ded2-6b93-4c8a-92f9-3691bbf21833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37adb560-db1c-40ff-a69f-ca50aed0c0fb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af0d308-8a0f-45a8-935b-1d8c4b761970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd44ef42-a365-4dfc-a767-5cb6754c533f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b76b5b-c83b-432f-a176-6dd7a9f41d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "684f2148-df86-4491-8274-8f02f65f6203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8235dd9f-a0cb-4363-bd8b-0c8e6717817b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f76783-86a1-45fb-a961-3077c52aa60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a54010f-9d9b-424c-9870-11586ebed122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1aaece-8de2-48e5-a658-54d29a9794d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62bf76af-fa6d-45a4-ad47-7e70a998071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bbc475-b9ce-431b-81ec-bf9c18162f70",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad235c8-b661-4f87-bc8c-23ede1077cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23532088-6111-46df-86ce-a7aa834e33cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924a9ca-b300-4fa3-814f-66dbc49c3e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14aef576-2da0-454b-959c-bf3a8ae5a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75964b30-c642-4fbe-a671-216cc217bede",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a59cb09-8912-41ba-ad0d-fc8b551ce7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d6ddfd-9ce3-4311-b8a9-1e6d77bce603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87779359-67c9-4127-be75-95b004a68558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f04ea262-dbf5-47cb-b1b2-1739d10850a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03694b4d-56f5-423c-bdee-aab11aea233d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da528c3-a0a2-4792-8dd0-951b2e8ff097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5141295c-c8ad-4aaa-aeb9-4a2abca7c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d9e5d3-ac3e-45d9-8002-824451771fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "152e6c31-4ad7-4cd3-a817-629e99088bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466885e6-f6df-42cc-a1a3-0fc025eb95aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb21ea-ac5e-4c7e-b241-3d67d44c8553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce6ecba-3dfc-469b-b788-56fb56499fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f611c3f-88c6-43f6-aad0-4e57567c8e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "041582a2-b720-43dd-8178-80e97978c56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da98cdfe-21f8-48d2-abd2-6dfc423ce731",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd12e1b-b9c0-4cf3-93d9-55a6a0bf3a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb992704-30e3-48c1-b8f4-85b42acab2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0802a930-8a44-4fdf-b7e8-89e257078f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63447a03-d96b-496b-ac74-3cb48350e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d782302c-3b16-4198-9346-a9dde6d2a38e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9ebb2f-daf6-47ae-82e7-c8cc7f2b519a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21c6a3-3160-4f84-b21c-ae43c1a3b46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e136fa-9daa-47c0-b05d-2f68429bdced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92122ede-a554-4317-8037-d5f8ac22f194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f732b9-3ac9-475d-987c-f2a12d64f090",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f466706-8495-4b00-8d1c-7a5c5a911d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc4ee0c-191b-43f4-9480-7190edc2ecb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59624251-49df-4acd-b261-5ce582d42870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0563aacf-175e-442e-82e1-753cae840964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3599a530-b942-4b40-8018-d48989682abb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2282bc-f073-4667-ac2c-28704a7abe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446b8ac5-3f44-456f-aa78-5970cbe39d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38dff6c-a780-4109-9c4e-95bc7632cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a77bbe-fdec-4bc3-8881-482767cf09a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a0ce68-067b-4fee-af97-916b7ef87196",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa0e632-26fd-4ec7-a8e6-3bbdb8897671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd5d87a-dab9-4eb8-be4c-c4ef341e7c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccb059b-ccec-48fc-8e79-f6e4348c6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f80a0ee-e3aa-4d50-b247-36312572f4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f3dea0-ec4c-440a-affc-e41f333922b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62895b5e-a546-44b1-ab13-ed33dd20c566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df54c2e-2c49-4da8-adc3-2be337dd8121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310c7b31-07ef-44a1-a274-a2a24906105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece1295e-c4c4-4891-8cf8-6248e776bf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b45370a-a42b-4908-bf71-b64dd93eae1d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a301947-f13b-42ea-ad73-c769470ab311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b720ee35-8156-4a9a-9cbb-32eacf2728da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926dda22-130e-4bbb-8bb9-1edef37526fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36edf881-e32a-4d39-a88a-9bf0288cab2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc5062b-ebee-4d4b-8e3e-afcbb1326f18",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830df65-29da-449f-a0e7-22a28083f8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516f27fb-2624-4b47-85e7-59b67f307641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fae06c0-baa4-42ff-8d4a-6bae481420f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "567a6d06-e0ed-44f8-85ce-7fe821529248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa72af23-1318-4093-95e5-164c216b2c58",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f660fe-6858-4f8d-896e-4aabf11f0408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c695b-8ebe-47fd-832f-291187997ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39509d4e-7a36-4378-8def-9d273b67bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce287720-05a8-47ee-a60e-c9166b1ce69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6372cb9-cbd3-4f05-8bfe-cb875f08cd87",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc23939-8a1d-440e-b841-c8d5ee516220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e959b038-2512-40f1-8ff8-a9edf06e2faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad091da4-1cfb-4662-89cd-7a5ff238b66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3e19c8-ef2d-4030-8c1a-5026a75ba4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3f7703-24f0-4fa9-ac97-11e170308444",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d00d3-d889-45cf-b8e8-8f64ff68b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc6377e-782d-4e23-974c-885e07095067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e15c5-3809-41ef-b28a-f9f11583032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f1b6c5-de2e-4484-8cad-56aca5a96e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675bc3e2-ff9c-42a7-9cc4-116e00392e86",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7ba822-50a5-41ba-b134-2e66f82fa07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39236e1a-815d-468d-9868-9a81fae1ae9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425670cf-ec59-430e-b9c7-4da836f15d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb0b6e3-030e-4353-a41f-b5eb2eb56f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940cc80-3afa-4ee2-9e8b-221b7d7108fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4613b57-b88c-4a61-8a20-56248c47e2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09f90fd-c922-4484-9ed0-78d6d4c2aae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2607b72e-2e7f-49e8-963b-1d8933c996d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe083c82-b914-44ac-ba15-c5cf7db6c95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b9a06-b959-4615-8e59-fe4a6bbeff5b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1aa0372-af81-46dd-9037-2bf16b07fc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10aa131-f921-4cf5-a11b-efeedefdba1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63d1650-b16f-499c-b4b0-c849c9be125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11efea1-b799-4d7f-9f6b-54fa0fc310cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a20156-3e30-4032-b7dd-749458623846",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4a4a03-82df-4355-a6ac-9f9fde1ad4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfb829b-2f4f-455e-b099-c4c0c074fa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0440fd-802a-4e3a-bc00-fb0803614f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cd2113-3da2-439a-a4d5-1b3f042dfe98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a717666-6078-4ae9-9de9-8c339b3015b9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29285df2-42ae-47a5-bf68-26e45516bb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7f9781-ce58-402c-bd86-e3d2f836fadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8236cfc-e0ad-4c35-986e-51cb1a3ceeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb68c21c-f988-45b6-9b4f-513cb7399c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a5375e-65c5-484d-b2c8-5e353e7328c6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7c1705-acdb-42c2-9bf5-24b5c59ae4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747caa5f-7620-4fb5-a71b-d55a5582749a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df18ef4-b7ae-47d2-8d96-6a19b595d7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8c00deed-f594-488a-baff-f0ff6158350b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e98bb7d-046c-4184-b144-591e77ab1de1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e22876-b2fd-4918-9f26-d9671433895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "453d747d-a7c6-40b8-a59c-4dacaf34c7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50831b-fab5-409c-a227-11b74374e4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "463ef2d2-5aa0-46a1-8398-00edacda46d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71fda80-f65f-4d80-a203-bfd295909f3b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb77cda0-f75c-4fac-92fe-4bb937947f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b562a29-62b6-4412-9f84-f555b2436ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0622ab-67b2-4e32-96eb-13752f03508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1608ac6a-47e4-41f8-a434-534496e4ca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b7750-6b4d-4757-a783-7310b5e74c36",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8607046-6780-4049-abf6-50798efdcd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbc651d-3177-400f-a727-14e44c609adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127443db-888b-4b16-aadd-08c53f4e82d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3401cee-0416-4007-9215-266038a3ddc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8aef25-ea89-451d-8de3-259857f87649",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aafcd0-7d63-4491-a605-b1e60246de9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29b7038-b1f7-4c6b-9101-31fdffacb13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d846f485-a35e-40af-86b4-40d29a131886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3119ddff-2726-49f7-98ca-4c39d301cb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e52654-c539-4346-9b22-35a7132fdddd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8418bdd3-dad6-4bab-9fd9-d3f45900e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162d313a-0263-4633-bf87-ef07fa07d53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bbdf8b-659d-4918-be3c-390c4c8ee94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "036895b3-1f75-4574-b6fa-1995957df681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7000ec-e122-4d79-af2a-2d0ac5b68498",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb70f35-158f-48d3-8b44-728e758bd053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c74dac-8d7e-4c8e-81b8-50e1f85b45ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db59af06-22f3-4312-8801-c14d4474e323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "373ab03b-d0e8-4f57-b944-5b5d5233ea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d352d1-3dfd-40a9-b0b7-1bef6cd74643",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c5426d-9832-4d6c-b3a7-bb6efef4476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7fa3f5-5bd2-4dd5-9882-aa146633a700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cb22d0-4c01-4e4f-a30f-1f0bd00a1bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b63fb40b-dc27-44f5-888b-194f601ed1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22bb8c8-3805-4c92-aa81-3cc73ca11d49",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f89345-4ae3-4bca-90c5-6989249b2174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19f0437-bb3d-41fc-8b79-24661b35bee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62ab70-a886-49c6-9cee-d2ab0ebec0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc72a13e-5ad6-4c53-99af-adebc1a6ae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af25068b-2e74-4358-b65f-79c1ea845e01",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9df79aa-d8fc-4892-a9b9-e9dc12162f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bef62b-bb76-44aa-b1fb-f1e90ed66966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e4b517-2d05-4166-aae1-3171341b1a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b2060f-14e2-42de-b839-79801c9b51a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d423d0b9-98b0-4a0a-a945-1677d91849a7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc40328-87b6-4916-b79b-d3ae17d3453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf800f8-220c-47c2-80d3-8ecd0ec75ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b15744d-9806-431a-acc7-66382ab45d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8996447-dc7a-4e46-991c-73ead98b357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af5ee43-774d-4d45-9480-9306fb68a8eb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9c7f06-885b-40c8-b560-2f0603f1db71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38ea181-9041-4b4a-9814-d7d43a12f2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1a0143-1f69-406e-b83f-8a42baf3e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b50ef30-4023-47f2-95fe-8331db49923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50631f0a-32ac-4993-804e-49a2c0958ec9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1e2c57-31f5-4a17-879a-a7b069bc768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dd623e-3271-487c-b14e-7777df901ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4025c9c-c5c7-4a08-a816-d8e10df70123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2acbd8d2-f4f9-41f8-b470-fc87c457796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0cf3a6-166a-4b1b-8419-f5f6464843a0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe53842-7e3f-4400-a1c8-e214fce6bdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3d36b6-ff84-4e0f-bc16-ded789e31e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850a7ab-4b83-4d10-a550-2975ff9f4bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f889f91-9a84-4d40-a20a-60f458475f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f0f5c7-5ade-44e4-9bac-a8a02ce232af",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5385568e-a904-4b52-ad21-0a01359a093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0313bf-d67c-43d8-ac41-0b0f2dbb5b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85403a65-ac40-4657-93ae-66f35ff7221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00c9845a-0725-4fd6-afaa-f37b632b1a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8def35d9-09fb-4716-84c8-8bea5d1253d1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd120d82-737f-48ca-92ed-cdd2c20453a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab30fa1-79de-4f16-bf9b-6f9ef8ceeb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71df360-f032-4fc0-8ae9-713a6de5cb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4d98cd-43b5-4c1a-8613-35c17f98e909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1de7d8-9201-4e1e-a9a2-56b4c6dec8e6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429f037-5497-45d5-bc4b-bc7ea5c2c048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727838cd-2339-40eb-b3cc-1c86f8ebf3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0029351c-9be7-4174-953a-17451e580c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d71fc8f-7fd4-441f-a96d-49c57f40a7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9a2200-7654-49e4-baf5-e10d88fba073",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5221ba4c-46c3-450b-b788-b0b95b5f7378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fc8360-dce0-4159-8bb3-a361f5ec51d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cc58d9-5544-4f31-af54-f16f5e48ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a486e09-1c2b-4009-be31-213eb6802a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ffc6df-0bd9-4c17-9120-019eb453cc35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d03b92-43c5-4143-a657-aae63b772d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0e0e96-57c3-4934-96ca-3734212856b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47f73f7-b943-4e0d-8fe6-ff4ddc694349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "997f6ddb-cc78-4846-90cd-643a7bb9d7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd58cdb-d046-420e-81bb-10a3028b6ed1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f2766a-faf2-42b5-8d10-11d690bb3bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a183e766-9f15-4da0-b4c1-05f860b5986e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d8ffb-086e-4b44-9a32-e32f4dc1d484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b779e88-4946-42e0-a85b-9e96cb794cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947f5f10-8beb-468c-897b-5fbd48a2becc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da8e363-9ac5-4851-86ac-49b56d87594c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516ee2aa-f54e-4b6c-a60c-2e505694fdab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77598f18-afc5-4850-a13d-aa63e6e1ea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6ffc2a-fd10-4524-b029-55c04cb97e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2ea879-b503-45ea-a90e-cc3dcf669960",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c9539-c506-4e5f-b56a-aa98674cee5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412679c3-fa28-4e9c-8c62-403e743ba61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6fd472-1335-430e-9ceb-eea299a280a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0316372d-26ff-4390-9c60-97310c3e8771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa91faa-16ad-4396-a65a-b33ffe270ad6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738cb8d4-71b3-48d7-807f-32c7bac3cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb2d52b-1310-43c2-ad30-e810dcecd42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee78405b-104b-4ae0-b7cc-1e9cac0f4e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a77c41-67cf-44cf-9645-f0ec08e5b96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063c8027-fcdd-482c-8610-e2077ec4bcbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8e30e3-85d9-4e94-9d09-b13e0c9d1b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d153c62e-c75c-4e50-a05d-28562dae1d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671cd405-f0ae-4c71-ba94-b3f89366d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f9a944-722f-4854-b77b-cdc282db3291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e465b4-ecd8-4856-9aa0-de337455e3d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e50d8e4-7c08-4f07-9e1a-738c7d4c62ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ab5d42-b146-4913-bdf0-e3eca431ef54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aa2fed-fcc3-4636-9f1c-ece54886df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6be6af5-8878-42c6-9bd8-de5cb5df3891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fdf0d9-60eb-482b-ab9d-9692e4ad6475",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad43d989-6d78-47b8-8704-5f3f34013bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e4dff2-e5af-40eb-87e9-6988f8b9af6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd362b8-abd5-436d-a37e-877a57348452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f226ad9-9219-4428-9685-9de970555d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a272007b-f949-4dbd-a06b-0d03b396d06d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0725fbc-16e1-4b4a-94e7-9f6893ecfa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee0a421-c7b0-4b5e-b4d2-1c99a10da2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7f3e9f-2dfc-4eab-bbe0-9aaac7513442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a183f5-32d7-4eec-a520-c15c39ea0d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64549583-002a-491a-88e3-1508454544cf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1571852-4ef9-4b5f-a114-e8cae3329829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b9398a-1384-4aa9-9425-3282d0baf6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9614b1-5347-4b1f-93a4-a6307be15732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e6b5db-b39e-40e7-bc7c-9ab16f54a0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38912d76-e94b-47ff-9e13-4a2335384a23",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e661d3-7e68-4017-81d3-1210fcdeedf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0949b6d4-6d65-4a5d-8394-309417460228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb81e5-e400-4d22-a826-4224c2ad5f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0278009-59bc-4219-bd07-eba521b18e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a3a27-8b85-45ac-94f9-0664883d9c56",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856d48fd-e776-42de-a6fb-b2912becb246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1af7099-5a69-4bc9-82c1-b57aa67bef6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6abeb8-f490-4b26-ab1b-752bd63b43ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7979f5-ef9c-450a-ba54-64df50af6f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c293c833-aa87-4a8f-9da8-da2d043c7037",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b34d6f-40e3-477c-baf1-b38db92ff4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc217261-cec1-4f35-a00b-023f6aac3ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a02779-fab8-467b-8e98-caa5be04d9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbf730e-ef92-41a3-9a89-07bffa51f74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082c5155-888a-4c9b-8233-1aa93b533374",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49988911-db72-4b2a-a9ce-7e71fcd10e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c5536a-9e8d-497d-a97f-70692b5e4676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4190696f-f178-485d-bb71-93d16d072f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc27f87a-45f6-4ffe-b65a-ef0f3234edfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8ba770-9776-46b3-864f-17840d8fb616",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff4b07c-24a4-415e-bf3a-f00db09b95a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51d7a01-a169-4ff4-9308-2c663e201859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f639ad-85ae-4159-a748-82ca553dd717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "552843a6-fb32-4473-8936-d7734df72c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1d7043-7955-477b-81b3-69977d531a70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6862a9b-addc-472d-bb37-d163f4215abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789bda54-4075-4862-8e9c-a883799733e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0cf352-db87-4143-b838-82c21e83b1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8d32d1-aa96-4ebf-a972-d8136689e8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c4d0e4-6aa6-4ce6-94f8-9bf67e34d444",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca612f-46ee-4ffa-b70a-967a1ccaff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdf7c85-d46e-4b69-b5c3-12180ddb36e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08922a34-9be3-4738-9468-adfc8a88e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b2a117-0e3d-4a7d-b8a1-64c3f3d56d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ded8a7f-0654-407c-9206-66ee68b47418",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e24f86e-2ff7-4106-8dd4-2208ee90aac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96376707-38e5-41a5-8a54-a02527e00a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef32b701-eb34-47a8-9a6b-4352b7a93b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadaff5d-6c86-4b37-99aa-2816f21db9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505e48b-e367-4242-b5df-fb3785e7ac70",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed575c1-e4de-42ce-8a28-54298eacd95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874422d3-f8fb-4daa-bf8c-fee004c38ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35018b05-3493-4499-aa02-a330b3b11f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11dbcb7b-eab9-4eec-8752-b33509675d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe49f72c-b996-4ead-bd4b-ad25c75e5d2b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df282ea-55e1-4a67-9cd1-2c3a1f31b04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db0f2ee-7162-48c0-b7d6-11231e7e19fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66b8e0b-ba39-4526-bd91-317b4b6ff534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14576129-4fad-4b9e-9f6a-f213a41496fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb3a9f-b30f-493f-b87f-b2db1fd6bed9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03327379-6002-4fe1-93b6-d8a8426864aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c51611b-079f-482a-a897-15654633a5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69fcebb-7765-4752-a10e-f3747b615c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f265c69f-5265-4518-8ec4-65826fda6ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0c132b-93af-4e8d-b181-e3d540e8a7f6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe8cb8-17d0-4595-8925-817ca310ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757462fe-3685-4b30-b907-77c683319e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6d3886-0c1d-4f4e-b9fc-c6940aa78892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e717cc-9b1c-43b6-9d9f-76d4db0a022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a24fe42-294c-4ba8-99cf-428838f6cae9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6d8234-58b3-47c9-b8b6-d48ae409b209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5e9528-a0f7-44df-9599-a2a6a71ee503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7281c4e2-5758-4a36-ad3b-371c0772495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a9aa51-2a4b-4829-8771-0ee3d7c4b10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fecdcf-c253-468b-a5a8-71a2a5655a87",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b3d8b-51d4-4e08-9e8a-ab6c113d3ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9312591-b325-4835-b334-ba44d3f99a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd80d5b-b6d5-4c89-9a0c-5979d9d2bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ba1946-ea51-43da-98d5-7d859adb52a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd9e63f-2617-4fa5-999e-333175478ed2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec9fef-0cf3-4af6-a398-193a55060053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b85c23-989f-4b21-8713-b2dba920eb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed384c-21ef-43c8-b611-4d9b491d512d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34dbb3dc-e530-4ae9-a8db-24ee6f6abc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6266fd-cfca-4925-be7b-c7266f854610",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecd2198-7c28-4187-8e6d-26de91514591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ed2c61-cc94-4282-b43a-12496e9bce20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364694fe-0b6a-4df7-9de6-e3aab9ffaeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22f70c9-ec23-4fe4-8071-cd2952da38e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfe8ceb-9d78-4f06-bdad-cf1c40f74339",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c450fb0-fe6b-44d9-94c8-35b05264fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaab289a-e8a3-4614-8b26-6ea4d9780f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8d5941-43f1-4f77-a881-3b9d976bd70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67507fc3-abbd-450d-b63a-1c6d3be35eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328a77e-6518-441e-bacb-302f2a78b86c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f379a005-a9d4-4ea4-babd-aa0c26a57025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc096f88-7bd4-4c4f-afa3-fa1ba8576dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c21b677-6923-461c-beeb-893bcf7095bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be8e9c59-dd09-4158-9d9d-41c05eb7eed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050efe57-59d2-4c28-a573-50cf7b03ce55",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728d6b70-7483-4279-8b09-d7d9107b79c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add50f97-64fb-450f-80e1-4d721330a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636841cd-e800-483d-a4a5-c36b4e68b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced43442-e0cd-4151-b465-f25b4ad0612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82af650c-6f2e-439d-a6f3-3c255b939ac7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e83e6-0f4f-43d2-ba8f-6d5620837af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2674a4c8-76fc-44b3-a343-ef55f2128934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0957c1fe-ed8f-492a-902a-4f541f185735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581d3ae8-9f38-46bc-8b6e-856860e6117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b404fd-5c36-419d-9e94-01c57ee6b17f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9600d8a-09a9-4b2e-b677-3220d5be4c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bc16c5-63f7-408e-9dca-e395b0c717db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfb46e8-9294-489a-b7e8-d97afd4f564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d8d4c1-9e63-40aa-9acb-ba2957ba7ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04f73f0-e15a-4ad1-a936-47f7f1370570",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be84a08-2eaf-48e1-8641-8a3f4e3d3db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fdb169-3665-4566-99ef-2b802c6b6b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fb41ea-816f-48e0-8969-f74e43202f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e006b0d-5757-4f71-869e-157f7c8b23d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b7f3cb-512b-48e8-9f11-9526b65f4395",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae8ba23-148d-4b13-ab43-99ae56b80315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483abd55-20ce-4081-a85b-4842e5cbd5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71a4e94-5968-4729-a8d8-b69cc075f4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9def18a9-5080-4d0c-b973-a96e82378295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d34dad-c0db-499b-9f31-310b3d210e6c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d3a872-76dc-488c-9b71-77ea1050489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892dbe75-c0a2-4e00-a18b-ae6cead8fbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6d3d67-1609-4fd9-bdd8-ba5a4aa58f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4382009-e827-4dc0-abac-aff77779b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e56e235-1918-4e56-a1cd-156e609ddd29",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04961bd4-cb50-4f11-b891-f4ee22bc5da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7946b3a-a6ae-44be-8fd7-469135777a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb28bfa0-c09a-40f4-a7b5-d3f2e35c0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38ed6e90-d1ce-450b-a3db-9bcabd38418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d1296-b70a-4536-9ac0-250c56ffe931",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45381ae9-6834-47bd-888d-1f1845431e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c1e9d2-8388-44d8-9baf-3b70fb4ab3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca92be-0df2-4cf5-aa21-bc894411d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81e8267b-7175-41b0-a9ff-c921a4f36246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff425b7a-a024-4863-becc-7561cdd80285",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b083ea-3390-40a6-8ea1-b2d3e98f4f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a10d6d7-953a-41c0-8d77-5a91e4af3deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f460becf-1441-47c0-a696-f20e3ee67afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "667adc2a-2ce9-4846-8811-c36b885d7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933eff75-32ba-4c61-b7da-7564b4392015",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6ecc0-407d-4a00-a258-c1b4cb7dd7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0e41af-67fc-4f0d-abda-91f7ff4cd28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc00b225-19b5-4746-a234-fc06f7c3b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5efe7493-ec1e-4447-b496-70c320c7d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4a89c-6392-4fd0-a4c2-e98d2f992e98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50989989-aacd-46d2-86b5-0feeacef2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1fcbef-60bf-4d00-8702-e1d1b0a82b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595b933f-4e87-42a0-a41f-63402632bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a14e4a6f-4fbc-4395-ad05-48b29ce378c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52983a17-0ec3-4560-9eb2-81b7ca1a00a7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ec18e-1664-41bd-9598-294efdc0127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "496f67f2-9b41-456c-acc4-bf7a7fe34639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476ec7cf-e1ea-4f3d-aade-578a716e12a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf28f8c-0832-41b1-87af-20ece51ec3d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dca27fc5-cbc5-41d5-b137-63ad6e9b3cfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d9c8d5f-f272-48f8-b56b-3e1ad664c309",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a9806-0340-4f3a-820d-f8295c9becc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d772fdc-06a1-4f34-8c2b-24969bbada8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f918928-9eb8-40ba-b9e2-d6025340cc9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2375856d-301e-4b9f-be1f-9b9c5272dac8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d23ca78e-0c29-408b-9309-25217529a4a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c0ef4e-2179-42e0-8898-7ee2ba4a3bac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbbdc5fd-f987-4dd6-b515-9b65f0ea4d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14d24d62-6fb7-4421-987d-4c84fcbf4ac7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95e94642-4fa3-4630-828f-fac25d156af6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91e5a697-53d3-441f-b9d5-cf3c0c666f20"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df8dbf78-9741-49a6-a799-ff6f39181f66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a46f9646-906c-457c-bdcc-aa6d7d8c65e2"
                }
              }
            ]
          },
          {
            "id": "3e0e7d42-d85e-4510-bdf6-6b3456b77ec4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "944b4f3a-09ae-45a0-a4ac-da4a2313128b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8124348-d02d-4259-a227-24443a03f5a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "999a326a-09d7-4737-92dc-91c2056642d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28769f7f-2745-46fc-a8b3-fc3cfdbc5107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85c5b0f0-1d4f-43d5-bf16-ae5e2c7dd3a5"
                    }
                  }
                ]
              },
              {
                "id": "e7dff4c4-098c-4b4a-a397-2891e85d73f3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "131e7678-d5ed-4d5a-a5ff-a513cd9741c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c11f68fb-bcfa-49d5-a151-8c75a302d0da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26e72502-6f07-4513-97cd-d3c8816edfa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f3e684e-b1e8-4425-847b-5d2310cd0780"
                    }
                  }
                ]
              },
              {
                "id": "09877c64-1770-4ae5-b72d-39ca184afbf1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6e9a8bb-3f4c-42e1-8e0b-2cc8382ab418",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc0ac469-e870-4f41-b92a-6713c312ae6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c5ec632-050e-498f-a866-ddb088192515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69db33eb-c266-46bc-ae94-67296a758019"
                    }
                  }
                ]
              },
              {
                "id": "f449b0f8-351f-4d04-82bd-e7c612701100",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a13cf49c-468c-4505-b8d5-75521d802788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74d5aa91-7f91-4957-af3d-9c6df506c609"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a783fcc8-363a-4bbe-a943-caeca517f074",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ad4ddade-e522-4f79-8b56-5e5e3d96a0f4"
                    }
                  }
                ]
              },
              {
                "id": "871942a9-f014-48e5-8bb8-8b8bd33dc83d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c6b934-069e-4793-9595-e01420b97067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0389428d-f3a9-41b1-b295-f8b9296849d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a419a562-0127-41ab-b33a-32a7f16c58be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5e0bff7-bdb3-4756-a28e-bec8a3e45841"
                    }
                  }
                ]
              },
              {
                "id": "db73c22c-6301-4028-a4b0-d41579334503",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "442d91d0-5b3b-41ad-9d10-efba3235da14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83537af7-be47-4630-9925-542e992608a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58de0aa9-f43d-443c-b404-5763245fc6b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50ff5614-1808-4b19-b5b7-203921c1d0cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f4ca24c-6370-4ff2-8528-8826c95dec98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3d1513f-0fcb-4971-81b5-2eb1be97acd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f50e0d44-005d-4694-aae6-9d65dcec2d91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99003137-e7e7-42cf-80a4-ba282ed2360e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "951dc132-0892-4fe0-b997-220980836b39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "86d88ed4-f1b9-420c-8cba-1acb8b47b19a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d6508fa-3f73-4f78-a8a8-3e440e15eef3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e901e950-dca0-40b6-adbd-67ec25312a3f"
            }
          }
        ]
      },
      {
        "id": "41d5fe82-c6ba-4c7a-99bf-f098c73c7917",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e94f3734-dde5-4c8e-a17b-6b50e4d22691",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b9eb087-9d1c-4485-83b2-0adf138fd6cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb5b6af8-ec51-42dd-b649-ec8cc792561a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad8a704-9967-40ec-8a9e-c4a755685fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89936a92-f39c-4d2f-acdc-96864860aa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d99af6-af0e-4eb5-bbef-c514c43c8630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02a84d9-f2f6-413b-b0da-94e75c514674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c1d586-142d-4e1a-81f6-3bf1975efadb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d31d996-9845-4c2a-8862-1b6a9b3f0a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e4b50d-b344-4e1e-ab79-b2a54057e183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f52dc98-10c4-4ae7-99e4-654c6e24cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b10a19-603e-42f9-bc4e-e64bf5b51017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1071ef-fde2-41ec-8cc3-e4d8e49adf2e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4624b8fa-ba42-4527-a837-0beaa77ed71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c451be-c28e-42fe-9656-c7f7dfcc2d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d8c5b6-6473-4888-848f-0d1badc5e779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e23f096-6fbb-4fe8-b8a4-9d28759011b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0605d0f1-0838-4ea0-896a-b4f5af791e2e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5805e97-bbb9-4364-9db8-f4210d8d80ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b50d886-1a6f-44df-9228-90eeaff54e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab695c7-5106-48db-8869-d1e32ba3857b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27aef77-6662-4684-9428-6126d967c720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2501808-b03e-419a-9910-264bce325a09",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933052be-52bc-4d7c-818e-cc100246e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7566a082-93c5-4ed3-8545-1f9dd1cac472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d25ba5-f729-4437-b00f-467055eaacfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3eacd8-6765-4e1a-aa4c-16724338c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307a274a-5389-4e55-88f6-7f99ccf89f4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b4f343-72ff-4acb-956e-327a40783e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd85db4-73b3-4ad0-9eee-f558f15f6cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c320cec5-ec30-4323-8943-7e560319feb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a745e4ec-4604-4f33-9448-2e654b98372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa0e4a-b3ba-4ef0-ab09-d83c0e9248bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fde48d-5643-4977-9381-7469eed48d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ff3045-5c1d-4870-bc2b-8e25834bd866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f30333-b2ab-4d13-9cf6-2b16b6932914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccb7163-a0ba-4c9c-9e46-4056eb83aec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019e5f99-e339-412b-a1ce-519de846c06e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04839083-93c8-41cd-9d68-5a54cccf2124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facaef38-1724-43a3-8c9d-bce392624fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582bf98c-4ba3-4b8c-9fff-bc5b391f9987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d734545-290f-4d62-8e92-3703e1006a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0d767d-60a6-43e6-870e-773114a20cbb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2ebd5-acc0-41e3-94b1-f25b0e56eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75543d4c-3861-4341-ba45-e011088bcfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f39a2-6bd0-4933-a204-6d33f2312047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fd858b-d27e-47f2-8937-03f8279f889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2049b73d-7575-4b13-bc43-34c881277a65",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9575388a-97de-44f5-a4b4-4d2be5c1baf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3485eb9-e37a-4606-8c59-0ec4f21dd43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451d59d0-9cc4-4efc-be09-471d0bfc5da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2d49a2-c31e-4bb6-8ca3-27e7bd8b4208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b63f61-ee65-4904-a427-090c3a0cd883",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e129538-e708-4bcd-84df-a0787a36950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764d5fa8-562c-4a33-a91d-82007a51cc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88da23fa-c47e-4f27-82bc-a03b3bcb5af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3f3312-7175-415e-9275-ccde53f652aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eb132b-d13a-40fa-a16b-3699fa68f23f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d312e5-5aeb-4fb7-a3a6-0042a082055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d134fb-9f76-4ab9-acae-cbf495371ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccec715-2f91-4a93-bb21-c9839f03eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff6573e-abbb-4824-ab72-3e7ba73dcdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f2888e-d797-4aa2-bb4a-63a03ab60db9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf487a-95ac-466d-973c-5dbf55f833f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e1aa46-545b-49d8-a6d7-ca9bebd17d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f1f2dc-74be-4ac8-a676-97a9be6c4d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d1fe08-e1a0-42f7-8f10-d2619898e0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8be068-21a3-45ab-b14d-de8dab845a5f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caf49e2-ba92-4da8-b392-d96ef0fe2e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828ff663-f4fd-4d40-b3c8-c942503a95b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2a8e6e-d9dd-4eda-a194-5325b6368822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df19822-ca1c-4f3b-9770-905dda383ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2c0394-bd30-4d21-8883-8cb9020e6546",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db9c1b7-98a5-456d-b059-c20e59e83720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc9f32a-272d-41bc-8eff-61bb9ed813f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b267abe1-4899-474c-a794-216660337a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90f4a91-060e-4c13-8d21-384fa66bb942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48442bb-9e85-457f-ac93-479ee95a9202",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1f60b6-f437-444f-8d67-91ced44b9d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ae164a-bc3e-4242-9ac4-f042610443d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a473ab4d-20e6-4ad6-b558-a8f0f130deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfeb7bb-540c-4c8a-b272-7eed778d47d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a1e4a8-7466-4d97-8068-ec73b864ec53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c96220-6744-4a5c-b148-395ddc64afbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632833d8-8a17-4808-a93a-12372adab022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2587a338-f53e-4f47-8bda-9dc8ad866d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ede1aa-48db-407a-9721-d714884f4b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5379246-e087-4aa8-be1c-4d0368f7a525",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba25b75f-2c03-49a6-b3fc-01406b6338eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2458d7-de94-4093-9824-e523d28fd362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a389ce-b249-450e-86dc-df2a6ae2bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41870411-353e-4b00-82e9-4efa511f977f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ffbf39-c362-48c4-814a-e1e215479e84",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319fb61f-7a67-45e7-ac9b-f2891f95a076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296221ed-36aa-4344-bd01-b04cfde00472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a186432-8836-4e46-8837-b0cfd2cd7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be60615b-2e6f-45ae-b656-c7d3890a8937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5e1b5e-3c4f-4d50-8b5c-b7902802309c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0212c4-8658-49bc-b598-998446cecdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc81bdf7-bd95-40bb-ac97-eb3998ccdd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2b5fab-c512-4435-bd73-451643a67515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb6845b-7c08-43ed-8733-ec90bf7a77e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb685dbe-e272-4516-80e1-5de8437442d4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060bcf5a-8e50-4ce6-98ff-dd6ae6f5ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8448b4-b2c8-4c3c-a34f-7b477badde4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22efc939-8dbd-4713-86d5-8933d08e4d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b510738-0f14-443d-b37f-610b4258694a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226408ca-33ea-4217-b0bc-01e85590b179",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f3cf6b-f5cf-4dc5-88c8-928e28d89350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d89ac0f-0445-44d0-b3f4-8553833d3c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222fd6d6-caec-4142-af80-5ec659849dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511f319f-5724-4f78-a6fc-bf5b486c0b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2e56fa-2575-423a-b470-85cffa9fdba0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6027854-44e5-4218-95d6-f9d998487a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8117699-e9ee-4d04-9772-3d78f482370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d64515-4984-40be-a861-10fb7563f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed776a4d-24ff-492e-8dc2-253a38297439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58ff2d-a997-44d2-80d0-33cb62c272e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af41eb34-3cba-43bd-80b6-35516389d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67322211-0e68-44af-9735-49f81e52ee53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2376ce3-1c01-4dc7-b9fe-a613f7b482ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52dda6c0-a916-4dfc-ae36-f6bc9a117a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517524a-a082-4dec-bf8f-b54fce32e589",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedcea16-fe2f-4bb6-b9ed-3e1d980857df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8016c58c-b53c-4ece-923a-5b9e9d2e40ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6324a948-fcec-4b4e-8fbc-4cf33cb3a09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a0e12f-ce33-4a72-b396-458e60c0fcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1398cd-6fce-41a3-a3ba-2c3e1672d888",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf886c49-ce8e-47c0-8b8d-785fe5c0b7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cd2f55-c8be-4449-8d1a-068260f4d50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb84fd83-f5b4-403a-9855-110f83946b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21aefb0-9c43-4300-ad7f-c4539f175e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df668521-24ee-4348-8a76-0ca4ca2fbed7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079534e1-ca4b-43f9-84f1-74ad00408bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a10dd00-9f65-4660-9e6e-b021fae3c445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064c397b-56ff-429f-bce6-5f63f68c0b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ce76b2-1338-4712-9178-9e3d270ae988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fd74b9-078d-412f-80dd-d12d23b159e1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb2851c-5f56-4a30-895e-0b9d12e95044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30a85d6-6cd8-4870-b477-4051cdf6ba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3067eff-aec9-4c43-9802-e4f15d45a738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c74f2a-fb6b-4823-aa5f-62bfd33e3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdeefa4-a383-467d-8e98-d836ed9f1d06",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864a400-e8ec-4b0a-95a8-6430f74cd38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bc3a6f-9de0-4d0a-ab62-1512d244e743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74055290-a5e4-4ec1-b4e0-8bdcd87ea808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4702dcd9-7ba3-46dc-8ff8-0ea3553f4d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb961892-4ac2-4fb0-a296-6eb8eb5c02dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c813b336-b399-4509-a526-09ccb47af6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd84afc6-8e97-4bfe-93d0-fb2f13a8ab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4c1bb1-bc90-47ea-9c07-e6f09b47598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48aee60-19ca-4417-84f6-c9553da4530f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf9db62-328f-4be7-890e-0eab571d75dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7272782-26fa-4d26-be90-abaca609bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06618eb0-330a-434e-b9b5-495ae9088040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb860cf-6cd2-4635-a9c0-468cb873e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a7de0a-50df-40a2-b826-c737b8a1b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419a5cb4-8012-4289-bfc6-763294685205",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be231954-88ba-4341-b219-93cc6700fd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a150c0ac-a13d-4102-a383-01b2ff69a614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647b6b5d-ce89-46ef-8612-c1f9b3cbb90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdfe75c-62cc-4b62-be42-685832592b21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13ffd021-d2f2-4d05-9436-7ec76054e0dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7687017c-63ce-4e03-b8bf-baa9d519c960",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a707316a-9184-4b38-9742-59ea6f64f208",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34d4dce0-3ce5-4d95-9d26-8081f27c5c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bb3690-bcb7-45c6-a6ff-f30a64f498b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ae3053-f339-4492-97a8-665dd16a29b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d684535-f270-4355-837d-b43841a1f020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea76749b-a611-45de-a00f-68abdfc38057"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10c48998-3e7f-4c35-89ff-55f4e8228c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f9a50aa-e913-4b1e-b365-abcc804dcac2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "364e1462-dc01-4d54-a7c8-a730ebba6a66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c329d5e7-a0cf-4c62-9820-4911a8025aac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37c7c64c-be15-4d6b-b8cd-08c262928899",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4c51815-8c4d-421c-9068-8a310bf38c11"
            }
          }
        ]
      },
      {
        "id": "f3a6e093-29e0-4f6e-97cb-4d7a37fa9ba5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3ea2762e-b59d-44c7-b501-d7a7bdfb9648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e442a9d8-a52c-48fc-8b35-24369bf79edb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "558f2e48-b53c-4648-b535-472c8dc20dcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdf16c0-1ab6-4ad9-912c-2ba09e24d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18690f71-0028-4574-bbc3-4a6bd19b9045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f926e2c1-c800-4557-8d61-5b32d4ddd54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bab1d60-3874-45fa-bf3e-0e28fdfb65a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ad8d87-fff5-4044-9267-fdd0cf7fe92b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bab428-2a35-43cf-9873-24bea5bff776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e1b3e5-b07e-423d-b056-e3d638f27c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c444b290-3add-463b-b19f-5b1912bdf131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf07303-3885-4838-bb86-852c3fe5c043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1ab4eb-b20e-4a4f-b7dc-7970f4f6881f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb6d295-e1da-49ee-a760-be6a26ca6ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80154ef5-929e-456c-a79e-dd78a7c68729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3bd8c1-c4af-4813-8cc1-fe3b7e10fa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2d0e79-b90b-422d-ad34-74c8840b3583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500020a-9b23-4422-8995-aa27dcf689db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c1a922-c343-4840-9cf5-f14d77cbdcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2d5d52-547f-4f3e-a6cf-5ee0f92a2f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36977178-d1c3-4784-a9c9-646a29aa4c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "477fb6a0-b832-4233-9cae-0306cd1134b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c2da2c-ad36-4f84-a630-86486e56c533",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc375af-1621-436d-b4cc-338b48c09ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b60b91-cc25-48f0-820a-6cc840e271b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be51cec1-8b0c-4135-b8d8-c57c9a87a34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97eeeba-c66c-4c7b-b85f-aa5d95e90ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0befe30-4ac2-4069-8607-57a00810118b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69404bee-672c-4f9a-aea3-de8a05a89f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719532ff-da07-4336-a086-3586ff5b0255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491dea87-3d62-4e93-9119-a538739ba9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b57246f1-1a38-4c07-abe3-9a1bb9cd23d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab3b9d-59a0-4761-801f-008e3eb7c477",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f56bb2-26a3-4af5-a6ae-ff348f8f8947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b580a5-34e7-4b28-905a-0ca0af2aea84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692207a4-8004-4809-92a0-0560176bd0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b2b73b-828b-493f-93b1-821e23cf65aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab50e9-a93f-4397-b1e0-f031a6639c4c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724c55f-a724-4753-a499-f237075e99f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fe91a6-dcc9-4372-8ef6-fd4649ec8e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3a7cd-0745-4f90-9be8-131d8881fad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b699979-e814-44b1-ae54-104e9c8cf02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f5757-121c-4a21-a227-233b661d5dd2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742c47b9-00bf-48c2-8f6d-7ef897f31b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6a0af6-4a18-4f0d-a1fc-ecdc5bd68c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a630ea6-dc9d-4948-bd4d-161874f6a355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02b1e76-3561-4313-9daf-79bab80d4118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a992a25-99b7-41ce-91ec-6d28222c4e2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b316e4-405c-4526-b906-95467dff6eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2758cc4f-1bfb-4672-aeed-ffb25df9eaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237d8666-1ad9-4868-9bd3-c8481b7029d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c35d1c33-8a5f-40e7-b407-f1b74f5b9877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496459d-6fc0-4d5a-b621-885b90f42432",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912e81e0-c6b2-4b45-be2d-0cacea2e98b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb74601-a5ce-4fb1-a0ac-5059280ce193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae20c66-954c-414a-9874-a9ec1d42b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6448ca97-34b0-4c9b-a364-4fdc289ca9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d3d96b-48aa-486d-849e-f07753122227",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd1d30e-bb88-4b77-8ea5-576623accca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4838719-da95-4227-8f3e-2dd760d30a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b127452c-9c8f-4de5-a6f1-5a77c04fcaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61e3093d-442a-4518-96d8-64e4f8d8f0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64578ff7-6076-4800-a2b5-093f7a69378f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9fb1a5-9019-425f-9dd7-2e8bfc8697a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bfda86-1f74-4e5c-8fb7-d94ae6d2a047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e068122a-eec6-42c3-b3f1-6b9a7bb1cbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "465493b4-c378-4442-b66f-c0352358874b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cae0215-d524-42e5-ac6c-5bfab2892b9d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec1dee6-b866-468f-8475-6e3326c36a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0329741b-28ac-4a0b-b930-df3c47a9fdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e726f1f-8307-49a4-a4d1-84e35c72736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f807cf9e-93f7-4d1d-b433-d55b94494549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bab5156-7e08-41da-9a2a-b6e6844588c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515b960-a814-4dcf-8499-e6f05c72b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8255de0b-6bbc-4dd3-9d7e-106c25b6fd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703d7c28-40e1-4d39-8bc6-1cf7b78677ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "686804f9-f617-4f82-a32e-3cb69347e10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bedc0f1-526d-42f4-8a52-3ffa9c68d1a0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b56f53-7e6f-48f6-bddd-363cec538b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54485e3a-b4a9-4648-8173-764183de6886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14ebff5-4cf5-481f-bb4e-e7a5e3e252b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "969433eb-3a15-481a-b847-808d51475b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96328799-cdc1-46a5-8ce6-9139796ac88f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d3fd02-dcad-4227-8aa9-685310372373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c456f599-5bb9-483e-95c7-eed826e2d2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f05a3c-c14d-4194-9c93-b58381b680a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2b0a53-4342-4912-9cc5-831bf0b91953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62de0439-360a-44b9-93bc-841c9b7cb402",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda8feb0-cd6e-4c7b-b8f2-b0b4389729a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4891fe13-0a2f-4d7d-9874-682ac907323b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c914e8-2842-441c-bc18-207da30a6395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56a959f-856f-4080-be27-e408d4932813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614db6f4-2780-4f6c-abb8-799fa775faae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648a42e-86b7-4810-9b1e-001fa24da5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125d514d-8c5c-4ad3-938c-50a8577b44c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c16ded-b253-4ab0-ae08-c82320f30380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5fd723-3011-4ce1-8d0d-8c952b291e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adddd3f7-33f7-4d74-a72f-42e1e640b2bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076e5a64-e3ab-4a29-a2ad-ec4ee6d13fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b32f5d-e82e-4400-ab8c-1322640b2ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04a4f78-4bd8-449f-87d5-7dbf63d1d822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "339ee601-f7ba-4276-b844-7f7e69db94b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351262ba-b672-49b5-b5f3-b3de84d87462",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52c63ba-a78f-4260-a4bb-384f60cb1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fc788f-e153-4467-83e0-a521217b51bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ba04a0-4537-4af0-a49f-0078f39d22a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd536f55-210e-4189-b5c0-7d4dda8d6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868dcb71-f5ae-4839-b808-c48c1a8edc96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d518a29-a080-4778-b7c1-700ab6b63e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5882a4d0-aa33-41ce-8731-40fa640459ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ef9539-36e0-4025-8c20-781923dc718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b16755-3add-43ba-ab0f-a76b6304f42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cccb34f-802f-454c-ab46-c45df998c697",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fc907-7f8a-4e3e-8401-2895a44433e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1338d8da-b9c5-47b9-9a35-b35f59019fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d63809-c00e-4d26-a7c2-791841e7cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "968504c8-9d20-43b3-afd0-ffbaa9a15bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be53961-d150-462d-bf91-511ef100d069",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1107c862-966f-4ad7-bdac-d09c7549dde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04e6f50-94d3-4839-8de3-1fae86aa4a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c34b15c-8a82-48bd-8367-2a6a1cba5691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4179e9eb-755b-40f1-bc49-530f49790f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e334b7-cfb8-4fd9-a991-3fa45d84ad4b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cc98c4-c2b6-4433-9d22-8a41d1fa87a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f4d7be-1768-499e-b0dd-4fcb892f9477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbd2a8c-78b6-4d42-acba-a8d245aeb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd12bc6-afd5-49e3-90ba-ab17c7f04165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddf3c05-db0f-4fb2-91c5-476ae52b1363",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ce30f6-c723-4aa8-8406-b42e7ef57e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7e4e6f-0a62-4c04-8a4a-658c6d2953a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230602e3-e575-4618-97ff-9df13347707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67842a9-7f18-4aae-8ec0-daf4955da9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73a754f-d0c1-4dbf-b130-cca52e101232",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60ff4bc-b312-4066-b57c-6bedc7bcc467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefe7106-22cb-4c8c-9c21-e6539bc5eb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0e6505-d487-494a-aeab-b3084ecdfa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b5a8eb-3c53-489c-9e5a-b883300840b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efe3a4e-6194-4cbf-b9bf-3c7399cdab40",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2f2d86-f5f0-4bba-99ea-cfa7c15be39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d8f3e1-a662-4f30-99be-052fb758baf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5086a55b-ec31-4c7e-8721-4e8bab1593da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83124e06-fd86-47f0-b5c7-a214dabda390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b739ed7-efc0-4fa7-84cc-8653107a5ff1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5526cb76-cd10-4161-8ff0-cac2e98fca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67806338-7c13-43ae-8154-8f7b0995038b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd576fe5-5cfa-4fc5-a40e-81663a4d4cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2292ed44-def9-4e37-ae87-8ebba180f188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f32f2-5914-4610-a509-36d001a69953",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f717331-42c8-45da-8b8b-e48452fc0ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a507450-fa63-46e8-8aae-b2bdfdcee4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b657fa1-8635-448b-9925-902f9818168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a22f202-b0a4-4111-945d-5443692d1d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa49bd3-ddfd-42a3-880d-cef01c7cb9b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff8e29-6d2e-4745-8902-65093e9bca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69b00ce-523a-4082-b600-8617c1b55b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fb342-ef01-4206-a705-67bda124e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76a1b2f-31b4-4f0f-a66c-f2d4ecbdf22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b005a3cd-b626-4856-8ab7-1c2f5adde3e8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d12fbe-ed65-46a7-819d-26aea9b4beb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb77c955-4098-4224-a3c6-c805b0491b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe42b85f-3fe5-4a05-a743-f0b84875453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "008ff3e5-dfde-48bf-b751-24da6713a02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f26399e-db0d-40a0-81a2-033654a66ab2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d74db-8c8e-4fb8-970e-5cd19efb0097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45537b4c-9ddc-4c8f-82ce-93c2ccfbe723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250424dc-ae1b-4d67-9f34-e646fbffeb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2317664-57b4-4093-9ffc-8bd6dca4367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d26d61c-f2a7-493a-af10-a9ba88f7946e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d826235d-4ced-4917-9866-f2a982c02395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc41c0f2-e627-4cf1-8b25-15e43e904246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77307cf-c93b-45aa-9c8b-4aa0ec053d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e93445-d532-44a4-9e8c-fd3076c81dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a637bb-aac1-49ef-9190-2d5fdca780bf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1772a4d-a3af-4779-86ad-aefb8ccdb021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6777e905-ada0-409c-9474-dceab95f6a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e9cf1f-88cc-4869-b410-1c6750bd2988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fba1880-3311-4616-8406-a3d720890cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e237b-94c3-4262-b72f-a94a5b23c938",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90174e71-47f6-4206-a556-b1a5d25900de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a303ab6-1b1f-40f6-ac93-49654fec7e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edd3bd0-832e-44a0-934c-420d77c28794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15de5090-652f-4aed-b4d6-7d27d27c425f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47aba2-a82e-4bf1-9f11-888e7d76b328",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd51822a-f613-4310-8920-ee430d2ec334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8ba5a3-5e13-458b-8cb4-db4e361c2d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682c008c-39c6-4b33-9d2e-a17fa67428f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bacefc50-3548-4bdf-829c-0a0f141827cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee1a5b30-b35e-4d36-b697-b0b83d543eaa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "836a6179-57df-4715-9133-e8e373080244",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79f9933-d070-43d2-9663-db72a8806baa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc41ee1-ee3c-4c63-b6b2-19e03b6699b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d2c224-c961-4a15-83cd-28974d05a73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0cb8fb8-fe5c-459c-a8bf-e3f5976b23ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba5baf05-8f10-4005-b013-746f43c0468e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "736d7f0b-594f-42d9-a664-220b85232b34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4912563-4fcf-4d57-a74e-10a3bb7b63e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d198dc7-6550-4fee-826b-66589fa46622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "865b438d-b121-4312-8b22-9169cb68a3e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f17ce40-382a-495d-985c-e53975470770"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4b132fe-0e54-4137-98fc-887ce3b292ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f69ea6d-b594-45ba-b08f-92aeb4062fa0"
            }
          }
        ]
      },
      {
        "id": "7c882e37-edd2-4c89-aec8-0c5b918458e2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b594f2a-1d63-4f1c-affe-0fe5e608da4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ada6784d-00c6-4102-b1e3-f735fef12517",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1c6dc90-5402-49a4-b115-c98d9b58b8f8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858ee2dc-23c8-4a57-90c9-fefc33e208e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8f584a-62b1-41f9-82d4-9b626f4c04f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d461b7d6-d3c1-44a0-b606-56a59a213818",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de11f8cd-278d-4b4f-b39c-ec75cf7642f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31de7101-85e8-496c-a1d6-6bdd6d8f6b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e83fa-71cf-4b91-bf82-2d579a6ef6c9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6cd5b9-0bf8-4350-ad96-14c8f69d4f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cd8c18-ac2b-4504-b9fb-0d1732ba31c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e94bd5-d48d-4e8d-ad1c-1f70d7dad36a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40b9a2d-cc06-492e-ba0b-df225bf2e1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7ad543-a501-413f-807f-abc4b668226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2530758a-c3bd-4209-bc00-0a3908ffe7e3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618fdddc-feb6-4821-870b-9a760012aa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5c369b-aa4c-4873-aa7e-56d17fa9f349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dad4b4d-4785-45fa-a9a3-018f4ab05597",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b67b5-a00d-4439-b4c9-3e21d471bc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5952215-5f60-4c6f-8987-b537f697821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3dd95d-46fa-4c53-8fba-40c932e6fb9f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd16743-952a-4c47-8ae6-0dff4a00403e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b29c33b-867f-425c-8cb6-aec4af43e044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1d497-4de8-4d02-95c7-dde135a4ccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837a9da3-1b8f-4c41-ab1c-7481d75e4847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b83f708-22cd-4de8-9da3-dbd7b2043317",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57ddfa8-ef50-42cd-953d-be466f9bdfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942f6fe5-5584-4411-b10c-1841193e5ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68c7864-6629-474e-a47a-2401d5fa6d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23204695-1829-4877-85f5-d1ac7b8b0ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3072302f-50cb-4d41-bdb1-3fe6c0e7a671",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a52033a-11eb-4ed4-8407-8eda9a6fa3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfe4df1-87f6-488d-9a35-81e2f0e6fd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5da26e4-0140-44c2-9320-6c30ff0bd628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aa444c-ccfe-4127-9d3c-b723512bc01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1538d5bb-638a-490c-ab90-49eeb3e03c17",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e4dd16-b9c6-4154-abfc-9ddb02cac889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9903a30e-adb9-4296-9a36-eb637083e7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84771507-5232-453d-945a-c9b02105c5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f8d3e7-b5b7-4f1d-85d6-fbbcbc94afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d40d8bc-1d68-48af-a752-36e30803e013",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0681fa-43ed-41a2-af23-c7165722db61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea93d815-8dcd-4224-982c-76073fabedc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624a1350-9b06-4818-9cbb-e4979070c1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85941417-86bf-437c-9e06-fdbe7e73e6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ee952c-f607-4fcd-991a-c5358a71eb1f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8465c008-bebd-42bb-8130-bd2d2c9c1ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd56a3-a72d-4551-a12e-b205a07f0a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fb3698-760e-496d-9ed1-8c6ee3ca6f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1d2851-afc7-4eef-bc99-39a88548d8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d1c081-6392-4365-ba44-448b9bcb3b12",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a085a2-dc80-497e-ba4c-ed82175b19b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f65059c-c5f9-420b-9792-3bce91be6c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d49db1-9531-41dc-b643-1686cc7fc516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da70563-4f67-4697-8659-69adc3429f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62af02f-a554-47f9-8fe0-92458ca6cf2d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dd2894-044a-43bd-acd2-21584ce4071e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09df1bee-0ea5-4e35-9509-e5a2a1d7e5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b1ebef-600f-475c-a0d6-f23a1ff0ce1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db0cd0b-e7ed-4b21-9691-8502ab265c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1105c913-ee45-450f-8f5e-23f019bcf596",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9b6e5-1eca-4936-a0f5-d04bc754a4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a21240-81cd-4309-8c1f-b0519dc3673a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d977d75-1aa3-4e0f-a775-165af6f7d774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a86339c-9202-4811-a989-7fde8b66b61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c1f1d9-a0da-48c1-acd3-06358dc2c4ad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85a29a-9a3a-4f45-a91f-590314edd308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64aecb27-77cf-46f3-85db-efcf63307348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a535fa-4374-4fe7-91a2-9519f6785476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76fc873-b529-45ce-b78b-24954f5f1cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7109af5-4c48-4649-a216-929831bab941",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aefa0dd-80f2-4851-80ab-a59eebe3bff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac38a11-37dc-46ed-a523-99e9740580fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf50e2f-70b7-490e-ae9f-20f401471ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f59d3f-c13b-4500-a80a-ff745c7d86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2768aa54-088e-4062-b10e-77f0f5b8e6fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0389027c-3b61-433f-a5a5-84dd2e393f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3013645e-fd53-4902-83a2-12f592c29368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736f33fd-0b3c-44ce-9540-512dc44736a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c6a2ae-a15d-4ec3-bb84-ff61b6c800c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a5519-4e15-43e2-94b3-1cbbed9c84ca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab93adbb-e68b-4844-9cc8-9c2500aa0f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d26fe0-d27e-4b02-91a0-f07b6f61a4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a33a16-7d34-4e82-bce1-bc0f20671002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a96d1b-7578-4600-8171-6612eef76bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3d8e54-06b2-4576-a284-38abc1fff321",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3385d56-f39a-4056-a859-79d4e66aea3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce8ec29-d3fa-4e07-b50e-d9ffd2306698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844a7414-7127-4336-ae90-66b2fca3f742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2fdc7b-0afd-49a6-b5d8-8b599321732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5391e47a-6c15-4d9d-b151-c854ae397eba",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11723fe4-aa07-4ace-b810-84326835ce8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850891ab-77e1-4fe5-b8a0-a0ad1392c80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397483d5-664e-4c5b-a894-cf30a2ccd63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe220d97-9570-4934-9760-9f4d887fb83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc7957f-1fff-408c-9f22-3f4e9441a921",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e4f14d-49ed-4313-81ed-9c59b005b321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1381db06-595e-4678-b779-fec18b128333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e25825-b595-4e02-9bf7-949bd9a66e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51832e72-4491-4290-9207-111ea4260c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c86598-e777-4e20-8b66-f4f6d19ae32a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e9e2fc-90e8-49b5-9381-c7753cf445da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6e7377-b55f-4591-a764-3f34690e54f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b83b54-aa02-448e-91a5-08beef5f2332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f618a-59e9-4f1b-a0b2-20fb8aac4a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee5d4df-a44f-46f6-bc27-c0faaa29bf98",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0bef2e-d674-488b-928b-bd87f8a8efab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5425017-1264-465d-ac4b-09ca90f3ee7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efca4f9-7c07-4499-b6f9-1cf7b27257d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dbeeb7-d5cc-474f-87ab-387cc276f028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce531949-7ece-4eb3-8bd8-d5bb15a5493e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a56536f-df60-4144-8b95-31d97bdbf8c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1361609-bd90-47d8-8cd3-2ff11d3d9dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af96da04-9e17-4591-a9d4-473ea674469d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96a9afc-ea6c-4563-88da-c58f22b5c2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc07aaf-d07f-4a64-8536-99c2cb4d4165",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053305a5-9e4d-4a16-8045-99a341e44750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fcf064-0846-4b7b-933a-f8416688f85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcc65d3-efd4-487c-afa7-6949b8f0ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8af6af5-b866-46a5-a6ac-5aca15daadb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7985df21-0a44-41f0-aee6-79eb97a58b2d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f574619-022d-42ef-ab71-b40bc3f28d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c7e1e7-e58f-4e20-9cf6-7bffc92f7736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76638c7c-0e36-46c6-84a2-b2a9bc17bacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb269b4-e34d-4f56-992b-1267937f3a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c4a675-f8b5-424f-866b-d45052738887",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778e89cc-e73d-403b-bbfa-6b56ab53b3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba76beb-2dec-4fee-9c04-e871ce714c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c91b7a3-be6a-4a68-a401-4990c0dfe1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea1dbd0-c6b6-413e-8783-ecbd155bc7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4bdfd3-280e-4d9a-92cd-a1e67d8bc799",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e592699-4760-4a73-9c47-38c95ac611ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16043ff2-780a-42df-8733-f6d75dcf078b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a0a542-8066-4c36-b143-9c06967fd4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7a3f68-fe73-4762-baab-4352d4d7a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf801230-47eb-4dab-8356-b6d0927c8170",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464bf868-7b76-4c65-87f9-0aa2256cc093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ce837b-f4b7-4e09-9223-529ce20cd215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaefaec5-b992-4e02-b088-4a49dbc9db34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e767c176-9f30-4787-8dac-3efaa96087c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc4ca88-aee4-4419-b0f9-5279d8d87219",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742304b1-4661-4d98-a6b4-913b36c2d622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d56e33f-4d3f-4f61-bf23-73c8bb771772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1a16f1-950f-4c1c-816e-9f22e9b51b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6233d1ff-1801-4f55-a5c9-8ecea709563d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67aa2a-05cd-4481-b06f-f8e06ec9d2ae",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2988e2b4-b5d2-452a-be2e-7ec253e22e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd839ad-03d1-49d3-b306-31b7eac243da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460948ac-9da2-43e0-9293-0f798ffed340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65aaced3-b32e-4f3f-a39e-284c7f82e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90348f93-c1ba-4850-9a22-aae0a1f8068b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7822620-76d0-429a-a823-c8059d2da66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f19fe5d-0e6b-44cc-a000-01fb1bdd899e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68b1af9-892f-4ea1-adbd-aed594332275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5781b07-c96e-4810-b9d0-ab280b176e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cab161-6b3d-4e0c-b016-c27a2c5accfc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa38768-a158-4ebc-9c12-463ccf6344e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397beb01-f0df-4952-bcec-10654576e282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c034baff-f0ac-4c09-90f7-afeb67d4c9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63d05a5-05a4-43c0-94f0-ac5afcf0cbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dd1fea-5383-4749-826f-281f52f22b9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d6967-d978-41d5-afd0-2f499506b93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a5d190-7c49-4f75-a231-27daebcede56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b134edf-0ad3-4a91-b70a-4c07cf38437b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5fc1e2-ad6c-4550-a62c-2c47483c8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866ed485-7684-4197-94c0-1d10b119ca69",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc7e6c0-1eca-428a-9f46-3fd6b023c90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba6d4fa-b2e1-4723-9920-4181cd4e781a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645619a1-7a92-4c54-9a89-32af6a7b9953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abea7145-5f69-43f6-ae22-f5b98442c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267576da-e968-4366-a402-95d3df7bc7e5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4bf5bf-a082-4d4e-b1a8-361ca9505a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e54c83-0d82-41db-a64a-8aedbd80c79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dbb068-f686-48dd-9cc1-d63c1fd68da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4baed85-b38c-409d-8083-ddd19ed263d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0dde60-2fc8-48fc-982f-e86f9af8acfc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd2fc17-7993-4067-bc61-94a99fddd78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41aceb8-bca1-4503-a371-165a39e4f67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c569c45-93d0-4b70-b27f-e893e479cfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f226e7-dad9-4220-9ac6-f29d901b6b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71574c0-c73a-4e59-86b3-1f52a93c87e2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f325c7-c40c-45cc-a243-916f6f71a58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d546595c-5aff-4de5-b25e-477f383dbe98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2c183-b3f3-47e2-9802-917c972ee40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17cd3d7-1404-4fa2-8112-6ba11b49d207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6190713-0bc4-49dc-a668-65bc9b2cc2cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1860b10-57f3-414b-8d5e-92763f0356d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6071b45c-8feb-4533-aacd-55f1a7f5613f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308c85d-3d5a-45c5-a2eb-ac4d99e3b56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661bff76-37a5-4918-a1cc-cde02aa57272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebfb0a1-1484-4602-9838-09f97c91bb17",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e480eb-13a5-4cb3-bd2d-f7be8e66eebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947274de-6996-4b55-b4b2-5b17d3ecccba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99153e89-4d3e-41b9-8ed3-a81e415cd263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a451ac-94d4-4dc7-86ba-eef886931811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa28e82-3630-4d5b-b834-03980ac3de96",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f1df19-8566-499f-93c3-75e3b5e03993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53e2665-661f-4010-831d-3e953755882f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4524fe3-4529-4365-a3ff-613c58536ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9510ffe0-dd11-4f45-b33a-0f48d092fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d658419-74c5-4d90-9c6b-80c2deb11f8f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b721bfa1-173b-45a6-9a46-79890b9a52db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d3f82d-c0f1-4aec-849e-5d9642794fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18447901-0dc3-475a-97d5-9f46c104d857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895b783f-ead4-407c-91de-9fa429ada84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fff4ff5-c920-4572-a2f4-2b24c329ddf9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc83134-6063-4fc6-9b7a-88a6e009c72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c2f52e-fba0-4517-8e29-34e7d8d9581f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85cca86-847b-45ce-b120-14076581c45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1509b146-fcf3-4f25-8348-21ebf0412af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c1e5d-3ca3-4c04-8e4a-8af2eb3ff6d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c804e0c-091b-496c-8f4d-e735dff168c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d769b01f-7a4e-4365-95bc-d00dcaa22320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0683c4f9-5236-4ce6-97be-2c28a6c2830b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a67f09b-acc4-4ce0-97b8-5e6fc2c60ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a44a4d7-b6f5-49ca-8c9a-cf2fa11bafce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd87e5-6738-446a-a09d-a3d95e8a608e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457c2203-2812-4af8-9ed2-3f0920035cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebbdc32-7555-4f36-9207-34f1826ec4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6163446b-938c-4942-ad82-e4cc6ba63010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae5e612-5226-4db4-8724-f5b4c80bc55f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3b21f2-74c8-454d-9dc3-1f4bae122dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc7aec3-e054-4e2a-909c-5d4a4ac135f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711f24e6-2742-4247-807e-8f47a0e211f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf62ac95-3cf6-482f-a323-e7969cfbaddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bca4c0-689d-4a84-bcbf-676ce388550c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aa4880-b095-4764-98ad-af34dcd10aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9d5cf8-1863-45f5-8050-38a14e1e21bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb4776c-4466-4995-97d4-b6cc96d87be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8d294e-5501-4175-843d-3e55a9793b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bf4439-a816-4631-8162-7076bb2f5537",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f90c95-4736-42da-9b58-6a172e5dd3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf6500b-2112-4e79-b848-b507ecc9a703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79e9eae-25b6-46c9-a893-e436d63f7887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c854d141-7da6-4893-882d-4eb3b53f4ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6525289-d5aa-4d44-8d91-3a4dc1d0a7c8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9a6b12-2cea-4882-bb9d-384dfd8ab879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64fbaa7-7c77-453d-bfd5-8d6aa93430c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35550628-8132-4a11-b506-de76c907206e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5146753a-5b12-4044-8021-006c82ad2f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f665e4ea-3b47-46fd-a7d3-da681eb1e953",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41ff1dd-9c06-432c-9c1d-11e8429d2089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42de7c61-7520-488f-9b0e-bce42579b5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76c8bf3-4552-4b7d-bae1-704e615867ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ffadad-48b6-4155-a3d7-ec5663c14646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c20137-da6b-4f75-8adb-dfc4ec508249",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823e95b7-2d06-4b50-8890-921ecc48a8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda016ad-e1af-4553-9256-ee3f88bb6e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fc327-dcd3-43a6-a53a-bb776b579efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20511724-40ca-4b8e-92ad-b7aa3271b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024cdbbd-7584-4d7b-a0b5-cfcd0848190e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d33b63-12a7-4cb2-b42b-dcfd2a7913c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d8be7e-b9a8-42cd-8320-0e87421abe06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc22444-7233-4967-837c-d2fede566807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193110e2-f1b4-45d1-a3e0-0300db020dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce8a253-dac2-462c-8ff4-c8c21ab0ac23",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ccc38e-5f39-4123-a558-601ff41e0623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238fc957-1615-4a4e-a0ad-e5fd916c2bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf24df-1d5d-4502-aba2-1f5229591910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9380e8-93ce-443b-9c94-f41bc7b1d22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9546016f-028b-49db-88bb-34b4065a1648",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e55b9-d01f-4a98-a9d0-7c8e14715e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa420ae-01b6-4cc1-be3b-31131d7e8a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03f5763-7dd5-48e6-85ef-1a1e5d864b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42f15fd-f7a1-45ec-a8fb-47a243588541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a03e6e3-8b2c-493e-bc57-7e379c800772",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67d9fc6-5785-496b-b682-28ccbae111ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db9b741-ad49-4859-87af-fea91f002e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8127c94-65c7-431f-9ff2-691c427a9d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b0daca-83e6-4db7-9177-077965b6bf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c4abd8-4e69-4fcd-9c70-b765490b8d12",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b41de6-bffb-4cc9-8109-8d7d3200882f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8dcb17-501d-4803-ba6b-0832b173df4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066573a1-0f0b-4294-a5a0-f3d70433d3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4707cd0-1fbc-4c5b-a363-85261789b36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6518ce-0c55-433e-85e3-fa5f1ea8234f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57069d89-1936-4e17-9330-9462f30c689f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c33f30-c364-453c-a209-5234880a885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38c8389-9c37-46af-98e3-3f8d9fe3277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdb58e8-a4c8-4e74-8aad-81dfc012941a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497ff7e-f511-4374-8e0d-09da0f481ad4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11033526-b4a0-40e9-aed2-30406ea0f21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9ad7b0-818b-400d-8679-d3b7c5e0cd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5af6136-7d77-44ae-b490-2e139655df33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac191c65-6102-499c-bbe4-bdaa8959cfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845b121c-ba24-4815-a212-8af19c7cc771",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b883e81-8a2c-4698-88fb-ad2879e46432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d0f7e6-a1c9-4b62-b373-fd7320d4e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c1e5dc-6487-421e-ada3-15011d3222f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0479643-12de-455b-9b04-8853647ddd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc4501c-641b-4f5d-bb14-1af152ee83c8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fbaea9-5727-4ecf-b51a-4ff4af925d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3225c53c-13f5-495a-a197-e8c63bdbf0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2241eb7-8154-441f-be42-487c91ba2753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391ec5c4-1b9b-4597-8bb0-e35047a31e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e1d9e-82ce-4d08-b5f9-3d1eeb1a9256",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0a030b-366f-4240-9acb-b1eacf8d1b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb806a26-0e50-430b-8566-8cab780b329c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff502fe-fbc2-4183-b666-b711f76e527b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5956cc91-3a12-4818-9327-4572a031c242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e59c64-2e2b-40c0-acbc-f31f0ea2b546",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17efbd91-d2f3-4eb5-a188-2c83f0526d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a7f432-ad94-4ff3-b815-a2de54ac4476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba56ebe-8b3e-473b-ba8e-24dea9ec2d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0885c18-8a02-40ca-8bd1-1ccfdfb8cca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a60adc-0891-4e7c-bce1-670d11949235",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d7b7d-e330-4160-a8cf-84cf9e61706a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d00817-bb2b-428b-a01e-89b4848e1996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af272087-10b0-4f6b-9673-b5ec4d430a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314f767d-4590-4213-a61f-4faf4216ae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d472d-de09-4088-8be2-652d2783b65c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af8994f-258a-4453-9c2e-911d95ebdb3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2806e9c-9983-4a69-8393-bb53b62b0310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71773d63-dd84-481c-94ff-6439b12b0ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6769015-9ad4-4d09-b980-5f35726256b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09038e59-7894-4e8b-8e65-1b1d853f6f76",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178d934c-5fbe-4a52-9cf4-c25e46baf076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81365159-898c-4f4c-9a4c-a7fafcefe9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fefb0b-0892-4758-9135-a93123c792fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2df801-c885-4acd-a70f-9e79d2f2c729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54658d61-f7c3-41bc-9665-914131bb44d9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac1a11c-1fe3-488f-abd8-26379e3abd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46518cb2-17f3-45e3-a7c1-aacdf1d8ecee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4e22a6-3083-470f-973e-196de14e4991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa395d-e162-4ff3-8836-f1ae8f31f06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecec246-cbd9-48d6-bbe2-9e469ec21a7a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f1ff69-7db6-4184-8f7b-1a9ca9e54def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f2e40b-3fe2-4fbb-b0eb-433d26706d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18285df5-2487-4d03-ba6a-5e28658d42f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20590cda-ed63-426b-9c8c-e08d675defcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3ec9fe-ef3f-4b89-9710-ec24da781638",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39df62ea-3532-4571-92d1-6b392e99b2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f48135-dbf3-44e7-8d30-0c426082d72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596deb48-7d3f-41e6-b7b9-44014a54fbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93dcd85-910a-4087-9f48-e4aef8f10268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a6d284-0ab5-40e1-8327-cb5bd5d9a0a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d88cba-eece-49df-af51-d1024d8a3951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdbdf1f-6a26-4108-8555-3e33a3f905a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c3bc5-99c0-40a2-98de-e41ff34904c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff03d350-1a1a-4924-9211-2eb1c0d9b64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba66ca-7de6-4c86-b53b-f122cb48a0fe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee16c6c-4415-4b2d-801c-4706b63789ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052cbf37-8a20-4f9f-a4ca-43873434b18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09e2409-1c34-4ec0-8c86-8b526e4bd6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b1fbc8-c647-42cd-83f2-de9d8104e8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddac3ac5-00e0-48ea-9a02-5aed1f935193",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b7e26-7076-44fd-bea3-1a2657343b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b1aba3-6d1f-466b-9fb7-bd1e6e1b1c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d7ce3-7783-49e3-8ceb-6cf97b99bcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e88884-27af-4ca6-bed7-dec63f7ae516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b48ddea-1a81-46c9-af65-0ed0a9f90d62",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fae372-a583-4dd7-b890-e2be4c802199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cbfe10-4793-4d5f-a199-ac97d8960a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017c7be1-114b-40f4-80f6-465154957281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34cb42c-56e0-4fba-93db-17cb6e9bf599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b831f1-df7d-40e5-ad62-f3174671e73d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1dca29-f305-4ea0-bb5d-0a3b4d7da042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f888450-2bd1-4703-a427-7b6956219cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c8c2fd-9c0a-40d2-b43d-5e9aaf419028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b05e6e6-da09-4d47-a6f8-fdc4b54d8578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ac5f49-6368-41fe-abfe-02d44d76db23",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7478a8e3-e9c8-4de0-a95a-3726b57793a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7640a4c0-3e0e-43c6-af91-ce26c5affe28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9565e956-a0f4-49d3-a546-a4fbce6a5480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184f97da-221d-437f-be6a-8c1e2e3f2b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a031a2-859a-4aea-9614-62b83917643a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82748d41-2ef1-4c0c-944e-331998e0a907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd561fc-9dc5-4c2b-8b24-acbe69ab5380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40492eb3-701b-433f-837c-8095e921e4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f01f26-7517-4f93-8611-a3decdf6cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199d25ad-eefd-4077-a9f1-b2c20e68d256",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4baf0e4-b8ed-4694-a93b-85c3b4225ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfda0a7-1626-42e9-9f26-aacf53e1bf36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7d7110-928c-4faf-9580-f86742858e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f96851-46ce-4aa7-ba78-a40611b63c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23acc136-7ab1-4828-8ef0-dae02043e95c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9a0d90-8741-4d68-8925-9e12df893929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314a6f4b-f904-4afe-9a16-6328b2f2a578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b9d47-99d0-4cd9-b62c-be8783d4f086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b96a504-16f2-431b-8f94-f7995aaed943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c6f8e-13ec-4c3a-a25b-658e6500de4c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd6093-7167-4134-8211-f2d9aef9a234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759bdf08-82e3-42d6-b177-98a754680143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53891dfc-02a4-4297-9aa7-45f3493d3f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc52ca0-0624-4e6b-a326-7bfa8d321044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a9590f-60dd-437d-8287-1186af67cec3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa5e06b-3648-43df-9f75-0f12257af0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42da57fa-a118-47c3-9cfd-0fc422e56f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced4430-424e-4bae-9dcb-9150d1ecd91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4408475-2bfb-4a08-a1f7-a398be0f04f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72741903-3c8c-4a0b-bb31-606b7ee46e47",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d693e1d-6711-4db3-967a-fa2ee8abb8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90be9bec-5206-416a-910a-2f091a6744bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e89c626-b69d-4a79-a22c-ec293e2df54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e3e7df-19cb-499b-97b2-64972a0d3b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9fc2c4-2760-45d4-8410-298705295fbd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79c614-7595-4f90-9c8a-ae400b6de6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d042b176-4916-4066-83ac-0909bab8c215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36554e38-d7f5-4edd-b1df-1dca6d6655a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c15c94e-dd38-4f64-8343-96249c3203e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b7b39b-bc52-43df-9b1d-e2d8a7b9f3ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b25d0e-33b6-4fa6-8e17-96bcb7121f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52cd92fa-4e71-4bc8-8475-49c67f4698cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738d9753-a412-444b-a454-dc7321e65ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3eb37b-3d2a-4e2c-9a55-03a5b4c2a8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce36629-0a2c-4caa-b7bb-747d5a037274",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455f889e-82ff-44d1-b9c5-284a94ff363c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b1270b-6661-4863-9cd5-6e154cd5a8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff693e6c-a504-4b2b-9d11-cff0e37607d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8c1516-663a-475f-bf34-1301d3d6d5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb70959-e43c-49f2-9abf-ffbd380d7101",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfb6a0-9afe-4433-8dff-10dbd51104e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97373f77-1af7-4a2b-bf87-57d4c56ce82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fabf20d-61f8-4f86-a4df-4469ed8685cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399bdb17-e699-4634-961a-0adad264a286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130d3cb8-48d7-407f-9974-1e5e3327bbc8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd1e541-9d39-4759-8e1b-0d92d822cc03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1497b8be-f8ce-4a63-87d8-4d177581d5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc44977-d013-43f4-8c3e-c55935296c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611c1011-9bf7-44d8-afda-f452b9aefc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5260c715-dbdb-43db-8c45-7a449711f9cd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d70dd8e-2fd0-4847-99a4-b136a2e9a86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1bf80f-dbc1-4313-b9c2-447dd1da12ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a94acb-5511-4744-a8ac-a1789093c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf452e1-42f5-4fce-b5b0-7c34a7648653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a7a05c-3651-452b-a448-808d26c8fe15",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1cf362-b0ac-48ca-add0-5e47bde91781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6be0836-e8ca-4ea5-89fa-03a61915e3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e0015-1a0b-4385-8c94-eee828a602db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2454595c-c8f9-40ed-a163-c2e232ac9356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad80a39-401f-46e8-9455-1a4d27f0c48a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b953da-8d19-4dd8-aef0-c3192c01af47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6b0350-8515-4974-9af3-5921fc305cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1322f-9125-4ce0-9822-d71f31942be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77140fab-bcaa-4e2d-9b06-54fb0fc8437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14401827-02e7-4985-96c7-b1e3ff1b3ac6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69506fe7-ddf1-4d54-afe0-e66fabd0bfb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee54b4ba-85e1-4e8b-9c17-be6538607429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c964ee5-b6e7-4e8d-ac1a-ec2d4d469574",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1463fa-bff1-481a-b9f4-7c9bab6ef7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbed96e-e1c6-419c-8812-01d6a3a05a53",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12fb2e1-9bf7-4286-aee0-2373b15a7bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbba9fc-fdcd-4989-b061-2c06e614e0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee604a15-1a49-4958-8692-5fe15d833ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafc56ff-695f-4309-9b62-32a36c6437bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d19d1e-e4d6-4382-afa0-8961ebdc890c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a93110-ab76-4146-b158-e78290d3c467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8fa088-8ad2-4a84-8ffb-234a6766b64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ada28d-8de3-44a4-b032-db4b966fd3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035a7caf-c9b9-4136-90dd-7c3d4bec1487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf6916-c743-4db4-88d4-580ae65636b9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8b8229-13bb-4721-8705-42c6f16e5c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fcae93-20fd-4ca5-a73e-eaeab8614d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e275a2db-4a22-4686-a917-918d8eb3f279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57a961b-7af8-4450-b905-71f48bf67c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d380ca0d-03ff-46da-87e0-898546bb7f3a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d9b9a-b9be-4006-acc3-994ed4eb872e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb92feba-1e20-4631-a633-228ceb14a18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c43f3-e49d-43e7-a02c-74e8b04b66a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352963d2-1d22-4950-a101-f29d8d6e75ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a95650-4c79-49b9-8688-3e16e96b9fcb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c773296-f4c8-42d6-a3a1-a55f194eb067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02120af4-ec98-426e-9e0e-afeb7af6769a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e28569-0cc8-42ac-8654-85895a3c1876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4536cad-d53b-460c-bc9e-b5dd47867b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304f69f4-fe8f-47f0-923f-7d74eb9f0a41",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b2c410-ea48-4b15-bfa1-c64c8b3a90bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e85850-037f-4f54-895e-d312bfb63dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa924ef-b0ab-471b-b629-a5aec3c5971a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ce841-6a97-4866-99f5-641cbd506aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dab6b00-ef4a-4bd2-90c5-e85c2d4dc476",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ff973b-0daf-46b0-9818-5fa3c900a423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f768e772-1aaa-45c0-b6cf-d622b9d1cb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf3df8-2e7a-49b1-ac16-9e7eed842b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67096450-e11c-4225-97b6-a832998812b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "461939f4-7565-431f-bcb6-7850609fbbfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c6645a2-42ec-44d3-a450-9f30d1bcdea9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72aa6f6d-f214-414c-b108-0b9609bd0b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12452ec1-f3fc-4e53-95b1-6496b888d3d7"
                    }
                  }
                ]
              },
              {
                "id": "eb9699b9-25f4-4997-943a-bf346dc9c20f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee5f391b-397b-48f8-9079-758398d1bf27",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25068e0c-8d65-44fa-ac57-e0b0a0525db2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9dc184b1-ed50-43ec-8756-950509d48508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2b7e1f-82f2-42ec-9553-384c52c83b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efbd273b-3932-453c-9d1f-0a349057b678"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6829219-84e8-40c5-aa19-8e2234f271f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01b27af2-f39c-4225-ae51-a6ffc07e9004"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "088b0395-b2e7-4978-ab93-4ab717870efd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8617b0-0dd5-4c95-9103-66604953d9ce"
                    }
                  }
                ]
              },
              {
                "id": "ebe7ee08-4dd5-44a4-bd37-ac13ee091057",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "25a5d1d9-a369-49dc-9e10-dbc73714565c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899a541e-a8cf-4939-99b3-1da1e2ef8154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e253a390-3580-40fb-add8-3b79fcb2d5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d552caab-396b-431d-9135-f2794237336e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae765bf-f2ab-4a08-a104-8a431793ca66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7b41a09-f4a0-4148-9c3f-11f63342fa3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50043caa-1c14-4b1d-820e-2abcd74d082e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4710eb15-ae91-4440-9c68-ad2fc72b410c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "689df6ba-33a3-462d-a0e6-30b985b2e557"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "977a25f3-48dc-4b5d-a793-961464d58611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9669d5cd-54c4-4975-aee9-33bea4a2872f"
                    }
                  }
                ]
              },
              {
                "id": "068dde7a-ede4-4c8c-92a0-4fa69e56ebf6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06d47e21-107f-4c89-b52f-c3904daade35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57da9ffe-5ade-417b-873d-5e7d5aca6c0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f691918f-9b9c-4b22-bf72-ec3d51313b8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2975cb2-3c70-4ca5-8738-489b565b569a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1989ae31-1a2c-4702-abef-01384a472fda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bb623cd5-1448-4a04-b274-d14032e73b2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62303f92-75f1-4a33-81df-12416b3a916e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e796f66-094e-42dc-afa7-058f5e552d58"
            }
          }
        ]
      },
      {
        "id": "06029bcd-8a68-48c9-bcce-43f443f7cd6b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c58c4c3e-4145-44ed-bd8d-8aa2729e2de8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d552a46a-e7ec-4ca1-b9fb-83f4b4b0e6a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e74aa9d4-1809-4619-93b7-d3b875148e78",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e2c0d5-38a1-4312-9e1c-4753f35d657f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0564581d-4174-4a25-bbfe-e54c23b4c06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a96b32-9daa-4d6f-8dc9-92e5da8adef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8e7dc89-31f7-4496-a9ac-edeb41c54fb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d806b266-a6d7-4391-a047-ae1bcbcc6210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f4ff6c1-1fdc-47d2-971a-18ab4a0ae6cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66572321-4ae6-4f6e-acd5-a34d118a723d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa5cbabc-0b71-44a9-9587-e5fbdd79c780"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c26eb4-2e2d-4808-80c5-c5a5c7313eec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f11c4ff-27d9-4010-819e-b01f232ba201"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82d170ce-9ca1-43c4-a3a3-4e706c02fd5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5aa1d852-ad07-4ceb-967f-9eab6df48dd8"
            }
          }
        ]
      },
      {
        "id": "6b342770-d01e-4003-bed4-03868da308a8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1f0cbb55-8a0f-40af-b2bc-e24388ae3c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be468014-ab8a-4522-b8ff-556559a82f9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af1966be-05cd-4d7b-b5e9-1cd196990cfc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d24b6e8-fc99-49d7-bbf1-50bd8e61a28c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4cf814f-78da-473c-9d0d-d04feb5a6f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b1aba-57c0-4951-aca2-4256b96dbf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d04ada7-2d8d-44f7-b52e-023eb0c0af58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47a7a62d-8c46-4736-9995-9599b60edf57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c18b7945-f792-4e2a-be98-9d5dac5ca414"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a62e94-f37f-4bf2-a343-ecf8151feaf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d22a4b4c-9800-4575-9782-a65d730d8ce6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6503df0-a116-46f4-982d-15f5bf136f90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97b0a355-2756-49ce-aa9f-a869dfdde126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4ceb568-5c42-45e8-906b-7a16c1c1ce22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "733304fe-295b-4896-b2a0-af7ab30ebb8d"
            }
          }
        ]
      },
      {
        "id": "03a42a3c-502a-4acd-9b89-afad29c741d5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c7f9cdbc-fefd-49fd-953f-0486b1625e17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09886d54-d0e9-4382-bd2e-9daa15b13854",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c852fff-aaeb-4541-8ae8-32a7902b996f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f81c10-22f0-4ac6-bc2b-08f829f2e81c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "666c878a-e4b5-49ef-8e4a-6e19e2a14916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8922cc2-6bae-4711-8856-20b0a5fbfc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9239ef16-4695-48a1-80b5-3280019b3e54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf81119b-28fb-4d52-9375-0e58ce00ef42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75bf4918-01f7-4f3a-828b-3678616d49ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a8cc14a-f4f9-4f04-978e-7f6a0b15f70d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43e689ba-a8d3-41ae-aade-436e1acf138a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "212ceaa8-5fca-4ad3-8b77-de6b3c0433b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "146cae82-285b-49bb-b0a1-6136a9a2576d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18f8d6fb-9c57-4ad6-883c-0085569dcf0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "254fe628-f9e0-40db-a5e6-17a0f72982ec"
            }
          }
        ]
      },
      {
        "id": "cfc46a08-f0ce-4454-85d3-5518004330e6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14bf653e-1384-4bf3-b3b4-fd2339c2a377",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d92c762-ff84-4165-9e02-0466f5602a0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fc3f2b48-41db-4076-baad-bd3374225b54",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "395a531c-8887-486a-8fd2-b3a1eb6426f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8f72d7-c07d-4d6e-a5a8-21c9184b8b11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.10915492957751,
      "responseMin": 17,
      "responseMax": 292,
      "responseSd": 21.867045128826582,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696552412679,
      "completed": 1696552434002
    },
    "executions": [
      {
        "id": "26ed8253-0f20-4523-b1b0-14761c577f85",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c9f969b-6c63-4797-91a3-019493547f34",
          "httpRequestId": "b2a4cd41-6af3-4b99-930e-587a593fca46"
        },
        "item": {
          "id": "26ed8253-0f20-4523-b1b0-14761c577f85",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d723fec-5c86-4bc2-a1fc-b0f5c5a91876",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "8b67e018-00d1-4a8c-b68d-a0c17b328814",
        "cursor": {
          "ref": "04e0ae24-8a17-4d87-8848-bed2c470bf68",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "308ffb59-8f0b-4824-8008-ed48c8a28fcb"
        },
        "item": {
          "id": "8b67e018-00d1-4a8c-b68d-a0c17b328814",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bef84490-1330-4408-aca1-244972c6003c",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "f1e5c217-80b7-47b0-ada6-89ca274a8b29",
        "cursor": {
          "ref": "6763e911-8621-40c6-9b23-6d8cdbef706c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4d1ab3ce-0a95-4a85-8a51-d3b09451883a"
        },
        "item": {
          "id": "f1e5c217-80b7-47b0-ada6-89ca274a8b29",
          "name": "did_json"
        },
        "response": {
          "id": "fc221d2c-a095-4d7c-a8b5-6969b258d8ea",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d27ca7e-9da4-4d76-9de4-c48914717017",
        "cursor": {
          "ref": "fb9a9ddd-cfba-4a9a-98aa-80775dcb185b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "165edf86-be9e-4a05-ba48-368ad1229bf9"
        },
        "item": {
          "id": "8d27ca7e-9da4-4d76-9de4-c48914717017",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ff5680e-2673-4bf3-8b96-e11feca18710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d27ca7e-9da4-4d76-9de4-c48914717017",
        "cursor": {
          "ref": "fb9a9ddd-cfba-4a9a-98aa-80775dcb185b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "165edf86-be9e-4a05-ba48-368ad1229bf9"
        },
        "item": {
          "id": "8d27ca7e-9da4-4d76-9de4-c48914717017",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ff5680e-2673-4bf3-8b96-e11feca18710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6501c05c-a9fc-420f-abf5-f0d50ece8d05",
        "cursor": {
          "ref": "361b03cb-ca00-41b5-a53f-0de10c19eeae",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "48236610-3b37-4858-9d03-29e81d471383"
        },
        "item": {
          "id": "6501c05c-a9fc-420f-abf5-f0d50ece8d05",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "74ea052c-137a-4849-a3be-905a5b510944",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d76bef3-8792-40fa-94c2-d62297f19098",
        "cursor": {
          "ref": "04ca8c5a-3500-4e70-b16f-5685f595a1c1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24438f8d-7b98-4f51-9046-9c3bcc3c5bee"
        },
        "item": {
          "id": "8d76bef3-8792-40fa-94c2-d62297f19098",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7f986913-662f-449d-8b5c-a3488b788d4f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5cbaf2-65c4-43e7-ba6e-2362966f369a",
        "cursor": {
          "ref": "3283d303-1e9f-4dc1-8fbc-25da8e84ed68",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d51cecef-838f-4634-8a74-fb427a6cc74c"
        },
        "item": {
          "id": "cb5cbaf2-65c4-43e7-ba6e-2362966f369a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0ba72675-df71-46ba-baa1-f532607adcb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3533adda-c5ff-4537-83d6-fdbde4833a97",
        "cursor": {
          "ref": "d1e7c665-0002-46d4-a839-0f90dd994bdd",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "05240341-4a87-48e5-8183-f759c0c6527b"
        },
        "item": {
          "id": "3533adda-c5ff-4537-83d6-fdbde4833a97",
          "name": "identifiers"
        },
        "response": {
          "id": "c16a6e2c-c378-44c8-b377-b975afdce734",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa885308-3956-4452-9822-31d13dbfdc29",
        "cursor": {
          "ref": "7529a333-28de-422b-bf31-fd1669c35338",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2beefb15-b685-4218-ad0c-8108ac168dd2"
        },
        "item": {
          "id": "fa885308-3956-4452-9822-31d13dbfdc29",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "88027c21-f68c-4dcc-80dc-f689251f2af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c66272-5b91-4c04-80c1-11ddd510ecd9",
        "cursor": {
          "ref": "e9cc64c0-4023-4a29-ac42-e044e7fe459d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a557d078-76da-4f73-bbe3-82d3d17b1984"
        },
        "item": {
          "id": "82c66272-5b91-4c04-80c1-11ddd510ecd9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3f3c33d5-750a-4733-8312-5a598353b312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2547febe-4299-4901-ae9d-a3269b07ec10",
        "cursor": {
          "ref": "8a702adf-f81d-4b8f-9ad0-5185442c72fe",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a4d258e5-431c-4df3-b134-be710b322101"
        },
        "item": {
          "id": "2547febe-4299-4901-ae9d-a3269b07ec10",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5214df66-7752-42f3-b6fd-6c74ac61f35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f503b-3a40-455e-ad81-e0471ef8d23c",
        "cursor": {
          "ref": "aca36589-7747-41c4-8983-511579ea9a23",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "539e7531-ebd4-4a5f-be5d-a0bb1b185c5b"
        },
        "item": {
          "id": "108f503b-3a40-455e-ad81-e0471ef8d23c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "172cd3a3-8183-4a91-b7c7-4efc69b9423b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e5a0d-1850-407d-ba78-3d9ada363c0f",
        "cursor": {
          "ref": "2cba349b-ab4f-47b1-af76-80dd888011f0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da8fe964-09a9-4bfe-876a-6af42987ef37"
        },
        "item": {
          "id": "996e5a0d-1850-407d-ba78-3d9ada363c0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d651e090-9274-4e54-9c88-d53316a43f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd9d01-943d-49f9-836b-d166c424b9fe",
        "cursor": {
          "ref": "b4590bd7-36ad-40d8-bc89-3abea5c07c21",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "606319ca-0964-4b78-b39c-77e115b5ddda"
        },
        "item": {
          "id": "18dd9d01-943d-49f9-836b-d166c424b9fe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "84826280-6cc8-47c0-a386-3e0fa968b7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718a6f83-3788-437d-b804-c9e4a9f35d3b",
        "cursor": {
          "ref": "3b072702-daba-4e45-8769-51a18154b51b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9ec6d32-d827-42a7-b03f-d7c342dc6633"
        },
        "item": {
          "id": "718a6f83-3788-437d-b804-c9e4a9f35d3b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dcc41402-fa0e-4049-bd32-c819fc398b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a136a903-ceee-441b-9a85-13cf73e317b2",
        "cursor": {
          "ref": "c0265f4f-a55c-426f-aeb5-d6bdf8e4744d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26df7302-7aa7-478a-a7d6-02710502b90f"
        },
        "item": {
          "id": "a136a903-ceee-441b-9a85-13cf73e317b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "64c5c23a-d214-4793-9744-b509def393c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce383094-4164-4235-a32f-0dec72a108b7",
        "cursor": {
          "ref": "ef1b0159-449c-4c79-94a6-35b9788aa3bc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c08026e9-c9fd-4e08-92ac-267808468851"
        },
        "item": {
          "id": "ce383094-4164-4235-a32f-0dec72a108b7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0610f4a5-679a-4ce0-b2e2-359223fef663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53510646-860a-49b9-8425-e321b4c42911",
        "cursor": {
          "ref": "2f0061f6-dd59-4a1d-9995-e78bf34c9cab",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a8042fd5-5bb8-4c63-af75-dfb0b2d7e091"
        },
        "item": {
          "id": "53510646-860a-49b9-8425-e321b4c42911",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3231654d-31f2-4df6-9bdd-f5438b844624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277a455f-ac54-434a-a7cd-5398afd20fb9",
        "cursor": {
          "ref": "7e45fd16-2648-4237-b97c-935e8aaa4b8a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "907050cf-a0da-44db-a549-8a2e8d7f7403"
        },
        "item": {
          "id": "277a455f-ac54-434a-a7cd-5398afd20fb9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6e45b7d3-2e47-4ee9-acc6-cccf049f414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd6385b-a87c-47e1-872d-84eba62a36dc",
        "cursor": {
          "ref": "497ed015-c695-4362-9169-4b96f42f8a0f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7848c529-1b2a-4c56-8fba-a80d946b6a4f"
        },
        "item": {
          "id": "fcd6385b-a87c-47e1-872d-84eba62a36dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "478a444a-81a3-4af6-9ccb-0d1e6cd61a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37adb560-db1c-40ff-a69f-ca50aed0c0fb",
        "cursor": {
          "ref": "d36c5757-04bb-4743-b824-bfe0649377b3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "25e3e85e-6db1-402f-b9af-6ede6c1a0d12"
        },
        "item": {
          "id": "37adb560-db1c-40ff-a69f-ca50aed0c0fb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6a7d8712-1a27-4b70-a81f-66be251cf31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8235dd9f-a0cb-4363-bd8b-0c8e6717817b",
        "cursor": {
          "ref": "6775a5a0-491a-4bb3-b4df-d827e61c489e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "efcbc9d6-2ce5-44ea-9ce1-0f9f3f14e5ad"
        },
        "item": {
          "id": "8235dd9f-a0cb-4363-bd8b-0c8e6717817b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70d942f8-0d04-4720-8f4f-247ec88653bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bbc475-b9ce-431b-81ec-bf9c18162f70",
        "cursor": {
          "ref": "e672f5ff-c36b-4ce0-93e0-68ae907464dc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8d1f2ca7-143a-4aed-9ee4-63a2f808c447"
        },
        "item": {
          "id": "b6bbc475-b9ce-431b-81ec-bf9c18162f70",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7af9d1c6-11b2-49da-8113-6f0ce0fda4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75964b30-c642-4fbe-a671-216cc217bede",
        "cursor": {
          "ref": "d64c6e55-2516-4519-8feb-a7c98e0392e3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c678fd7-2486-468d-8bf2-75e4ea0c23bb"
        },
        "item": {
          "id": "75964b30-c642-4fbe-a671-216cc217bede",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a543f572-8e3b-422a-b1ff-bce720d17ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03694b4d-56f5-423c-bdee-aab11aea233d",
        "cursor": {
          "ref": "ecdfd4a8-e0b0-4824-8181-38b88d1ed3a2",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2683b456-f5a6-471d-8075-be938200ee2c"
        },
        "item": {
          "id": "03694b4d-56f5-423c-bdee-aab11aea233d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b304ab40-680c-416f-82aa-23adf958cfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466885e6-f6df-42cc-a1a3-0fc025eb95aa",
        "cursor": {
          "ref": "90d9e824-c495-4f78-a600-ed06c191705e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ff85f662-bacb-4709-8135-7ab198ea9898"
        },
        "item": {
          "id": "466885e6-f6df-42cc-a1a3-0fc025eb95aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10fa443e-fdcf-4b48-869b-05bff23ef2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da98cdfe-21f8-48d2-abd2-6dfc423ce731",
        "cursor": {
          "ref": "ae55d55b-12ce-4bf4-a95c-db1e20b9de90",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fd268274-fac4-4d35-b726-f0b42349286c"
        },
        "item": {
          "id": "da98cdfe-21f8-48d2-abd2-6dfc423ce731",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b4e5df0e-c6d6-4465-b68e-20621b525061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d782302c-3b16-4198-9346-a9dde6d2a38e",
        "cursor": {
          "ref": "71809370-2477-49e5-be58-76dca9e91e8a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3fd05b49-ebbb-46d8-9833-0a73169eb0b0"
        },
        "item": {
          "id": "d782302c-3b16-4198-9346-a9dde6d2a38e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a42a18a1-673b-4caa-acd0-ce66ad94024c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f732b9-3ac9-475d-987c-f2a12d64f090",
        "cursor": {
          "ref": "724f9faf-0d01-4eea-a07c-6c34d1505b20",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "09b34292-4e22-4482-89b7-ccc8e98fd389"
        },
        "item": {
          "id": "73f732b9-3ac9-475d-987c-f2a12d64f090",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "211fb3e5-8a5f-46e9-bd1f-7d0faf72e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3599a530-b942-4b40-8018-d48989682abb",
        "cursor": {
          "ref": "3ff1b322-b9da-4525-9350-8e42ae5333ad",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "64214e75-381f-44c2-86a3-7f856a446471"
        },
        "item": {
          "id": "3599a530-b942-4b40-8018-d48989682abb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "81391b75-ee91-4ea4-a1c9-7a93f4db0e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a0ce68-067b-4fee-af97-916b7ef87196",
        "cursor": {
          "ref": "f2852d7b-3e51-4196-8ec5-7ce998859e33",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5b9931aa-f6bf-4632-9452-1d85898be695"
        },
        "item": {
          "id": "88a0ce68-067b-4fee-af97-916b7ef87196",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8642d510-7457-46c8-997c-2e02483333ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f3dea0-ec4c-440a-affc-e41f333922b2",
        "cursor": {
          "ref": "2adb28d2-e9c0-4878-a4b0-db899960e6f8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8113318c-d6f8-433d-be45-090dbb85e574"
        },
        "item": {
          "id": "58f3dea0-ec4c-440a-affc-e41f333922b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dcb9cbda-f593-49d1-829e-5cae7bfe681b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b45370a-a42b-4908-bf71-b64dd93eae1d",
        "cursor": {
          "ref": "6d5debcf-a7e2-4623-8369-4a8610f7bbae",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b6c98a87-e3de-4aa5-a7f0-2e260c73a096"
        },
        "item": {
          "id": "2b45370a-a42b-4908-bf71-b64dd93eae1d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "660ddedc-d85d-43b4-ae32-498cc1ecb856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc5062b-ebee-4d4b-8e3e-afcbb1326f18",
        "cursor": {
          "ref": "b6171b5f-886b-47cd-b8ea-ab2e2401fb0f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae59e9f5-8858-4faa-948b-be3ed34e243a"
        },
        "item": {
          "id": "bfc5062b-ebee-4d4b-8e3e-afcbb1326f18",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "225f3de2-9446-4b5a-beff-a378b5ac56e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa72af23-1318-4093-95e5-164c216b2c58",
        "cursor": {
          "ref": "719b3a71-e833-4d03-bf11-1f3bc489db31",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b52b9b56-cf9d-46d2-b85f-920495aa1e3a"
        },
        "item": {
          "id": "fa72af23-1318-4093-95e5-164c216b2c58",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "354a8542-270f-4bef-a0bb-f2c3cf99c1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6372cb9-cbd3-4f05-8bfe-cb875f08cd87",
        "cursor": {
          "ref": "41af67bd-ce62-4df6-a74f-cfda822a8120",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "29694c35-eb7b-4769-901a-03cc0f131950"
        },
        "item": {
          "id": "f6372cb9-cbd3-4f05-8bfe-cb875f08cd87",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b4440082-b068-4c76-a940-01a159244c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3f7703-24f0-4fa9-ac97-11e170308444",
        "cursor": {
          "ref": "56e97012-6c22-411b-a233-6dca00b0596b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cf4c7cc6-d3c8-4fbe-bec7-ad0c0fe47e1e"
        },
        "item": {
          "id": "aa3f7703-24f0-4fa9-ac97-11e170308444",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "28b884b4-2edf-41d1-80e1-079deb926572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675bc3e2-ff9c-42a7-9cc4-116e00392e86",
        "cursor": {
          "ref": "14a1f0ae-153c-4214-bf7d-0c39f9bb36b9",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1920d082-afff-447c-a5d0-4fec3aed0fc3"
        },
        "item": {
          "id": "675bc3e2-ff9c-42a7-9cc4-116e00392e86",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "906f666a-0c71-40d2-a674-d8744dcf68b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940cc80-3afa-4ee2-9e8b-221b7d7108fc",
        "cursor": {
          "ref": "39b9dc24-2568-4979-9b4d-c30f3e98502f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ac3e88f0-7002-44f1-af8f-73e25030435f"
        },
        "item": {
          "id": "d940cc80-3afa-4ee2-9e8b-221b7d7108fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8d3326bc-aa49-4cdb-9169-bdf64bc0b990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b9a06-b959-4615-8e59-fe4a6bbeff5b",
        "cursor": {
          "ref": "884a2123-ebed-4227-9751-876c72851c22",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8866fa3e-307e-4518-bb62-1208ce1fed8e"
        },
        "item": {
          "id": "582b9a06-b959-4615-8e59-fe4a6bbeff5b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f746ec5-622c-4479-80f1-55c277529f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a20156-3e30-4032-b7dd-749458623846",
        "cursor": {
          "ref": "054322e1-6183-4eaa-82ab-08f514c91bf3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "43f238b8-6226-4657-9b12-929489ece47b"
        },
        "item": {
          "id": "57a20156-3e30-4032-b7dd-749458623846",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "985979bb-871a-4b10-aa55-613fc59a9299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a717666-6078-4ae9-9de9-8c339b3015b9",
        "cursor": {
          "ref": "19fca470-971f-457d-ad6a-86a30f73e51b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a91fb897-4463-4e3c-803f-ffccbfeacf47"
        },
        "item": {
          "id": "7a717666-6078-4ae9-9de9-8c339b3015b9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1d99c6a1-c32c-4b43-929c-1b3d213aa684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a5375e-65c5-484d-b2c8-5e353e7328c6",
        "cursor": {
          "ref": "513bfcde-3e03-4ed5-a8db-521dee638594",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f9b20024-d658-4312-9871-e1f81180d1cc"
        },
        "item": {
          "id": "e4a5375e-65c5-484d-b2c8-5e353e7328c6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a33764e9-a18d-4131-a9fe-0720a0424622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e98bb7d-046c-4184-b144-591e77ab1de1",
        "cursor": {
          "ref": "fe76ea57-7de6-4757-9b6c-9be51275d576",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29ade503-be43-44e4-ba6f-d5891756d692"
        },
        "item": {
          "id": "1e98bb7d-046c-4184-b144-591e77ab1de1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca06e2be-7548-4668-936d-20b825745aa1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71fda80-f65f-4d80-a203-bfd295909f3b",
        "cursor": {
          "ref": "524a0635-a0d8-4095-8225-b7d4062260f0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa7f8e84-b295-4bc0-9b31-21a224592287"
        },
        "item": {
          "id": "f71fda80-f65f-4d80-a203-bfd295909f3b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3c361623-0093-4656-bbb4-9dd78d17aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b7750-6b4d-4757-a783-7310b5e74c36",
        "cursor": {
          "ref": "2523ef8f-fcc0-4b87-85e5-8a475501df8f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bd91c2b2-2aa1-44fe-a6a7-392ee49fb27d"
        },
        "item": {
          "id": "2e4b7750-6b4d-4757-a783-7310b5e74c36",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0fa5c204-ebee-41ca-8b8b-ba59ee6b1edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8aef25-ea89-451d-8de3-259857f87649",
        "cursor": {
          "ref": "2749d772-90f1-4605-888f-b3b1cf22fd34",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9b8387cd-b8e4-4da8-97e4-6e3968ec3fe3"
        },
        "item": {
          "id": "eb8aef25-ea89-451d-8de3-259857f87649",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8618e7a4-5e66-4689-af79-ae76d5ddfdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e52654-c539-4346-9b22-35a7132fdddd",
        "cursor": {
          "ref": "57d5cfcf-b07a-4cbe-a4a9-5fdec938aebd",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a4abc22e-6ecb-4ea0-84c3-2d27b2e995f2"
        },
        "item": {
          "id": "59e52654-c539-4346-9b22-35a7132fdddd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db41fae3-9acc-43fa-b948-adb39bbc0a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7000ec-e122-4d79-af2a-2d0ac5b68498",
        "cursor": {
          "ref": "a70a8dbb-348e-4771-b3cc-a0614b6787a5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dada1bbe-d6c4-4796-83ab-8cdfeac2b67c"
        },
        "item": {
          "id": "de7000ec-e122-4d79-af2a-2d0ac5b68498",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5dc6cd9e-c3e4-4ab7-a34e-c8df205197c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d352d1-3dfd-40a9-b0b7-1bef6cd74643",
        "cursor": {
          "ref": "900d83d7-655f-4a8b-9c9b-69cf3e4c0fc1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4e5d1e5-1b4e-4217-880f-f9fe82bb9d69"
        },
        "item": {
          "id": "22d352d1-3dfd-40a9-b0b7-1bef6cd74643",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e035eb8-c52b-466e-a924-d3fe9e1e3802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22bb8c8-3805-4c92-aa81-3cc73ca11d49",
        "cursor": {
          "ref": "5e4f27fe-f6b9-41e0-ac76-9e41cd79cd59",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fba66a94-db16-420b-913d-f121e6571585"
        },
        "item": {
          "id": "d22bb8c8-3805-4c92-aa81-3cc73ca11d49",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "28c9b58c-7bf4-4b0b-9b45-1bbb20dedea5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af25068b-2e74-4358-b65f-79c1ea845e01",
        "cursor": {
          "ref": "52bc4074-57a9-4802-8e7e-be2c47ca65e9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5815df54-41b3-47de-9f89-49bac3091d47"
        },
        "item": {
          "id": "af25068b-2e74-4358-b65f-79c1ea845e01",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "891bf216-aabc-430d-9741-e59a4577d527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d423d0b9-98b0-4a0a-a945-1677d91849a7",
        "cursor": {
          "ref": "835d8b94-05fd-48a2-bb8e-c97cb229f798",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "44d52a17-a215-440a-92f0-420db0fb8bbe"
        },
        "item": {
          "id": "d423d0b9-98b0-4a0a-a945-1677d91849a7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7255b171-4f47-49d5-a761-19561570b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af5ee43-774d-4d45-9480-9306fb68a8eb",
        "cursor": {
          "ref": "49325b1b-3d39-43ae-aa46-ba6780b84bf0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b85de9aa-e9bc-4eee-a670-272fe4ea64d0"
        },
        "item": {
          "id": "0af5ee43-774d-4d45-9480-9306fb68a8eb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d8381149-af14-4a8e-9e5c-d5e8472eb472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50631f0a-32ac-4993-804e-49a2c0958ec9",
        "cursor": {
          "ref": "0edb9eaf-f3c3-466e-94dc-e92008c8ebb3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e3addff0-2374-4ec1-9845-a84aa21c717a"
        },
        "item": {
          "id": "50631f0a-32ac-4993-804e-49a2c0958ec9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4e112227-68e0-4fee-8ddc-7857900fc814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0cf3a6-166a-4b1b-8419-f5f6464843a0",
        "cursor": {
          "ref": "4143269e-a7b6-4444-bd76-671aba8f3e21",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "147c2311-5d7d-4cc0-b0d2-ae82e897e247"
        },
        "item": {
          "id": "ef0cf3a6-166a-4b1b-8419-f5f6464843a0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e7b3355e-ca4d-49d8-850c-ec015464e926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f0f5c7-5ade-44e4-9bac-a8a02ce232af",
        "cursor": {
          "ref": "ba79b155-1db4-41fc-8015-8ab31c423267",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b313de7e-dd92-4b87-a351-00ebc4787502"
        },
        "item": {
          "id": "38f0f5c7-5ade-44e4-9bac-a8a02ce232af",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3c5ee662-9d36-4fc8-ae2a-eb8e18d79159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8def35d9-09fb-4716-84c8-8bea5d1253d1",
        "cursor": {
          "ref": "037e06d2-d1d7-405d-8c9b-36b263bf623f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "790ce599-6d60-4133-93a1-d3b5a9bb98e3"
        },
        "item": {
          "id": "8def35d9-09fb-4716-84c8-8bea5d1253d1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ffaf52ac-8eee-4084-8407-5068124b6bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1de7d8-9201-4e1e-a9a2-56b4c6dec8e6",
        "cursor": {
          "ref": "19f0f77d-ecae-409e-8c31-798535f5f0e4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dab470ab-cb93-44bd-946e-1783d8ddc1fb"
        },
        "item": {
          "id": "9a1de7d8-9201-4e1e-a9a2-56b4c6dec8e6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "072abe9d-16c0-4ffa-afa3-b071806fae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9a2200-7654-49e4-baf5-e10d88fba073",
        "cursor": {
          "ref": "5eeb278e-964c-4b15-acfc-fc4365771748",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "84d49e04-4de1-49ad-a8d0-df750d0c8d1c"
        },
        "item": {
          "id": "4c9a2200-7654-49e4-baf5-e10d88fba073",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d73a9f33-cb55-4e54-b750-825b5d450e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ffc6df-0bd9-4c17-9120-019eb453cc35",
        "cursor": {
          "ref": "7b9b7bac-3f4b-4eab-844b-b366f7c8fddf",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "015d2415-c451-4b5c-9d0e-f28504b4ae07"
        },
        "item": {
          "id": "99ffc6df-0bd9-4c17-9120-019eb453cc35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e016f139-4f7a-42f3-a8c8-4c110f091ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd58cdb-d046-420e-81bb-10a3028b6ed1",
        "cursor": {
          "ref": "0982c5b4-6060-4bbf-912e-799ce599d4d6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6f1e5e15-1716-4b02-b8f0-ef21ac0d7257"
        },
        "item": {
          "id": "5cd58cdb-d046-420e-81bb-10a3028b6ed1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4772f3e1-a3f9-4a54-8595-ad09b41cb762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947f5f10-8beb-468c-897b-5fbd48a2becc",
        "cursor": {
          "ref": "fab087eb-b27d-4cfe-9e39-5c2beaf52e43",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "57e97a07-c97d-4d99-9f4c-f517d0a0dad6"
        },
        "item": {
          "id": "947f5f10-8beb-468c-897b-5fbd48a2becc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b1876378-8bcc-4871-8be6-93ad1b443145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2ea879-b503-45ea-a90e-cc3dcf669960",
        "cursor": {
          "ref": "f92ee853-eb90-46a6-ba1a-9ac35b4e3ab1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2253e508-4347-48f7-8a3c-a25adbc09f8e"
        },
        "item": {
          "id": "ad2ea879-b503-45ea-a90e-cc3dcf669960",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fffdbdb7-fd81-437b-a00a-29a01c945855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa91faa-16ad-4396-a65a-b33ffe270ad6",
        "cursor": {
          "ref": "423a07f4-6e72-4317-abbb-d67b76f55e77",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cc673b0b-50c4-4c01-bbf4-72eab2f8e3d8"
        },
        "item": {
          "id": "efa91faa-16ad-4396-a65a-b33ffe270ad6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94cc51ad-ccaf-4588-8e96-43ef5d4506f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063c8027-fcdd-482c-8610-e2077ec4bcbf",
        "cursor": {
          "ref": "c9a2f982-5d27-4b94-bc5b-d5d17de7e4d6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cfe30ae6-b8b5-4699-99f6-e02dd2ff6766"
        },
        "item": {
          "id": "063c8027-fcdd-482c-8610-e2077ec4bcbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8dfea7f5-0b15-447b-b0c5-da88f8d44c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e465b4-ecd8-4856-9aa0-de337455e3d5",
        "cursor": {
          "ref": "717e188f-4671-46cf-a7c6-48df42d96b0a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e57d36d6-c9dd-4bd9-9ab9-dfbe5cee13f6"
        },
        "item": {
          "id": "81e465b4-ecd8-4856-9aa0-de337455e3d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "53e6837a-8cd9-4fa3-adfe-646df3db2433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fdf0d9-60eb-482b-ab9d-9692e4ad6475",
        "cursor": {
          "ref": "a9a38a58-79d9-4cfe-8435-e81da152437b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b0565029-fd32-454e-9fb8-f31bf326681a"
        },
        "item": {
          "id": "e5fdf0d9-60eb-482b-ab9d-9692e4ad6475",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8f979eed-51b2-440b-b180-f01928b72410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a272007b-f949-4dbd-a06b-0d03b396d06d",
        "cursor": {
          "ref": "668272bb-11a5-4f89-9a95-32fa9fa7a120",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c94da803-f286-4ab1-9e24-bdc86595db00"
        },
        "item": {
          "id": "a272007b-f949-4dbd-a06b-0d03b396d06d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27968b13-0a96-45ed-ac21-f953cc3d4f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64549583-002a-491a-88e3-1508454544cf",
        "cursor": {
          "ref": "6e06d890-ed7e-4aba-bf7f-5c5119398db3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d53559a-3e3b-4a78-8ef1-0d3dd12322e4"
        },
        "item": {
          "id": "64549583-002a-491a-88e3-1508454544cf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b3057f82-fd55-4195-a4e1-cd326ad3e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38912d76-e94b-47ff-9e13-4a2335384a23",
        "cursor": {
          "ref": "5281598b-d2ab-4c37-89ef-9c9cf01a1aa9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fb366a71-9352-4821-a570-538fd6cd2362"
        },
        "item": {
          "id": "38912d76-e94b-47ff-9e13-4a2335384a23",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f0871e3-e152-4ab3-ad1a-a7b016e67e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a3a27-8b85-45ac-94f9-0664883d9c56",
        "cursor": {
          "ref": "ad2d620f-76f2-4451-9ac7-c3eb83fa0aae",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16795813-846e-4400-8324-36cd0bf0d4ed"
        },
        "item": {
          "id": "b04a3a27-8b85-45ac-94f9-0664883d9c56",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5e7ecbb2-080e-4c5a-ac9f-214858aa8a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c293c833-aa87-4a8f-9da8-da2d043c7037",
        "cursor": {
          "ref": "55c73ea5-2acb-4676-a70c-29e1190c4816",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b280027d-a52c-48c4-a0ef-2cd974f6f7f0"
        },
        "item": {
          "id": "c293c833-aa87-4a8f-9da8-da2d043c7037",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3571fdc3-e379-479c-9b48-4fdfa6200010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082c5155-888a-4c9b-8233-1aa93b533374",
        "cursor": {
          "ref": "38e00b16-604c-4e0c-9c6a-5f9f4515c4a9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8025ed91-45c6-4e0b-b99b-c6dd20e8f446"
        },
        "item": {
          "id": "082c5155-888a-4c9b-8233-1aa93b533374",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f8032e97-ee3f-4fe3-ac47-48406a0d47d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8ba770-9776-46b3-864f-17840d8fb616",
        "cursor": {
          "ref": "d666b4ac-8400-4020-bf54-9a126c699c02",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "17a501fe-c39f-4e7e-91b9-12f95be35bb1"
        },
        "item": {
          "id": "2f8ba770-9776-46b3-864f-17840d8fb616",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8e79174b-ab2f-4e9f-b7e9-673c7faa88b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d7043-7955-477b-81b3-69977d531a70",
        "cursor": {
          "ref": "68a4b01a-9186-4641-ab15-85bec9d152c8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed92b9b5-959a-48d9-bfb2-87ec3c3567ca"
        },
        "item": {
          "id": "ff1d7043-7955-477b-81b3-69977d531a70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f9aa4058-9d20-4187-abe5-428206266e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c4d0e4-6aa6-4ce6-94f8-9bf67e34d444",
        "cursor": {
          "ref": "51d48020-edef-43f5-83a9-69367611c515",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7554232c-4928-4551-b513-095d2fa742ae"
        },
        "item": {
          "id": "17c4d0e4-6aa6-4ce6-94f8-9bf67e34d444",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5177eee2-a760-4326-bec6-0d275fb86747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ded8a7f-0654-407c-9206-66ee68b47418",
        "cursor": {
          "ref": "6c22bae1-b498-478b-8ae5-77f64b3970df",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d310b2b7-e67f-4cc8-88aa-0e438c257add"
        },
        "item": {
          "id": "9ded8a7f-0654-407c-9206-66ee68b47418",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6417ea60-0780-4b78-93a4-7756756f5fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505e48b-e367-4242-b5df-fb3785e7ac70",
        "cursor": {
          "ref": "6f20ed0a-9402-42df-acde-9c12ea740e05",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bb840479-70e4-48aa-8907-711a3557a711"
        },
        "item": {
          "id": "6505e48b-e367-4242-b5df-fb3785e7ac70",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b39cda54-3312-41d0-bbd0-c957f303dc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe49f72c-b996-4ead-bd4b-ad25c75e5d2b",
        "cursor": {
          "ref": "3763a203-567e-4d40-9aa6-a216aa567c16",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "93a95ef1-23e2-46c0-961c-97c24144140b"
        },
        "item": {
          "id": "fe49f72c-b996-4ead-bd4b-ad25c75e5d2b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d000b76-d1a9-42a4-bca6-f971d2d15fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb3a9f-b30f-493f-b87f-b2db1fd6bed9",
        "cursor": {
          "ref": "b59d8cdb-5511-4209-bcfb-78b96379787d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5045833a-190a-408f-9c54-f413c19da7cc"
        },
        "item": {
          "id": "4abb3a9f-b30f-493f-b87f-b2db1fd6bed9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e45683c2-d3cd-43b8-b554-2c1bca5a871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0c132b-93af-4e8d-b181-e3d540e8a7f6",
        "cursor": {
          "ref": "4d51386b-9c5d-45c7-81cb-988d738712d7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "518f77a1-d529-4c3a-89e3-17e49375dab6"
        },
        "item": {
          "id": "1e0c132b-93af-4e8d-b181-e3d540e8a7f6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e5ddba05-918e-46e7-882f-0fe7fcc0f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a24fe42-294c-4ba8-99cf-428838f6cae9",
        "cursor": {
          "ref": "673132cb-6c07-46de-8d4f-8e490dcbe4b5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2468cc61-e286-4fee-9eb1-a8e3308b32af"
        },
        "item": {
          "id": "5a24fe42-294c-4ba8-99cf-428838f6cae9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ffa0272d-529e-4402-a316-2f5e49e86f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fecdcf-c253-468b-a5a8-71a2a5655a87",
        "cursor": {
          "ref": "73f3adb3-3616-48d7-a04c-f9da638a3fb5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "38b422ac-1cbe-4357-8002-666cfeba343a"
        },
        "item": {
          "id": "64fecdcf-c253-468b-a5a8-71a2a5655a87",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d9a103fe-339a-4bc9-aa06-4ce8d5f81bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd9e63f-2617-4fa5-999e-333175478ed2",
        "cursor": {
          "ref": "cd5812c1-8c97-4a4b-83b3-866fc2de6fd4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a971e9fc-9eb8-45c1-a5f3-32816eaa7e0e"
        },
        "item": {
          "id": "fcd9e63f-2617-4fa5-999e-333175478ed2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9a6f1439-0452-4954-8ecd-d81181c49a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6266fd-cfca-4925-be7b-c7266f854610",
        "cursor": {
          "ref": "2600bca3-b215-4019-aae9-3a8af555783b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "97e6a14f-b201-487b-b3d7-cf23daaeb0b3"
        },
        "item": {
          "id": "fc6266fd-cfca-4925-be7b-c7266f854610",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c01c6147-2e57-4758-a2ae-699226bcabd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfe8ceb-9d78-4f06-bdad-cf1c40f74339",
        "cursor": {
          "ref": "2e3ff6cb-eb16-464d-9fc8-ffcee2a02290",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb2c2093-bdc6-47bb-b942-e40b32c2c9d5"
        },
        "item": {
          "id": "bcfe8ceb-9d78-4f06-bdad-cf1c40f74339",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6c3b94e1-b68d-4e15-bcba-9ac54df32d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328a77e-6518-441e-bacb-302f2a78b86c",
        "cursor": {
          "ref": "e04a6526-64b6-4e49-8f3c-ce561b5dd7a3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d3bafaa-292f-49c7-8ac8-82ee466efb2e"
        },
        "item": {
          "id": "f328a77e-6518-441e-bacb-302f2a78b86c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b6aff2f7-0780-4f3f-87e2-fb5bdd9e4b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050efe57-59d2-4c28-a573-50cf7b03ce55",
        "cursor": {
          "ref": "2b2e3721-938a-4f26-ad35-3854906c1271",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc7b44e1-bafb-4c6a-a968-7c60e260a8c3"
        },
        "item": {
          "id": "050efe57-59d2-4c28-a573-50cf7b03ce55",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3384cc81-16ae-4e72-922d-8fb99f1fceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82af650c-6f2e-439d-a6f3-3c255b939ac7",
        "cursor": {
          "ref": "20bcc548-3243-40e3-b13a-563419df0138",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0fe18f24-4911-40e3-95ab-456d14076f66"
        },
        "item": {
          "id": "82af650c-6f2e-439d-a6f3-3c255b939ac7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7df6d1ab-93a6-46de-afd6-0b20e0a2933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b404fd-5c36-419d-9e94-01c57ee6b17f",
        "cursor": {
          "ref": "c0678206-7a4a-4b05-898c-150d6176207e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62083f51-099b-4884-a2f8-454ea3bebc5a"
        },
        "item": {
          "id": "e2b404fd-5c36-419d-9e94-01c57ee6b17f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f99fd074-d179-41d3-aa5c-ca931942ebfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04f73f0-e15a-4ad1-a936-47f7f1370570",
        "cursor": {
          "ref": "c50b3134-65b6-4c73-9cb7-6b24b0d92d97",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4d535d22-10ea-42fe-9ec6-d25f26ee9996"
        },
        "item": {
          "id": "c04f73f0-e15a-4ad1-a936-47f7f1370570",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f555945f-c5da-4a92-9b3f-41f5c590cf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b7f3cb-512b-48e8-9f11-9526b65f4395",
        "cursor": {
          "ref": "0051a3b2-334f-421a-ac26-d46ea20e7847",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1aa5283c-bdc1-4ceb-b695-2795840258d3"
        },
        "item": {
          "id": "f0b7f3cb-512b-48e8-9f11-9526b65f4395",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8f5a2493-fad9-4232-ae51-52cc34d8a9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d34dad-c0db-499b-9f31-310b3d210e6c",
        "cursor": {
          "ref": "bd864f26-7b3d-4230-a697-41efce61cf88",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c9b012f-5c72-407b-a9d8-765f5d0aad71"
        },
        "item": {
          "id": "f0d34dad-c0db-499b-9f31-310b3d210e6c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1722e846-418d-463f-bd9d-5df225bbd04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e56e235-1918-4e56-a1cd-156e609ddd29",
        "cursor": {
          "ref": "4c06d020-c4bc-41b9-b5f9-f1c1562a4434",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "740df0bd-fe4a-403c-a913-3954f422fa5e"
        },
        "item": {
          "id": "5e56e235-1918-4e56-a1cd-156e609ddd29",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e5d12a6f-85c4-4b76-b2b6-793df8bb3daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d1296-b70a-4536-9ac0-250c56ffe931",
        "cursor": {
          "ref": "76e6519f-9f82-41d7-8226-2e6c6f2d9081",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e5ca47bd-b5e8-4322-bce1-417c046b937b"
        },
        "item": {
          "id": "cf1d1296-b70a-4536-9ac0-250c56ffe931",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2f1ac8d-57e2-454b-b4ce-e0dc7854f3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff425b7a-a024-4863-becc-7561cdd80285",
        "cursor": {
          "ref": "b92307d7-e5ab-4a53-95d2-9f5e4c236552",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e5ea057a-4ef4-4d6b-9e95-b20b37005a11"
        },
        "item": {
          "id": "ff425b7a-a024-4863-becc-7561cdd80285",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1b506adf-b16b-43ea-88a7-0e8666001342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933eff75-32ba-4c61-b7da-7564b4392015",
        "cursor": {
          "ref": "7bc1cf41-5270-4cee-b7f5-3734476479ac",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a4f93367-d1c1-489a-b009-73f27baa0317"
        },
        "item": {
          "id": "933eff75-32ba-4c61-b7da-7564b4392015",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bd094671-928e-4563-9e7c-bf49e86e5fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4a89c-6392-4fd0-a4c2-e98d2f992e98",
        "cursor": {
          "ref": "15a5170c-4980-4c74-ac26-392bbb8ffa00",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18162d68-3dd7-4829-bc5a-05f94a87eed2"
        },
        "item": {
          "id": "5fc4a89c-6392-4fd0-a4c2-e98d2f992e98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8299ec9-2014-4149-8456-5c909fefbb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52983a17-0ec3-4560-9eb2-81b7ca1a00a7",
        "cursor": {
          "ref": "5eb0900c-2b30-4a67-9e6b-268ec8745a19",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "896df304-7114-4da8-b956-ee438fa24fe4"
        },
        "item": {
          "id": "52983a17-0ec3-4560-9eb2-81b7ca1a00a7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5aab7dad-764a-46c4-8210-c7d828da2f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c8d5f-f272-48f8-b56b-3e1ad664c309",
        "cursor": {
          "ref": "8313b40c-f1ed-4977-9059-cc12c578bfaf",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a51b8607-738b-4b27-95bb-20d9d1e574f3"
        },
        "item": {
          "id": "9d9c8d5f-f272-48f8-b56b-3e1ad664c309",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bdcaf686-bc6f-41bd-a292-63f45d8d80e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944b4f3a-09ae-45a0-a4ac-da4a2313128b",
        "cursor": {
          "ref": "d9d2326e-ac9f-4e53-8a91-b063310c8438",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3d88fe16-c872-41d5-94f9-479d68ddc7e7"
        },
        "item": {
          "id": "944b4f3a-09ae-45a0-a4ac-da4a2313128b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "557fd12d-629c-4535-b360-afe9fa51a95a",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dff4c4-098c-4b4a-a397-2891e85d73f3",
        "cursor": {
          "ref": "cfa13639-c9f1-4c17-b6cc-e170c9cb7fa3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4579004f-43b5-4811-a2a0-e6bd6c2f6d09"
        },
        "item": {
          "id": "e7dff4c4-098c-4b4a-a397-2891e85d73f3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0c6adb70-913a-4db5-809f-e0b3a2fc3c7e",
          "status": "Created",
          "code": 201,
          "responseTime": 192,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09877c64-1770-4ae5-b72d-39ca184afbf1",
        "cursor": {
          "ref": "8e4690ce-c50e-4ab5-9e39-0ca0cc4af808",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd98407d-10de-4812-b27a-a9eec4fdff98"
        },
        "item": {
          "id": "09877c64-1770-4ae5-b72d-39ca184afbf1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bce5c073-dbb2-4f23-9153-f2e11a2aa9fe",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449b0f8-351f-4d04-82bd-e7c612701100",
        "cursor": {
          "ref": "979850d8-9ebf-4524-a7d5-6b4376999337",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "463becea-f9ad-4226-bb51-b2fb4ba907d9"
        },
        "item": {
          "id": "f449b0f8-351f-4d04-82bd-e7c612701100",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "31b2c7eb-01e4-4140-98c9-062f64ac306c",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "871942a9-f014-48e5-8bb8-8b8bd33dc83d",
        "cursor": {
          "ref": "bba2d55a-ed68-4e27-a638-f1cda0fd4df5",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d59ca4dc-ff0c-4fe8-9570-be4346e93e92"
        },
        "item": {
          "id": "871942a9-f014-48e5-8bb8-8b8bd33dc83d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d646d845-c4a4-4c86-8475-fba036f20d77",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "db73c22c-6301-4028-a4b0-d41579334503",
        "cursor": {
          "ref": "182a1059-98e7-4cc2-b050-bb7cb60e261a",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37c3cc52-4ecd-47b5-9fb4-07859697992c"
        },
        "item": {
          "id": "db73c22c-6301-4028-a4b0-d41579334503",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f521fb19-afc4-4d2f-b3a3-36e770ff83ec",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b6af8-ec51-42dd-b649-ec8cc792561a",
        "cursor": {
          "ref": "2fa8048d-7569-4903-b9be-b8f7cd08c244",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c42997cb-f710-4232-86e5-0bcf9432b5d5"
        },
        "item": {
          "id": "cb5b6af8-ec51-42dd-b649-ec8cc792561a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "22453b2b-c6eb-4675-a061-3cea88b4cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c1d586-142d-4e1a-81f6-3bf1975efadb",
        "cursor": {
          "ref": "a1840619-4967-477b-8c70-9bab55fc1afa",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "048f78fd-c929-4088-abad-1036b219f893"
        },
        "item": {
          "id": "d2c1d586-142d-4e1a-81f6-3bf1975efadb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84a2b0f6-da3a-4266-9711-1fd3df563683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1071ef-fde2-41ec-8cc3-e4d8e49adf2e",
        "cursor": {
          "ref": "620e6cf3-ba82-4d66-9aed-768768087a32",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5fb6f9ff-b4c9-4f9b-86d5-6e43251f104f"
        },
        "item": {
          "id": "ec1071ef-fde2-41ec-8cc3-e4d8e49adf2e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fbe908b6-788e-440a-96af-fe18ddea29a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0605d0f1-0838-4ea0-896a-b4f5af791e2e",
        "cursor": {
          "ref": "3c378ed3-379d-4554-948e-3ff3c3c58c15",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a682e201-57b5-46b2-be85-83a14c5bec10"
        },
        "item": {
          "id": "0605d0f1-0838-4ea0-896a-b4f5af791e2e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6f6f9f3-7377-48db-8e03-130d39a09bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2501808-b03e-419a-9910-264bce325a09",
        "cursor": {
          "ref": "592b4ce3-fd61-4ac0-bb3c-b9d35461aba8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7fd11b49-15ad-4aef-b7ed-5c847bd71a6c"
        },
        "item": {
          "id": "d2501808-b03e-419a-9910-264bce325a09",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5d5b7f06-0f8c-43cb-a3cc-0d25074a0cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307a274a-5389-4e55-88f6-7f99ccf89f4b",
        "cursor": {
          "ref": "d8060a74-8900-4acd-a9ff-0e5f717cc0f7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e4919c05-a8c5-4303-98d7-3b361372ddb3"
        },
        "item": {
          "id": "307a274a-5389-4e55-88f6-7f99ccf89f4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "812e1c8e-9700-42ef-9b02-1470d8c0e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa0e4a-b3ba-4ef0-ab09-d83c0e9248bf",
        "cursor": {
          "ref": "7553cc01-9307-4326-9c8e-684668fb75ef",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "22c19415-b1f3-4450-90ef-a10c81dab4d3"
        },
        "item": {
          "id": "d2fa0e4a-b3ba-4ef0-ab09-d83c0e9248bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0226b00e-b099-4587-9480-a70d9ae7c4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019e5f99-e339-412b-a1ce-519de846c06e",
        "cursor": {
          "ref": "4411b91e-3d5a-483d-84f1-fcc29519fbd7",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7a2304e0-9de7-402a-942e-cf392dcbf056"
        },
        "item": {
          "id": "019e5f99-e339-412b-a1ce-519de846c06e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca48c863-66e3-48e6-add3-e4f7b923ac7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0d767d-60a6-43e6-870e-773114a20cbb",
        "cursor": {
          "ref": "ad1b3709-4776-44c5-abec-c68f1da0e109",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "14fc03a2-1ad3-49df-b039-cbf90d862cea"
        },
        "item": {
          "id": "7e0d767d-60a6-43e6-870e-773114a20cbb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e713545b-4d09-41ba-b8f9-160dac286766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2049b73d-7575-4b13-bc43-34c881277a65",
        "cursor": {
          "ref": "74182d45-31c8-459d-9cfd-2a41599390b2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "043ff3a6-2b28-46dc-8e73-194ab19500a5"
        },
        "item": {
          "id": "2049b73d-7575-4b13-bc43-34c881277a65",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fb61f424-3e99-4921-b73b-9b4cea25dea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b63f61-ee65-4904-a427-090c3a0cd883",
        "cursor": {
          "ref": "e25010fd-dafe-4dbd-ba93-1f0c7da49084",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e28b7e21-2d53-4023-9d7f-a2df59356de8"
        },
        "item": {
          "id": "56b63f61-ee65-4904-a427-090c3a0cd883",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cbd1fadf-bcf5-4e5e-aced-41ddec58d335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb132b-d13a-40fa-a16b-3699fa68f23f",
        "cursor": {
          "ref": "bdba914d-eec4-4d89-894e-d1379607db67",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "026518e4-6fc0-4535-a519-38f4ef92bf18"
        },
        "item": {
          "id": "78eb132b-d13a-40fa-a16b-3699fa68f23f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "19f6c210-187d-4474-9ae3-5d66732aeb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f2888e-d797-4aa2-bb4a-63a03ab60db9",
        "cursor": {
          "ref": "5eb83010-b09a-4db3-a12f-af50107263ef",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3618c76a-c480-49b2-bd62-358d06d2c218"
        },
        "item": {
          "id": "f4f2888e-d797-4aa2-bb4a-63a03ab60db9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2a479013-4777-4225-9122-cbb3c8cfdc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8be068-21a3-45ab-b14d-de8dab845a5f",
        "cursor": {
          "ref": "19f33a47-ce85-4c27-af5d-3791c9e30548",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "576eb9f6-73e3-484e-bc23-432252a8f75c"
        },
        "item": {
          "id": "7e8be068-21a3-45ab-b14d-de8dab845a5f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb1707fb-b7fb-4e39-a6dd-b78b0a103409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2c0394-bd30-4d21-8883-8cb9020e6546",
        "cursor": {
          "ref": "92fd2fb8-aac6-49ab-a80d-0bfdb5ea29eb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "60cd33de-f1b8-4fd3-88c0-f3edd37b08b2"
        },
        "item": {
          "id": "aa2c0394-bd30-4d21-8883-8cb9020e6546",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "46abc03d-8dec-4ed5-8b46-495cfe2c295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48442bb-9e85-457f-ac93-479ee95a9202",
        "cursor": {
          "ref": "88828508-aed1-4e64-962e-05f71be1fd0b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1d5ee653-6225-49ac-bdf7-2adae23d86a1"
        },
        "item": {
          "id": "d48442bb-9e85-457f-ac93-479ee95a9202",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "47a83eff-0b8c-45a0-9cc6-8abc65195701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a1e4a8-7466-4d97-8068-ec73b864ec53",
        "cursor": {
          "ref": "1fd7d967-42d3-4fd3-9956-ce8d9b673874",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "625a3ca6-f0fc-4671-823a-3e67f741adbb"
        },
        "item": {
          "id": "86a1e4a8-7466-4d97-8068-ec73b864ec53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db8636d4-6b6a-4df1-aefd-a2dad698bc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5379246-e087-4aa8-be1c-4d0368f7a525",
        "cursor": {
          "ref": "b9a44c5d-dfd0-432c-b525-8b2b71ef172d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dbc57c33-e63c-41b0-b19a-98c4eedc98a4"
        },
        "item": {
          "id": "e5379246-e087-4aa8-be1c-4d0368f7a525",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b96c992d-25af-4755-adfd-3962525e8d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ffbf39-c362-48c4-814a-e1e215479e84",
        "cursor": {
          "ref": "5e09b530-ff39-4719-88cc-6369277a143d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bcf743c4-444e-41bf-85c5-14bd0a76d521"
        },
        "item": {
          "id": "b7ffbf39-c362-48c4-814a-e1e215479e84",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1e61e37-5508-4648-93e9-f8b07b193e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5e1b5e-3c4f-4d50-8b5c-b7902802309c",
        "cursor": {
          "ref": "e072d40b-1f42-43b2-8338-45baf5b016ae",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cddbc16f-745e-4cb3-ab43-05ef5874968a"
        },
        "item": {
          "id": "af5e1b5e-3c4f-4d50-8b5c-b7902802309c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "34c4f786-cd88-4c39-b87e-c7fb0a45e184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb685dbe-e272-4516-80e1-5de8437442d4",
        "cursor": {
          "ref": "77d08d26-0ed5-423c-bd5a-f7ff994334b8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c169b276-8e37-4534-945a-4f5ef3df0e8d"
        },
        "item": {
          "id": "eb685dbe-e272-4516-80e1-5de8437442d4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b554e865-aa6b-4278-9279-e32ce9fa4794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226408ca-33ea-4217-b0bc-01e85590b179",
        "cursor": {
          "ref": "0b4f91aa-1bcb-42e0-91c2-a0667ea613c6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "86a9fa4a-2c4a-44d0-85c1-3d3a1f81c8f5"
        },
        "item": {
          "id": "226408ca-33ea-4217-b0bc-01e85590b179",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0704d4d3-9381-45d4-91ec-6fd9540490ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2e56fa-2575-423a-b470-85cffa9fdba0",
        "cursor": {
          "ref": "2ba2615a-f6d5-4e57-b6e0-47e06ef90aa7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "316065a1-a45a-4ebd-ac8a-03fe859a3503"
        },
        "item": {
          "id": "3d2e56fa-2575-423a-b470-85cffa9fdba0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "92ffe9a5-8fb4-4b5d-b6e2-daa01734f4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58ff2d-a997-44d2-80d0-33cb62c272e6",
        "cursor": {
          "ref": "350f933c-c607-49f6-af38-0b9c9cd1132a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a2692bb9-57b0-478d-88f8-52051574e991"
        },
        "item": {
          "id": "2c58ff2d-a997-44d2-80d0-33cb62c272e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "716b31c8-3a00-4cf5-a95a-0687b377d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517524a-a082-4dec-bf8f-b54fce32e589",
        "cursor": {
          "ref": "c5ad6fe8-6cb7-44b4-8ec5-e0d2673956bb",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "056f50b0-34de-4888-a4ad-5f9f8906752a"
        },
        "item": {
          "id": "c517524a-a082-4dec-bf8f-b54fce32e589",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f31d3f1d-97c6-43d6-9dd7-d3107851eb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1398cd-6fce-41a3-a3ba-2c3e1672d888",
        "cursor": {
          "ref": "ef2e8f8f-f216-4f8c-8059-362996987e89",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e90cfb92-c224-4a01-a2fd-482b3915e25a"
        },
        "item": {
          "id": "5e1398cd-6fce-41a3-a3ba-2c3e1672d888",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bc35bcb2-1d22-424b-be39-854ae4d1c48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df668521-24ee-4348-8a76-0ca4ca2fbed7",
        "cursor": {
          "ref": "7434373f-635f-466a-ab9d-0e8959b94abb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a662ebaf-0a9a-4843-91ee-1e89d86253f5"
        },
        "item": {
          "id": "df668521-24ee-4348-8a76-0ca4ca2fbed7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3d853818-6e44-4ae5-8f19-afd60bca53df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fd74b9-078d-412f-80dd-d12d23b159e1",
        "cursor": {
          "ref": "ce636a45-1fea-43ac-9cc2-8f5cb4b1d8f2",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c9b1ccc-7e8d-46c0-b11e-10b3db8aa59a"
        },
        "item": {
          "id": "c0fd74b9-078d-412f-80dd-d12d23b159e1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "09f78a71-8aa7-4860-8b0d-1cda8cf1c84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdeefa4-a383-467d-8e98-d836ed9f1d06",
        "cursor": {
          "ref": "c2ac7713-330d-4d2f-9493-3ae7f4e39cf3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5c50e60d-02a6-45a6-bb10-228ee68933a2"
        },
        "item": {
          "id": "2bdeefa4-a383-467d-8e98-d836ed9f1d06",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c1b07d4a-90f7-4725-8f34-7f83f100da86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb961892-4ac2-4fb0-a296-6eb8eb5c02dd",
        "cursor": {
          "ref": "d249e151-0d36-49ba-9ad7-c395ebd616b4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a46e4d9a-caa8-4b51-8cff-d1dd83f3738b"
        },
        "item": {
          "id": "cb961892-4ac2-4fb0-a296-6eb8eb5c02dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13288ded-15b3-4ffa-8c29-505c663e5b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf9db62-328f-4be7-890e-0eab571d75dc",
        "cursor": {
          "ref": "ca04ad90-ae18-426b-b664-5f84f60010c1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "155b7e26-01ed-49c0-a632-c953c533daf7"
        },
        "item": {
          "id": "5cf9db62-328f-4be7-890e-0eab571d75dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "56676efa-718e-4817-bb46-276bdc68a90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a5cb4-8012-4289-bfc6-763294685205",
        "cursor": {
          "ref": "a1e7e0a5-f7c0-4572-bb8b-ca14d1e2767b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "740c6e86-3ae8-4cee-84d1-be49e2fad8b0"
        },
        "item": {
          "id": "419a5cb4-8012-4289-bfc6-763294685205",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b340470-c5dc-4739-b8ee-c789c2e67c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7687017c-63ce-4e03-b8bf-baa9d519c960",
        "cursor": {
          "ref": "387d2daf-2ae1-473d-83ec-f01287406164",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4117d5fe-30f9-460d-b4ad-eea8dac807ae"
        },
        "item": {
          "id": "7687017c-63ce-4e03-b8bf-baa9d519c960",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "998d9a0c-ecef-4426-9413-368abd84cc75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558f2e48-b53c-4648-b535-472c8dc20dcb",
        "cursor": {
          "ref": "5703714f-5ecc-4e61-be2f-20c42827147e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a28c531a-cd0d-4612-8576-67dd8e09c309"
        },
        "item": {
          "id": "558f2e48-b53c-4648-b535-472c8dc20dcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a041f7d2-22d2-49f3-b2c4-bbf7e0427063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ad8d87-fff5-4044-9267-fdd0cf7fe92b",
        "cursor": {
          "ref": "cc6afa6f-8551-4fd5-9295-72791f6d96a6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "155bf6f7-520c-4754-8ac8-97e0cfa52d56"
        },
        "item": {
          "id": "46ad8d87-fff5-4044-9267-fdd0cf7fe92b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e7c9dcbd-ca4a-4d85-9dea-3d6876883401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1ab4eb-b20e-4a4f-b7dc-7970f4f6881f",
        "cursor": {
          "ref": "877959e6-a95d-4f6d-9d7c-fe2c5515f67d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ac627da-f7f9-4347-b4a2-ed959714ecb7"
        },
        "item": {
          "id": "cd1ab4eb-b20e-4a4f-b7dc-7970f4f6881f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96cbaa34-897f-4eea-8b5e-312f9a998bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500020a-9b23-4422-8995-aa27dcf689db",
        "cursor": {
          "ref": "d20be28f-8924-4aa6-bafe-a79762be3998",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83a30abe-784a-4872-a522-80abca212e60"
        },
        "item": {
          "id": "e500020a-9b23-4422-8995-aa27dcf689db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e34826e-a176-463f-ac08-9faa6fa94bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c2da2c-ad36-4f84-a630-86486e56c533",
        "cursor": {
          "ref": "9d8c364d-15c5-4315-9e55-f44e8ffdf9b8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2e84f2b5-be7f-4512-9d83-4ab027e6b353"
        },
        "item": {
          "id": "30c2da2c-ad36-4f84-a630-86486e56c533",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ec63e0d-be78-45b2-9326-cd502993dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0befe30-4ac2-4069-8607-57a00810118b",
        "cursor": {
          "ref": "72a01f79-1039-45b3-a022-79cd87541c3c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "20fca4b0-41c1-49d8-8d51-8f322df9d217"
        },
        "item": {
          "id": "e0befe30-4ac2-4069-8607-57a00810118b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ba00186-edc3-4e8c-834e-0df926128d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab3b9d-59a0-4761-801f-008e3eb7c477",
        "cursor": {
          "ref": "8976bc5e-2d68-4dcb-a7a3-e1dc1f4bed04",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b79261bd-0f5c-43d6-9db5-2f7793bbc5d7"
        },
        "item": {
          "id": "2bab3b9d-59a0-4761-801f-008e3eb7c477",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "81eb66fc-7fd6-423a-9452-1d0b479d6b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab50e9-a93f-4397-b1e0-f031a6639c4c",
        "cursor": {
          "ref": "9c48d633-9d1d-4c2b-80f0-89187648196c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a57f8dfb-9d9d-4828-bfc6-dbf4fabb46e9"
        },
        "item": {
          "id": "d0ab50e9-a93f-4397-b1e0-f031a6639c4c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d5d050f-4616-43fb-b26c-2a60f6fb7270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f5757-121c-4a21-a227-233b661d5dd2",
        "cursor": {
          "ref": "7d1a3067-4e3d-43cd-a152-de9f84f1eb96",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ac855b9-caa6-491e-b6bb-a5580f871b5e"
        },
        "item": {
          "id": "4b7f5757-121c-4a21-a227-233b661d5dd2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20a6c7c5-5c1e-4774-bc1d-e9ff6bfc412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a992a25-99b7-41ce-91ec-6d28222c4e2c",
        "cursor": {
          "ref": "054ff61a-838c-4d85-acf0-ddfeaf916d59",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c7b6327d-9166-448e-bd8c-1e11d98b10fa"
        },
        "item": {
          "id": "3a992a25-99b7-41ce-91ec-6d28222c4e2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d99a54f8-eaef-4a4f-8007-4960d86b8139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496459d-6fc0-4d5a-b621-885b90f42432",
        "cursor": {
          "ref": "a8d2853b-deea-48b7-b926-21d7f1da56ee",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cede0b95-b75a-44ed-b816-5f67a6e6544a"
        },
        "item": {
          "id": "7496459d-6fc0-4d5a-b621-885b90f42432",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d3f49f81-86e4-445a-802c-9be67a2f08a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d3d96b-48aa-486d-849e-f07753122227",
        "cursor": {
          "ref": "afbfd0df-fab3-493e-b20f-d9256739d830",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a3adbf4f-7fd3-4cd0-b0ac-fdb08dd72584"
        },
        "item": {
          "id": "f6d3d96b-48aa-486d-849e-f07753122227",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eb161363-b893-47db-8922-17040952115a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64578ff7-6076-4800-a2b5-093f7a69378f",
        "cursor": {
          "ref": "1a2efb0a-81ad-43d6-940c-a986195ff437",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "900a76a8-13d0-4e8c-a3e7-6e074277754b"
        },
        "item": {
          "id": "64578ff7-6076-4800-a2b5-093f7a69378f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8aa37294-3073-40b1-b495-fadecc38d8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cae0215-d524-42e5-ac6c-5bfab2892b9d",
        "cursor": {
          "ref": "c150c58c-5b41-4886-9aef-67b99b961d4c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af771bec-8db8-4b4b-b34b-f00f7beb0518"
        },
        "item": {
          "id": "5cae0215-d524-42e5-ac6c-5bfab2892b9d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70a6a6ba-5d5a-4c03-ab2c-eb43499c8335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bab5156-7e08-41da-9a2a-b6e6844588c9",
        "cursor": {
          "ref": "666e7173-5a50-4ccf-a84e-194cc379ac28",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "15c3357d-1a80-4602-bfa2-0bb8143ab062"
        },
        "item": {
          "id": "9bab5156-7e08-41da-9a2a-b6e6844588c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2809f1a9-5ebf-4706-a0f7-97de22cd7f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bedc0f1-526d-42f4-8a52-3ffa9c68d1a0",
        "cursor": {
          "ref": "132f9987-1ae8-4fbe-a523-f413be0b85ce",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1706f92f-d285-4ff8-b572-02c1dc62abed"
        },
        "item": {
          "id": "8bedc0f1-526d-42f4-8a52-3ffa9c68d1a0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94b2e435-5094-44d2-94b8-1f82548927bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96328799-cdc1-46a5-8ce6-9139796ac88f",
        "cursor": {
          "ref": "ebaf5c85-bd0e-406a-8bc5-0b7f77ed4c2a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c9b757be-1c32-4fe1-874c-3704780d61ed"
        },
        "item": {
          "id": "96328799-cdc1-46a5-8ce6-9139796ac88f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c93ee7af-bd62-4d46-97dc-01eace12e33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62de0439-360a-44b9-93bc-841c9b7cb402",
        "cursor": {
          "ref": "4b88178f-cff0-4776-84a3-bf1573a40ed0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4c02b649-687c-4dfb-82e9-d915891a9546"
        },
        "item": {
          "id": "62de0439-360a-44b9-93bc-841c9b7cb402",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "293f8dcc-519a-4c4d-a48f-39e5364bdba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614db6f4-2780-4f6c-abb8-799fa775faae",
        "cursor": {
          "ref": "a0203782-fe80-417e-be75-646a70aa5cdd",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a30be011-37f1-462a-bff6-17b57ed93e35"
        },
        "item": {
          "id": "614db6f4-2780-4f6c-abb8-799fa775faae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d0ed562c-af4b-4d16-94d8-68cbbac34eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adddd3f7-33f7-4d74-a72f-42e1e640b2bd",
        "cursor": {
          "ref": "8856869b-d573-4f0c-a9b6-9b699867b9da",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2e9f469e-215e-47a9-9dae-2b58b43f9d0f"
        },
        "item": {
          "id": "adddd3f7-33f7-4d74-a72f-42e1e640b2bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "46d45fba-cee8-402c-89a9-1bb86c3b597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351262ba-b672-49b5-b5f3-b3de84d87462",
        "cursor": {
          "ref": "537993e3-e6f4-4cfc-b9bb-28808583781c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dacacb8c-ad34-48ee-8405-4e2b89e34594"
        },
        "item": {
          "id": "351262ba-b672-49b5-b5f3-b3de84d87462",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2db13a6b-6330-412c-86ae-d35994e84595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868dcb71-f5ae-4839-b808-c48c1a8edc96",
        "cursor": {
          "ref": "cfed398f-c301-490b-a81e-8b3749b3bf60",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c9a2b897-d1b8-4c19-b50b-61f97d520d2f"
        },
        "item": {
          "id": "868dcb71-f5ae-4839-b808-c48c1a8edc96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e67f40b-24a7-4d7b-87f5-abca3a355677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cccb34f-802f-454c-ab46-c45df998c697",
        "cursor": {
          "ref": "3f617935-9e23-4729-9d97-f6454a1615af",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dcf71567-9776-4303-bba8-3b0afea760c1"
        },
        "item": {
          "id": "9cccb34f-802f-454c-ab46-c45df998c697",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "95eed0e6-9754-473f-b469-0ce09e1cd55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be53961-d150-462d-bf91-511ef100d069",
        "cursor": {
          "ref": "dd78f69a-01f2-4edb-876b-ad16dbc1f0f8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "09aec376-3408-4fe1-b90a-c328b35ddabf"
        },
        "item": {
          "id": "9be53961-d150-462d-bf91-511ef100d069",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "140a2cf0-cd68-4a32-a5bb-d663f58e8d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e334b7-cfb8-4fd9-a991-3fa45d84ad4b",
        "cursor": {
          "ref": "bcd882e8-db5e-452b-ae94-6494d489263a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "df76b8bb-d3f0-4fe1-8239-4a61fdc24b50"
        },
        "item": {
          "id": "d8e334b7-cfb8-4fd9-a991-3fa45d84ad4b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56153ee5-5e3e-431c-bb65-16d048099cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddf3c05-db0f-4fb2-91c5-476ae52b1363",
        "cursor": {
          "ref": "af654f5e-0046-4e91-bcbe-a919a33de0ea",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "16c214d0-e807-478f-92ba-395ee8ef2314"
        },
        "item": {
          "id": "0ddf3c05-db0f-4fb2-91c5-476ae52b1363",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "039225d9-852e-4cf4-ba98-71b707d42369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73a754f-d0c1-4dbf-b130-cca52e101232",
        "cursor": {
          "ref": "1fc7e9fa-c045-40b4-a5fa-41329902f0a1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa5f8214-835b-4f6f-851d-dbf8950e7911"
        },
        "item": {
          "id": "e73a754f-d0c1-4dbf-b130-cca52e101232",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ea4d5d04-9704-4b1c-ad46-decfde5ef784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efe3a4e-6194-4cbf-b9bf-3c7399cdab40",
        "cursor": {
          "ref": "1cb53904-9089-4ce7-9895-9bf65dca7fec",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "00eb995d-cc61-4317-a666-4b63644784e5"
        },
        "item": {
          "id": "9efe3a4e-6194-4cbf-b9bf-3c7399cdab40",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2f185950-ffb8-48d4-b796-d728fd2df069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b739ed7-efc0-4fa7-84cc-8653107a5ff1",
        "cursor": {
          "ref": "8ea50f95-400e-40ad-a8d2-3122c37a6982",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9402432c-8248-43d5-94f3-783d039819fc"
        },
        "item": {
          "id": "2b739ed7-efc0-4fa7-84cc-8653107a5ff1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4fc79859-a930-4de0-97c4-a50eafad2762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f32f2-5914-4610-a509-36d001a69953",
        "cursor": {
          "ref": "6b787643-e968-49c3-90fe-9ff1b217b76f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3e7386d3-ff52-4497-96fa-5a601273b3fa"
        },
        "item": {
          "id": "cd9f32f2-5914-4610-a509-36d001a69953",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d41fa764-9b16-43b1-8e6b-bee79f7284ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa49bd3-ddfd-42a3-880d-cef01c7cb9b9",
        "cursor": {
          "ref": "4e25a27a-188a-4845-b874-7133f8191d9b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "038fb6da-c5bd-4cb3-888b-cbaefaf30fb8"
        },
        "item": {
          "id": "7fa49bd3-ddfd-42a3-880d-cef01c7cb9b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "26aa5173-9308-4581-a333-9c014bd40ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b005a3cd-b626-4856-8ab7-1c2f5adde3e8",
        "cursor": {
          "ref": "7030e565-c07b-4e51-8cb2-2135c7d2973c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4f87bd26-a839-4bd6-a7ea-a25432d362d4"
        },
        "item": {
          "id": "b005a3cd-b626-4856-8ab7-1c2f5adde3e8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "604325a3-24e0-44cc-92f1-ab4d783b9eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f26399e-db0d-40a0-81a2-033654a66ab2",
        "cursor": {
          "ref": "42ac63c9-3c39-41cb-8bcf-e46c19e0203f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b7293849-f7c5-43e7-b633-f20f3f96a9ec"
        },
        "item": {
          "id": "4f26399e-db0d-40a0-81a2-033654a66ab2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f88a23e4-e4d9-4907-997c-9694eb371d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d26d61c-f2a7-493a-af10-a9ba88f7946e",
        "cursor": {
          "ref": "e7e161d7-179d-44e2-ba76-fa1285c695bd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e8209f67-7126-4259-b28f-7c4cf78a8560"
        },
        "item": {
          "id": "8d26d61c-f2a7-493a-af10-a9ba88f7946e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cfd75a00-cdde-44b5-bc29-5590ffdfacf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a637bb-aac1-49ef-9190-2d5fdca780bf",
        "cursor": {
          "ref": "b0bacb22-5cda-4c2f-a703-841ddbb6c981",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "962d641c-7e03-4d92-8a2a-ac26de142198"
        },
        "item": {
          "id": "85a637bb-aac1-49ef-9190-2d5fdca780bf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b992cc5d-a974-4c9c-9f01-a12d3715e5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e237b-94c3-4262-b72f-a94a5b23c938",
        "cursor": {
          "ref": "abd1895f-b782-47e6-b2b9-b854ece0c226",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "17664893-3e3b-4078-8040-69e990c86901"
        },
        "item": {
          "id": "196e237b-94c3-4262-b72f-a94a5b23c938",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6fbe49d-42e5-492d-a4da-ae431421439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47aba2-a82e-4bf1-9f11-888e7d76b328",
        "cursor": {
          "ref": "04c030cd-7742-4ef9-9390-7a140b5206cf",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d82a0d42-aaf1-4ef0-896f-f16f289c8a78"
        },
        "item": {
          "id": "9d47aba2-a82e-4bf1-9f11-888e7d76b328",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a0c84e82-e342-4e46-adb9-b09d92094383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836a6179-57df-4715-9133-e8e373080244",
        "cursor": {
          "ref": "98ae1668-281a-4be4-a317-8afcca43f62a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5c52876a-45c3-4fe8-a241-7f9cf61ea651"
        },
        "item": {
          "id": "836a6179-57df-4715-9133-e8e373080244",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9ab3aa1-a8b6-4d08-900a-cb5e0cef5338",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c6dc90-5402-49a4-b115-c98d9b58b8f8",
        "cursor": {
          "ref": "130fef9e-1f98-41ba-a635-e4bdc60f02fd",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0eb4cad6-424d-419e-8ebd-309a10dc85e5"
        },
        "item": {
          "id": "b1c6dc90-5402-49a4-b115-c98d9b58b8f8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8f65cf6-6951-43b1-92a7-f0747b84f1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d461b7d6-d3c1-44a0-b606-56a59a213818",
        "cursor": {
          "ref": "64b0dd1f-2243-48c3-a0b5-4c8683e96586",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "45f7ce08-e97f-4f3e-a44f-725476348544"
        },
        "item": {
          "id": "d461b7d6-d3c1-44a0-b606-56a59a213818",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6b6bcebb-3356-4830-a956-eec92e00c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e83fa-71cf-4b91-bf82-2d579a6ef6c9",
        "cursor": {
          "ref": "6a6265dc-bdaa-4d20-bd4d-caaf00f2c2fe",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9dc037d2-d6db-4189-a668-07e7bf4baf1b"
        },
        "item": {
          "id": "271e83fa-71cf-4b91-bf82-2d579a6ef6c9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f8f8d72e-1d64-4d81-b5ff-dbd3538e955a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e94bd5-d48d-4e8d-ad1c-1f70d7dad36a",
        "cursor": {
          "ref": "3656b839-2f91-448e-94cd-c6631311c480",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "27c9bd14-bb6b-4ad6-aaca-c1f28f7a4c04"
        },
        "item": {
          "id": "11e94bd5-d48d-4e8d-ad1c-1f70d7dad36a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0856a27f-4f09-4bfe-a036-a707484f7ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2530758a-c3bd-4209-bc00-0a3908ffe7e3",
        "cursor": {
          "ref": "609682b9-43d9-4356-b475-def1f50271ad",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ea780e25-b147-407c-b424-ed88ed230cec"
        },
        "item": {
          "id": "2530758a-c3bd-4209-bc00-0a3908ffe7e3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "57133749-36ab-4e53-9944-9a10b99809e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dad4b4d-4785-45fa-a9a3-018f4ab05597",
        "cursor": {
          "ref": "4fb6ee25-c049-42ac-8d47-60b33f95dd42",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "193a95fb-41c9-4b72-9f21-d5f0a2ca0560"
        },
        "item": {
          "id": "2dad4b4d-4785-45fa-a9a3-018f4ab05597",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7c927dac-18fe-48d0-8b9d-0bf8d3fe1d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3dd95d-46fa-4c53-8fba-40c932e6fb9f",
        "cursor": {
          "ref": "cb5c0b23-e29b-4717-ae96-9008ed71be6e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5e02eb97-6798-4b08-a937-f823128ee2a1"
        },
        "item": {
          "id": "4f3dd95d-46fa-4c53-8fba-40c932e6fb9f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0f0813f7-c2d3-48dc-a710-8e0931cd0280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b83f708-22cd-4de8-9da3-dbd7b2043317",
        "cursor": {
          "ref": "7ea43f33-0df4-4e3a-8073-cb3ca37cc475",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "10cc279e-d144-4377-a465-4a6c376f9823"
        },
        "item": {
          "id": "1b83f708-22cd-4de8-9da3-dbd7b2043317",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56fba7a3-a18f-4ba1-b0de-4f2789acc18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3072302f-50cb-4d41-bdb1-3fe6c0e7a671",
        "cursor": {
          "ref": "2935f7e2-d6f5-4bff-aa05-31aea496548c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "745134b1-c406-432d-9819-c23348a46554"
        },
        "item": {
          "id": "3072302f-50cb-4d41-bdb1-3fe6c0e7a671",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ebec5fad-f207-487a-9e53-167724f98ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1538d5bb-638a-490c-ab90-49eeb3e03c17",
        "cursor": {
          "ref": "ef07ee0c-6b4b-4f86-a25e-5cc44fdc54c0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "11d1e1f0-b45a-4012-bb26-3194b46996bf"
        },
        "item": {
          "id": "1538d5bb-638a-490c-ab90-49eeb3e03c17",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b8d380c4-7d4e-4f85-802c-d951d4749489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d40d8bc-1d68-48af-a752-36e30803e013",
        "cursor": {
          "ref": "46a552b7-14f2-477e-a07d-0450f5b049dd",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "595d5a3a-c3fc-483b-a993-935e033f0527"
        },
        "item": {
          "id": "0d40d8bc-1d68-48af-a752-36e30803e013",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a2713f7f-620c-4373-a456-8b9246252a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ee952c-f607-4fcd-991a-c5358a71eb1f",
        "cursor": {
          "ref": "908ab6a8-9f84-4db1-909f-35924b9b9834",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "35d605b7-b656-4d89-a7c9-ecd13aa300e7"
        },
        "item": {
          "id": "25ee952c-f607-4fcd-991a-c5358a71eb1f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31691957-0c8a-44b1-b38c-5b62b42194bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d1c081-6392-4365-ba44-448b9bcb3b12",
        "cursor": {
          "ref": "6f7c10d5-2133-4867-8437-3b2ae27f804d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3ecc8b57-af67-48e6-8a3f-8e4d0fe2ab84"
        },
        "item": {
          "id": "80d1c081-6392-4365-ba44-448b9bcb3b12",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a55f30d4-4512-4254-ab69-853c815f543a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62af02f-a554-47f9-8fe0-92458ca6cf2d",
        "cursor": {
          "ref": "8bf58bde-6a2f-4b59-84ef-0439c269f8c0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cbc8c3a3-1351-4cb4-9b98-b2c90ecca3b1"
        },
        "item": {
          "id": "b62af02f-a554-47f9-8fe0-92458ca6cf2d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9708187a-3e7a-456d-91b1-845f039e107c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1105c913-ee45-450f-8f5e-23f019bcf596",
        "cursor": {
          "ref": "7bd3cc59-988e-40d0-a9bf-9f5d5a8c610c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd762273-734f-4e62-a6a5-d5a28afaee70"
        },
        "item": {
          "id": "1105c913-ee45-450f-8f5e-23f019bcf596",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30f07836-6aff-4ca7-8316-a162135dd7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c1f1d9-a0da-48c1-acd3-06358dc2c4ad",
        "cursor": {
          "ref": "51d763e1-7378-4df4-b962-34a0084c2994",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d318253-a310-4e84-9dc5-18fec6004083"
        },
        "item": {
          "id": "16c1f1d9-a0da-48c1-acd3-06358dc2c4ad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2346a77-db29-4fb6-a911-d3e2c3e68fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7109af5-4c48-4649-a216-929831bab941",
        "cursor": {
          "ref": "27edd172-06a3-44fd-ae3e-268b6048cdd7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9f819d41-b4f0-4316-aaeb-36954381171b"
        },
        "item": {
          "id": "b7109af5-4c48-4649-a216-929831bab941",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "35438060-e81c-4a42-b634-c2056a784682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2768aa54-088e-4062-b10e-77f0f5b8e6fa",
        "cursor": {
          "ref": "c7f5c334-5d82-4ba9-b153-9c38ac0fbf46",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1fc82840-d909-401f-a082-a6e6f5837ed3"
        },
        "item": {
          "id": "2768aa54-088e-4062-b10e-77f0f5b8e6fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "576bee16-1d14-4771-b721-2a6efa953876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a5519-4e15-43e2-94b3-1cbbed9c84ca",
        "cursor": {
          "ref": "a325db95-7dd7-43b6-bb81-741e3ea95a73",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a6988fd7-bb24-4804-8265-0f513de63eed"
        },
        "item": {
          "id": "a04a5519-4e15-43e2-94b3-1cbbed9c84ca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "428be640-a2de-4efd-b526-e37b55587973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3d8e54-06b2-4576-a284-38abc1fff321",
        "cursor": {
          "ref": "847d9051-baf2-4db7-b9cf-c2975f642215",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1a8697f4-862f-4d3f-bfed-12830fe7454f"
        },
        "item": {
          "id": "fc3d8e54-06b2-4576-a284-38abc1fff321",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3e59ca76-904e-4d2e-ab77-bcf518b12f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5391e47a-6c15-4d9d-b151-c854ae397eba",
        "cursor": {
          "ref": "f69feeb0-7a4e-4f38-8afa-2cb325ab1981",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58654994-35ef-42be-b009-ab5f7b6c4363"
        },
        "item": {
          "id": "5391e47a-6c15-4d9d-b151-c854ae397eba",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2be9b6a8-360e-4972-a75e-3ec9c1451df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7957f-1fff-408c-9f22-3f4e9441a921",
        "cursor": {
          "ref": "e658ac36-19e9-491d-b95b-67caaaf2db9a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cfb56985-1027-4b5e-9744-94bb50857190"
        },
        "item": {
          "id": "7fc7957f-1fff-408c-9f22-3f4e9441a921",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6df232a1-98ba-42bb-a650-3649170d777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c86598-e777-4e20-8b66-f4f6d19ae32a",
        "cursor": {
          "ref": "bafe230f-a85f-45f9-abe2-e4e9e2bf806b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "58021e42-023c-4d20-8c94-72d48c995f41"
        },
        "item": {
          "id": "47c86598-e777-4e20-8b66-f4f6d19ae32a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1087647c-a105-4e14-b4fc-74431dbfad9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee5d4df-a44f-46f6-bc27-c0faaa29bf98",
        "cursor": {
          "ref": "d98a4280-871d-4973-b483-b19e4e586236",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1452f3cf-5ce8-4f03-85e4-bed3c55b5f10"
        },
        "item": {
          "id": "4ee5d4df-a44f-46f6-bc27-c0faaa29bf98",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d75720dc-3644-4fec-84d2-41fb71376da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce531949-7ece-4eb3-8bd8-d5bb15a5493e",
        "cursor": {
          "ref": "1541d0ce-2238-4a44-bdd1-bb1f31a85c13",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a385bfd-dfa2-4905-96d7-56e7809b7329"
        },
        "item": {
          "id": "ce531949-7ece-4eb3-8bd8-d5bb15a5493e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ec5a7646-5078-4a8a-84c6-35047f8861df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc07aaf-d07f-4a64-8536-99c2cb4d4165",
        "cursor": {
          "ref": "9d9d3d52-9c45-4eb5-88c0-0b0354f98799",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "75bedbea-eac6-42f3-802e-010333302b65"
        },
        "item": {
          "id": "9dc07aaf-d07f-4a64-8536-99c2cb4d4165",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c14d9203-87dd-4f81-a9f0-e7e3a115b75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7985df21-0a44-41f0-aee6-79eb97a58b2d",
        "cursor": {
          "ref": "3f8f08bc-ce25-4872-87ec-1b8269c44249",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "760eedb8-b550-4a49-9dc0-3488395b5048"
        },
        "item": {
          "id": "7985df21-0a44-41f0-aee6-79eb97a58b2d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6da4b795-385e-4cea-b0ad-14a393136f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c4a675-f8b5-424f-866b-d45052738887",
        "cursor": {
          "ref": "684df8bf-6afe-4f3d-823c-7ebbee683937",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "17ae4e6a-5bf3-4e8e-a488-593cc92671a6"
        },
        "item": {
          "id": "a5c4a675-f8b5-424f-866b-d45052738887",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c813e7d5-aa2c-45cb-acd4-bc73dd4637cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4bdfd3-280e-4d9a-92cd-a1e67d8bc799",
        "cursor": {
          "ref": "3a9513c6-2a88-4587-96f4-fc04c729b6f0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7864d1f3-8e57-49c5-8a23-f4c740a84521"
        },
        "item": {
          "id": "ff4bdfd3-280e-4d9a-92cd-a1e67d8bc799",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6e1fd00d-c341-45de-b87f-b98187d9a550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf801230-47eb-4dab-8356-b6d0927c8170",
        "cursor": {
          "ref": "304043c7-9717-4ccb-9ce1-ee1935e54a9d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b50030e6-dab1-4723-8edd-b5d409b3039b"
        },
        "item": {
          "id": "bf801230-47eb-4dab-8356-b6d0927c8170",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "705f9417-1634-40b5-9a75-50812758b4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc4ca88-aee4-4419-b0f9-5279d8d87219",
        "cursor": {
          "ref": "01c080c8-450d-416a-bbc2-b5563b3b41e0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4ad64937-fe66-4b70-ba31-7b9d495249b7"
        },
        "item": {
          "id": "2cc4ca88-aee4-4419-b0f9-5279d8d87219",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "158e1af2-958a-4609-ac5b-6457ffae1410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67aa2a-05cd-4481-b06f-f8e06ec9d2ae",
        "cursor": {
          "ref": "562debd9-3044-44e7-b29f-b4698fbb7495",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "734ce629-09e7-4527-a37d-860c49e3b1e5"
        },
        "item": {
          "id": "8f67aa2a-05cd-4481-b06f-f8e06ec9d2ae",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "accdddda-e70d-406d-a338-5b230d28aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90348f93-c1ba-4850-9a22-aae0a1f8068b",
        "cursor": {
          "ref": "63dc370d-5884-479f-86a3-d8d3db65d301",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "539b0bde-7560-4486-98a9-42c72521ef32"
        },
        "item": {
          "id": "90348f93-c1ba-4850-9a22-aae0a1f8068b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "baf0c4e0-76fb-4034-ad7c-7d5394030122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cab161-6b3d-4e0c-b016-c27a2c5accfc",
        "cursor": {
          "ref": "c553951a-327e-4cbc-b746-35721d588af3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e7dc77c-3428-443d-9812-d09db15de2f2"
        },
        "item": {
          "id": "a6cab161-6b3d-4e0c-b016-c27a2c5accfc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bf1b05ca-8de9-44a1-b654-49626867c13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dd1fea-5383-4749-826f-281f52f22b9b",
        "cursor": {
          "ref": "dfeb7933-082e-4f36-9de9-ee302d937520",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c3d4cd1-5141-466a-b941-2eac7aa54235"
        },
        "item": {
          "id": "e0dd1fea-5383-4749-826f-281f52f22b9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd3414e1-34b3-49b6-9879-fb5242c2295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866ed485-7684-4197-94c0-1d10b119ca69",
        "cursor": {
          "ref": "2f6920d0-9591-4be1-bd5a-e10256d048d2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f0c65bde-5b07-47a8-b6c7-0d31408317c6"
        },
        "item": {
          "id": "866ed485-7684-4197-94c0-1d10b119ca69",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5b718d8-536a-47ce-9138-0d79cd1adf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267576da-e968-4366-a402-95d3df7bc7e5",
        "cursor": {
          "ref": "e1e88c1b-4e88-4e49-a97e-7a0f297d8181",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5251793e-6b73-47c8-8d84-b624f03b695e"
        },
        "item": {
          "id": "267576da-e968-4366-a402-95d3df7bc7e5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "24534778-d2aa-423a-9669-08e52715b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0dde60-2fc8-48fc-982f-e86f9af8acfc",
        "cursor": {
          "ref": "8fa6797f-9637-4d87-aaf7-acf1b2dfaa85",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "838e7466-432e-41c0-b675-bd1313260531"
        },
        "item": {
          "id": "1a0dde60-2fc8-48fc-982f-e86f9af8acfc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "07e32f84-b88e-4d90-bbf7-44df232b40b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71574c0-c73a-4e59-86b3-1f52a93c87e2",
        "cursor": {
          "ref": "e251841f-336e-4396-9b34-c6e675f60bb7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c848818-57f7-495a-b828-a1cbfcb9a762"
        },
        "item": {
          "id": "a71574c0-c73a-4e59-86b3-1f52a93c87e2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5f7e1c5e-0e8f-42a2-8ff1-593f1707d305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6190713-0bc4-49dc-a668-65bc9b2cc2cb",
        "cursor": {
          "ref": "475f9142-d7c6-40d3-8aab-1dddfe9a99f3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fe943f3-b3f2-4651-af60-c1875e3ba036"
        },
        "item": {
          "id": "f6190713-0bc4-49dc-a668-65bc9b2cc2cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b5020ab-4056-400d-98d7-de1c200ec227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebfb0a1-1484-4602-9838-09f97c91bb17",
        "cursor": {
          "ref": "769f1666-b05c-441c-a83e-3ec54c0caaa5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b6d5ca50-5fc5-4a21-823f-ce836213197c"
        },
        "item": {
          "id": "eebfb0a1-1484-4602-9838-09f97c91bb17",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4c8f37df-15b3-46de-8e80-7dcfee474491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa28e82-3630-4d5b-b834-03980ac3de96",
        "cursor": {
          "ref": "9a0c13dd-1866-44e8-a09c-186af1d1487f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "069ff0f6-03c9-4a4a-9698-12279da35ce8"
        },
        "item": {
          "id": "2aa28e82-3630-4d5b-b834-03980ac3de96",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75a9ec51-aaa1-4d00-8abb-589d219c9d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d658419-74c5-4d90-9c6b-80c2deb11f8f",
        "cursor": {
          "ref": "c784adf4-e6fc-4ca9-a1bb-35c24828caf5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f5bc621e-98d4-456c-ab71-d7bc30d288d7"
        },
        "item": {
          "id": "9d658419-74c5-4d90-9c6b-80c2deb11f8f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ff0db870-213d-44b9-bfb3-3f2dd9f6fcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fff4ff5-c920-4572-a2f4-2b24c329ddf9",
        "cursor": {
          "ref": "57845343-490b-4e81-9b02-b9983d06c637",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "42406cb3-e316-4740-806d-3f3381d628bf"
        },
        "item": {
          "id": "5fff4ff5-c920-4572-a2f4-2b24c329ddf9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2385a7a0-ed46-47e0-af72-22969fb6688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c1e5d-3ca3-4c04-8e4a-8af2eb3ff6d4",
        "cursor": {
          "ref": "0b1985d2-2ff4-4743-b61f-4f10571cb9d5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58450b2f-5f54-4c6e-8b39-af3e82013d3f"
        },
        "item": {
          "id": "483c1e5d-3ca3-4c04-8e4a-8af2eb3ff6d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "37a2cf87-94ce-475e-ac70-a58f4ebc16c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a44a4d7-b6f5-49ca-8c9a-cf2fa11bafce",
        "cursor": {
          "ref": "14fada3e-6d39-4dc3-b094-b0a57dd14714",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a78185f9-fac9-4674-9b95-d28c6e19e3bd"
        },
        "item": {
          "id": "5a44a4d7-b6f5-49ca-8c9a-cf2fa11bafce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "169fda8b-6fab-4c19-876f-2e7a319990a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae5e612-5226-4db4-8724-f5b4c80bc55f",
        "cursor": {
          "ref": "2b668042-bb06-4846-a1dc-4307a484f61c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "25e80d66-4a4e-4e1c-958d-97604f45fe42"
        },
        "item": {
          "id": "bae5e612-5226-4db4-8724-f5b4c80bc55f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c7c0dde9-e997-4e97-b5b3-b5adfbad6411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bca4c0-689d-4a84-bcbf-676ce388550c",
        "cursor": {
          "ref": "23352d40-090c-464c-8536-bf4673151799",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29bd6f12-1104-4020-b945-617e388c205d"
        },
        "item": {
          "id": "32bca4c0-689d-4a84-bcbf-676ce388550c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a5e6bd83-44d2-4754-804d-f785296d1426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bf4439-a816-4631-8162-7076bb2f5537",
        "cursor": {
          "ref": "3600ed39-2902-47e2-a724-15b598768ec4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cbfb24de-ee70-4f80-9eb8-8f6e55931719"
        },
        "item": {
          "id": "73bf4439-a816-4631-8162-7076bb2f5537",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a365fca-4bfb-4c89-b773-975ee175182b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6525289-d5aa-4d44-8d91-3a4dc1d0a7c8",
        "cursor": {
          "ref": "9f9504e6-951b-42f9-a55f-a6f2c944e6f2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a7df5ef2-4fb8-4ed0-a392-c1d3b4bfdcb5"
        },
        "item": {
          "id": "a6525289-d5aa-4d44-8d91-3a4dc1d0a7c8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e20e1303-e385-4001-818a-a7462b3067c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f665e4ea-3b47-46fd-a7d3-da681eb1e953",
        "cursor": {
          "ref": "530717dd-db3d-4964-9c0c-641ea05bf8ff",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "31a2dd96-851e-4c2e-be49-93ca535bb919"
        },
        "item": {
          "id": "f665e4ea-3b47-46fd-a7d3-da681eb1e953",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "aac4aeb6-2604-4185-aa1f-f40e0ce8e17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c20137-da6b-4f75-8adb-dfc4ec508249",
        "cursor": {
          "ref": "271659ca-0251-4a3b-844c-627f1d1233db",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d45e5882-540b-4812-aa2f-3aee6028e023"
        },
        "item": {
          "id": "33c20137-da6b-4f75-8adb-dfc4ec508249",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f945c26c-2154-4450-b023-e5ed00d65db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024cdbbd-7584-4d7b-a0b5-cfcd0848190e",
        "cursor": {
          "ref": "e843cacc-ba6c-44fb-aaeb-c96aeb5bb4d0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b29f2c6-0583-464e-9c57-396583f3159a"
        },
        "item": {
          "id": "024cdbbd-7584-4d7b-a0b5-cfcd0848190e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ba123edc-7cad-439d-bf4e-c44f580f1f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce8a253-dac2-462c-8ff4-c8c21ab0ac23",
        "cursor": {
          "ref": "9d529b5e-6292-47a9-94d6-d33724774bb4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "59203b5d-330a-4953-a88d-9a6c5308b17a"
        },
        "item": {
          "id": "dce8a253-dac2-462c-8ff4-c8c21ab0ac23",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "312efecd-1aaa-4f69-bdb4-18a9c865a7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9546016f-028b-49db-88bb-34b4065a1648",
        "cursor": {
          "ref": "99f01d1c-6afe-447d-9ccb-0071036fa7e9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2c70cfa9-9f6b-408a-9b49-7062922db3d8"
        },
        "item": {
          "id": "9546016f-028b-49db-88bb-34b4065a1648",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a501b6d2-3804-4c61-9134-5942f22f469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a03e6e3-8b2c-493e-bc57-7e379c800772",
        "cursor": {
          "ref": "5c0b1939-73cc-435b-80c0-916f8721d0b6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "079dd90f-09d3-4943-ba3f-632e830efd75"
        },
        "item": {
          "id": "1a03e6e3-8b2c-493e-bc57-7e379c800772",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cad21dc7-3bcd-4be6-87bf-10d923bf89a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c4abd8-4e69-4fcd-9c70-b765490b8d12",
        "cursor": {
          "ref": "ac3fb56f-6210-4969-aba6-bfbf86455ac5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc10b13a-3771-4593-9812-85a0e8123dbf"
        },
        "item": {
          "id": "82c4abd8-4e69-4fcd-9c70-b765490b8d12",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "47bf82dd-10f4-406c-9dea-72ec96d9635a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6518ce-0c55-433e-85e3-fa5f1ea8234f",
        "cursor": {
          "ref": "ae0d1d2b-b0ce-4e5e-b75a-99c2f0423def",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "39cba551-5499-478f-aa3e-8cada7e1192f"
        },
        "item": {
          "id": "5b6518ce-0c55-433e-85e3-fa5f1ea8234f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "95ff64d0-ece7-42fc-87c6-885be489ffa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497ff7e-f511-4374-8e0d-09da0f481ad4",
        "cursor": {
          "ref": "40625a02-764f-4a4a-b646-7af28f43c8ac",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae39fae0-fe84-4509-8897-258a6892984a"
        },
        "item": {
          "id": "c497ff7e-f511-4374-8e0d-09da0f481ad4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ce7d6019-914f-4867-b64b-546d3da32cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845b121c-ba24-4815-a212-8af19c7cc771",
        "cursor": {
          "ref": "eca45cc9-646a-4d16-9b81-b0a8e24d4ccc",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4e1bb001-aff9-468c-813f-bc6687ef79d9"
        },
        "item": {
          "id": "845b121c-ba24-4815-a212-8af19c7cc771",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "60c98578-5487-48b6-bac9-07d8d32517c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc4501c-641b-4f5d-bb14-1af152ee83c8",
        "cursor": {
          "ref": "b4c1f365-17b0-46cf-83c5-ccb6eb0a3064",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f59b9929-cf2c-458f-95b9-c40a73edc70f"
        },
        "item": {
          "id": "2fc4501c-641b-4f5d-bb14-1af152ee83c8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "036df1e4-19f6-49c3-8e2b-31adc047b612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e1d9e-82ce-4d08-b5f9-3d1eeb1a9256",
        "cursor": {
          "ref": "57240b8e-e96f-4e55-8180-08395ca97501",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a5318131-386d-4ead-a171-c238c35bec9f"
        },
        "item": {
          "id": "977e1d9e-82ce-4d08-b5f9-3d1eeb1a9256",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "14095cd9-2830-4ddf-8eb9-6ee635efd299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e59c64-2e2b-40c0-acbc-f31f0ea2b546",
        "cursor": {
          "ref": "cf09c7eb-b501-48ce-a3d9-e7fd2cc829e6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e3fa719e-6902-4104-99d7-7946315ce746"
        },
        "item": {
          "id": "e1e59c64-2e2b-40c0-acbc-f31f0ea2b546",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d8fd583b-3e4d-49b2-9452-de591cf73aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a60adc-0891-4e7c-bce1-670d11949235",
        "cursor": {
          "ref": "0f213b82-2193-4072-a7ba-03e990dce61e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fe5ddd70-2401-4045-a737-a6d76aa47726"
        },
        "item": {
          "id": "25a60adc-0891-4e7c-bce1-670d11949235",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8e8ca3a0-d01c-4b93-bdbe-d4145e315496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d472d-de09-4088-8be2-652d2783b65c",
        "cursor": {
          "ref": "4d7956ab-030b-4f13-854e-8f3b32e9ae59",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b044aac-8f3f-4327-a1d7-4bbf23ae6b2d"
        },
        "item": {
          "id": "af8d472d-de09-4088-8be2-652d2783b65c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "353b0f06-683e-481d-963a-320673a9d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09038e59-7894-4e8b-8e65-1b1d853f6f76",
        "cursor": {
          "ref": "075bdfbd-f958-4e83-b426-fd01ae7944b6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "99b44552-964f-40a2-9c72-2e81850ece97"
        },
        "item": {
          "id": "09038e59-7894-4e8b-8e65-1b1d853f6f76",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79978b69-0a41-45f6-a8f2-8559ae3ab2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54658d61-f7c3-41bc-9665-914131bb44d9",
        "cursor": {
          "ref": "81049110-2834-44ba-b636-97467a8e217e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cd010b92-5f29-4c89-8671-fafd50d4c0f5"
        },
        "item": {
          "id": "54658d61-f7c3-41bc-9665-914131bb44d9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0247e4e5-39cc-4098-b966-b0a44904d8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecec246-cbd9-48d6-bbe2-9e469ec21a7a",
        "cursor": {
          "ref": "8f1674e6-51a7-4cca-8da5-9ec981e59690",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "083f8edb-f02d-443b-9315-bed0fb164033"
        },
        "item": {
          "id": "cecec246-cbd9-48d6-bbe2-9e469ec21a7a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c5d91fc-f9d3-43e9-b30b-72efa0a6959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3ec9fe-ef3f-4b89-9710-ec24da781638",
        "cursor": {
          "ref": "9a10435c-8c49-45dd-a367-0c2056b7b449",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "48cfe319-4a75-4f45-ba11-4556d6d5d935"
        },
        "item": {
          "id": "2f3ec9fe-ef3f-4b89-9710-ec24da781638",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d1bce58e-c726-4796-bcaa-c3b03294ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a6d284-0ab5-40e1-8327-cb5bd5d9a0a1",
        "cursor": {
          "ref": "a1ce448f-6c97-4b8c-9976-47b52e9da5b3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a1c47551-b19a-486f-9a91-1b31092c882c"
        },
        "item": {
          "id": "98a6d284-0ab5-40e1-8327-cb5bd5d9a0a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10e63e97-966f-4b67-b5d1-70ae99eacf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba66ca-7de6-4c86-b53b-f122cb48a0fe",
        "cursor": {
          "ref": "32977bb7-b5de-40e3-86c9-58e575929376",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31a3a985-cc9d-4da7-973c-5563ed0aab08"
        },
        "item": {
          "id": "90ba66ca-7de6-4c86-b53b-f122cb48a0fe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4c69539d-8c8a-4dd7-a042-4df8dc0957eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddac3ac5-00e0-48ea-9a02-5aed1f935193",
        "cursor": {
          "ref": "48763523-4a3e-4b97-9d8c-5aa869762f90",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f0eb3945-5fd0-4b5a-a71a-424f6fe9a78f"
        },
        "item": {
          "id": "ddac3ac5-00e0-48ea-9a02-5aed1f935193",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cae20e66-7204-45c6-8878-eaddb8fecf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b48ddea-1a81-46c9-af65-0ed0a9f90d62",
        "cursor": {
          "ref": "ed1965bc-ec1f-43d7-9d77-c5434e01e196",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "da90a130-44c2-4b90-a4e4-9497f2c38f21"
        },
        "item": {
          "id": "3b48ddea-1a81-46c9-af65-0ed0a9f90d62",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b1dd1230-0fa5-4054-aaa7-69bf83f35d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b831f1-df7d-40e5-ad62-f3174671e73d",
        "cursor": {
          "ref": "3dfbe602-c389-4321-9946-d8662575f1fc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ed35707-fa5c-4218-81a8-79b1b5d4aac0"
        },
        "item": {
          "id": "a6b831f1-df7d-40e5-ad62-f3174671e73d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6657952c-7dc0-4e7b-afa6-0e6f0316ce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac5f49-6368-41fe-abfe-02d44d76db23",
        "cursor": {
          "ref": "f642f2e4-cff0-475d-b0b2-397cc2200e74",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "df04eea8-5909-4a31-bf8e-724c0ad95c97"
        },
        "item": {
          "id": "51ac5f49-6368-41fe-abfe-02d44d76db23",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37665342-6287-4bd9-8d4b-28052ddbc139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a031a2-859a-4aea-9614-62b83917643a",
        "cursor": {
          "ref": "8bbac898-368a-416a-a352-929b7c53fbf9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cc749585-5591-4760-ae21-adbebf145805"
        },
        "item": {
          "id": "25a031a2-859a-4aea-9614-62b83917643a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5a1b1603-4ed7-4774-8810-219fb6e6f2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199d25ad-eefd-4077-a9f1-b2c20e68d256",
        "cursor": {
          "ref": "18fae2b5-95e8-435b-9af9-dc18a5d7692f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cfb95754-d022-4fdc-8e29-b123094e413c"
        },
        "item": {
          "id": "199d25ad-eefd-4077-a9f1-b2c20e68d256",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d4c5865b-2a88-421b-a2a0-c1536b35f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23acc136-7ab1-4828-8ef0-dae02043e95c",
        "cursor": {
          "ref": "6a6b9e51-e45b-4e0a-9285-062eefcc306a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "027bcaa3-eca2-4429-bbfd-415605793249"
        },
        "item": {
          "id": "23acc136-7ab1-4828-8ef0-dae02043e95c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "88ba7b3b-148d-49e5-81f3-2da2ca77ed1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c6f8e-13ec-4c3a-a25b-658e6500de4c",
        "cursor": {
          "ref": "cd8d057a-2fe0-4454-a272-7f8af929eca2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ea85e3a8-967a-4ef5-9269-5960371759ca"
        },
        "item": {
          "id": "3a9c6f8e-13ec-4c3a-a25b-658e6500de4c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "06b4edb5-fe7e-47a5-94ad-da76fa392541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a9590f-60dd-437d-8287-1186af67cec3",
        "cursor": {
          "ref": "642d1ed0-43b1-4b5c-8273-dfa30a768451",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "81c6cdaf-6e0e-4ed8-ac93-5c184f60c043"
        },
        "item": {
          "id": "57a9590f-60dd-437d-8287-1186af67cec3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4bff5b5a-ea45-4cbb-8faa-942e357f3d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72741903-3c8c-4a0b-bb31-606b7ee46e47",
        "cursor": {
          "ref": "5f673536-9a6c-4970-8fa9-a49ba142a078",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a5f296b1-53ae-4218-b78f-b58e824afc4a"
        },
        "item": {
          "id": "72741903-3c8c-4a0b-bb31-606b7ee46e47",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6779391e-75f8-4daf-94dc-f51aeb827b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fc2c4-2760-45d4-8410-298705295fbd",
        "cursor": {
          "ref": "03a43531-1a5b-47ef-896b-5ddaa9cbdc23",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bf1bca91-f9cb-4afa-965b-a1b0184543bb"
        },
        "item": {
          "id": "1c9fc2c4-2760-45d4-8410-298705295fbd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8b0e4426-5dc8-4d36-bf26-71039e601b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b7b39b-bc52-43df-9b1d-e2d8a7b9f3ae",
        "cursor": {
          "ref": "6b4bce61-6687-4b3b-9f5b-3c4854a7accf",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3ddb7aaf-e4ff-4555-81f4-b8aedd976602"
        },
        "item": {
          "id": "21b7b39b-bc52-43df-9b1d-e2d8a7b9f3ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "908f991d-08ee-4120-9504-bdd0acc3f00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce36629-0a2c-4caa-b7bb-747d5a037274",
        "cursor": {
          "ref": "6a9f36c4-2392-4554-aa43-7fb34b61140c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "47a27c38-1eb0-4bc2-b052-a0aea4a2df79"
        },
        "item": {
          "id": "2ce36629-0a2c-4caa-b7bb-747d5a037274",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b75a77c6-0ba5-4b7d-8efb-d60abf9ab14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb70959-e43c-49f2-9abf-ffbd380d7101",
        "cursor": {
          "ref": "6e43c208-c182-4b6e-802f-8f2245395dfe",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1b6c6122-c30f-465e-8866-be856526d147"
        },
        "item": {
          "id": "7eb70959-e43c-49f2-9abf-ffbd380d7101",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4702aed8-918d-43b6-a0d2-997dd3c67143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130d3cb8-48d7-407f-9974-1e5e3327bbc8",
        "cursor": {
          "ref": "ac6a8b00-6b4c-4e31-8b75-a94ad9d5ba5b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6da2ee87-e63b-4750-95de-10687fe59bf8"
        },
        "item": {
          "id": "130d3cb8-48d7-407f-9974-1e5e3327bbc8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9be327c6-9455-49cb-86b9-92c2c5781d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5260c715-dbdb-43db-8c45-7a449711f9cd",
        "cursor": {
          "ref": "3b39c32f-37cc-4deb-a224-b0c5464a2eeb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6c5c7dab-bc90-44e1-abb0-e078da65ed95"
        },
        "item": {
          "id": "5260c715-dbdb-43db-8c45-7a449711f9cd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ba30082-10a1-4446-918a-fa1f06408f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a7a05c-3651-452b-a448-808d26c8fe15",
        "cursor": {
          "ref": "464ab9c9-d749-4a53-b876-2fb7fa73138b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e0781828-245f-40bc-b22e-5c7029ff32c0"
        },
        "item": {
          "id": "85a7a05c-3651-452b-a448-808d26c8fe15",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0f2852f3-a340-447d-a9cd-4074a848ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad80a39-401f-46e8-9455-1a4d27f0c48a",
        "cursor": {
          "ref": "73512411-e9df-4300-a5e6-0e56c0072047",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "412c037f-fa4c-4a04-9776-f8a086275c5f"
        },
        "item": {
          "id": "dad80a39-401f-46e8-9455-1a4d27f0c48a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f14b1085-52e5-4c20-89df-a314c01b69c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14401827-02e7-4985-96c7-b1e3ff1b3ac6",
        "cursor": {
          "ref": "bd6dd37b-d24c-4671-ad28-e3dec04eb383",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f090017b-9d77-4e89-869a-67f499983f19"
        },
        "item": {
          "id": "14401827-02e7-4985-96c7-b1e3ff1b3ac6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6a09581f-c2c1-437d-ba98-8cab08aae247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbed96e-e1c6-419c-8812-01d6a3a05a53",
        "cursor": {
          "ref": "e3120d0e-5c9d-49df-b317-a8f2072c1288",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9b05506c-0a2b-498b-b952-1336c622ddde"
        },
        "item": {
          "id": "5cbed96e-e1c6-419c-8812-01d6a3a05a53",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "332b75c9-286d-48cc-95bc-3f6f515ac6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d19d1e-e4d6-4382-afa0-8961ebdc890c",
        "cursor": {
          "ref": "cd14b001-2ede-4f38-bdb8-7ca6b1f57d20",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "608879bc-ba9c-4705-87d7-4b6e01b6f3ae"
        },
        "item": {
          "id": "e7d19d1e-e4d6-4382-afa0-8961ebdc890c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22fdeed5-05bb-4d00-bf4e-c1b46c64b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf6916-c743-4db4-88d4-580ae65636b9",
        "cursor": {
          "ref": "f2484ec7-9f7f-4ad3-914d-a3b4a444dcb6",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1ce3f453-c853-441e-bfa7-49cd2406f61f"
        },
        "item": {
          "id": "e8cf6916-c743-4db4-88d4-580ae65636b9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e870fd01-0699-4b5a-8af9-c7765a71e4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d380ca0d-03ff-46da-87e0-898546bb7f3a",
        "cursor": {
          "ref": "0a99691c-9444-418d-b338-f432fb746956",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "466f3138-afc9-4612-b96e-c6db51b51445"
        },
        "item": {
          "id": "d380ca0d-03ff-46da-87e0-898546bb7f3a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "08b90906-8d09-4b42-a4de-54eff78ab5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a95650-4c79-49b9-8688-3e16e96b9fcb",
        "cursor": {
          "ref": "24eccd34-61e7-4f94-ae89-f796e722ae57",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bccf7e57-21e3-4b0b-88f2-fd795abfc5af"
        },
        "item": {
          "id": "a0a95650-4c79-49b9-8688-3e16e96b9fcb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0497e42d-a19f-49c1-9ff2-a1841ccb670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304f69f4-fe8f-47f0-923f-7d74eb9f0a41",
        "cursor": {
          "ref": "f9b20b1d-3308-45f8-964e-2e8455d5d9ad",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4f68386a-6be6-4e24-aadd-d101cec23c9f"
        },
        "item": {
          "id": "304f69f4-fe8f-47f0-923f-7d74eb9f0a41",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "117f889b-3fe6-41c8-817e-2ef830b2da40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dab6b00-ef4a-4bd2-90c5-e85c2d4dc476",
        "cursor": {
          "ref": "05c88a5b-6806-4596-8a5f-414aade400ed",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "561f1d36-3d2c-493c-8acc-0264c96bcbeb"
        },
        "item": {
          "id": "0dab6b00-ef4a-4bd2-90c5-e85c2d4dc476",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "91a7acb7-5ba4-4eab-9644-bd0cc6a61da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5f391b-397b-48f8-9079-758398d1bf27",
        "cursor": {
          "ref": "de537785-da7a-4224-ad40-85bcf2ea89e6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "93b9533e-64e9-4731-aa72-4aae3b78696f"
        },
        "item": {
          "id": "ee5f391b-397b-48f8-9079-758398d1bf27",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "afdec5b6-3461-4656-87a7-1022332cdbf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a5d1d9-a369-49dc-9e10-dbc73714565c",
        "cursor": {
          "ref": "aeb5cb34-9c96-42aa-8fa4-0c07706498b9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9f93de9c-4a11-4909-a887-44d8630c2c3c"
        },
        "item": {
          "id": "25a5d1d9-a369-49dc-9e10-dbc73714565c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad06b990-e3a8-4d80-9ea9-0ac0d847d165",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "50043caa-1c14-4b1d-820e-2abcd74d082e",
        "cursor": {
          "ref": "c6209b3c-3319-4b55-8306-959009f26556",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f48db311-5983-4cae-ba83-d1e1d10b3ee5"
        },
        "item": {
          "id": "50043caa-1c14-4b1d-820e-2abcd74d082e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5506be94-aeca-445a-b053-010df82f53cb",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "068dde7a-ede4-4c8c-92a0-4fa69e56ebf6",
        "cursor": {
          "ref": "c2e5ae61-05c0-42b9-bc7c-2930e834c775",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ff878abf-3009-46d3-b5ef-a1aacf50dc30"
        },
        "item": {
          "id": "068dde7a-ede4-4c8c-92a0-4fa69e56ebf6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4d7159f-6500-448c-bde5-94a853c05bdc",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74aa9d4-1809-4619-93b7-d3b875148e78",
        "cursor": {
          "ref": "5b963ddb-ff80-46a9-be41-515a79a0b3e0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2c316621-dedc-4fee-bfa7-4268357a833d"
        },
        "item": {
          "id": "e74aa9d4-1809-4619-93b7-d3b875148e78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9239937a-32ae-4710-94a0-8a6078bb2b5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74aa9d4-1809-4619-93b7-d3b875148e78",
        "cursor": {
          "ref": "5b963ddb-ff80-46a9-be41-515a79a0b3e0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2c316621-dedc-4fee-bfa7-4268357a833d"
        },
        "item": {
          "id": "e74aa9d4-1809-4619-93b7-d3b875148e78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9239937a-32ae-4710-94a0-8a6078bb2b5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1966be-05cd-4d7b-b5e9-1cd196990cfc",
        "cursor": {
          "ref": "07ed94b2-277b-4b0a-9b37-c7bb4374cadb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "095356d7-9ff0-4396-aed2-aa8c37bf5c19"
        },
        "item": {
          "id": "af1966be-05cd-4d7b-b5e9-1cd196990cfc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "da04c03e-4174-4458-b0bc-ae75ae2370b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c852fff-aaeb-4541-8ae8-32a7902b996f",
        "cursor": {
          "ref": "6a04a0dd-33e3-441b-b4a2-4c6c99cbd790",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "946744b9-6c7d-494a-ad77-0ecc9bcd3927"
        },
        "item": {
          "id": "3c852fff-aaeb-4541-8ae8-32a7902b996f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5360211d-c709-4987-a7b4-f671f3d30081",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}